{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/api/referralInvites.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/api/referralInvites.ts","mtime":1675280253980},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnOwppbXBvcnQgeyBqc29uUmVxdWVzdCwgYmxhbmtSZXF1ZXN0IH0gZnJvbSAnLi9iYXNlJzsKaW1wb3J0IHsgY3JlYXRlUmVmZXJyYWxJbnZpdGUgfSBmcm9tICdAc3JjL21vY2tzL3JlZmVycmFsSW52aXRlcyc7CnZhciBSZWZlcnJhbEludml0ZUNsaWVudCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHsKICAgIGZ1bmN0aW9uIFJlZmVycmFsSW52aXRlQ2xpZW50KCkgewogICAgfQogICAgUmVmZXJyYWxJbnZpdGVDbGllbnQucHJvdG90eXBlLmdldCA9IGZ1bmN0aW9uIChpbnZpdGUpIHsKICAgICAgICByZXR1cm4ganNvblJlcXVlc3QoewogICAgICAgICAgICBtZXRob2Q6ICdHRVQnLAogICAgICAgICAgICByb3V0ZTogIi92MS9yZWZlcnJhbEludml0ZXMvIiArIGludml0ZSwKICAgICAgICB9KTsKICAgIH07CiAgICBSZWZlcnJhbEludml0ZUNsaWVudC5wcm90b3R5cGUuY3JlYXRlID0gZnVuY3Rpb24gKGVtYWlsKSB7CiAgICAgICAgcmV0dXJuIGpzb25SZXF1ZXN0KHsKICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsCiAgICAgICAgICAgIHJvdXRlOiAiL3YxL3JlZmVycmFsSW52aXRlcyIsCiAgICAgICAgICAgIGJvZHk6IHsKICAgICAgICAgICAgICAgIGVtYWlsOiBlbWFpbCwKICAgICAgICAgICAgfSwKICAgICAgICB9KTsKICAgIH07CiAgICBSZWZlcnJhbEludml0ZUNsaWVudC5wcm90b3R5cGUubGlzdCA9IGZ1bmN0aW9uICgpIHsKICAgICAgICByZXR1cm4ganNvblJlcXVlc3QoewogICAgICAgICAgICBtZXRob2Q6ICdHRVQnLAogICAgICAgICAgICByb3V0ZTogIi92MS9yZWZlcnJhbEludml0ZXMiLAogICAgICAgIH0pOwogICAgfTsKICAgIFJlZmVycmFsSW52aXRlQ2xpZW50LnByb3RvdHlwZS5yZXNlbmQgPSBmdW5jdGlvbiAoaWQpIHsKICAgICAgICByZXR1cm4gYmxhbmtSZXF1ZXN0KHsKICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsCiAgICAgICAgICAgIHJvdXRlOiAiL3YxL3JlZmVycmFsSW52aXRlcy8iICsgaWQgKyAiL3Jlc2VuZCIsCiAgICAgICAgfSk7CiAgICB9OwogICAgcmV0dXJuIFJlZmVycmFsSW52aXRlQ2xpZW50Owp9KCkpOwpleHBvcnQgeyBSZWZlcnJhbEludml0ZUNsaWVudCB9OwpleHBvcnQgZnVuY3Rpb24gbW9ja1JlZmVycmFsSW52aXRlQ2xpZW50KCkgewogICAgcmV0dXJuIHsKICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIE9ic2VydmFibGUub2YoY3JlYXRlUmVmZXJyYWxJbnZpdGUoKSk7IH0sCiAgICAgICAgY3JlYXRlOiBmdW5jdGlvbiAoKSB7IHJldHVybiBPYnNlcnZhYmxlLm9mKGNyZWF0ZVJlZmVycmFsSW52aXRlKCkpOyB9LAogICAgICAgIGxpc3Q6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIE9ic2VydmFibGUub2YoW2NyZWF0ZVJlZmVycmFsSW52aXRlKCldKTsgfSwKICAgICAgICByZXNlbmQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIE9ic2VydmFibGUub2YobnVsbCk7IH0sCiAgICB9Owp9Cg=="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/api/referralInvites.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/api/referralInvites.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,MAAM,CAAC;AAClC,OAAO,EAAE,WAAW,EAAE,YAAY,EAAE,MAAM,QAAQ,CAAC;AAEnD,OAAO,EAAE,oBAAoB,EAAE,MAAM,4BAA4B,CAAC;AASlE;IAAA;IA4BA,CAAC;IA3BC,kCAAG,GAAH,UAAI,MAAc;QAChB,OAAO,WAAW,CAAC;YACjB,MAAM,EAAE,KAAK;YACb,KAAK,EAAE,yBAAuB,MAAQ;SACvC,CAAC,CAAC;IACL,CAAC;IACD,qCAAM,GAAN,UAAO,KAAa;QAClB,OAAO,WAAW,CAAC;YACjB,MAAM,EAAE,MAAM;YACd,KAAK,EAAE,qBAAqB;YAC5B,IAAI,EAAE;gBACJ,KAAK,OAAA;aACN;SACF,CAAC,CAAC;IACL,CAAC;IACD,mCAAI,GAAJ;QACE,OAAO,WAAW,CAAC;YACjB,MAAM,EAAE,KAAK;YACb,KAAK,EAAE,qBAAqB;SAC7B,CAAC,CAAC;IACL,CAAC;IACD,qCAAM,GAAN,UAAO,EAAU;QACf,OAAO,YAAY,CAAC;YAClB,MAAM,EAAE,MAAM;YACd,KAAK,EAAE,yBAAuB,EAAE,YAAS;SAC1C,CAAC,CAAC;IACL,CAAC;IACH,2BAAC;AAAD,CAAC,AA5BD,IA4BC;;AAED,MAAM,UAAU,wBAAwB;IACtC,OAAO;QACL,GAAG,EAAE,cAAM,OAAA,UAAU,CAAC,EAAE,CAAC,oBAAoB,EAAE,CAAC,EAArC,CAAqC;QAChD,MAAM,EAAE,cAAM,OAAA,UAAU,CAAC,EAAE,CAAC,oBAAoB,EAAE,CAAC,EAArC,CAAqC;QACnD,IAAI,EAAE,cAAM,OAAA,UAAU,CAAC,EAAE,CAAC,CAAC,oBAAoB,EAAE,CAAC,CAAC,EAAvC,CAAuC;QACnD,MAAM,EAAE,cAAM,OAAA,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,EAAnB,CAAmB;KAClC,CAAC;AACJ,CAAC","sourcesContent":["import { Observable } from 'rxjs';\nimport { jsonRequest, blankRequest } from './base';\nimport { ReferralInvite } from '@src/types';\nimport { createReferralInvite } from '@src/mocks/referralInvites';\n\nexport interface ReferralInviteAPI {\n  get(invite: string): Observable<ReferralInvite>;\n  create(email: string): Observable<ReferralInvite>;\n  list(): Observable<ReferralInvite[]>;\n  resend(id: string): Observable<null>;\n}\n\nexport class ReferralInviteClient implements ReferralInviteAPI {\n  get(invite: string): Observable<ReferralInvite> {\n    return jsonRequest({\n      method: 'GET',\n      route: `/v1/referralInvites/${invite}`,\n    });\n  }\n  create(email: string): Observable<ReferralInvite> {\n    return jsonRequest({\n      method: 'POST',\n      route: `/v1/referralInvites`,\n      body: {\n        email,\n      },\n    });\n  }\n  list(): Observable<ReferralInvite[]> {\n    return jsonRequest({\n      method: 'GET',\n      route: `/v1/referralInvites`,\n    });\n  }\n  resend(id: string): Observable<null> {\n    return blankRequest({\n      method: 'POST',\n      route: `/v1/referralInvites/${id}/resend`,\n    });\n  }\n}\n\nexport function mockReferralInviteClient(): ReferralInviteAPI {\n  return {\n    get: () => Observable.of(createReferralInvite()),\n    create: () => Observable.of(createReferralInvite()),\n    list: () => Observable.of([createReferralInvite()]),\n    resend: () => Observable.of(null),\n  };\n}\n"]}]}