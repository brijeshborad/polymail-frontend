{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/BlockedSenders/BlockedSenders.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/BlockedSenders/BlockedSenders.tsx","mtime":1675280254099},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/BlockedSenders/BlockedSenders.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/BlockedSenders/BlockedSenders.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport { size, values, startCase } from 'lodash';\nimport NavigationHeader from '../../components/NavigationHeader';\nimport {\n  Preferences, BlockContactActionType,\n} from '@src/types';\nimport Infinite from 'react-infinite';\nimport './BlockedSenders.scss';\nimport DropdownCell from '../../components/DropdownCell';\nimport SearchInput from '@src/components/Form/SearchInput/SearchInput';\nimport BlockedCell from './components/BlockedCell/BlockedCell';\nimport Confirm, { Props as ConfirmProps } from '@src/components/Base/Confirm';\nimport EmptyCell from './components/EmptyCell/EmptyCell';\nimport EmptyState from './components/EmptyState/EmptyState';\nimport { Filter } from '@src/types/filters';\nimport Autosizer from 'react-virtualized-auto-sizer';\nimport ToggleCell from '../../components/ToggleCell';\n\nexport interface StateProps {\n  filters: { [key: string]: Filter };\n  preferences: Preferences;\n  isMobile?: boolean;\n  collapsedMobile?: boolean;\n}\n\nexport interface DispatchProps {\n  updatePreferences: (preference: Preferences) => void;\n  removeFilter: (id: string) => void;\n  collapseLsb: (collapse: boolean) => void;\n}\n\ninterface State {\n  shownFilters: Filter[];\n  selectedFilters: {\n    [key: string]: boolean,\n  };\n  confirmProps?: ConfirmProps;\n  query?: string;\n}\n\nconst blockValues = {\n  'Move to Trash': BlockContactActionType.Trash,\n  'Move to Archive': BlockContactActionType.Archive,\n};\n\nconst dropdownValues = {\n  blockContactAction: blockValues,\n};\n\nclass BlockedSenders extends React.PureComponent<StateProps & DispatchProps, State> {\n  searchInput: SearchInput;\n  constructor(props: StateProps & DispatchProps) {\n    super();\n\n    this.state = {\n      shownFilters: values(props.filters),\n      selectedFilters: {},\n    };\n  }\n\n  componentDidUpdate(oldProps: StateProps, nextState: State) {\n    const { filters } = this.props;\n    const { query } = this.state;\n    if (oldProps.filters !== this.props.filters) {\n      const matches = values(filters).filter((s) => {\n        if (!query) { return true; }\n        return query && s.selectors[0].value.includes(query);\n      });\n      this.setState({ shownFilters: matches });\n    }\n  }\n\n  handleRef = (ref: SearchInput) => {\n    this.searchInput = ref;\n  }\n\n  handleSelect = (value: string, index: number, id?: string) => {\n    const { updatePreferences, preferences } = this.props;\n    const newPreferences = {};\n    if (id) {\n      if (!newPreferences[id]) {\n        newPreferences[id] = dropdownValues[id][value];\n      }\n\n      updatePreferences({\n        ...preferences,\n        ...newPreferences,\n      });\n    }\n  }\n\n  handleSenderSelect = (key: string) => {\n    const { selectedFilters } = this.state;\n    const updatedSelection = { ...selectedFilters };\n    if (selectedFilters[key]) {\n      delete updatedSelection[key];\n    } else {\n      updatedSelection[key] = true;\n    }\n\n    this.setState(\n      { selectedFilters: updatedSelection },\n      () => this.searchInput.focus(true),\n    );\n  }\n  handleUnblock = () => {\n    const { removeFilter, preferences } = this.props;\n    const { selectedFilters } = this.state;\n    const multipleSenders = size(selectedFilters) > 0;\n\n    let title = 'Unblock Sender?';\n    // tslint:disable-next-line:max-line-length\n    let message = `New messages from this sender will no longer automatically be moved to ${startCase(preferences.blockContactAction)}.`;\n\n    if (multipleSenders) {\n      title = 'Unblock Senders?';\n      // tslint:disable-next-line:max-line-length\n      message = `New messages from these senders will no longer automatically be moved to ${startCase(preferences.blockContactAction)}.`;\n    }\n    const confirmProps: ConfirmProps = {\n      title,\n      message,\n      confirmCopy: 'Unblock',\n      onCancel: () => this.setState({ confirmProps: undefined }),\n      onConfirm: () => {\n        this.setState({ confirmProps: undefined, selectedFilters: {} });\n        Object.keys(selectedFilters)\n          .forEach(key => removeFilter(key));\n      },\n    };\n\n    this.setState({ confirmProps });\n  }\n\n  handleSearch = (query: string, complete: boolean) => {\n    const { filters } = this.props;\n    const lowerQuery = query.toLowerCase();\n    const matches = values(filters).filter(f => f.selectors[0].value.includes(lowerQuery));\n    this.setState({\n      shownFilters: matches,\n      query,\n    });\n  }\n\n  // Handles toggling digest\n  handleDigestToggle = () => {\n    const { preferences, updatePreferences } = this.props;\n    updatePreferences({\n      ...preferences,\n      weeklyUnsubscriberDigest: !preferences.weeklyUnsubscriberDigest,\n    });\n  }\n\n  renderBlockList = () => {\n    const { filters } = this.props;\n    const { selectedFilters, query } = this.state;\n    const selectedSenderSize = size(selectedFilters);\n    const unblockCopy = selectedSenderSize > 1\n      ? `Unblock ${selectedSenderSize} senders` : 'Unblock sender';\n\n    const totalSenders = Object.keys(filters).length;\n\n    return (\n      <div className=\"blocked-list\">\n        <div className=\"list-header\">\n          <div className=\"title\">\n            {`Manage Blocked Senders (${totalSenders})`}\n          </div>\n          {!!selectedSenderSize &&\n            <button\n              className=\"unblock-button\"\n              onClick={this.handleUnblock}\n            >\n              {unblockCopy}\n            </button>\n          }\n        </div>\n        <SearchInput\n          onSearch={this.handleSearch}\n          ref={this.handleRef}\n          defaultValue=\"\"\n          key=\"search-input\"\n          placeholder=\"Search for a blocked email\"\n          searchOnKeyDown\n        />\n        {!size(this.state.shownFilters) && query &&\n          <EmptyCell query={query} /> || null\n        }\n        <Autosizer\n          className=\"autosizer\"\n          defaultWidth={600}\n        >\n          {s => (\n            <Infinite\n              className=\"list\"\n              elementHeight={40}\n              containerHeight={s.height - 200}\n              key=\"infinite\"\n            >\n              {this.state.shownFilters.map(t =>\n                <BlockedCell\n                  id={t.id}\n                  key={t.id}\n                  onSelect={this.handleSenderSelect}\n                  sender={t.selectors[0].value}\n                  selected={!!selectedFilters[t.id]}\n                />)\n              }\n            </Infinite>\n          )}\n        </Autosizer>\n      </div>\n    );\n  }\n\n  render() {\n    const { confirmProps } = this.state;\n    const { preferences } = this.props;\n    return (\n      <div className=\"settings-panel blocked-senders\">\n        <NavigationHeader\n          title=\"Blocked Senders\"\n          isMobile={this.props.isMobile}\n          collapsedMobile={this.props.collapsedMobile}\n          collapseLsb={this.props.collapseLsb}\n        />\n        {confirmProps &&\n          <Confirm\n            {...confirmProps}\n          />\n        }\n        <div className=\"main\">\n          <DropdownCell\n            values={Object.keys(blockValues)}\n            onSelect={this.handleSelect}\n            title=\"Messages from Blocked Senders\"\n            subtitle=\"What should we do with messages from senders you've blocked?\"\n            dropdownId=\"blockContactAction\"\n            startIndex={values(blockValues).indexOf(preferences.blockContactAction)}\n          />\n          <ToggleCell\n            title=\"Send me a Digest of Blocked Emails\"\n            subtitle=\"Sends a digest of blocked emails and senders to make sure you never miss anything important!\"\n            onToggle={this.handleDigestToggle}\n            on={preferences.weeklyUnsubscriberDigest || false}\n          />\n          {!!size(this.props.filters) &&\n            this.renderBlockList()\n          }\n          {!size(this.props.filters) &&\n            <EmptyState />\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BlockedSenders;\n"]}]}