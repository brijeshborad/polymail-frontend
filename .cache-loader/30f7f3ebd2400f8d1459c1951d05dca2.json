{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/upgradePrompt.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/upgradePrompt.ts","mtime":1675280254053},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnOwppbXBvcnQgeyBUZWFtUGxhbiwgTWVTdGF0dXNOZXcgfSBmcm9tICdAc3JjL3R5cGVzJzsKaW1wb3J0IHsgY3JlYXRlU2VsZWN0b3IgfSBmcm9tICdAc3JjL2xpYi9zZWxlY3Rvcic7CmV4cG9ydCB2YXIgc2VsZWN0VXBncmFkZVByb21wdCA9IGNyZWF0ZVNlbGVjdG9yKFsKICAgIGZ1bmN0aW9uIChzdGF0ZSkgeyByZXR1cm4gc3RhdGUudGVhbTsgfSwKICAgIGZ1bmN0aW9uIChzdGF0ZSkgeyByZXR1cm4gc3RhdGUubWU7IH0sCl0sIGZ1bmN0aW9uICh0ZWFtUmVzb3VyY2UsIG1lUmVzb3VyY2UpIHsKICAgIC8vIHNldHVwIGRlZmF1bHQgbW9kZWwKICAgIHZhciBwcm9tcHQgPSB7CiAgICAgICAgc2hvd1RyaWFsRXhwaXJpbmc6IGZhbHNlLAogICAgICAgIHNob3dUcmlhbEV4cGlyZWQ6IGZhbHNlLAogICAgICAgIGFkbWluOiBmYWxzZSwKICAgICAgICBvblRyaWFsOiBmYWxzZSwKICAgIH07CiAgICAvLyBtYWtlIHN1cmUgZGF0YSBoYXMgbG9hZGVkCiAgICB2YXIgdGVhbSA9IHRlYW1SZXNvdXJjZS5kYXRhOwogICAgdmFyIG1lID0gbWVSZXNvdXJjZS5kYXRhOwogICAgaWYgKCF0ZWFtIHx8ICFtZSkgewogICAgICAgIHJldHVybiBwcm9tcHQ7CiAgICB9CiAgICAvLyBmaWd1cmUgb3V0IGlmIGFkbWluCiAgICBpZiAodGVhbS5hZG1pbnMuZmlsdGVyKGZ1bmN0aW9uIChpZCkgeyByZXR1cm4gaWQgPT09IG1lLmlkOyB9KS5sZW5ndGggPiAwKSB7CiAgICAgICAgcHJvbXB0LmFkbWluID0gdHJ1ZTsKICAgIH0KICAgIC8vIGZpZ3VyZSBvdXQgdHJpYWwgZXhwaXJpbmcgZGV0YWlscwogICAgcHJvbXB0LmV4cGlyYXRpb25EYXRlID0gdGVhbS50cmlhbEV4cGlyZXM7CiAgICAvLyBoYW5kbGUgdHJpYWwgZXhwaXJpbmcgc29vbgogICAgdmFyIGZyZWVUaWVyID0gdGVhbS5wbGFuID09PSBUZWFtUGxhbi5JbmFjdGl2ZTsKICAgIHZhciBpc1N1YnNjcmliZWRBbmRIYXNUcmlhbCA9IG1lLnN0YXR1c05ldyA9PT0gTWVTdGF0dXNOZXcuVHJpYWxTdWJzY3JpYmVkOwogICAgdmFyIGlzT25UcmlhbCA9IG1vbWVudChwcm9tcHQuZXhwaXJhdGlvbkRhdGUpID4gbW9tZW50KCk7CiAgICBpZiAocHJvbXB0LmV4cGlyYXRpb25EYXRlICYmICFmcmVlVGllcikgewogICAgICAgIGlmIChtb21lbnQocHJvbXB0LmV4cGlyYXRpb25EYXRlKS5pc0FmdGVyKG1vbWVudCgpKSkgewogICAgICAgICAgICBwcm9tcHQub25UcmlhbCA9IHRydWU7CiAgICAgICAgfQogICAgICAgIGlmICghaXNTdWJzY3JpYmVkQW5kSGFzVHJpYWwgJiYgaXNPblRyaWFsKSB7CiAgICAgICAgICAgIHByb21wdC5zaG93VHJpYWxFeHBpcmluZyA9IHRydWU7CiAgICAgICAgICAgIHJldHVybiBwcm9tcHQ7CiAgICAgICAgfQogICAgfQogICAgLy8gZmlndXJlIG91dCBpZiB0cmlhbCBleHBpcmVkCiAgICBpZiAocHJvbXB0LmV4cGlyYXRpb25EYXRlICYmIGZyZWVUaWVyKSB7CiAgICAgICAgcHJvbXB0LnNob3dUcmlhbEV4cGlyZWQgPSBtb21lbnQocHJvbXB0LmV4cGlyYXRpb25EYXRlKS5pc0JlZm9yZShtb21lbnQoKSk7CiAgICAgICAgcmV0dXJuIHByb21wdDsKICAgIH0KICAgIHJldHVybiBwcm9tcHQ7Cn0sIHVuZGVmaW5lZCwgWyd0ZWFtJywgJ21lJ10pOwo="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/upgradePrompt.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/upgradePrompt.ts"],"names":[],"mappings":"AAAA,OAAO,MAAM,MAAM,QAAQ,CAAC;AAE5B,OAAO,EAAsB,QAAQ,EAAE,WAAW,EAAE,MAAM,YAAY,CAAC;AAEvE,OAAO,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAC;AAEnD,MAAM,CAAC,IAAM,mBAAmB,GAAG,cAAc,CAK/C;IACE,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,IAAI,EAAV,CAAU;IACnB,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,EAAE,EAAR,CAAQ;CAClB,EACD,UAAC,YAA4B,EAAE,UAAwB;IACrD,sBAAsB;IACtB,IAAM,MAAM,GAAkB;QAC5B,iBAAiB,EAAE,KAAK;QACxB,gBAAgB,EAAE,KAAK;QACvB,KAAK,EAAE,KAAK;QACZ,OAAO,EAAE,KAAK;KACf,CAAC;IAEF,4BAA4B;IAC5B,IAAM,IAAI,GAAG,YAAY,CAAC,IAAI,CAAC;IAC/B,IAAM,EAAE,GAAG,UAAU,CAAC,IAAI,CAAC;IAE3B,IAAI,CAAC,IAAI,IAAI,CAAC,EAAE,EAAE;QAChB,OAAO,MAAM,CAAC;KACf;IAED,sBAAsB;IACtB,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,UAAA,EAAE,IAAI,OAAA,EAAE,KAAK,EAAE,CAAC,EAAE,EAAZ,CAAY,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;QACrD,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC;KACrB;IAED,oCAAoC;IACpC,MAAM,CAAC,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC;IAE1C,6BAA6B;IAC7B,IAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,KAAK,QAAQ,CAAC,QAAQ,CAAC;IACjD,IAAM,uBAAuB,GAAG,EAAE,CAAC,SAAS,KAAK,WAAW,CAAC,eAAe,CAAC;IAC7E,IAAM,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,GAAG,MAAM,EAAE,CAAC;IAC3D,IAAI,MAAM,CAAC,cAAc,IAAI,CAAC,QAAQ,EAAE;QACtC,IAAI,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE;YACnD,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC;SACvB;QAED,IAAI,CAAC,uBAAuB,IAAI,SAAS,EAAE;YACzC,MAAM,CAAC,iBAAiB,GAAG,IAAI,CAAC;YAChC,OAAO,MAAM,CAAC;SACf;KACF;IAED,8BAA8B;IAC9B,IAAI,MAAM,CAAC,cAAc,IAAI,QAAQ,EAAE;QACrC,MAAM,CAAC,gBAAgB,GAAG,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC;QAC3E,OAAO,MAAM,CAAC;KACf;IAED,OAAO,MAAM,CAAC;AAChB,CAAC,EACD,SAAS,EACT,CAAC,MAAM,EAAE,IAAI,CAAC,CACf,CAAC","sourcesContent":["import moment from 'moment';\n\nimport { Resource, Team, Me, TeamPlan, MeStatusNew } from '@src/types';\nimport { UpgradePrompt } from '@src/types/billing';\nimport { createSelector } from '@src/lib/selector';\n\nexport const selectUpgradePrompt = createSelector<\n  undefined,\n  Resource<Team> | Resource<Me>,\n  UpgradePrompt\n>(\n  [\n    state => state.team,\n    state => state.me,\n  ],\n  (teamResource: Resource<Team>, meResource: Resource<Me>) => {\n    // setup default model\n    const prompt: UpgradePrompt = {\n      showTrialExpiring: false,\n      showTrialExpired: false,\n      admin: false,\n      onTrial: false,\n    };\n\n    // make sure data has loaded\n    const team = teamResource.data;\n    const me = meResource.data;\n\n    if (!team || !me) {\n      return prompt;\n    }\n\n    // figure out if admin\n    if (team.admins.filter(id => id === me.id).length > 0) {\n      prompt.admin = true;\n    }\n\n    // figure out trial expiring details\n    prompt.expirationDate = team.trialExpires;\n\n    // handle trial expiring soon\n    const freeTier = team.plan === TeamPlan.Inactive;\n    const isSubscribedAndHasTrial = me.statusNew === MeStatusNew.TrialSubscribed;\n    const isOnTrial = moment(prompt.expirationDate) > moment();\n    if (prompt.expirationDate && !freeTier) {\n      if (moment(prompt.expirationDate).isAfter(moment())) {\n        prompt.onTrial = true;\n      }\n\n      if (!isSubscribedAndHasTrial && isOnTrial) {\n        prompt.showTrialExpiring = true;\n        return prompt;\n      }\n    }\n\n    // figure out if trial expired\n    if (prompt.expirationDate && freeTier) {\n      prompt.showTrialExpired = moment(prompt.expirationDate).isBefore(moment());\n      return prompt;\n    }\n\n    return prompt;\n  },\n  undefined,\n  ['team', 'me'],\n);\n"]}]}