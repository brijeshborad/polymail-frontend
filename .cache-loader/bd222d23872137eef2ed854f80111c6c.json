{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Accounts/routes/AccountChooser/index.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Accounts/routes/AccountChooser/index.ts","mtime":1675280254094},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4JzsKaW1wb3J0IHsgc2VsZWN0QWNjb3VudHMsIGFjY291bnRSZWF1dGhvcml6ZSwgYWNjb3VudFVwZGF0ZVBhc3N3b3JkIH0gZnJvbSAnQHNyYy9kdWNrcy9hY2NvdW50cyc7CmltcG9ydCB7IHNlbGVjdFVzZXJJc0FkbWluIH0gZnJvbSAnQHNyYy9kdWNrcy9tZSc7CmltcG9ydCB7IGxlZnRTaWRlYmFyQ29sbGFwc2UgfSBmcm9tICdAc3JjL2R1Y2tzL2xlZnRTaWRlYmFyJzsKaW1wb3J0IEFjY291bnRDaG9vc2VyIGZyb20gJy4vQWNjb3VudENob29zZXInOwp2YXIgbWFwU3RhdGVUb1Byb3BzID0gZnVuY3Rpb24gKHN0YXRlKSB7IHJldHVybiAoewogICAgYWNjb3VudHM6IHNlbGVjdEFjY291bnRzKHN0YXRlKSwKICAgIGZlYXR1cmVzOiBzdGF0ZS5mZWF0dXJlcywKICAgIGJpbGxpbmc6IHN0YXRlLmJpbGxpbmcgJiYgc3RhdGUuYmlsbGluZy5yZXNvdXJjZS5kYXRhLAogICAgaXNUZWFtQWRtaW46IHNlbGVjdFVzZXJJc0FkbWluKHN0YXRlKSwKICAgIGlzTW9iaWxlOiBzdGF0ZS5pc01vYmlsZSwKICAgIGNvbGxhcHNlZE1vYmlsZTogc3RhdGUubGVmdFNpZGViYXIuY29sbGFwc2VkLAp9KTsgfTsKdmFyIG1hcERpc3BhdGNoVG9Qcm9wcyA9IGZ1bmN0aW9uIChkaXNwYXRjaCkgeyByZXR1cm4gKHsKICAgIHVwZGF0ZUFjY291bnRQYXNzd29yZDogZnVuY3Rpb24gKGFjY291bnQsIG5ld1Bhc3N3b3JkKSB7CiAgICAgICAgcmV0dXJuIGRpc3BhdGNoKGFjY291bnRVcGRhdGVQYXNzd29yZChhY2NvdW50LCBuZXdQYXNzd29yZCkpOwogICAgfSwKICAgIHJlYXV0aG9yaXplQWNjb3VudDogZnVuY3Rpb24gKGFjY291bnRJZCkgeyByZXR1cm4gZGlzcGF0Y2goYWNjb3VudFJlYXV0aG9yaXplKGFjY291bnRJZCkpOyB9LAogICAgY29sbGFwc2VMc2I6IGZ1bmN0aW9uIChjb2xsYXBzZSkgeyByZXR1cm4gZGlzcGF0Y2gobGVmdFNpZGViYXJDb2xsYXBzZShjb2xsYXBzZSkpOyB9LAp9KTsgfTsKZXhwb3J0IGRlZmF1bHQgY29ubmVjdChtYXBTdGF0ZVRvUHJvcHMsIG1hcERpc3BhdGNoVG9Qcm9wcykoQWNjb3VudENob29zZXIpOwo="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Accounts/routes/AccountChooser/index.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Accounts/routes/AccountChooser/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AAEtC,OAAO,EAAE,cAAc,EAAE,kBAAkB,EAAE,qBAAqB,EAAE,MAAM,qBAAqB,CAAC;AAChG,OAAO,EAAE,iBAAiB,EAAE,MAAM,eAAe,CAAC;AAClD,OAAO,EAAE,mBAAmB,EAAE,MAAM,wBAAwB,CAAC;AAG7D,OAAO,cAAwC,MAAM,kBAAkB,CAAC;AAGxE,IAAM,eAAe,GAAG,UAAC,KAAiB,IAAY,OAAA,CAAC;IACrD,QAAQ,EAAE,cAAc,CAAC,KAAK,CAAC;IAC/B,QAAQ,EAAE,KAAK,CAAC,QAAQ;IACxB,OAAO,EAAE,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI;IACrD,WAAW,EAAE,iBAAiB,CAAC,KAAK,CAAC;IACrC,QAAQ,EAAE,KAAK,CAAC,QAAQ;IACxB,eAAe,EAAE,KAAK,CAAC,WAAW,CAAC,SAAS;CAC7C,CAAC,EAPoD,CAOpD,CAAC;AAEH,IAAM,kBAAkB,GAAG,UAAC,QAA8B,IAAoB,OAAA,CAAC;IAC7E,qBAAqB,EAAE,UAAC,OAAgB,EAAE,WAAmB;QAC3D,OAAA,QAAQ,CAAC,qBAAqB,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;IAArD,CAAqD;IACvD,kBAAkB,EAAE,UAAC,SAAiB,IAAK,OAAA,QAAQ,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,EAAvC,CAAuC;IAClF,WAAW,EAAE,UAAA,QAAQ,IAAI,OAAA,QAAQ,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC,EAAvC,CAAuC;CACjE,CAAC,EAL4E,CAK5E,CAAC;AAEH,eAAe,OAAO,CAAC,eAAe,EAAE,kBAAkB,CAAC,CAAC,cAAc,CAAC,CAAC","sourcesContent":["import { connect } from 'react-redux';\n\nimport { selectAccounts, accountReauthorize, accountUpdatePassword } from '@src/ducks/accounts';\nimport { selectUserIsAdmin } from '@src/ducks/me';\nimport { leftSidebarCollapse } from '@src/ducks/leftSidebar';\n\nimport { StoreState, Account } from '@src/types';\nimport AccountChooser, { Props, DispatchProps } from './AccountChooser';\nimport { Dispatch } from 'redux';\n\nconst mapStateToProps = (state: StoreState): Props => ({\n  accounts: selectAccounts(state),\n  features: state.features,\n  billing: state.billing && state.billing.resource.data,\n  isTeamAdmin: selectUserIsAdmin(state),\n  isMobile: state.isMobile,\n  collapsedMobile: state.leftSidebar.collapsed,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<StoreState>): DispatchProps => ({\n  updateAccountPassword: (account: Account, newPassword: string) =>\n    dispatch(accountUpdatePassword(account, newPassword)),\n  reauthorizeAccount: (accountId: string) => dispatch(accountReauthorize(accountId)),\n  collapseLsb: collapse => dispatch(leftSidebarCollapse(collapse)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AccountChooser);\n"]}]}