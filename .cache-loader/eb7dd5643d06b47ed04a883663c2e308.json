{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Login/components/TwoFactorAuth/index.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Login/components/TwoFactorAuth/index.tsx","mtime":1675280254081},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4JzsKaW1wb3J0IHsgYXV0aExvZ291dCwgYXV0aFRmYUNvZGVTZW5kLCBhdXRoVGZhQ29kZVZhbGlkYXRlIH0gZnJvbSAnQHNyYy9kdWNrcy9hdXRoJzsKaW1wb3J0IFR3b0ZhY3RvckF1dGggZnJvbSAnLi9Ud29GYWN0b3JBdXRoJzsKdmFyIG1hcERpc3BhdGNoVG9Qcm9wcyA9IGZ1bmN0aW9uIChkaXNwYXRjaCkgeyByZXR1cm4gKHsKICAgIHZhbGlkYXRlQ29kZTogZnVuY3Rpb24gKGNvZGUpIHsgcmV0dXJuIGRpc3BhdGNoKGF1dGhUZmFDb2RlVmFsaWRhdGUoY29kZSkpOyB9LAogICAgbG9nb3V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBkaXNwYXRjaChhdXRoTG9nb3V0KG51bGwpKTsgfSwKICAgIHJlc2VuZENvZGU6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGRpc3BhdGNoKGF1dGhUZmFDb2RlU2VuZChudWxsKSk7IH0sCn0pOyB9OwpleHBvcnQgZGVmYXVsdCBjb25uZWN0KG51bGwsIG1hcERpc3BhdGNoVG9Qcm9wcykoVHdvRmFjdG9yQXV0aCk7Cg=="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Login/components/TwoFactorAuth/index.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Login/components/TwoFactorAuth/index.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAY,MAAM,aAAa,CAAC;AAChD,OAAO,EAAE,UAAU,EAAE,eAAe,EAAE,mBAAmB,EAAE,MAAM,iBAAiB,CAAC;AACnF,OAAO,aAAwB,MAAM,iBAAiB,CAAC;AAEvD,IAAM,kBAAkB,GAAG,UAAC,QAAuB,IAAY,OAAA,CAAC;IAC9D,YAAY,EAAE,UAAA,IAAI,IAAI,OAAA,QAAQ,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,EAAnC,CAAmC;IACzD,MAAM,EAAE,cAAM,OAAA,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,EAA1B,CAA0B;IACxC,UAAU,EAAE,cAAM,OAAA,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,EAA/B,CAA+B;CAClD,CAAC,EAJ6D,CAI7D,CAAC;AAEH,eAAe,OAAO,CAAC,IAAI,EAAE,kBAAkB,CAAC,CAAC,aAAa,CAAC,CAAC","sourcesContent":["import { connect, Dispatch } from 'react-redux';\nimport { authLogout, authTfaCodeSend, authTfaCodeValidate } from '@src/ducks/auth';\nimport TwoFactorAuth, { Props } from './TwoFactorAuth';\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>): Props => ({\n  validateCode: code => dispatch(authTfaCodeValidate(code)),\n  logout: () => dispatch(authLogout(null)),\n  resendCode: () => dispatch(authTfaCodeSend(null)),\n});\n\nexport default connect(null, mapDispatchToProps)(TwoFactorAuth);\n"]}]}