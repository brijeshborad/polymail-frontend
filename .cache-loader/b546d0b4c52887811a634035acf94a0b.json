{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/zoom.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/zoom.ts","mtime":1675280254060},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnOwppbXBvcnQgeyBBY3Rpb25TdGF0dXMgfSBmcm9tICdAc3JjL3R5cGVzJzsKaW1wb3J0IHsgWk9PTV9NRUVUSU5HX0NSRUFURSwgem9vbU1lZXRpbmdDcmVhdGUsIH0gZnJvbSAnQHNyYy9kdWNrcy96b29tJzsKaW1wb3J0IHsgdG9hc3RTZXQgfSBmcm9tICdAc3JjL2R1Y2tzL3RvYXN0cyc7CmltcG9ydCB7IHNlbGVjdFpvb21JbnRlZ3JhdGlvbiB9IGZyb20gJ0BzcmMvZHVja3MvaW50ZWdyYXRpb25zJzsKaW1wb3J0IGJyb3dzZXJIaXN0b3J5IGZyb20gJ0BzcmMvbGliL2Jyb3dzZXJIaXN0b3J5JzsKdmFyIHpvb21NZWV0aW5nQ3JlYXRlRXBpYyA9IGZ1bmN0aW9uIChhY3Rpb24kLCBzdG9yZSwgZGVwcykgewogICAgcmV0dXJuIGFjdGlvbiQub2ZUeXBlKFpPT01fTUVFVElOR19DUkVBVEUpCiAgICAgICAgLmZpbHRlcihmdW5jdGlvbiAoYWN0aW9uKSB7IHJldHVybiBhY3Rpb24uc3RhdHVzID09PSBBY3Rpb25TdGF0dXMuU3RhcnQ7IH0pCiAgICAgICAgLmZpbHRlcihmdW5jdGlvbiAoKSB7CiAgICAgICAgdmFyIHpvb21JbnRlZ3JhdGlvbiA9IHNlbGVjdFpvb21JbnRlZ3JhdGlvbihzdG9yZS5nZXRTdGF0ZSgpKTsKICAgICAgICBpZiAoIXpvb21JbnRlZ3JhdGlvbikgewogICAgICAgICAgICBicm93c2VySGlzdG9yeS5wdXNoKCcvc2V0dGluZ3MvaW50ZWdyYXRpb25zJyk7CiAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9KQogICAgICAgIC5mbGF0TWFwKGZ1bmN0aW9uIChhY3Rpb24pIHsKICAgICAgICByZXR1cm4gZGVwcy56b29tLmNyZWF0ZU1lZXRpbmcoKQogICAgICAgICAgICAuZmxhdE1hcChmdW5jdGlvbiAocGF5bG9hZCkgewogICAgICAgICAgICByZXR1cm4gT2JzZXJ2YWJsZS5vZih6b29tTWVldGluZ0NyZWF0ZShhY3Rpb24ubWV0YSwgcGF5bG9hZCkpOwogICAgICAgIH0pCiAgICAgICAgICAgIC5jYXRjaChmdW5jdGlvbiAoZXJyKSB7CiAgICAgICAgICAgIHJldHVybiBPYnNlcnZhYmxlLm1lcmdlKE9ic2VydmFibGUub2Yoem9vbU1lZXRpbmdDcmVhdGUobnVsbCwgZXJyKSksIE9ic2VydmFibGUub2YodG9hc3RTZXQoZXJyKSkpOwogICAgICAgIH0pOwogICAgfSk7Cn07CmV4cG9ydCBkZWZhdWx0IFt6b29tTWVldGluZ0NyZWF0ZUVwaWNdOwo="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/zoom.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/zoom.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,MAAM,CAAC;AAGlC,OAAO,EAAE,YAAY,EAAsB,MAAM,YAAY,CAAC;AAI9D,OAAO,EACL,mBAAmB,EAAE,iBAAiB,GACvC,MAAM,iBAAiB,CAAC;AACzB,OAAO,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAC7C,OAAO,EAAE,qBAAqB,EAAE,MAAM,yBAAyB,CAAC;AAChE,OAAO,cAAc,MAAM,yBAAyB,CAAC;AAErD,IAAM,qBAAqB,GAEvB,UAAC,OAAO,EAAE,KAAK,EAAE,IAAI;IACrB,OAAA,OAAO,CAAC,MAAM,CAAC,mBAAmB,CAAC;SAChC,MAAM,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,MAAM,KAAK,YAAY,CAAC,KAAK,EAApC,CAAoC,CAAC;SACtD,MAAM,CAAC;QACN,IAAM,eAAe,GAAG,qBAAqB,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;QAChE,IAAI,CAAC,eAAe,EAAE;YACpB,cAAc,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;YAC9C,OAAO,KAAK,CAAC;SACd;QAED,OAAO,IAAI,CAAC;IACd,CAAC,CAAC;SACD,OAAO,CAAC,UAAC,MAAiC;QACzC,OAAA,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;aACtB,OAAO,CAAC,UAAA,OAAO;YACd,OAAA,UAAU,CAAC,EAAE,CAAC,iBAAiB,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAAtD,CAAsD,CACvD;aACA,KAAK,CAAC,UAAC,GAAG;YACT,OAAO,UAAU,CAAC,KAAK,CACrB,UAAU,CAAC,EAAE,CAAC,iBAAiB,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,EAC3C,UAAU,CAAC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAC7B,CAAC;QACJ,CAAC,CAAC;IATJ,CASI,CACL;AAtBH,CAsBG,CAAC;AAER,eAAe,CAAC,qBAAqB,CAAC,CAAC","sourcesContent":["import { Observable } from 'rxjs';\nimport { Epic } from 'redux-observable';\n\nimport { ActionStatus, Action, StoreState } from '@src/types';\n\nimport { Deps } from '@src/lib/epic';\nimport { ZoomMeeting } from '@src/types/zoom';\nimport {\n  ZOOM_MEETING_CREATE, zoomMeetingCreate,\n} from '@src/ducks/zoom';\nimport { toastSet } from '@src/ducks/toasts';\nimport { selectZoomIntegration } from '@src/ducks/integrations';\nimport browserHistory from '@src/lib/browserHistory';\n\nconst zoomMeetingCreateEpic:\n  Epic<Action<null|Error, ZoomMeeting|Error|null>, StoreState, Deps>\n  = (action$, store, deps) =>\n    action$.ofType(ZOOM_MEETING_CREATE)\n      .filter(action => action.status === ActionStatus.Start)\n      .filter(() => {\n        const zoomIntegration = selectZoomIntegration(store.getState());\n        if (!zoomIntegration) {\n          browserHistory.push('/settings/integrations');\n          return false;\n        }\n\n        return true;\n      })\n      .flatMap((action: Action<null, ZoomMeeting>) =>\n        deps.zoom.createMeeting()\n          .flatMap(payload =>\n            Observable.of(zoomMeetingCreate(action.meta, payload)),\n          )\n          .catch((err) => {\n            return Observable.merge(\n              Observable.of(zoomMeetingCreate(null, err)),\n              Observable.of(toastSet(err)),\n            );\n          }),\n      );\n\nexport default [zoomMeetingCreateEpic];\n"]}]}