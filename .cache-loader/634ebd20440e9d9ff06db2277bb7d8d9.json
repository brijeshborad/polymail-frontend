{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/mocks/attachments.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/mocks/attachments.ts","mtime":1675280254070},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkgewogICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHsKICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHsKICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTsKICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKQogICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07CiAgICAgICAgfQogICAgICAgIHJldHVybiB0OwogICAgfTsKICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9OwppbXBvcnQgeyBjcmVhdGVDb250YWN0IH0gZnJvbSAnQHNyYy9tb2Nrcy9jb250YWN0cyc7CmV4cG9ydCB2YXIgY3JlYXRlQXR0YWNobWVudCA9IGZ1bmN0aW9uIChhdHRhY2htZW50KSB7CiAgICByZXR1cm4gX19hc3NpZ24oeyBpZDogJzEyMzQ1JywgY3JlYXRlZDogbmV3IERhdGUoRGF0ZS5VVEMoMjAxMCwgMywgNCwgMCwgMCwgMCwgMCkpLCB1cGRhdGVkOiBuZXcgRGF0ZShEYXRlLlVUQygyMDEwLCAzLCA0LCAwLCAwLCAwLCAwKSksIGZpbGVuYW1lOiAnVGVzdGluZyBhdHRhY2htZW50LnBkZicsIHR5cGU6ICdhdHRhY2htZW50L3BkZicsIGxlbmd0aDogNDAwMjAwMTAsIGNsb3VkOiBmYWxzZSwgY2xvdWRGaWxlOiAnaHR0cHM6Ly9nb29nbGUuY29tJywgY2xvdWRVcmw6ICdodHRwczovL3lhaG9vLmNvbScsIGlubGluZTogZmFsc2UsIHByb2dyZXNzOiAwLjIgfSwgYXR0YWNobWVudCk7Cn07CmV4cG9ydCB2YXIgY3JlYXRlTWVzc2FnZUF0dGFjaG1lbnQgPSBmdW5jdGlvbiAobWVzc2FnZUF0dGFjaG1lbnQpIHsKICAgIHJldHVybiBfX2Fzc2lnbih7IGlkOiAnMTIzNDUnLCBmaWxlbmFtZTogJ1Rlc3RpbmcgbWVzc2FnZSBhdHRhY2htZW50LnBkZicsIHR5cGU6ICdhdHRhY2htZW50L3BkZicsIGxlbmd0aDogNDAwMjAwMTAsIGlubGluZTogZmFsc2UsIHVybDogJ2h0dHBzOi8vYXBpLXRlc3RpbmcucG9seW1haWwuaW8vdjIvdGhyZWFkcy8xMjM0NTY3ODkwL21lc3NhZ2VzLzEyMzQ1L2F0dGFjaG1lbnRzLzEyMzQ1JywgbWVzc2FnZTogJ21lc3NhZ2VJZCcsIHRocmVhZDogJ3RocmVhZElkJyB9LCBtZXNzYWdlQXR0YWNobWVudCk7Cn07CmV4cG9ydCB2YXIgY3JlYXRlRmlsZSA9IGZ1bmN0aW9uIChwYXJ0aWFsKSB7CiAgICB2YXIgYmxvYiA9IG5ldyBCbG9iKFsnJ10sIHsKICAgICAgICB0eXBlOiBwYXJ0aWFsICYmIHBhcnRpYWwudHlwZSB8fCAnaW1hZ2UvcG5nJywKICAgIH0pOwogICAgdmFyIGZpbGVCbG9iID0gX19hc3NpZ24oX19hc3NpZ24oX19hc3NpZ24oe30sIGJsb2IpLCB7IGxhc3RNb2RpZmllZERhdGU6ICcnLCBuYW1lOiAnbW9ja0ZpbGUnIH0pLCBwYXJ0aWFsKTsKICAgIHJldHVybiBmaWxlQmxvYjsKfTsKZXhwb3J0IHZhciBjcmVhdGVDbG91ZEZpbGUgPSBmdW5jdGlvbiAocGFydGlhbCkgewogICAgcmV0dXJuIF9fYXNzaWduKHsgZmlsZU5hbWU6ICdtb2NrLWZpbGUnLCB0eXBlOiAnbW9jay10eXBlJywgY2xvdWRGaWxlOiAnbW9jay1jbG91ZC1maWxlJywgdXJsOiAnaHR0cHM6Ly9wb2x5bWFpbC5pbycsIGNsb3VkVXJsOiAnaHR0cHM6Ly9wb2x5bWFpbC5pby9jbG91ZC11cmwnLCBzaXplOiAxMDAgfSwgcGFydGlhbCk7Cn07CmV4cG9ydCB2YXIgY3JlYXRlQXR0YWNobWVudE1ldGEgPSBmdW5jdGlvbiAoY2xvdWQsIGlubGluZSkgewogICAgcmV0dXJuIHsKICAgICAgICByZXNvdXJjZUlkOiAnbW9jay1yZXNvdXJjZScsCiAgICAgICAgYXR0YWNobWVudDogJ21vY2stYXR0YWNobWVudCcsCiAgICAgICAgaW5saW5lOiBpbmxpbmUsCiAgICAgICAgY2xvdWQ6IGNsb3VkLAogICAgICAgIGZpbGU6IGNyZWF0ZUZpbGUoKSwKICAgIH07Cn07CmV4cG9ydCB2YXIgY3JlYXRlQ29udGFjdEF0dGFjaG1lbnQgPSBmdW5jdGlvbiAoYXR0YWNobWVudCkgewogICAgdmFyIGNvbnRhY3QgPSBjcmVhdGVDb250YWN0KCk7CiAgICB2YXIgbWVzc2FnZUF0dGFjaG1lbnQgPSBjcmVhdGVNZXNzYWdlQXR0YWNobWVudCgpOwogICAgcmV0dXJuIF9fYXNzaWduKHsgY29udGFjdDogY29udGFjdC5lbWFpbCwgYXR0YWNobWVudDogbWVzc2FnZUF0dGFjaG1lbnQsIGNyZWF0ZWQ6IG5ldyBEYXRlKCcyMDE3LTA5LTI3VDA1OjIwOjMxLjIxNlonKSB9LCBhdHRhY2htZW50KTsKfTsK"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/mocks/attachments.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/mocks/attachments.ts"],"names":[],"mappings":";;;;;;;;;;;AAGA,OAAO,EAAE,aAAa,EAAE,MAAM,qBAAqB,CAAC;AAEpD,MAAM,CAAC,IAAM,gBAAgB,GAAG,UAAC,UAAgC;IAC/D,kBACE,EAAE,EAAE,OAAO,EACX,OAAO,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EACnD,OAAO,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EACnD,QAAQ,EAAE,wBAAwB,EAClC,IAAI,EAAE,gBAAgB,EACtB,MAAM,EAAE,QAAQ,EAChB,KAAK,EAAE,KAAK,EACZ,SAAS,EAAE,oBAAoB,EAC/B,QAAQ,EAAE,mBAAmB,EAC7B,MAAM,EAAE,KAAK,EACb,QAAQ,EAAE,GAAG,IAEV,UAAU,EACb;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,IAAM,uBAAuB,GAClC,UAAC,iBAA8C;IAC7C,kBACE,EAAE,EAAE,OAAO,EACX,QAAQ,EAAE,gCAAgC,EAC1C,IAAI,EAAE,gBAAgB,EACtB,MAAM,EAAE,QAAQ,EAChB,MAAM,EAAE,KAAK,EACb,GAAG,EAAE,wFAAwF,EAC7F,OAAO,EAAE,WAAW,EACpB,MAAM,EAAE,UAAU,IAEf,iBAAiB,EACpB;AACJ,CAAC,CAAC;AAEJ,MAAM,CAAC,IAAM,UAAU,GAAG,UAAC,OAAuB;IAChD,IAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE;QAC1B,IAAI,EAAE,OAAO,IAAI,OAAO,CAAC,IAAI,IAAI,WAAW;KAC7C,CAAC,CAAC;IACH,IAAM,QAAQ,kCACT,IAAI,KACP,gBAAgB,EAAE,EAAE,EACpB,IAAI,EAAE,UAAU,KACb,OAAO,CACX,CAAC;IAEF,OAAO,QAAgB,CAAC;AAC1B,CAAC,CAAC;AAEF,MAAM,CAAC,IAAM,eAAe,GAAG,UAAC,OAA4B;IAC1D,kBACE,QAAQ,EAAE,WAAW,EACrB,IAAI,EAAE,WAAW,EACjB,SAAS,EAAE,iBAAiB,EAC5B,GAAG,EAAE,qBAAqB,EAC1B,QAAQ,EAAE,+BAA+B,EACzC,IAAI,EAAE,GAAG,IACN,OAAO,EACV;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,IAAM,oBAAoB,GAAG,UAAC,KAAc,EAAE,MAAe;IAClE,OAAO;QACL,UAAU,EAAE,eAAe;QAC3B,UAAU,EAAE,iBAAiB;QAC7B,MAAM,QAAA;QACN,KAAK,OAAA;QACL,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,IAAM,uBAAuB,GAClC,UAAC,UAAuC;IACtC,IAAM,OAAO,GAAG,aAAa,EAAE,CAAC;IAChC,IAAM,iBAAiB,GAAG,uBAAuB,EAAE,CAAC;IAEpD,kBACE,OAAO,EAAE,OAAO,CAAC,KAAK,EACtB,UAAU,EAAE,iBAAiB,EAC7B,OAAO,EAAE,IAAI,IAAI,CAAC,0BAA0B,CAAC,IAE1C,UAAU,EACb;AACJ,CAAC,CAAC","sourcesContent":["import {\n  Partial, MessageAttachment, AttachmentMeta, Attachment, ContactAttachment, CloudFile,\n} from '@src/types';\nimport { createContact } from '@src/mocks/contacts';\n\nexport const createAttachment = (attachment?: Partial<Attachment>): Attachment => {\n  return {\n    id: '12345',\n    created: new Date(Date.UTC(2010, 3, 4, 0, 0, 0, 0)),\n    updated: new Date(Date.UTC(2010, 3, 4, 0, 0, 0, 0)),\n    filename: 'Testing attachment.pdf',\n    type: 'attachment/pdf',\n    length: 40020010,\n    cloud: false,\n    cloudFile: 'https://google.com',\n    cloudUrl: 'https://yahoo.com',\n    inline: false,\n    progress: 0.2,\n\n    ...attachment,\n  };\n};\n\nexport const createMessageAttachment =\n  (messageAttachment?: Partial<MessageAttachment>): MessageAttachment => {\n    return {\n      id: '12345',\n      filename: 'Testing message attachment.pdf',\n      type: 'attachment/pdf',\n      length: 40020010,\n      inline: false,\n      url: 'https://api-testing.polymail.io/v2/threads/1234567890/messages/12345/attachments/12345',\n      message: 'messageId',\n      thread: 'threadId',\n\n      ...messageAttachment,\n    };\n  };\n\nexport const createFile = (partial?: Partial<File>): File => {\n  const blob = new Blob([''], {\n    type: partial && partial.type || 'image/png',\n  });\n  const fileBlob = {\n    ...blob,\n    lastModifiedDate: '',\n    name: 'mockFile',\n    ...partial,\n  };\n\n  return fileBlob as File;\n};\n\nexport const createCloudFile = (partial?: Partial<CloudFile>): CloudFile => {\n  return {\n    fileName: 'mock-file',\n    type: 'mock-type',\n    cloudFile: 'mock-cloud-file',\n    url: 'https://polymail.io',\n    cloudUrl: 'https://polymail.io/cloud-url',\n    size: 100,\n    ...partial,\n  };\n};\n\nexport const createAttachmentMeta = (cloud: boolean, inline: boolean): AttachmentMeta => {\n  return {\n    resourceId: 'mock-resource',\n    attachment: 'mock-attachment',\n    inline,\n    cloud,\n    file: createFile(),\n  };\n};\n\nexport const createContactAttachment =\n  (attachment?: Partial<ContactAttachment>): ContactAttachment => {\n    const contact = createContact();\n    const messageAttachment = createMessageAttachment();\n\n    return {\n      contact: contact.email,\n      attachment: messageAttachment,\n      created: new Date('2017-09-27T05:20:31.216Z'),\n\n      ...attachment,\n    };\n  };\n"]}]}