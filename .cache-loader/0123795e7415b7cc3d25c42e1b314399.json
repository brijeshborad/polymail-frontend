{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/contactGroups.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/contactGroups.ts","mtime":1675280254055},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnOwppbXBvcnQgeyBBY3Rpb25TdGF0dXMgfSBmcm9tICdAc3JjL3R5cGVzL2luZGV4JzsKaW1wb3J0IHsgQ09OVEFDVF9HUk9VUFNfTElTVCwgY29udGFjdEdyb3Vwc0xpc3QsIH0gZnJvbSAnQHNyYy9kdWNrcy9jb250YWN0R3JvdXBzJzsKaW1wb3J0IHsgbGlzdENvbnRhY3RHcm91cHMgfSBmcm9tICdAc3JjL2FwaS9jb250YWN0cyc7CnZhciBsaXN0ID0gZnVuY3Rpb24gKGFjdGlvbiQpIHsKICAgIHJldHVybiBhY3Rpb24kLm9mVHlwZShDT05UQUNUX0dST1VQU19MSVNUKQogICAgICAgIC5maWx0ZXIoZnVuY3Rpb24gKGFjdGlvbikgeyByZXR1cm4gYWN0aW9uLnN0YXR1cyA9PT0gQWN0aW9uU3RhdHVzLlN0YXJ0OyB9KQogICAgICAgIC5mbGF0TWFwKGZ1bmN0aW9uIChhY3Rpb24pIHsKICAgICAgICByZXR1cm4gbGlzdENvbnRhY3RHcm91cHMoKQogICAgICAgICAgICAubWFwKGZ1bmN0aW9uIChncm91cHMpIHsgcmV0dXJuIGNvbnRhY3RHcm91cHNMaXN0KGFjdGlvbi5tZXRhLCBncm91cHMpOyB9KQogICAgICAgICAgICAuY2F0Y2goZnVuY3Rpb24gKGUpIHsgcmV0dXJuIE9ic2VydmFibGUub2YoY29udGFjdEdyb3Vwc0xpc3QoYWN0aW9uLm1ldGEsIGUpKTsgfSk7CiAgICB9KTsKfTsKZXhwb3J0IGRlZmF1bHQgW2xpc3RdOwo="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/contactGroups.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/contactGroups.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,MAAM,CAAC;AAGlC,OAAO,EAAsB,YAAY,EAAgB,MAAM,kBAAkB,CAAC;AAElF,OAAO,EACL,mBAAmB,EAAE,iBAAiB,GACvC,MAAM,0BAA0B,CAAC;AAElC,OAAO,EAAE,iBAAiB,EAAE,MAAM,mBAAmB,CAAC;AAEtD,IAAM,IAAI,GAAqD,UAAA,OAAO;IACrE,OAAA,OAAO,CAAC,MAAM,CAAC,mBAAmB,CAAC;SACjC,MAAM,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,MAAM,KAAK,YAAY,CAAC,KAAK,EAApC,CAAoC,CAAC;SACtD,OAAO,CAAC,UAAA,MAAM;QACb,OAAA,iBAAiB,EAAE;aAChB,GAAG,CAAC,UAAA,MAAM,IAAI,OAAA,iBAAiB,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,EAAtC,CAAsC,CAAC;aACrD,KAAK,CAAC,UAAC,CAAQ,IAAK,OAAA,UAAU,CAAC,EAAE,CAAC,iBAAiB,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAhD,CAAgD,CAAC;IAFxE,CAEwE,CACzE;AANF,CAME,CAAC;AAEJ,eAAe,CAAC,IAAI,CAAC,CAAC","sourcesContent":["import { Observable } from 'rxjs';\nimport { Epic } from 'redux-observable';\n\nimport { StoreState, Action, ActionStatus, ContactGroup } from '@src/types/index';\n\nimport {\n  CONTACT_GROUPS_LIST, contactGroupsList,\n} from '@src/ducks/contactGroups';\n\nimport { listContactGroups } from '@src/api/contacts';\n\nconst list: Epic<Action<string, ContactGroup[]>, StoreState> = action$ =>\n action$.ofType(CONTACT_GROUPS_LIST)\n  .filter(action => action.status === ActionStatus.Start)\n  .flatMap(action =>\n    listContactGroups()\n      .map(groups => contactGroupsList(action.meta, groups))\n      .catch((e: Error) => Observable.of(contactGroupsList(action.meta, e))),\n  );\n\nexport default [list];\n"]}]}