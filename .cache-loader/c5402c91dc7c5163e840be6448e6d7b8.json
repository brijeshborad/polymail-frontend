{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/sequenceStages.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/sequenceStages.ts","mtime":1675280254058},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/sequenceStages.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/sequenceStages.ts"],"names":[],"mappings":"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","sourcesContent":["import { ActionStatus, Action, StoreState } from '@src/types';\nimport { SequenceStage, SequenceTab, SequenceStageRecipientFilter } from '@src/types/sequences';\nimport { Epic } from 'redux-observable';\nimport { Deps } from '@src/lib/epic';\nimport {\n  SEQUENCE_STAGE_LIST, sequenceStageList, sequenceStageDelete,\n  SEQUENCE_STAGE_UPDATE, SEQUENCE_STAGE_DELETE,\n  SEQUENCE_STAGE_CREATE, sequenceStageCreate,\n  sequenceStageUpdate, sequenceStageSelect,\n  SequenceStageCreateMeta, SequenceStageUpdateMeta,\n  SEQUENCE_STAGE_DUPLICATE, sequenceStageDuplicate,\n } from '@src/ducks/sequenceStages';\nimport { Observable } from 'rxjs';\nimport { ApiError } from '@src/api/base';\nimport { toastSet } from '@src/ducks/toasts';\nimport {\n  sequenceStageInstanceList, sequenceStageInstanceCreate, SequenceStageInstanceCreateMeta,\n} from '@src/ducks/sequenceStageInstances';\nimport { LOCATION_CHANGE, LocationChangeAction, push, RouterAction } from 'react-router-redux';\nimport { sequenceTabSelect } from '@src/ducks/sequences';\nimport { sequenceStageRecipientList } from '@src/ducks/sequenceStageRecipients';\nimport { createSequenceStageInstance } from '@src/mocks/sequences';\nimport { values } from 'lodash';\nimport { getQueryVariable } from '@src/lib/query';\n\nconst locationChangeSelectSequenceStage: Epic<Action<any, any>, StoreState, Deps> =\n  (action$, store, deps) =>\n    action$.ofType(LOCATION_CHANGE)\n      .filter((action) => {\n        const path = ((action as any) as LocationChangeAction).payload.pathname.toLowerCase();\n        const split = path.split('/');\n\n        return path.startsWith('/sequences') && split.length > 4;\n      })\n      .debounceTime(200, deps.scheduler)\n      .flatMap((action) => {\n        const path = ((action as any) as LocationChangeAction).payload.pathname;\n        const split = path.split('/');\n        const filter = getQueryVariable(\n          'filter',\n          ((action as any) as LocationChangeAction).payload.search,\n        );\n\n        return Observable.merge(\n          Observable.of(sequenceTabSelect(\n            split[5] && split[5].toLowerCase() === 'recipients' ?\n              SequenceTab.Recipients : SequenceTab.Message,\n          )),\n          Observable.of(sequenceStageSelect(split[4])),\n          Observable.of(sequenceStageInstanceList({\n            sequence: split[2],\n            stage: split[4],\n          })),\n          Observable.of(sequenceStageRecipientList({\n            sequence: split[2],\n            stage: split[4],\n            filter: filter ?\n              filter.toLowerCase() as SequenceStageRecipientFilter\n              : SequenceStageRecipientFilter.Sent,\n          })),\n        );\n      });\n\nconst sequenceStageListEpic: Epic<Action<any, any>, StoreState, Deps>\n  = (action$, store, deps) =>\n    action$.ofType(SEQUENCE_STAGE_LIST)\n      .filter((action: Action<string, SequenceStage[]>) => action.status === ActionStatus.Start)\n      .flatMap(action =>\n        deps.sequenceStages.list(action.meta)\n          .flatMap(result =>\n            Observable.merge(\n              Observable.of(sequenceStageList(action.meta, result)),\n              ...result.map(stage =>\n                Observable.of(sequenceStageInstanceList(\n                  { sequence: stage.sequence, stage: stage.id },\n                )),\n              ),\n            ))\n          .catch((e: Error) => Observable.of(sequenceStageList(action.meta, e))),\n    );\n\nconst sequenceStageCreateEpic: Epic<Action<\n  SequenceStageCreateMeta | Error | null | SequenceStageInstanceCreateMeta,\n  SequenceStage | null | SequenceStageInstanceCreateMeta\n>|RouterAction, StoreState, Deps> = (action$, store, deps) =>\n    action$.ofType(SEQUENCE_STAGE_CREATE)\n      .filter((action: Action<any, any>) => action.status === ActionStatus.Start)\n      .flatMap((action: Action<SequenceStageCreateMeta, SequenceStage>) =>\n        deps.sequenceStages.create(action.meta)\n          .flatMap((result) => {\n            const stages = store.getState().sequenceStages[result.sequence];\n            let subject;\n            if (result.order > 1 && stages) {\n              const firstStage = values(stages)\n                .filter(s => s.data && s.data.order === 1)\n                .map(s => s.data!) || [];\n              if (firstStage.length) {\n                const instances = store\n                  .getState()\n                  .sequenceStageInstances[result.sequence + firstStage[0].id];\n                if (instances) {\n                  const instance = values(instances).filter(i => !!i.data).map(i => i.data!);\n                  subject = instance.length ? instance[0].subject : '';\n                }\n              }\n            }\n\n            const actions: Array<Observable<Action<any, any>|RouterAction>> = [\n              Observable.of(sequenceStageCreate(action.meta, result)),\n              Observable.of(sequenceStageInstanceCreate(createSequenceStageInstance({\n                stage: result.id,\n                sequence: result.sequence,\n                subject: result.order > 1 && subject ? `Re:${subject}` : '(No Subject)',\n                body: '<div>Hi,<br><br></div>',\n              }))),\n            ];\n\n            if (action.meta.navigateTo) {\n              actions.push(\n                Observable.of(push(`/sequences/${result.sequence}/stages/${result.id}`)),\n              );\n            }\n\n            return Observable.concat(...actions);\n          })\n          .catch((e: Error) => Observable.merge(\n            Observable.of(toastSet(e)),\n            Observable.of(sequenceStageCreate(action.meta, e)),\n          )),\n    );\n\nconst sequenceStageUpdateEpic: Epic<\n  Action<SequenceStageUpdateMeta | Error | null, SequenceStage | null>, StoreState, Deps\n  > = (action$, store, deps) =>\n    action$.ofType(SEQUENCE_STAGE_UPDATE)\n      .filter(action => action.status === ActionStatus.Start)\n      .flatMap((action: Action<SequenceStage, SequenceStage>) =>\n        deps.sequenceStages.update(action.meta)\n          .map(result => sequenceStageUpdate(action.meta, result))\n          .catch((e: Error) => Observable.merge(\n            Observable.of(toastSet(e)),\n            Observable.of(sequenceStageUpdate(action.meta, e)),\n          )),\n    );\n\nconst sequenceStageDeleteEpic: Epic<\n  Action<any, any>, StoreState, Deps\n  > = (action$, store, deps) =>\n    action$.ofType(SEQUENCE_STAGE_DELETE)\n      .filter(action => action.status === ActionStatus.Start)\n      .flatMap((action: Action<SequenceStage, null>) =>\n        deps.sequenceStages.delete(action.meta)\n          .flatMap(result =>\n            Observable.concat(\n              Observable.of(sequenceStageDelete(action.meta, null)),\n              Observable.of(sequenceStageList(action.meta.sequence)),\n            ))\n          .catch((e) => {\n            // handle 404 as completion\n            if (e as ApiError && e.code === 404) {\n              return Observable.of(sequenceStageDelete(action.meta, null));\n            }\n\n            throw e;\n          })\n          .catch((e: Error) => Observable.merge(\n            Observable.of(toastSet(e)),\n            Observable.of(sequenceStageDelete(action.meta, e)),\n          )),\n    );\n\nconst sequenceStageDuplicateEpic: Epic<Action<\n  SequenceStage|Error|null|string, SequenceStage|null|SequenceStage[]\n>, StoreState, Deps>\n  = (action$, store, deps) =>\n    action$.ofType(SEQUENCE_STAGE_DUPLICATE)\n      .filter(action => action.status === ActionStatus.Start)\n      .flatMap((action: Action<SequenceStage, SequenceStage>) =>\n        deps.sequenceStages.duplicate(\n          action.meta.sequence,\n          action.meta.id,\n        )\n          .flatMap(results =>\n            Observable.concat(\n              Observable.of(sequenceStageDuplicate(action.meta, results)),\n              Observable.of(sequenceStageList(action.meta.sequence)),\n            ),\n          )\n          .catch(e => Observable.of(toastSet(e))),\n      );\n\nexport default [\n  locationChangeSelectSequenceStage,\n  sequenceStageListEpic,\n  sequenceStageCreateEpic,\n  sequenceStageDeleteEpic,\n  sequenceStageUpdateEpic,\n  sequenceStageDuplicateEpic,\n];\n"]}]}