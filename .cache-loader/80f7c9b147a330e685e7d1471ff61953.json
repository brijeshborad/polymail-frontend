{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/Base/UploadButton.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/Base/UploadButton.tsx","mtime":1675280253989},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkgewogICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBmdW5jdGlvbiAoZCwgYikgewogICAgICAgIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwKICAgICAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fAogICAgICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChiLmhhc093blByb3BlcnR5KHApKSBkW3BdID0gYltwXTsgfTsKICAgICAgICByZXR1cm4gZXh0ZW5kU3RhdGljcyhkLCBiKTsKICAgIH07CiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHsKICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpOwogICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfQogICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTsKICAgIH07Cn0pKCk7CmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7CmltcG9ydCBjbGFzc25hbWVzIGZyb20gJ2NsYXNzbmFtZXMnOwppbXBvcnQgQXR0YWNobWVudCBmcm9tICdAc3JjL2NvbXBvbmVudHMvSWNvbnMvQXR0YWNobWVudC5zdmcnOwp2YXIgVXBsb2FkQnV0dG9uID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikgewogICAgX19leHRlbmRzKFVwbG9hZEJ1dHRvbiwgX3N1cGVyKTsKICAgIGZ1bmN0aW9uIFVwbG9hZEJ1dHRvbigpIHsKICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIgIT09IG51bGwgJiYgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpczsKICAgICAgICBfdGhpcy5oYW5kbGVDbGljayA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgX3RoaXMuaW5wdXQuY2xpY2soKTsKICAgICAgICB9OwogICAgICAgIF90aGlzLmhhbmRsZUZpbGVzID0gZnVuY3Rpb24gKGUpIHsKICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTsKICAgICAgICAgICAgdmFyIGZpbGVMaXN0ID0gX3RoaXMuaW5wdXQuZmlsZXM7CiAgICAgICAgICAgIGlmIChmaWxlTGlzdCkgewogICAgICAgICAgICAgICAgdmFyIGZpbGVzID0gQXJyYXkuZnJvbShmaWxlTGlzdCkubWFwKGZ1bmN0aW9uIChibGFuaywgaW5kZXgpIHsgcmV0dXJuIGZpbGVMaXN0Lml0ZW0oaW5kZXgpOyB9KTsKICAgICAgICAgICAgICAgIF90aGlzLnByb3BzLnVwbG9hZChmaWxlcywgeyBpZ25vcmVJbmxpbmU6IHRydWUgfSk7CiAgICAgICAgICAgICAgICBfdGhpcy5pbnB1dC52YWx1ZSA9IG51bGw7CiAgICAgICAgICAgIH0KICAgICAgICB9OwogICAgICAgIF90aGlzLmhhbmRsZVJlZiA9IGZ1bmN0aW9uIChyZWYpIHsKICAgICAgICAgICAgX3RoaXMuaW5wdXQgPSByZWY7CiAgICAgICAgfTsKICAgICAgICByZXR1cm4gX3RoaXM7CiAgICB9CiAgICBVcGxvYWRCdXR0b24ucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uICgpIHsKICAgICAgICB2YXIgX2EgPSB0aGlzLnByb3BzLCBjbGFzc05hbWUgPSBfYS5jbGFzc05hbWUsIGRlc2NyaXB0aW9uID0gX2EuZGVzY3JpcHRpb24sIHNob3dJY29uID0gX2Euc2hvd0ljb24sIGN1c3RvbUljb24gPSBfYS5jdXN0b21JY29uLCBsaW1pdFRvT25lID0gX2EubGltaXRUb09uZSwgYWNjZXB0ID0gX2EuYWNjZXB0OwogICAgICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudCgiYnV0dG9uIiwgeyBjbGFzc05hbWU6IGNsYXNzbmFtZXMoJ2F0dGFjaG1lbnQtYnV0dG9uJywgY2xhc3NOYW1lKSwgb25DbGljazogdGhpcy5oYW5kbGVDbGljayB9LAogICAgICAgICAgICBjdXN0b21JY29uLAogICAgICAgICAgICBkZXNjcmlwdGlvbiAmJiBkZXNjcmlwdGlvbiwKICAgICAgICAgICAgc2hvd0ljb24gJiYgUmVhY3QuY3JlYXRlRWxlbWVudChBdHRhY2htZW50LCBudWxsKSwKICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudCgiaW5wdXQiLCB7IGRpcjogImF1dG8iLCBzdHlsZTogewogICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6ICdub25lJywKICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6ICcwcHgnLAogICAgICAgICAgICAgICAgfSwgcmVmOiB0aGlzLmhhbmRsZVJlZiwgb25DaGFuZ2U6IHRoaXMuaGFuZGxlRmlsZXMsIG5hbWU6ICJ1cGxvYWRzW10iLCB0eXBlOiAiZmlsZSIsIG11bHRpcGxlOiAhbGltaXRUb09uZSwgYWNjZXB0OiBhY2NlcHQgfSkpKTsKICAgIH07CiAgICByZXR1cm4gVXBsb2FkQnV0dG9uOwp9KFJlYWN0LlB1cmVDb21wb25lbnQpKTsKZXhwb3J0IGRlZmF1bHQgVXBsb2FkQnV0dG9uOwo="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/Base/UploadButton.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/Base/UploadButton.tsx"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,UAAU,MAAM,YAAY,CAAC;AAEpC,OAAO,UAAU,MAAM,sCAAsC,CAAC;AAa9D;IAA2B,gCAA0B;IAArD;QAAA,qEAgDC;QA7CC,iBAAW,GAAG;YACZ,KAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;QACrB,CAAC,CAAA;QAED,iBAAW,GAAG,UAAC,CAAsC;YACnD,CAAC,CAAC,eAAe,EAAE,CAAC;YACpB,IAAM,QAAQ,GAAG,KAAI,CAAC,KAAK,CAAC,KAAK,CAAC;YAClC,IAAI,QAAQ,EAAE;gBACZ,IAAM,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,UAAC,KAAK,EAAE,KAAK,IAAK,OAAA,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,EAApB,CAAoB,CAAC,CAAC;gBAC/E,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC;gBACjD,KAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC;aACzB;QACH,CAAC,CAAA;QAED,eAAS,GAAG,UAAC,GAAqB;YAChC,KAAI,CAAC,KAAK,GAAG,GAAG,CAAC;QACnB,CAAC,CAAA;;IA6BH,CAAC;IA3BC,6BAAM,GAAN;QACQ,IAAA,eAAiF,EAA/E,wBAAS,EAAE,4BAAW,EAAE,sBAAQ,EAAE,0BAAU,EAAE,0BAAU,EAAE,kBAAqB,CAAC;QAExF,OAAO,CACL,gCACE,SAAS,EAAE,UAAU,CAAC,mBAAmB,EAAE,SAAS,CAAC,EACrD,OAAO,EAAE,IAAI,CAAC,WAAW;YAExB,UAAU;YACV,WAAW,IAAI,WAAW;YAC1B,QAAQ,IAAI,oBAAC,UAAU,OAAG;YAC3B,+BACE,GAAG,EAAC,MAAM,EACV,KAAK,EAAE;oBACL,OAAO,EAAE,MAAM;oBACf,MAAM,EAAE,KAAK;iBACd,EACD,GAAG,EAAE,IAAI,CAAC,SAAS,EACnB,QAAQ,EAAE,IAAI,CAAC,WAAW,EAC1B,IAAI,EAAC,WAAW,EAChB,IAAI,EAAC,MAAM,EACX,QAAQ,EAAE,CAAC,UAAU,EACrB,MAAM,EAAE,MAAM,GACd,CACK,CACV,CAAC;IACJ,CAAC;IACH,mBAAC;AAAD,CAAC,AAhDD,CAA2B,KAAK,CAAC,aAAa,GAgD7C;AAED,eAAe,YAAY,CAAC","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\n\nimport Attachment from '@src/components/Icons/Attachment.svg';\nimport { AttachmentUploadOptions } from '@src/lib/attachment';\n\ninterface Props {\n  upload: (list: File[], options: AttachmentUploadOptions) => void;\n  className: string;\n  showIcon?: boolean;\n  description?: string;\n  customIcon?: any;\n  limitToOne?: boolean;\n  accept?: string;\n}\n\nclass UploadButton extends React.PureComponent<Props> {\n  input: any;\n\n  handleClick = () => {\n    this.input.click();\n  }\n\n  handleFiles = (e: React.ChangeEvent<HTMLInputElement>) => {\n    e.stopPropagation();\n    const fileList = this.input.files;\n    if (fileList) {\n      const files = Array.from(fileList).map((blank, index) => fileList.item(index));\n      this.props.upload(files, { ignoreInline: true });\n      this.input.value = null;\n    }\n  }\n\n  handleRef = (ref: HTMLInputElement) => {\n    this.input = ref;\n  }\n\n  render() {\n    const { className, description, showIcon, customIcon, limitToOne, accept } = this.props;\n\n    return (\n      <button\n        className={classnames('attachment-button', className)}\n        onClick={this.handleClick}\n      >\n        {customIcon}\n        {description && description}\n        {showIcon && <Attachment />}\n        <input\n          dir=\"auto\"\n          style={{\n            display: 'none',\n            height: '0px',\n          }}\n          ref={this.handleRef}\n          onChange={this.handleFiles}\n          name=\"uploads[]\"\n          type=\"file\"\n          multiple={!limitToOne}\n          accept={accept}\n        />\n      </button>\n    );\n  }\n}\n\nexport default UploadButton;\n"]}]}