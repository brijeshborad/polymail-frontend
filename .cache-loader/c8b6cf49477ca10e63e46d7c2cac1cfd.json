{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/asana.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/asana.ts","mtime":1675280254054},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnOwppbXBvcnQgeyBBY3Rpb25TdGF0dXMgfSBmcm9tICdAc3JjL3R5cGVzJzsKaW1wb3J0IHsgQVNBTkFfVVNFUl9MSVNULCBhc2FuYVVzZXJMaXN0LCBBU0FOQV9QUk9KRUNUX0xJU1QsIGFzYW5hUHJvamVjdExpc3QsIEFTQU5BX1dPUktTUEFDRV9MSVNULCBhc2FuYVdvcmtzcGFjZUxpc3QsIH0gZnJvbSAnQHNyYy9kdWNrcy9hc2FuYSc7CmltcG9ydCB7IHRvYXN0U2V0IH0gZnJvbSAnQHNyYy9kdWNrcy90b2FzdHMnOwp2YXIgZ2V0QXNhbmFVc2VycyA9IGZ1bmN0aW9uIChhY3Rpb24kLCBzdG9yZSwgZGVwcykgewogICAgcmV0dXJuIGFjdGlvbiQub2ZUeXBlKEFTQU5BX1VTRVJfTElTVCkKICAgICAgICAuZmlsdGVyKGZ1bmN0aW9uIChhY3Rpb24pIHsgcmV0dXJuIGFjdGlvbi5zdGF0dXMgPT09IEFjdGlvblN0YXR1cy5TdGFydDsgfSkKICAgICAgICAuZmxhdE1hcChmdW5jdGlvbiAoYWN0aW9uKSB7CiAgICAgICAgcmV0dXJuIGRlcHMuYXNhbmEuZ2V0VXNlcnMoYWN0aW9uLm1ldGEpCiAgICAgICAgICAgIC50YWtlVW50aWwoYWN0aW9uJC5vZlR5cGUoQVNBTkFfVVNFUl9MSVNUKQogICAgICAgICAgICAuZmlsdGVyKGZ1bmN0aW9uIChuZXh0QWN0aW9uKSB7IHJldHVybiBuZXh0QWN0aW9uLnN0YXR1cyA9PT0gQWN0aW9uU3RhdHVzLlN0YXJ0OyB9KSkKICAgICAgICAgICAgLm1hcChmdW5jdGlvbiAodXNlcnMpIHsgcmV0dXJuIGFzYW5hVXNlckxpc3QoYWN0aW9uLm1ldGEsIHVzZXJzKTsgfSkKICAgICAgICAgICAgLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHsgcmV0dXJuIE9ic2VydmFibGUub2YodG9hc3RTZXQoZXJyKSk7IH0pOwogICAgfSk7Cn07CnZhciBnZXRBc2FuYVByb2plY3RzID0gZnVuY3Rpb24gKGFjdGlvbiQsIHN0b3JlLCBkZXBzKSB7CiAgICByZXR1cm4gYWN0aW9uJC5vZlR5cGUoQVNBTkFfUFJPSkVDVF9MSVNUKQogICAgICAgIC5maWx0ZXIoZnVuY3Rpb24gKGFjdGlvbikgeyByZXR1cm4gYWN0aW9uLnN0YXR1cyA9PT0gQWN0aW9uU3RhdHVzLlN0YXJ0OyB9KQogICAgICAgIC5mbGF0TWFwKGZ1bmN0aW9uIChhY3Rpb24pIHsKICAgICAgICByZXR1cm4gZGVwcy5hc2FuYS5nZXRQcm9qZWN0cyhhY3Rpb24ubWV0YSkKICAgICAgICAgICAgLnRha2VVbnRpbChhY3Rpb24kLm9mVHlwZShBU0FOQV9QUk9KRUNUX0xJU1QpCiAgICAgICAgICAgIC5maWx0ZXIoZnVuY3Rpb24gKG5leHRBY3Rpb24pIHsgcmV0dXJuIG5leHRBY3Rpb24uc3RhdHVzID09PSBBY3Rpb25TdGF0dXMuU3RhcnQ7IH0pKQogICAgICAgICAgICAubWFwKGZ1bmN0aW9uIChwcm9qZWN0cykgeyByZXR1cm4gYXNhbmFQcm9qZWN0TGlzdChhY3Rpb24ubWV0YSwgcHJvamVjdHMpOyB9KQogICAgICAgICAgICAuY2F0Y2goZnVuY3Rpb24gKGVycikgeyByZXR1cm4gT2JzZXJ2YWJsZS5vZih0b2FzdFNldChlcnIpKTsgfSk7CiAgICB9KTsKfTsKdmFyIGdldEFzYW5hV29ya3NwYWNlcyA9IGZ1bmN0aW9uIChhY3Rpb24kLCBzdG9yZSwgZGVwcykgewogICAgcmV0dXJuIGFjdGlvbiQub2ZUeXBlKEFTQU5BX1dPUktTUEFDRV9MSVNUKQogICAgICAgIC5maWx0ZXIoZnVuY3Rpb24gKGFjdGlvbikgeyByZXR1cm4gYWN0aW9uLnN0YXR1cyA9PT0gQWN0aW9uU3RhdHVzLlN0YXJ0OyB9KQogICAgICAgIC5mbGF0TWFwKGZ1bmN0aW9uIChhY3Rpb24pIHsKICAgICAgICByZXR1cm4gZGVwcy5hc2FuYS5nZXRXb3Jrc3BhY2VzKCkKICAgICAgICAgICAgLm1hcChmdW5jdGlvbiAod29ya3NwYWNlcykgeyByZXR1cm4gYXNhbmFXb3Jrc3BhY2VMaXN0KG51bGwsIHdvcmtzcGFjZXMpOyB9KQogICAgICAgICAgICAuY2F0Y2goZnVuY3Rpb24gKGVycikgeyByZXR1cm4gT2JzZXJ2YWJsZS5vZih0b2FzdFNldChlcnIpKTsgfSk7CiAgICB9KTsKfTsKZXhwb3J0IGRlZmF1bHQgWwogICAgZ2V0QXNhbmFVc2VycywKICAgIGdldEFzYW5hUHJvamVjdHMsCiAgICBnZXRBc2FuYVdvcmtzcGFjZXMsCl07Cg=="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/asana.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/asana.ts"],"names":[],"mappings":"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","sourcesContent":["import { Observable } from 'rxjs';\nimport { Epic } from 'redux-observable';\n\nimport { ActionStatus, Action, StoreState } from '@src/types';\n\nimport { Deps } from '@src/lib/epic';\nimport { AsanaUser, AsanaProject, AsanaWorkspace } from '@src/types/asana';\nimport {\n  ASANA_USER_LIST,\n  asanaUserList,\n  ASANA_PROJECT_LIST,\n  asanaProjectList,\n  ASANA_WORKSPACE_LIST,\n  asanaWorkspaceList,\n} from '@src/ducks/asana';\nimport { toastSet } from '@src/ducks/toasts';\n\nconst getAsanaUsers: Epic<Action<string|Error|null, AsanaUser[]|null>, StoreState, Deps>\n  = (action$, store, deps) =>\n    action$.ofType(ASANA_USER_LIST)\n      .filter(action => action.status === ActionStatus.Start)\n      .flatMap((action: Action<string, AsanaUser[]>) => {\n        return deps.asana.getUsers(action.meta)\n          .takeUntil(action$.ofType(ASANA_USER_LIST)\n            .filter(nextAction => nextAction.status === ActionStatus.Start),\n          )\n          .map(users => asanaUserList(action.meta, users))\n          .catch(err => Observable.of(toastSet(err)));\n      });\n\nconst getAsanaProjects: Epic<Action<string|null|Error, AsanaProject[]|null>, StoreState, Deps>\n  = (action$, store, deps) =>\n    action$.ofType(ASANA_PROJECT_LIST)\n      .filter(action => action.status === ActionStatus.Start)\n      .flatMap((action: Action<string, AsanaProject[]>) =>\n        deps.asana.getProjects(action.meta)\n          .takeUntil(action$.ofType(ASANA_PROJECT_LIST)\n            .filter(nextAction => nextAction.status === ActionStatus.Start),\n          )\n          .map(projects => asanaProjectList(action.meta, projects))\n          .catch(err => Observable.of(toastSet(err))),\n      );\n\nconst getAsanaWorkspaces: Epic<Action<null|Error, AsanaWorkspace[]|null>, StoreState, Deps>\n  = (action$, store, deps) =>\n    action$.ofType(ASANA_WORKSPACE_LIST)\n      .filter(action => action.status === ActionStatus.Start)\n      .flatMap((action: Action<null, AsanaWorkspace[]>) =>\n        deps.asana.getWorkspaces()\n          .map(workspaces => asanaWorkspaceList(null, workspaces))\n          .catch(err => Observable.of(toastSet(err))),\n      );\n\nexport default [\n  getAsanaUsers,\n  getAsanaProjects,\n  getAsanaWorkspaces,\n];\n"]}]}