{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Threads/components/ThreadList/components/InfiniteThreadList/EmptySearchCell/index.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Threads/components/ThreadList/components/InfiniteThreadList/EmptySearchCell/index.tsx","mtime":1675280254117},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4JzsKaW1wb3J0IEVtcHR5U2VhcmNoQ2VsbCBmcm9tICcuL0VtcHR5U2VhcmNoQ2VsbCc7CmltcG9ydCB7IHRocmVhZHNTZWFyY2ggfSBmcm9tICdAc3JjL2R1Y2tzL3RocmVhZHMnOwppbXBvcnQgeyBtYWlsYm94U2VsZWN0IH0gZnJvbSAnQHNyYy9kdWNrcy9tYWlsYm94JzsKaW1wb3J0IHsgc2VsZWN0QWNjb3VudCB9IGZyb20gJ0BzcmMvZHVja3MvYWNjb3VudHMnOwp2YXIgbWFwU3RhdGVUb1Byb3BzID0gZnVuY3Rpb24gKHN0YXRlLCBvd25Qcm9wcykgeyByZXR1cm4gKHsKICAgIGFjY291bnQ6IG93blByb3BzLnNlbGVjdGVkTWFpbGJveC5hY2NvdW50ICYmCiAgICAgICAgc2VsZWN0QWNjb3VudChzdGF0ZSwgb3duUHJvcHMuc2VsZWN0ZWRNYWlsYm94LmFjY291bnQpLAp9KTsgfTsKLy8gVXBkYXRlIFNlYXJjaCB3aWxsIHJlc2V0IG1haWxib3gsIHRoZW4gZmlyZSBhbm90aGVyIHNlYXJjaAp2YXIgbWFwRGlzcGF0Y2hUb1Byb3BzID0gZnVuY3Rpb24gKGRpc3BhdGNoKSB7IHJldHVybiAoewogICAgdXBkYXRlU2VhcmNoOiBmdW5jdGlvbiAobWV0YSkgeyByZXR1cm4gZGlzcGF0Y2godGhyZWFkc1NlYXJjaChtZXRhKSk7IH0sCiAgICB1cGRhdGVNYWlsYm94OiBmdW5jdGlvbiAobWFpbGJveCkgeyByZXR1cm4gZGlzcGF0Y2gobWFpbGJveFNlbGVjdChtYWlsYm94LCBtYWlsYm94KSk7IH0sCn0pOyB9OwpleHBvcnQgZGVmYXVsdCBjb25uZWN0KG1hcFN0YXRlVG9Qcm9wcywgbWFwRGlzcGF0Y2hUb1Byb3BzKShFbXB0eVNlYXJjaENlbGwpOwo="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Threads/components/ThreadList/components/InfiniteThreadList/EmptySearchCell/index.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Threads/components/ThreadList/components/InfiniteThreadList/EmptySearchCell/index.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAY,MAAM,aAAa,CAAC;AAEhD,OAAO,eAAqD,MAAM,mBAAmB,CAAC;AACtF,OAAO,EAAE,aAAa,EAAE,MAAM,oBAAoB,CAAC;AACnD,OAAO,EAAE,aAAa,EAAE,MAAM,oBAAoB,CAAC;AACnD,OAAO,EAAE,aAAa,EAAE,MAAM,qBAAqB,CAAC;AAEpD,IAAM,eAAe,GAAG,UAAC,KAAiB,EAAE,QAAe,IAAiB,OAAA,CAAC;IAC3E,OAAO,EAAE,QAAQ,CAAC,eAAe,CAAC,OAAO;QACvC,aAAa,CAAC,KAAK,EAAE,QAAQ,CAAC,eAAe,CAAC,OAAO,CAAC;CACzD,CAAC,EAH0E,CAG1E,CAAC;AAEH,6DAA6D;AAC7D,IAAM,kBAAkB,GAAG,UAAC,QAA8B,IAAoB,OAAA,CAAC;IAC7E,YAAY,EAAE,UAAA,IAAI,IAAI,OAAA,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,EAA7B,CAA6B;IACnD,aAAa,EAAE,UAAC,OAAgB,IAAK,OAAA,QAAQ,CAAC,aAAa,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,EAAzC,CAAyC;CAC/E,CAAC,EAH4E,CAG5E,CAAC;AAEH,eAAe,OAAO,CACpB,eAAe,EACf,kBAAkB,CACnB,CAAC,eAAe,CAAC,CAAC","sourcesContent":["import { connect, Dispatch } from 'react-redux';\nimport { StoreState, Mailbox } from '@src/types';\nimport EmptySearchCell, { DispatchProps, Props, StateProps } from './EmptySearchCell';\nimport { threadsSearch } from '@src/ducks/threads';\nimport { mailboxSelect } from '@src/ducks/mailbox';\nimport { selectAccount } from '@src/ducks/accounts';\n\nconst mapStateToProps = (state: StoreState, ownProps: Props): StateProps => ({\n  account: ownProps.selectedMailbox.account &&\n    selectAccount(state, ownProps.selectedMailbox.account),\n});\n\n// Update Search will reset mailbox, then fire another search\nconst mapDispatchToProps = (dispatch: Dispatch<StoreState>): DispatchProps => ({\n  updateSearch: meta => dispatch(threadsSearch(meta)),\n  updateMailbox: (mailbox: Mailbox) => dispatch(mailboxSelect(mailbox, mailbox)),\n});\n\nexport default connect<StateProps, DispatchProps, Props>(\n  mapStateToProps,\n  mapDispatchToProps,\n)(EmptySearchCell);\n"]}]}