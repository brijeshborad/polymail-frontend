{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/account.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/account.ts","mtime":1675280254061},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkgewogICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHsKICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHsKICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTsKICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKQogICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07CiAgICAgICAgfQogICAgICAgIHJldHVybiB0OwogICAgfTsKICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9OwppbXBvcnQgeyByYW5nZSwgZmluZEluZGV4IH0gZnJvbSAnbG9kYXNoJzsKZXhwb3J0IHZhciBNQVhfQUNDT1VOVF9MSU1JVCA9IDIwOwpleHBvcnQgdmFyIGFjY291bnRTaWduYXR1cmUgPSBmdW5jdGlvbiAobWV0YSkgewogICAgdmFyIHNpZ25hdHVyZUVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTsKICAgIHNpZ25hdHVyZUVsZW1lbnQuaW5uZXJIVE1MID0gbWV0YS5hY2NvdW50LnNpZ25hdHVyZTsKICAgIHNpZ25hdHVyZUVsZW1lbnQuaWQgPSAncHNpZ25hdHVyZSc7CiAgICAvLyBUT0RPKFNISU4pOiBGaWd1cmUgb3V0IHdheSB0byBkaXNhYmxlIGVkaXRzIHdoaWxlIGtlZXBpbmcgc2lnbmF0dXJlIHNlcGFyYXRlCiAgICAvLyBmcm9tIGNvbnRlbnRlZGl0YWJsZSBibG9jawogICAgLy8gaWYgKG1ldGEucHJldmVudEVkaXRzKSB7CiAgICAvLyBzaWduYXR1cmVFbGVtZW50LmNvbnRlbnRFZGl0YWJsZSA9ICdmYWxzZSc7CiAgICAvLyBzaWduYXR1cmVFbGVtZW50LnN0eWxlLnVzZXJTZWxlY3QgPSAnbm9uZSc7CiAgICAvLyB9CiAgICAvLyBSZXBsYWNlIGFsbCBzaWduYXR1cmUgaW1hZ2VzCiAgICB2YXIgaW1hZ2VzID0gc2lnbmF0dXJlRWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKCdpbWdbZGF0YS1wbS1zaWduYXR1cmUtaW1hZ2UtaWRdJyk7CiAgICBpZiAoaW1hZ2VzLmxlbmd0aCA+IDApIHsKICAgICAgICAocmFuZ2UoaW1hZ2VzLmxlbmd0aCkKICAgICAgICAgICAgLm1hcChmdW5jdGlvbiAoaSwgbikgeyByZXR1cm4gaW1hZ2VzLml0ZW0obik7IH0pKQogICAgICAgICAgICAuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgICB2YXIgaWQgPSBpdGVtLmdldEF0dHJpYnV0ZSgnZGF0YS1wbS1zaWduYXR1cmUtaW1hZ2UtaWQnKTsKICAgICAgICAgICAgaWYgKCFpZCkgewogICAgICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIChtZXRhLmRyYWZ0SWQpIHsKICAgICAgICAgICAgICAgIGl0ZW0uc2V0QXR0cmlidXRlKCdkYXRhLXBtLWFjY291bnQtaWQnLCBtZXRhLmFjY291bnQuaWQpOwogICAgICAgICAgICAgICAgaXRlbS5zZXRBdHRyaWJ1dGUoJ2RhdGEtcG0tZHJhZnQtaWQnLCBtZXRhLmRyYWZ0SWQpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHZhciBmaWx0ZXJlZCA9IG1ldGEuYWNjb3VudC5zaWduYXR1cmVJbWFnZXMuZmlsdGVyKGZ1bmN0aW9uIChpbWcpIHsgcmV0dXJuIGltZy5pZCA9PT0gaWQ7IH0pOwogICAgICAgICAgICBpZiAoZmlsdGVyZWQubGVuZ3RoID4gMCkgewogICAgICAgICAgICAgICAgaXRlbS5zZXRBdHRyaWJ1dGUoJ3NyYycsIGZpbHRlcmVkWzBdLmNsb3VkVXJsKTsKICAgICAgICAgICAgfQogICAgICAgIH0pOwogICAgfQogICAgcmV0dXJuICEhbWV0YS5yZXR1cm5Jbm5lckhUTUwKICAgICAgICA/IHNpZ25hdHVyZUVsZW1lbnQuaW5uZXJIVE1MCiAgICAgICAgOiBzaWduYXR1cmVFbGVtZW50Lm91dGVySFRNTDsKfTsKLy8gQXBwbGllcyBkZWZhdWx0IHByb3BlcnRpZXMgZm9yIGFjY291bnQgaW4gY2FzZSBwYXlsb2FkIGRvZXMgbm90IGNvbnRhaW4gZmllbGQKZXhwb3J0IHZhciBhcHBseURlZmF1bHRBY2NvdW50ID0gZnVuY3Rpb24gKGFjY291bnQpIHsgcmV0dXJuIChfX2Fzc2lnbih7IHNpZ25hdHVyZUltYWdlczogW10gfSwgYWNjb3VudCkpOyB9OwovLyBGaW5kcyB0b3AgbW9zdCBhY2NvdW50IGZvciBwZXJtaXNzaW9ucyBoYW5kbGluZy4KZXhwb3J0IHZhciBmaW5kUGFyZW50QWNjb3VudCA9IGZ1bmN0aW9uIChhY2NvdW50cywgYWNjb3VudCkgewogICAgdmFyIGluZGV4ID0gZmluZEluZGV4KGFjY291bnRzLCB7IGlkOiBhY2NvdW50IH0pOwogICAgaWYgKGluZGV4ID09PSAtMSkgewogICAgICAgIHJldHVybiB1bmRlZmluZWQ7CiAgICB9CiAgICB2YXIgY2hpbGRBY2NvdW50ID0gYWNjb3VudHNbaW5kZXhdOwogICAgdmFyIHBhcmVudEluZGV4ID0gZmluZEluZGV4KGFjY291bnRzLCB7IGlkOiBjaGlsZEFjY291bnQuYWNjb3VudCB9KTsKICAgIGlmIChwYXJlbnRJbmRleCA9PT0gLTEpIHsKICAgICAgICByZXR1cm4gdW5kZWZpbmVkOwogICAgfQogICAgcmV0dXJuIGFjY291bnRzW3BhcmVudEluZGV4XTsKfTsK"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/account.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/account.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,QAAQ,CAAC;AAG1C,MAAM,CAAC,IAAM,iBAAiB,GAAG,EAAE,CAAC;AASpC,MAAM,CAAC,IAAM,gBAAgB,GAAG,UAAC,IAA0B;IACzD,IAAM,gBAAgB,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IACvD,gBAAgB,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;IACpD,gBAAgB,CAAC,EAAE,GAAG,YAAY,CAAC;IAEnC,+EAA+E;IAC/E,6BAA6B;IAC7B,2BAA2B;IACzB,8CAA8C;IAC9C,8CAA8C;IAChD,IAAI;IAEJ,+BAA+B;IAC/B,IAAM,MAAM,GAAG,gBAAgB,CAAC,gBAAgB,CAAC,iCAAiC,CAAC,CAAC;IACpF,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;QACrB,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC;aAClB,GAAG,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAd,CAAc,CAAC,CAAC;aAC9B,OAAO,CAAC,UAAC,IAAI;YACZ,IAAM,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,4BAA4B,CAAC,CAAC;YAC3D,IAAI,CAAC,EAAE,EAAE;gBACP,OAAO;aACR;YAED,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChB,IAAI,CAAC,YAAY,CAAC,oBAAoB,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;gBACzD,IAAI,CAAC,YAAY,CAAC,kBAAkB,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;aACrD;YAED,IAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,MAAM,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,EAAE,KAAK,EAAE,EAAb,CAAa,CAAC,CAAC;YAC3E,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;gBACvB,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;aAChD;QACH,CAAC,CAAC,CAAC;KACN;IAED,OAAO,CAAC,CAAC,IAAI,CAAC,eAAe;QAC3B,CAAC,CAAC,gBAAgB,CAAC,SAAS;QAC5B,CAAC,CAAC,gBAAgB,CAAC,SAAS,CAAC;AACjC,CAAC,CAAC;AAEF,gFAAgF;AAChF,MAAM,CAAC,IAAM,mBAAmB,GAAG,UAAC,OAAgB,IAAc,OAAA,YAChE,eAAe,EAAE,EAAE,IAChB,OAAO,EACV,EAHgE,CAGhE,CAAC;AAEH,mDAAmD;AACnD,MAAM,CAAC,IAAM,iBAAiB,GAAG,UAAC,QAAmB,EAAE,OAAe;IACpE,IAAM,KAAK,GAAG,SAAS,CAAC,QAAQ,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,CAAC,CAAC;IACnD,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;QAChB,OAAO,SAAS,CAAC;KAClB;IACD,IAAM,YAAY,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;IACrC,IAAM,WAAW,GAAG,SAAS,CAAC,QAAQ,EAAE,EAAE,EAAE,EAAE,YAAY,CAAC,OAAO,EAAE,CAAC,CAAC;IACtE,IAAI,WAAW,KAAK,CAAC,CAAC,EAAE;QACtB,OAAO,SAAS,CAAC;KAClB;IACD,OAAO,QAAQ,CAAC,WAAW,CAAC,CAAC;AAC/B,CAAC,CAAC","sourcesContent":["import { range, findIndex } from 'lodash';\nimport { Account } from '@src/types';\n\nexport const MAX_ACCOUNT_LIMIT = 20;\n\n// get account signature with cloud urls applied, and add account/draft id if draft id is specified\nexport interface AccountSignatureMeta {\n  account: Account;\n  draftId?: string;\n  preventEdits?: boolean;\n  returnInnerHTML?: boolean;\n}\nexport const accountSignature = (meta: AccountSignatureMeta) => {\n  const signatureElement = document.createElement('div');\n  signatureElement.innerHTML = meta.account.signature;\n  signatureElement.id = 'psignature';\n\n  // TODO(SHIN): Figure out way to disable edits while keeping signature separate\n  // from contenteditable block\n  // if (meta.preventEdits) {\n    // signatureElement.contentEditable = 'false';\n    // signatureElement.style.userSelect = 'none';\n  // }\n\n  // Replace all signature images\n  const images = signatureElement.querySelectorAll('img[data-pm-signature-image-id]');\n  if (images.length > 0) {\n    (range(images.length)\n      .map((i, n) => images.item(n)))\n      .forEach((item) => {\n        const id = item.getAttribute('data-pm-signature-image-id');\n        if (!id) {\n          return;\n        }\n\n        if (meta.draftId) {\n          item.setAttribute('data-pm-account-id', meta.account.id);\n          item.setAttribute('data-pm-draft-id', meta.draftId);\n        }\n\n        const filtered = meta.account.signatureImages.filter(img => img.id === id);\n        if (filtered.length > 0) {\n          item.setAttribute('src', filtered[0].cloudUrl);\n        }\n      });\n  }\n\n  return !!meta.returnInnerHTML\n    ? signatureElement.innerHTML\n    : signatureElement.outerHTML;\n};\n\n// Applies default properties for account in case payload does not contain field\nexport const applyDefaultAccount = (account: Account): Account => ({\n  signatureImages: [],\n  ...account,\n});\n\n// Finds top most account for permissions handling.\nexport const findParentAccount = (accounts: Account[], account: string): Account|undefined => {\n  const index = findIndex(accounts, { id: account });\n  if (index === -1) {\n    return undefined;\n  }\n  const childAccount = accounts[index];\n  const parentIndex = findIndex(accounts, { id: childAccount.account });\n  if (parentIndex === -1) {\n    return undefined;\n  }\n  return accounts[parentIndex];\n};\n"]}]}