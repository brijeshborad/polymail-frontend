{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/toasts.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/toasts.ts","mtime":1675280254053},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkgewogICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBmdW5jdGlvbiAoZCwgYikgewogICAgICAgIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwKICAgICAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fAogICAgICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChiLmhhc093blByb3BlcnR5KHApKSBkW3BdID0gYltwXTsgfTsKICAgICAgICByZXR1cm4gZXh0ZW5kU3RhdGljcyhkLCBiKTsKICAgIH07CiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHsKICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpOwogICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfQogICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTsKICAgIH07Cn0pKCk7CnZhciBfYTsKaW1wb3J0IHsgY3JlYXRlIH0gZnJvbSAnQHNyYy9saWIvcmVkdXgnOwppbXBvcnQgdXBkYXRlIGZyb20gJ2ltbXV0YWJpbGl0eS1oZWxwZXInOwpleHBvcnQgdmFyIENvbmZpcm1hdGlvblBvc2l0b247CihmdW5jdGlvbiAoQ29uZmlybWF0aW9uUG9zaXRvbikgewogICAgQ29uZmlybWF0aW9uUG9zaXRvblsiQm90dG9tQ2VudGVyIl0gPSAiYm90dG9tLWNlbnRlciI7CiAgICBDb25maXJtYXRpb25Qb3NpdG9uWyJUb3BDZW50ZXIiXSA9ICJ0b3AtY2VudGVyIjsKfSkoQ29uZmlybWF0aW9uUG9zaXRvbiB8fCAoQ29uZmlybWF0aW9uUG9zaXRvbiA9IHt9KSk7CnZhciBDb25maXJtYXRpb25FcnJvciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHsKICAgIF9fZXh0ZW5kcyhDb25maXJtYXRpb25FcnJvciwgX3N1cGVyKTsKICAgIGZ1bmN0aW9uIENvbmZpcm1hdGlvbkVycm9yKG1lc3NhZ2UsIGlzQ29uZmlybWF0aW9uLCB0eXBlKSB7CiAgICAgICAgaWYgKHR5cGUgPT09IHZvaWQgMCkgeyB0eXBlID0gQ29uZmlybWF0aW9uUG9zaXRvbi5Cb3R0b21DZW50ZXI7IH0KICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzLCBtZXNzYWdlKSB8fCB0aGlzOwogICAgICAgIF90aGlzLmlzQ29uZmlybWF0aW9uID0gdHJ1ZTsKICAgICAgICBfdGhpcy50eXBlID0gdHlwZTsKICAgICAgICByZXR1cm4gX3RoaXM7CiAgICB9CiAgICBDb25maXJtYXRpb25FcnJvci5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMubWVzc2FnZTsKICAgIH07CiAgICByZXR1cm4gQ29uZmlybWF0aW9uRXJyb3I7Cn0oRXJyb3IpKTsKZXhwb3J0IHsgQ29uZmlybWF0aW9uRXJyb3IgfTsKZXhwb3J0IHZhciBUT0FTVF9TRVQgPSAoX2EgPSBjcmVhdGUoJ1RPQVNUX1NFVCcsICh7CiAgICBzdGFydDogZnVuY3Rpb24gKHN0YXRlLCBtZXRhKSB7CiAgICAgICAgcmV0dXJuIHVwZGF0ZShzdGF0ZSwgeyB0b2FzdDogeyAkc2V0OiBtZXRhIH0gfSk7CiAgICB9LAp9KSksIF9hLnR5cGUpLCB0b2FzdFNldCA9IF9hLmFjdGlvbiwgdG9hc3RTZXRSZWR1Y2VyID0gX2EucmVkdWNlcjsKZXhwb3J0IGRlZmF1bHQgWwogICAgdG9hc3RTZXRSZWR1Y2VyLApdOwo="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/toasts.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/toasts.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,gBAAgB,CAAC;AACxC,OAAO,MAAM,MAAM,qBAAqB,CAAC;AAGzC,MAAM,CAAN,IAAY,mBAGX;AAHD,WAAY,mBAAmB;IAC7B,qDAA8B,CAAA;IAC9B,+CAAwB,CAAA;AAC1B,CAAC,EAHW,mBAAmB,KAAnB,mBAAmB,QAG9B;AAED;IAAuC,qCAAK;IAK1C,2BACE,OAAe,EACf,cAAuB,EACvB,IAA+C;QAA/C,qBAAA,EAAA,OAAe,mBAAmB,CAAC,YAAY;QAHjD,YAKE,kBAAM,OAAO,CAAC,SAGf;QAFC,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC3B,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;;IACnB,CAAC;IAED,oCAAQ,GAAR;QACE,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IACH,wBAAC;AAAD,CAAC,AAlBD,CAAuC,KAAK,GAkB3C;;AAED,MAAM,CACJ,IAAA;;;;aAAe,EACf,oBAAgB,EAChB,4BAAwB,CAItB;AAEJ,eAAe;IACb,eAAe;CAChB,CAAC","sourcesContent":["import { create } from '@src/lib/redux';\nimport update from 'immutability-helper';\nimport { Hotkey } from '@src/lib/hotkeys';\n\nexport enum ConfirmationPositon {\n  BottomCenter = 'bottom-center',\n  TopCenter = 'top-center',\n}\n\nexport class ConfirmationError extends Error {\n  isConfirmation: boolean;\n  type?: string;\n  hotkey?: Hotkey;\n\n  constructor(\n    message: string,\n    isConfirmation: boolean,\n    type: string = ConfirmationPositon.BottomCenter,\n  ) {\n    super(message);\n    this.isConfirmation = true;\n    this.type = type;\n  }\n\n  toString() {\n    return this.message;\n  }\n}\n\nexport const {\n  type: TOAST_SET,\n  action: toastSet,\n  reducer: toastSetReducer,\n} = create<Error|null, null>('TOAST_SET', ({\n  start: (state, meta) =>\n    update(state, { toast: { $set: meta } }),\n}));\n\nexport default [\n  toastSetReducer,\n];\n"]}]}