{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/MessageTemplates/index.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/MessageTemplates/index.tsx","mtime":1675280254083},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4JzsKaW1wb3J0IE1lc3NhZ2VUZW1wbGF0ZXMgZnJvbSAnLi9NZXNzYWdlVGVtcGxhdGVzJzsKaW1wb3J0IHsgc2VsZWN0TWFpbGJveENvdW50cyB9IGZyb20gJ0BzcmMvZHVja3MvbWFpbENvdW50cyc7CmltcG9ydCB7IHNlbGVjdEFjY291bnRzIH0gZnJvbSAnQHNyYy9kdWNrcy9hY2NvdW50cyc7CmltcG9ydCB7IHJpZ2h0U2lkZWJhckNvbGxhcHNlIH0gZnJvbSAnQHNyYy9kdWNrcy9yaWdodFNpZGViYXInOwppbXBvcnQgeyBQYWdlIH0gZnJvbSAnQHNyYy90eXBlcy9yaWdodFNpZGViYXInOwppbXBvcnQgeyBvbmJvYXJkaW5nUGF0Y2ggfSBmcm9tICdAc3JjL2R1Y2tzL21lJzsKdmFyIG1hcFN0YXRlVG9Qcm9wcyA9IGZ1bmN0aW9uIChzdGF0ZSkgeyByZXR1cm4gKHsKICAgIHByZWZlcmVuY2VzOiBzdGF0ZS5wcmVmZXJlbmNlcywKICAgIG1lOiBzdGF0ZS5tZSA/IHN0YXRlLm1lLmRhdGEgOiB1bmRlZmluZWQsCiAgICBhY2NvdW50czogc2VsZWN0QWNjb3VudHMoc3RhdGUpLAogICAgc2VsZWN0ZWRNYWlsYm94OiBzdGF0ZS5tYWlsYm94LAogICAgbWFpbENvdW50OiBzZWxlY3RNYWlsYm94Q291bnRzKHN0YXRlKSwKICAgIGxlZnRTaWRlYmFyQ291bnQ6IHN0YXRlLnByZWZlcmVuY2VzLmxlZnRTaWRlYmFyQ291bnQsCiAgICByaWdodFNpZGViYXJUYWI6IHN0YXRlLnJpZ2h0U2lkZWJhci50YWIsCiAgICBmZWF0dXJlczogc3RhdGUuZmVhdHVyZXMsCiAgICBvbmJvYXJkaW5nOiBzdGF0ZS5vbmJvYXJkaW5nLAp9KTsgfTsKdmFyIG1hcERpc3BhdGNoVG9Qcm9wcyA9IGZ1bmN0aW9uIChkaXNwYXRjaCkgeyByZXR1cm4gKHsKICAgIGNvbGxhcHNlUmlnaHRTaWRlYmFyOiBmdW5jdGlvbiAoY29sbGFwc2VkKSB7IHJldHVybiBkaXNwYXRjaChyaWdodFNpZGViYXJDb2xsYXBzZSh7CiAgICAgICAgY29sbGFwc2VkOiBjb2xsYXBzZWQsCiAgICAgICAgcGFnZTogUGFnZS5TZXR0aW5ncywKICAgIH0pKTsgfSwKICAgIGRpc3BhdGNoQWN0aW9uOiBmdW5jdGlvbiAoYWN0aW9uKSB7IHJldHVybiBkaXNwYXRjaChhY3Rpb24pOyB9LAogICAgdXBkYXRlT25ib2FyZGluZzogZnVuY3Rpb24gKG1ldGEpIHsgcmV0dXJuIGRpc3BhdGNoKG9uYm9hcmRpbmdQYXRjaChtZXRhKSk7IH0sCn0pOyB9OwpleHBvcnQgZGVmYXVsdCBjb25uZWN0KG1hcFN0YXRlVG9Qcm9wcywgbWFwRGlzcGF0Y2hUb1Byb3BzKShNZXNzYWdlVGVtcGxhdGVzKTsK"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/MessageTemplates/index.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/MessageTemplates/index.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAY,MAAM,aAAa,CAAC;AAGhD,OAAO,gBAA+C,MAAM,oBAAoB,CAAC;AAEjF,OAAO,EAAE,mBAAmB,EAAE,MAAM,uBAAuB,CAAC;AAC5D,OAAO,EAAE,cAAc,EAAE,MAAM,qBAAqB,CAAC;AACrD,OAAO,EAAE,oBAAoB,EAAE,MAAM,yBAAyB,CAAC;AAC/D,OAAO,EAAE,IAAI,EAAE,MAAM,yBAAyB,CAAC;AAC/C,OAAO,EAAE,eAAe,EAAE,MAAM,eAAe,CAAC;AAEhD,IAAM,eAAe,GAAG,UAAC,KAAiB,IAAiB,OAAA,CAAC;IAC1D,WAAW,EAAE,KAAK,CAAC,WAAW;IAC9B,EAAE,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS;IACxC,QAAQ,EAAE,cAAc,CAAC,KAAK,CAAC;IAC/B,eAAe,EAAE,KAAK,CAAC,OAAO;IAC9B,SAAS,EAAE,mBAAmB,CAAC,KAAK,CAAC;IACrC,gBAAgB,EAAE,KAAK,CAAC,WAAW,CAAC,gBAAgB;IACpD,eAAe,EAAE,KAAK,CAAC,YAAY,CAAC,GAAG;IACvC,QAAQ,EAAE,KAAK,CAAC,QAAQ;IACxB,UAAU,EAAE,KAAK,CAAC,UAAU;CAC7B,CAAC,EAVyD,CAUzD,CAAC;AAEH,IAAM,kBAAkB,GAAG,UAAC,QAAuB,IAAoB,OAAA,CAAC;IACtE,oBAAoB,EAAE,UAAC,SAAkB,IAAK,OAAA,QAAQ,CAAC,oBAAoB,CAAC;QAC1E,SAAS,WAAA;QACT,IAAI,EAAE,IAAI,CAAC,QAAQ;KACpB,CAAC,CAAC,EAH2C,CAG3C;IACH,cAAc,EAAE,UAAA,MAAM,IAAI,OAAA,QAAQ,CAAC,MAAM,CAAC,EAAhB,CAAgB;IAC1C,gBAAgB,EAAE,UAAA,IAAI,IAAI,OAAA,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,EAA/B,CAA+B;CAC1D,CAAC,EAPqE,CAOrE,CAAC;AAEH,eAAe,OAAO,CACpB,eAAe,EACf,kBAAkB,CACnB,CAAC,gBAAgB,CAAC,CAAC","sourcesContent":["import { connect, Dispatch } from 'react-redux';\nimport { StoreState } from '@src/types';\n\nimport MessageTemplates, { DispatchProps, StateProps } from './MessageTemplates';\n\nimport { selectMailboxCounts } from '@src/ducks/mailCounts';\nimport { selectAccounts } from '@src/ducks/accounts';\nimport { rightSidebarCollapse } from '@src/ducks/rightSidebar';\nimport { Page } from '@src/types/rightSidebar';\nimport { onboardingPatch } from '@src/ducks/me';\n\nconst mapStateToProps = (state: StoreState): StateProps => ({\n  preferences: state.preferences,\n  me: state.me ? state.me.data : undefined,\n  accounts: selectAccounts(state),\n  selectedMailbox: state.mailbox,\n  mailCount: selectMailboxCounts(state),\n  leftSidebarCount: state.preferences.leftSidebarCount,\n  rightSidebarTab: state.rightSidebar.tab,\n  features: state.features,\n  onboarding: state.onboarding,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>): DispatchProps => ({\n  collapseRightSidebar: (collapsed: boolean) => dispatch(rightSidebarCollapse({\n    collapsed,\n    page: Page.Settings,\n  })),\n  dispatchAction: action => dispatch(action),\n  updateOnboarding: meta => dispatch(onboardingPatch(meta)),\n});\n\nexport default connect<StateProps, DispatchProps, {}>(\n  mapStateToProps,\n  mapDispatchToProps,\n)(MessageTemplates);\n"]}]}