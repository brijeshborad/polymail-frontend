{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/rx.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/rx.ts","mtime":1675280254068},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkgewogICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBmdW5jdGlvbiAoZCwgYikgewogICAgICAgIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwKICAgICAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fAogICAgICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChiLmhhc093blByb3BlcnR5KHApKSBkW3BdID0gYltwXTsgfTsKICAgICAgICByZXR1cm4gZXh0ZW5kU3RhdGljcyhkLCBiKTsKICAgIH07CiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHsKICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpOwogICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfQogICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTsKICAgIH07Cn0pKCk7CmltcG9ydCB7IFN1YmplY3QsIE9ic2VydmFibGUgfSBmcm9tICdyeGpzJzsKdmFyIENvbWJpbmVyID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikgewogICAgX19leHRlbmRzKENvbWJpbmVyLCBfc3VwZXIpOwogICAgZnVuY3Rpb24gQ29tYmluZXIoKSB7CiAgICAgICAgcmV0dXJuIF9zdXBlciAhPT0gbnVsbCAmJiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzOwogICAgfQogICAgQ29tYmluZXIucHJvdG90eXBlLnJ1biA9IGZ1bmN0aW9uIChvYnNlcnZhYmxlKSB7CiAgICAgICAgdmFyIF90aGlzID0gdGhpczsKICAgICAgICBvYnNlcnZhYmxlLnN1YnNjcmliZShmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgICBfdGhpcy5uZXh0KGl0ZW0pOwogICAgICAgIH0sIGZ1bmN0aW9uIChlKSB7CiAgICAgICAgICAgIF90aGlzLmVycm9yKGUpOwogICAgICAgIH0pOwogICAgfTsKICAgIHJldHVybiBDb21iaW5lcjsKfShTdWJqZWN0KSk7CmV4cG9ydCB7IENvbWJpbmVyIH07Ci8qKgogKiByYXRlTGltaXRlciByZXR1cm5zIGEgY2xvc3VyZSB0aGF0IHJhdGVsaW1pdHMgY29sZCBvYnNlcnZhYmxlcy4KICogTm90ZTogVGhlIGxpbWl0ZXIgc2hvdWxkIG5vdCBiZSBjYWxsZWQgYWdhaW4gYmVmb3JlIHRoZSBmaXJzdAogKiBvYnNlcnZhYmxlIGZpbmlzaGVzLCBvdGhlcndpc2UgdGhpcyByYXRlbGltaXRlciB3aWxsIG5vdCB3b3JrLgogKgogKiBVc2FnZToKICogICAgY29uc3QgbGltaXRlciA9IHJhdGVMaW1pdGVyKDEwKQogKiAgICByYXRlbGltaXRlZE9ic2VydmFibGUgPSBsaW1pdGVyKG9ic2VydmFibGUpCiAqLwpleHBvcnQgZnVuY3Rpb24gcmF0ZUxpbWl0ZXIoaW50ZXJ2YWwpIHsKICAgIHZhciBsYXN0UmFuOwogICAgcmV0dXJuIGZ1bmN0aW9uIChvKSB7CiAgICAgICAgdmFyIGQgPSAwOwogICAgICAgIGlmIChsYXN0UmFuICE9PSB1bmRlZmluZWQpIHsKICAgICAgICAgICAgdmFyIHNpbmNlID0gbmV3IERhdGUoKS5nZXRUaW1lKCkgLSBsYXN0UmFuLmdldFRpbWUoKTsKICAgICAgICAgICAgaWYgKHNpbmNlIDwgaW50ZXJ2YWwpIHsKICAgICAgICAgICAgICAgIGQgPSBpbnRlcnZhbCAtIHNpbmNlOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIHJldHVybiBPYnNlcnZhYmxlLm9mKG51bGwpCiAgICAgICAgICAgIC5kZWxheShkKQogICAgICAgICAgICAuZmxhdE1hcChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIGxhc3RSYW4gPSBuZXcgRGF0ZSgpOwogICAgICAgICAgICByZXR1cm4gbzsKICAgICAgICB9KTsKICAgIH07Cn0K"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/rx.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/rx.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,MAAM,MAAM,CAAC;AAE3C;IAAiC,4BAAU;IAA3C;;IAWA,CAAC;IAVC,sBAAG,GAAH,UAAI,UAAyB;QAA7B,iBASC;QARC,UAAU,CAAC,SAAS,CAClB,UAAC,IAAO;YACN,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClB,CAAC,EACD,UAAC,CAAQ;YACP,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAChB,CAAC,CACF,CAAC;IACJ,CAAC;IACH,eAAC;AAAD,CAAC,AAXD,CAAiC,OAAO,GAWvC;;AAID;;;;;;;;GAQG;AACH,MAAM,UAAU,WAAW,CAAI,QAAgB;IAC7C,IAAI,OAAyB,CAAC;IAC9B,OAAO,UAAC,CAAgB;QACtB,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,IAAI,OAAO,KAAK,SAAS,EAAE;YACzB,IAAM,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC;YACvD,IAAI,KAAK,GAAG,QAAQ,EAAE;gBACpB,CAAC,GAAG,QAAQ,GAAG,KAAK,CAAC;aACtB;SACF;QACD,OAAO,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC;aACvB,KAAK,CAAC,CAAC,CAAC;aACR,OAAO,CAAC;YACP,OAAO,GAAG,IAAI,IAAI,EAAE,CAAC;YACrB,OAAO,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;IACP,CAAC,CAAC;AACJ,CAAC","sourcesContent":["import { Subject, Observable } from 'rxjs';\n\nexport class Combiner<T> extends Subject<T> {\n  run(observable: Observable<T>) {\n    observable.subscribe(\n      (item: T) => {\n        this.next(item);\n      },\n      (e: Error) => {\n        this.error(e);\n      },\n    );\n  }\n}\n\nexport type rateLimiterFunc<T> = (obs: Observable<T>) => Observable<T>;\n\n/**\n * rateLimiter returns a closure that ratelimits cold observables.\n * Note: The limiter should not be called again before the first\n * observable finishes, otherwise this ratelimiter will not work.\n *\n * Usage:\n *    const limiter = rateLimiter(10)\n *    ratelimitedObservable = limiter(observable)\n */\nexport function rateLimiter<T>(interval: number): rateLimiterFunc<T> {\n  let lastRan: Date | undefined;\n  return (o: Observable<T>): Observable<T> => {\n    let d = 0;\n    if (lastRan !== undefined) {\n      const since = new Date().getTime() - lastRan.getTime();\n      if (since < interval) {\n        d = interval - since;\n      }\n    }\n    return Observable.of(null)\n      .delay(d)\n      .flatMap(() => {\n        lastRan = new Date();\n        return o;\n      });\n  };\n}\n"]}]}