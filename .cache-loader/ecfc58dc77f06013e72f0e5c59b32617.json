{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Sequences/routes/SequenceStageDetail/SequenceStageRecipientsList/SequenceStageRecipientsList.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Sequences/routes/SequenceStageDetail/SequenceStageRecipientsList/SequenceStageRecipientsList.tsx","mtime":1675280254092},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Sequences/routes/SequenceStageDetail/SequenceStageRecipientsList/SequenceStageRecipientsList.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Sequences/routes/SequenceStageDetail/SequenceStageRecipientsList/SequenceStageRecipientsList.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport moment from 'moment';\nimport ReactDataGrid from 'react-data-grid';\nimport { Resource } from '@src/types';\nimport {\n  SequenceStageRecipient,\n  SequenceStage,\n  SequenceRecipientStatus,\n  SequenceRecipientsState,\n  SequenceStageRecipientFilter,\n  SequenceStageRecipientSort,\n} from '@src/types/sequences';\n\nimport SearchInput from '@src/components/Form/SearchInput/SearchInput';\nimport { cloneDeep, values, findIndex, capitalize, debounce } from 'lodash';\nimport RecipientNameCell from '@src/components/Cells/RecipientNameCell/RecipientNameCell';\nimport RecipientPausedCell from '@src/components/Cells/RecipientPausedCell/RecipientPausedCell';\nimport RecipientRepliedCell from '@src/components/Cells/RecipientRepliedCell/RecipientRepliedCell';\n\nimport './SequenceStageRecipientsList.scss';\nimport {\n  SequenceRecipientDeleteMeta,\n} from '@src/ducks/sequenceRecipients';\nimport Dropdown from '@src/components/Form/Dropdown';\nimport RecipientStatusCell from '@src/components/Cells/RecipientStatusCell/RecipientStatusCell';\nimport Confirm, { Props as ConfirmProps } from '@src/components/Base/Confirm';\nimport { SequenceStageRecipientMeta } from '@src/ducks/sequenceStageRecipients';\nimport { RouteComponentProps } from 'react-router';\n\nexport interface RecipientCount {\n  sent: number;\n  scheduled: number;\n  paused: number;\n  bounced: number;\n}\n\nexport interface StateProps {\n  stageRecipients?: Resource<SequenceStageRecipient[]>;\n  recipientsState?: SequenceRecipientsState;\n}\n\nexport interface DispatchProps {\n  updateRecipient: (recipient: SequenceStageRecipient) => void;\n  deleteRecipient: (recipient: SequenceRecipientDeleteMeta) => void;\n  listRecipients: (meta: SequenceStageRecipientMeta) => void;\n}\n\nexport interface Props {\n  stage: SequenceStage;\n  recipientCounts: RecipientCount;\n}\n\nexport interface Row {\n  activeProps: {\n    recipientId: string;\n    active: boolean | null,\n    onPauseToggle: (id: string) => void,\n  };\n  name: { email: string, fullName: string };\n  opens: number | string;\n  clicks: number | string;\n  downloads: number | string;\n  replied: boolean;\n  status: string;\n  isSelected: boolean;\n  index: number;\n}\n\nconst EMPTY_TEXT = {\n  [SequenceStageRecipientFilter.Sent]: 'No recipients have been sent a message this stage yet.',\n  [SequenceStageRecipientFilter.Scheduled]:\n    'No recipients are scheduled to receive this stage yet.',\n  [SequenceStageRecipientFilter.Paused]: 'No recipients are paused in this stage.',\n  [SequenceStageRecipientFilter.Bounced]: 'No recipients have bounced in this stage.',\n  [SequenceStageRecipientFilter.Delivered]:\n    'No recipients have been delivered a message on this stage yet.',\n  [SequenceStageRecipientFilter.Opened]: 'No recipients have opened a message on this stage yet.',\n  [SequenceStageRecipientFilter.Clicked]:\n    'No recipients have clicked on a link in a message on this stage yet.',\n  [SequenceStageRecipientFilter.Downloaded]:\n    'No recipients have downloaded any attachments on this stage yet.',\n  [SequenceStageRecipientFilter.Replied]:\n    'No recipients have replied to a message on this stage yet.',\n  [SequenceStageRecipientFilter.Unsubscribed]: 'No recipients have unsubscribed on this stage.',\n};\n\ninterface State {\n  rows: Row[];\n  counts: { [filter: string]: number };\n  confirmProps?: ConfirmProps;\n}\n\nconst columns = [\n  {\n    key: 'activeProps',\n    name: 'Active',\n    width: 60,\n    resizable: false,\n    sortable: true,\n    formatter: RecipientPausedCell,\n  },\n  {\n    key: 'name',\n    name: 'Recipient',\n    resizable: true,\n    width: 200,\n    sortable: true,\n    formatter: RecipientNameCell,\n  },\n  {\n    key: 'sent',\n    name: 'Sent',\n    width: 150,\n    resizeable: true,\n    sortable: true,\n  },\n  {\n    key: 'willSend',\n    name: 'Will Send',\n    width: 150,\n    resizeable: true,\n    sortable: true,\n  },\n  {\n    key: 'opens',\n    name: 'Opens',\n    cellClass: 'opens',\n    resizable: true,\n    sortable: true,\n  },\n  {\n    key: 'clicks',\n    name: 'Clicks',\n    cellClass: 'clicks',\n    resizable: true,\n    sortable: true,\n  },\n  {\n    key: 'downloads',\n    name: 'Downloads',\n    cellClass: 'download',\n    resizable: true,\n    sortable: true,\n  },\n  {\n    key: 'replied',\n    name: 'Replied',\n    resizable: true,\n    sortable: true,\n    formatter: RecipientRepliedCell,\n  },\n  {\n    key: 'status',\n    name: 'Status',\n    resizable: true,\n    sortable: true,\n    formatter: RecipientStatusCell,\n  },\n];\n\nclass SequenceRecipientsList extends React.PureComponent<\n  StateProps & DispatchProps & Props & RouteComponentProps<any>, State\n> {\n  listRecipientsDebounce: any;\n\n  constructor(props: StateProps & DispatchProps & Props & RouteComponentProps<any>) {\n    super();\n\n    const counts = this.getCounts(props.stage, props.recipientCounts);\n\n    this.listRecipientsDebounce = debounce(props.listRecipients, 200);\n    this.state = {\n      rows: this.createRows(props.stageRecipients),\n      counts,\n    };\n  }\n\n  UNSAFE_componentWillReceiveProps(\n    nextProps: StateProps & DispatchProps & Props & RouteComponentProps<any>,\n  ) {\n    if (nextProps.stageRecipients !== this.props.stageRecipients) {\n      this.setState({\n        rows: this.createRows(nextProps.stageRecipients),\n        counts: this.getCounts(nextProps.stage, nextProps.recipientCounts),\n      });\n    }\n  }\n\n  getCounts = (stage: SequenceStage, recipientCounts: RecipientCount) => {\n    if (!stage) {\n      return {\n        [SequenceStageRecipientFilter.Scheduled]: 0,\n        [SequenceStageRecipientFilter.Sent]: 0,\n        [SequenceStageRecipientFilter.Paused]: 0,\n        [SequenceStageRecipientFilter.Bounced]: 0,\n        [SequenceStageRecipientFilter.Delivered]: 0,\n        [SequenceStageRecipientFilter.Opened]: 0,\n        [SequenceStageRecipientFilter.Clicked]: 0,\n        [SequenceStageRecipientFilter.Downloaded]: 0,\n        [SequenceStageRecipientFilter.Replied]: 0,\n        [SequenceStageRecipientFilter.Unsubscribed]: 0,\n      };\n    }\n\n    return {\n      [SequenceStageRecipientFilter.Scheduled]: stage.recipients.scheduled,\n      [SequenceStageRecipientFilter.Sent]: recipientCounts.sent,\n      [SequenceStageRecipientFilter.Paused]: recipientCounts.paused,\n      [SequenceStageRecipientFilter.Bounced]: recipientCounts.bounced,\n      [SequenceStageRecipientFilter.Delivered]: stage.analytics.delivered,\n      [SequenceStageRecipientFilter.Opened]: stage.analytics.opened,\n      [SequenceStageRecipientFilter.Clicked]: stage.analytics.clicked,\n      [SequenceStageRecipientFilter.Downloaded]: stage.analytics.downloaded,\n      [SequenceStageRecipientFilter.Replied]: stage.analytics.replied,\n      [SequenceStageRecipientFilter.Unsubscribed]: stage.analytics.unsubscribed,\n    };\n  }\n\n  componentWillUnmount() {\n    if (this.listRecipientsDebounce) {\n      this.listRecipientsDebounce.cancel();\n    }\n  }\n\n  handleRecipientPauseToggle = (id: string) => {\n    const { updateRecipient, stageRecipients } = this.props;\n    const recipient = stageRecipients && stageRecipients.data &&\n      stageRecipients.data.find(r => r.id === id);\n\n    if (recipient) {\n      updateRecipient({\n        ...recipient,\n        paused: !recipient.paused,\n      });\n    }\n  }\n\n  createRows = (\n    stageRecipients?: Resource<SequenceStageRecipient[]>,\n  ): Row[] => {\n    if (!stageRecipients || !stageRecipients.data || !stageRecipients.data.length) {\n      return [];\n    }\n\n    return stageRecipients.data\n      .map((r, index) => {\n        let status = capitalize(r.status);\n        const unsubscribed = r.sequenceStatus === SequenceRecipientStatus.Unsubscribed\n          || !!r.analytics.unsubscribed;\n        if (unsubscribed) {\n          status = 'Unsub';\n        } else if (r.paused) {\n          status = 'Paused';\n        }\n\n        let willSend = '-';\n        if (r.willSend && !r.paused && !unsubscribed\n          && moment().isBefore(r.willSend)) {\n          willSend = moment(r.willSend).format('MMM D - h:mma');\n        } else if (r.willSend && !r.paused && !unsubscribed) {\n          willSend = 'Sending';\n        }\n\n        const oldRow = this.getRowForRecipient(r.id);\n\n        return {\n          activeProps: {\n            recipientId: r.id,\n            active: r.sequenceStatus === SequenceRecipientStatus.Active\n              ? !r.paused : null,\n            onPauseToggle: this.handleRecipientPauseToggle,\n          },\n          name: {\n            email: r.email,\n            fullName: r.fullName,\n          },\n          sent: r.sent && moment(r.sent).format('MMM D - h:mma'),\n          willSend,\n          opens: r.analytics.opened || '-',\n          clicks: r.analytics.clicked || '-',\n          downloads: r.analytics.downloaded || '-',\n          replied: !!r.analytics.replied,\n          status,\n          title: r.fullName,\n          isSelected: oldRow && oldRow.isSelected || false,\n          index,\n        };\n      });\n  }\n\n  handleSearch = (query: string, complete: boolean) => {\n    const { stage, recipientsState } = this.props;\n\n    if (recipientsState) {\n      this.listRecipientsDebounce({\n        stage: stage.id,\n        sequence: stage.sequence,\n        filter: recipientsState.filter,\n        sort: recipientsState.sort,\n        query,\n        desc: recipientsState.desc,\n      });\n    }\n  }\n\n  getColumns = () => {\n    const { recipientsState } = this.props;\n    const recipientFilter = recipientsState && recipientsState.filter;\n    let clonedColumns = columns.slice();\n\n    if (recipientFilter === SequenceStageRecipientFilter.Sent ||\n      recipientFilter === SequenceStageRecipientFilter.Delivered ||\n      recipientFilter === SequenceStageRecipientFilter.Opened ||\n      recipientFilter === SequenceStageRecipientFilter.Clicked ||\n      recipientFilter === SequenceStageRecipientFilter.Downloaded ||\n      recipientFilter === SequenceStageRecipientFilter.Replied ||\n      recipientFilter === SequenceStageRecipientFilter.Paused) {\n      clonedColumns = clonedColumns.filter(c => c.key !== 'willSend');\n    }\n\n    if (recipientFilter === SequenceStageRecipientFilter.Scheduled ||\n      recipientFilter === SequenceStageRecipientFilter.Paused ||\n      recipientFilter === SequenceStageRecipientFilter.Unsubscribed ||\n      recipientFilter === SequenceStageRecipientFilter.Bounced) {\n      clonedColumns = clonedColumns.filter(c => c.key !== 'sent');\n    }\n\n    return clonedColumns;\n  }\n\n  getRowAt = (index: number): object => {\n    const { recipientsState, stage } = this.props;\n    const { rows } = this.state;\n\n    if (index === rows.length - 1 && stage && recipientsState\n      && recipientsState.offset !== rows.length) {\n      this.listRecipientsDebounce({\n        filter: recipientsState.filter,\n        sequence: stage.sequence,\n        stage: stage.id,\n        sort: recipientsState.sort,\n        query: recipientsState.query,\n        offset: rows.length,\n        desc: recipientsState.desc,\n      });\n    }\n\n    return rows[index];\n  }\n\n  getRowForRecipient = (recipientId: string): Row | undefined => {\n    // Special handle case since state could be undefined when first setting rows\n    if (!this.state) {\n      return;\n    }\n\n    const { rows } = this.state;\n    const index = findIndex(\n      rows,\n      row => row.activeProps.recipientId === recipientId,\n    );\n    return rows[index];\n  }\n\n  handleRowSelect = (selected: Array<{ rowIdx: number, row: Row }>) => {\n    const { rows } = this.state;\n\n    if (selected.length) {\n      const newRows = cloneDeep(rows);\n      selected.forEach(s => newRows[s.rowIdx].isSelected = true);\n      this.setState({ rows: newRows });\n    }\n  }\n\n  handleRowDeselect = (deselected: Array<{ rowIdx: number, row: Row }>) => {\n    const { rows } = this.state;\n\n    if (deselected.length) {\n      const newRows = cloneDeep(rows);\n      deselected.forEach(s => newRows[s.rowIdx].isSelected = false);\n      this.setState({ rows: newRows });\n    }\n  }\n\n  handleCheckedDelete = () => {\n    const { deleteRecipient, stage } = this.props;\n    const { rows } = this.state;\n\n    // Grab all recipients\n    const checkedRecipients = rows\n      .filter(row => row.isSelected)\n      .map(row => ({\n        id: row.activeProps.recipientId,\n        sequence: stage.sequence,\n      }));\n\n    // Handle deletion of all checked recipients\n    const deleteHandler = () => {\n      checkedRecipients.forEach((recipient) => {\n        deleteRecipient(recipient);\n      });\n      this.setState({\n        confirmProps: undefined,\n      });\n    };\n\n    // Confirm dialogue for deleting recipients\n    if (checkedRecipients.length > 0) {\n      const title = checkedRecipients.length > 1\n        ? `Remove ${checkedRecipients.length} Recipients?`\n        : 'Remove Recipient?';\n      const recipientDescriptor = checkedRecipients.length > 1\n        ? `these recipients`\n        : 'this recipient';\n      const message = `Are you sure you want to remove ${recipientDescriptor} from this sequence?`\n        + ' Any analytics and recipients data will be lost forever';\n      const confirmProps: ConfirmProps = {\n        title,\n        message,\n        confirmCopy: 'Remove',\n        cancelCopy: 'Cancel',\n        onConfirm: () => deleteHandler(),\n        onCancel: () => this.setState({\n          confirmProps: undefined,\n        }),\n      };\n\n      // Show confirm dialogue\n      this.setState({ confirmProps });\n    }\n  }\n\n  handleCheckedPause = () => {\n    const { stage, updateRecipient, stageRecipients } = this.props;\n    const { rows } = this.state;\n\n    // Grab all recipients\n    const checkedRecipients = rows\n      .filter(row => row.isSelected && row.activeProps.active)\n      .map(row => ({\n        id: row.activeProps.recipientId,\n        sequence: stage.sequence,\n        index: row.index,\n      }));\n\n    checkedRecipients.forEach((recipient) => {\n      const stageRecipient = stageRecipients && stageRecipients.data &&\n        stageRecipients.data[recipient.index];\n      if (stageRecipient) {\n        updateRecipient({\n          ...stageRecipient,\n          paused: true,\n        });\n      }\n    });\n  }\n\n  handleCheckedUnpause = () => {\n    const { stage, updateRecipient, stageRecipients } = this.props;\n    const { rows } = this.state;\n\n    // Grab all recipients\n    const checkedRecipients = rows\n      .filter(row => row.isSelected && !row.activeProps.active)\n      .map(row => ({\n        id: row.activeProps.recipientId,\n        sequence: stage.sequence,\n        index: row.index,\n      }));\n\n    checkedRecipients.forEach((recipient) => {\n      const stageRecipient = stageRecipients && stageRecipients.data &&\n        stageRecipients.data[recipient.index];\n      if (stageRecipient) {\n        updateRecipient({\n          ...stageRecipient,\n          paused: false,\n        });\n      }\n    });\n  }\n\n  handleGridSort = (col: string, sortBy: string) => {\n    const { recipientsState, stage } = this.props;\n    const mapping = {\n      activeProps: SequenceStageRecipientSort.Paused,\n      sent: SequenceStageRecipientSort.Sent,\n      willSend: SequenceStageRecipientSort.Scheduled,\n      opens: SequenceStageRecipientSort.Opened,\n      clicks: SequenceStageRecipientSort.Clicked,\n      downloads: SequenceStageRecipientSort.Downloaded,\n      replied: SequenceStageRecipientSort.Replied,\n      status: SequenceStageRecipientSort.Status,\n    };\n\n    if (recipientsState) {\n      this.listRecipientsDebounce({\n        query: recipientsState.query,\n        sequence: stage.sequence,\n        stage: stage.id,\n        filter: recipientsState.filter,\n        sort: mapping[col],\n        desc: sortBy === 'DESC',\n      });\n    }\n  }\n\n  handleFilterSelect = (value: string, index: number, id?: string) => {\n    const { stage, recipientsState } = this.props;\n\n    if (recipientsState) {\n      this.listRecipientsDebounce({\n        stage: stage.id,\n        sequence: stage.sequence,\n        filter: value.slice(0, value.indexOf('(') - 1).toLowerCase(),\n        sort: recipientsState.sort,\n        query: recipientsState.query,\n        desc: recipientsState.desc,\n      });\n    }\n  }\n\n  render() {\n    const { recipientsState } = this.props;\n    const { rows, counts, confirmProps } = this.state;\n    const numChecked = rows.filter(row => row.isSelected).length;\n\n    if (!recipientsState) {\n      return <div />;\n    }\n\n    return (\n      <div className=\"sequence-stage-recipients-list\">\n        {confirmProps &&\n          <Confirm\n            {...confirmProps}\n          />\n        }\n        <div className=\"header\">\n          <div className=\"filter\">\n            <Dropdown\n              values={values(SequenceStageRecipientFilter)\n                .map(d => `${capitalize(d)} (${counts[d]})`)}\n              onSelect={this.handleFilterSelect}\n              startIndex={values(SequenceStageRecipientFilter)\n                // TODO: Need to fix how filters are used in Sequences UI\n                .indexOf(recipientsState.filter as any)}\n              value={`${capitalize(recipientsState.filter)} (${counts[recipientsState.filter]})`}\n            />\n          </div>\n          {!!numChecked && <div className=\"action-bar\">\n            <span className=\"selected-num\">\n              {`${numChecked} selected`}\n            </span>\n            <button className=\"pause\" onClick={this.handleCheckedPause}>Pause</button>\n            <button className=\"unpause\" onClick={this.handleCheckedUnpause}>Activate</button>\n            <button className=\"delete\" onClick={this.handleCheckedDelete}>Delete</button>\n          </div>}\n          <div className=\"search\">\n            <SearchInput\n              onSearch={this.handleSearch}\n              placeholder=\"Search recipients\"\n              defaultValue=\"\"\n            />\n          </div>\n        </div>\n        <div className=\"table\">\n          {rows && !!rows.length && <ReactDataGrid\n            enableCellSelect={true}\n            columns={this.getColumns()}\n            rowGetter={this.getRowAt}\n            rowsCount={rows.length}\n            enableRowSelect={true}\n            rowHeight={60}\n            minHeight={60 * 11}\n            rowScrollTimeout={200}\n            rowSelection={{\n              selectBy: { isSelectedKey: 'isSelected' },\n              showCheckbox: true,\n              onRowsSelected: this.handleRowSelect,\n              onRowsDeselected: this.handleRowDeselect,\n            }}\n            onGridSort={this.handleGridSort}\n          />}\n          {rows && !rows.length && <div className=\"empty\">\n            <span>{EMPTY_TEXT[recipientsState.filter]}</span>\n          </div>}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SequenceRecipientsList;\n"]}]}