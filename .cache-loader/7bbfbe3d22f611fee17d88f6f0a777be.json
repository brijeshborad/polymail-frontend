{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/Form/ContactInput/ContactInput.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/Form/ContactInput/ContactInput.tsx","mtime":1675280254005},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkgewogICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBmdW5jdGlvbiAoZCwgYikgewogICAgICAgIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwKICAgICAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fAogICAgICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChiLmhhc093blByb3BlcnR5KHApKSBkW3BdID0gYltwXTsgfTsKICAgICAgICByZXR1cm4gZXh0ZW5kU3RhdGljcyhkLCBiKTsKICAgIH07CiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHsKICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpOwogICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfQogICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTsKICAgIH07Cn0pKCk7CmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7CmltcG9ydCB7IEtleUNvZGUgfSBmcm9tICdAc3JjL3R5cGVzJzsKaW1wb3J0IENvbnRhY3RUeXBlYWhlYWRQb3BvdmVyIGZyb20gJy4uL1JlY2lwaWVudHNFZGl0b3IvY29tcG9uZW50cy9Db250YWN0VHlwZWFoZWFkUG9wb3Zlcic7CmltcG9ydCAnLi9Db250YWN0SW5wdXQuc2Nzcyc7CmltcG9ydCB7IGFkZHJlc3NUb0VtYWlsIH0gZnJvbSAnQHNyYy9saWIvYWRkcmVzcyc7CnZhciBDb250YWN0SW5wdXQgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7CiAgICBfX2V4dGVuZHMoQ29udGFjdElucHV0LCBfc3VwZXIpOwogICAgZnVuY3Rpb24gQ29udGFjdElucHV0KHByb3BzKSB7CiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcywgcHJvcHMpIHx8IHRoaXM7CiAgICAgICAgX3RoaXMuZ2V0VmFsaWRDb250YWN0cyA9IGZ1bmN0aW9uIChjb250YWN0cykgewogICAgICAgICAgICB2YXIgX2EgPSBfdGhpcy5wcm9wcywgbWF4TGltaXQgPSBfYS5tYXhMaW1pdCwgYmxhY2tsaXN0ID0gX2EuYmxhY2tsaXN0LCBoaWRlUG9wb3ZlcldoZW5JbmFjdGl2ZSA9IF9hLmhpZGVQb3BvdmVyV2hlbkluYWN0aXZlOwogICAgICAgICAgICB2YXIgaXNBY3RpdmUgPSBfdGhpcy5zdGF0ZS5pc0FjdGl2ZTsKICAgICAgICAgICAgLy8gRG8gbm90IHByb2Nlc3Mgd2hlbiBpbmFjdGl2ZQogICAgICAgICAgICBpZiAoIWlzQWN0aXZlICYmIGhpZGVQb3BvdmVyV2hlbkluYWN0aXZlKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gW107CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdmFyIHZhbGlkQ29udGFjdHMgPSBjb250YWN0cy5maWx0ZXIoZnVuY3Rpb24gKGMpIHsgcmV0dXJuIGMudXNlciAhPT0gdW5kZWZpbmVkOyB9KTsKICAgICAgICAgICAgdmFsaWRDb250YWN0cyA9IG1heExpbWl0CiAgICAgICAgICAgICAgICA/IHZhbGlkQ29udGFjdHMuc2xpY2UoMCwgTWF0aC5tYXgodmFsaWRDb250YWN0cy5sZW5ndGgsIG1heExpbWl0KSkKICAgICAgICAgICAgICAgIDogdmFsaWRDb250YWN0czsKICAgICAgICAgICAgLy8gUmVtb3ZlcyBzdWdnZXN0aW9ucyBmb3IgYW55IGVtYWlscyB0aGF0IGFyZSBpbiB0aGUgYmxhY2tsaXN0CiAgICAgICAgICAgIGlmIChibGFja2xpc3QpIHsKICAgICAgICAgICAgICAgIHZhciBibGFja2xpc3RFbWFpbHNfMSA9IGJsYWNrbGlzdC5tYXAoZnVuY3Rpb24gKGVtYWlsKSB7IHJldHVybiBhZGRyZXNzVG9FbWFpbChlbWFpbCk7IH0pOwogICAgICAgICAgICAgICAgdmFyIGxpbWl0ZWRDb250YWN0cyA9IHZhbGlkQ29udGFjdHMuc2xpY2UoMCwgTWF0aC5tYXgodmFsaWRDb250YWN0cy5sZW5ndGgsIDgpKTsKICAgICAgICAgICAgICAgIHJldHVybiBsaW1pdGVkQ29udGFjdHMuZmlsdGVyKGZ1bmN0aW9uIChjKSB7IHJldHVybiBibGFja2xpc3RFbWFpbHNfMS5pbmRleE9mKGFkZHJlc3NUb0VtYWlsKGMuZW1haWwpKSA9PT0gLTE7IH0pOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiB2YWxpZENvbnRhY3RzOwogICAgICAgIH07CiAgICAgICAgX3RoaXMuaGFuZGxlSW5wdXRSZWYgPSBmdW5jdGlvbiAocmVmKSB7CiAgICAgICAgICAgIF90aGlzLmlucHV0ID0gcmVmOwogICAgICAgIH07CiAgICAgICAgX3RoaXMuaGFuZGxlUG9wb3ZlclJlZiA9IGZ1bmN0aW9uIChyZWYpIHsKICAgICAgICAgICAgX3RoaXMucG9wb3ZlciA9IHJlZjsKICAgICAgICB9OwogICAgICAgIF90aGlzLmhhbmRsZVZhbHVlQ2hhbmdlID0gZnVuY3Rpb24gKGUpIHsKICAgICAgICAgICAgdmFyIGNvbnRhY3RUeXBlYWhlYWQgPSBfdGhpcy5wcm9wcy5jb250YWN0VHlwZWFoZWFkOwogICAgICAgICAgICB2YXIgdmFsdWUgPSBlLmN1cnJlbnRUYXJnZXQudmFsdWU7CiAgICAgICAgICAgIGNvbnRhY3RUeXBlYWhlYWQodmFsdWUpOwogICAgICAgIH07CiAgICAgICAgX3RoaXMuaGFuZGxlS2V5RG93biA9IGZ1bmN0aW9uIChlKSB7CiAgICAgICAgICAgIHZhciBoYW5kbGVkID0gZmFsc2U7CiAgICAgICAgICAgIHZhciBfYSA9IF90aGlzLnByb3BzLCBvbktleURvd24gPSBfYS5vbktleURvd24sIG9uRW50ZXIgPSBfYS5vbkVudGVyOwogICAgICAgICAgICB2YXIgcG9wb3ZlclNob3duID0gX3RoaXMuc3RhdGUucG9wb3ZlclNob3duOwogICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IGlzQWN0aXZlOiB0cnVlIH0pOwogICAgICAgICAgICBzd2l0Y2ggKGUua2V5Q29kZSkgewogICAgICAgICAgICAgICAgY2FzZSBLZXlDb2RlLlVwOgogICAgICAgICAgICAgICAgICAgIGlmIChwb3BvdmVyU2hvd24gJiYgX3RoaXMucG9wb3ZlcikgewogICAgICAgICAgICAgICAgICAgICAgICBfdGhpcy5wb3BvdmVyLm9uVXBBcnJvdygpOwogICAgICAgICAgICAgICAgICAgICAgICBoYW5kbGVkID0gdHJ1ZTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICBjYXNlIEtleUNvZGUuRG93bjoKICAgICAgICAgICAgICAgICAgICBpZiAocG9wb3ZlclNob3duICYmIF90aGlzLnBvcG92ZXIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMucG9wb3Zlci5vbkRvd25BcnJvdygpOwogICAgICAgICAgICAgICAgICAgICAgICBoYW5kbGVkID0gdHJ1ZTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICBjYXNlIEtleUNvZGUuRW50ZXI6CiAgICAgICAgICAgICAgICAgICAgaWYgKHBvcG92ZXJTaG93biAmJiBfdGhpcy5wb3BvdmVyKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIF90aGlzLnBvcG92ZXIub25FbnRlcigpOwogICAgICAgICAgICAgICAgICAgICAgICBoYW5kbGVkID0gdHJ1ZTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAob25FbnRlcikgewogICAgICAgICAgICAgICAgICAgICAgICBvbkVudGVyKF90aGlzLmlucHV0LnZhbHVlKTsKICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMucmVzZXQoKTsKICAgICAgICAgICAgICAgICAgICAgICAgaGFuZGxlZCA9IHRydWU7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgZGVmYXVsdDoKICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAoaGFuZGxlZCkgewogICAgICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTsKICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlIGlmIChvbktleURvd24pIHsKICAgICAgICAgICAgICAgIGUucGVyc2lzdCgpOwogICAgICAgICAgICAgICAgb25LZXlEb3duKGUpOwogICAgICAgICAgICB9CiAgICAgICAgfTsKICAgICAgICBfdGhpcy5oYW5kbGVDb250YWN0U2VsZWN0ID0gZnVuY3Rpb24gKGNvbnRhY3QpIHsKICAgICAgICAgICAgdmFyIF9hID0gX3RoaXMucHJvcHMsIG9uU2VsZWN0ID0gX2Eub25TZWxlY3QsIHJldGFpblZhbHVlcyA9IF9hLnJldGFpblZhbHVlczsKICAgICAgICAgICAgaWYgKG9uU2VsZWN0KSB7CiAgICAgICAgICAgICAgICBvblNlbGVjdChjb250YWN0KTsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAocmV0YWluVmFsdWVzKSB7CiAgICAgICAgICAgICAgICBfdGhpcy5pbnB1dC52YWx1ZSA9IGNvbnRhY3QuZW1haWw7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgX3RoaXMucmVzZXQoKTsKICAgICAgICB9OwogICAgICAgIF90aGlzLm9uUG9wb3ZlckhpZGUgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHsgcG9wb3ZlclNob3duOiBmYWxzZSwgaXNBY3RpdmU6IGZhbHNlIH0pOwogICAgICAgIH07CiAgICAgICAgX3RoaXMub25Qb3BvdmVyU2hvdyA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoeyBwb3BvdmVyU2hvd246IHRydWUgfSk7CiAgICAgICAgfTsKICAgICAgICBfdGhpcy5oYW5kbGVJbnB1dEJsdXIgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHsKICAgICAgICAgICAgICAgIGlzQWN0aXZlOiBmYWxzZSwKICAgICAgICAgICAgICAgIHBvcG92ZXJTaG93bjogX3RoaXMucHJvcHMuaGlkZVBvcG92ZXJXaGVuSW5hY3RpdmUgPyBmYWxzZSA6IF90aGlzLnN0YXRlLnBvcG92ZXJTaG93biwKICAgICAgICAgICAgfSk7CiAgICAgICAgfTsKICAgICAgICBfdGhpcy5yZXNldCA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgdmFyIF9hID0gX3RoaXMucHJvcHMsIGNsZWFyQ29udGFjdFR5cGVhaGVhZCA9IF9hLmNsZWFyQ29udGFjdFR5cGVhaGVhZCwgcmV0YWluVmFsdWVzID0gX2EucmV0YWluVmFsdWVzOwogICAgICAgICAgICBpZiAoIXJldGFpblZhbHVlcykgewogICAgICAgICAgICAgICAgX3RoaXMuaW5wdXQudmFsdWUgPSAnJzsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAoX3RoaXMucG9wb3ZlcikgewogICAgICAgICAgICAgICAgX3RoaXMucG9wb3Zlci5oaWRlKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgY2xlYXJDb250YWN0VHlwZWFoZWFkKCk7CiAgICAgICAgfTsKICAgICAgICBfdGhpcy5zdGF0ZSA9IHsKICAgICAgICAgICAgY29udGFjdHM6IFtdLAogICAgICAgICAgICBwb3BvdmVyU2hvd246IGZhbHNlLAogICAgICAgICAgICBpc0FjdGl2ZTogZmFsc2UsCiAgICAgICAgfTsKICAgICAgICByZXR1cm4gX3RoaXM7CiAgICB9CiAgICBDb250YWN0SW5wdXQucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gKCkgewogICAgICAgIGlmICh0aGlzLnN0YXRlLmNvbnRhY3RzLmxlbmd0aCAmJiB0aGlzLnBvcG92ZXIpIHsKICAgICAgICAgICAgdGhpcy5wb3BvdmVyLnNob3coKTsKICAgICAgICB9CiAgICAgICAgLy8gVXBkYXRlIHZhbGlkIGNvbnRhY3RzCiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7CiAgICAgICAgICAgIGNvbnRhY3RzOiB0aGlzLmdldFZhbGlkQ29udGFjdHModGhpcy5wcm9wcy50eXBlYWhlYWRDb250YWN0cyksCiAgICAgICAgfSk7CiAgICB9OwogICAgQ29udGFjdElucHV0LnByb3RvdHlwZS5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyA9IGZ1bmN0aW9uIChuZXh0UHJvcHMpIHsKICAgICAgICB2YXIgX3RoaXMgPSB0aGlzOwogICAgICAgIGlmIChuZXh0UHJvcHMudHlwZWFoZWFkQ29udGFjdHMgIT09IHRoaXMucHJvcHMudHlwZWFoZWFkQ29udGFjdHMpIHsKICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7CiAgICAgICAgICAgICAgICBjb250YWN0czogdGhpcy5nZXRWYWxpZENvbnRhY3RzKG5leHRQcm9wcy50eXBlYWhlYWRDb250YWN0cyksCiAgICAgICAgICAgIH0sIGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIGlmIChfdGhpcy5zdGF0ZS5jb250YWN0cy5sZW5ndGggJiYgX3RoaXMucG9wb3ZlcikgewogICAgICAgICAgICAgICAgICAgIF90aGlzLnBvcG92ZXIuc2hvdygpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgZWxzZSBpZiAoIV90aGlzLnN0YXRlLmNvbnRhY3RzLmxlbmd0aCAmJiBfdGhpcy5wb3BvdmVyKSB7CiAgICAgICAgICAgICAgICAgICAgX3RoaXMucG9wb3Zlci5oaWRlKCk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwogICAgICAgIH0KICAgIH07CiAgICBDb250YWN0SW5wdXQucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uICgpIHsKICAgICAgICB2YXIgX2EgPSB0aGlzLnByb3BzLCBwbGFjZWhvbGRlciA9IF9hLnBsYWNlaG9sZGVyLCBoaWRlUG9wb3ZlcldoZW5JbmFjdGl2ZSA9IF9hLmhpZGVQb3BvdmVyV2hlbkluYWN0aXZlOwogICAgICAgIHZhciBfYiA9IHRoaXMuc3RhdGUsIGNvbnRhY3RzID0gX2IuY29udGFjdHMsIGlzQWN0aXZlID0gX2IuaXNBY3RpdmU7CiAgICAgICAgdmFyIHNob3dQb3BvdmVyID0gIWhpZGVQb3BvdmVyV2hlbkluYWN0aXZlIHx8IGlzQWN0aXZlOwogICAgICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2IiwgeyBjbGFzc05hbWU6ICJjb250YWN0LWlucHV0IiB9LAogICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLCB7IGNsYXNzTmFtZTogImlucHV0IiB9LAogICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudCgiaW5wdXQiLCB7IGRpcjogImF1dG8iLCB0eXBlOiAidGV4dCIsIHJlZjogdGhpcy5oYW5kbGVJbnB1dFJlZiwgcGxhY2Vob2xkZXI6IHBsYWNlaG9sZGVyLCBvbkNoYW5nZTogdGhpcy5oYW5kbGVWYWx1ZUNoYW5nZSwgb25LZXlEb3duOiB0aGlzLmhhbmRsZUtleURvd24sIG9uQmx1cjogdGhpcy5oYW5kbGVJbnB1dEJsdXIsIGF1dG9Db21wbGV0ZTogIm5vbmUiIH0pKSwKICAgICAgICAgICAgc2hvd1BvcG92ZXIgJiYKICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ29udGFjdFR5cGVhaGVhZFBvcG92ZXIsIHsgcmVmOiB0aGlzLmhhbmRsZVBvcG92ZXJSZWYsIGNvbnRhY3RzOiBjb250YWN0cywgb25TZWxlY3Q6IHRoaXMuaGFuZGxlQ29udGFjdFNlbGVjdCwgb25IaWRlOiB0aGlzLm9uUG9wb3ZlckhpZGUsIG9uU2hvdzogdGhpcy5vblBvcG92ZXJTaG93IH0pKSk7CiAgICB9OwogICAgcmV0dXJuIENvbnRhY3RJbnB1dDsKfShSZWFjdC5QdXJlQ29tcG9uZW50KSk7CmV4cG9ydCBkZWZhdWx0IENvbnRhY3RJbnB1dDsK"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/Form/ContactInput/ContactInput.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/Form/ContactInput/ContactInput.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Contact, KeyCode } from '@src/types';\nimport ContactTypeaheadPopover from '../RecipientsEditor/components/ContactTypeaheadPopover';\nimport './ContactInput.scss';\nimport { addressToEmail } from '@src/lib/address';\n\nexport interface Props {\n  placeholder: string;\n  onSelect?: (contact: Contact) => void;\n  onKeyDown?: (e: React.KeyboardEvent<HTMLInputElement>) => void;\n  onEnter?: (input: string) => void;\n  maxLimit?: number;\n  blacklist?: string[];\n  hidePopoverWhenInactive?: boolean;\n  retainValues?: boolean;\n  ignoreInvitedContacts?: boolean;\n}\n\nexport interface StateProps {\n  typeaheadContacts: Contact[];\n}\n\nexport interface DispatchProps {\n  contactTypeahead: (query: string) => void;\n  clearContactTypeahead: () => void;\n}\n\ninterface State {\n  contacts: Contact[];\n  popoverShown: boolean;\n  isActive: boolean;\n}\n\nclass ContactInput extends React.PureComponent<Props & StateProps & DispatchProps, State> {\n  input: HTMLInputElement;\n  popover?: ContactTypeaheadPopover;\n\n  constructor(props: Props & StateProps & DispatchProps) {\n    super(props);\n\n    this.state = {\n      contacts: [],\n      popoverShown: false,\n      isActive: false,\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.contacts.length && this.popover) {\n      this.popover.show();\n    }\n\n    // Update valid contacts\n    this.setState({\n      contacts: this.getValidContacts(this.props.typeaheadContacts),\n    });\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props & DispatchProps & StateProps) {\n    if (nextProps.typeaheadContacts !== this.props.typeaheadContacts) {\n      this.setState(\n        {\n          contacts: this.getValidContacts(nextProps.typeaheadContacts),\n        },\n        () => {\n          if (this.state.contacts.length && this.popover) {\n            this.popover.show();\n          } else if (!this.state.contacts.length && this.popover) {\n            this.popover.hide();\n          }\n        },\n      );\n    }\n  }\n\n  getValidContacts = (contacts: Contact[]) => {\n    const { maxLimit, blacklist, hidePopoverWhenInactive } = this.props;\n    const { isActive } = this.state;\n\n    // Do not process when inactive\n    if (!isActive && hidePopoverWhenInactive) {\n      return [];\n    }\n\n    let validContacts = contacts.filter(c => c.user !== undefined);\n    validContacts = maxLimit\n      ? validContacts.slice(0, Math.max(validContacts.length, maxLimit))\n      : validContacts;\n\n    // Removes suggestions for any emails that are in the blacklist\n    if (blacklist) {\n      const blacklistEmails = blacklist.map(email => addressToEmail(email));\n      const limitedContacts = validContacts.slice(0, Math.max(validContacts.length, 8));\n      return limitedContacts.filter(c => blacklistEmails.indexOf(addressToEmail(c.email)) === -1,\n      );\n    }\n\n    return validContacts;\n  }\n\n  handleInputRef = (ref: HTMLInputElement) => {\n    this.input = ref;\n  }\n\n  handlePopoverRef = (ref: ContactTypeaheadPopover) => {\n    this.popover = ref;\n  }\n\n  handleValueChange = (e: React.SyntheticEvent<HTMLInputElement>) => {\n    const { contactTypeahead } = this.props;\n    const value = e.currentTarget.value;\n\n    contactTypeahead(value);\n  }\n\n  handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    let handled = false;\n    const { onKeyDown, onEnter } = this.props;\n    const { popoverShown } = this.state;\n\n    this.setState({ isActive: true });\n\n    switch (e.keyCode) {\n      case KeyCode.Up:\n        if (popoverShown && this.popover) {\n          this.popover.onUpArrow();\n          handled = true;\n        }\n        break;\n      case KeyCode.Down:\n        if (popoverShown && this.popover) {\n          this.popover.onDownArrow();\n          handled = true;\n        }\n        break;\n      case KeyCode.Enter:\n        if (popoverShown && this.popover) {\n          this.popover.onEnter();\n          handled = true;\n        } else if (onEnter) {\n          onEnter(this.input.value);\n          this.reset();\n          handled = true;\n        }\n        break;\n      default:\n        break;\n    }\n\n    if (handled) {\n      e.stopPropagation();\n      e.preventDefault();\n    } else if (onKeyDown) {\n      e.persist();\n      onKeyDown(e);\n    }\n  }\n\n  handleContactSelect = (contact: Contact) => {\n    const { onSelect, retainValues } = this.props;\n    if (onSelect) {\n      onSelect(contact);\n    }\n\n    if (retainValues) {\n      this.input.value = contact.email;\n    }\n\n    this.reset();\n  }\n\n  onPopoverHide = () => {\n    this.setState({ popoverShown: false, isActive: false });\n  }\n\n  onPopoverShow = () => {\n    this.setState({ popoverShown: true });\n  }\n\n  handleInputBlur = () => {\n    this.setState({\n      isActive: false,\n      popoverShown: this.props.hidePopoverWhenInactive ? false : this.state.popoverShown,\n    });\n  }\n\n  reset = () => {\n    const { clearContactTypeahead, retainValues } = this.props;\n    if (!retainValues) {\n      this.input.value = '';\n    }\n\n    if (this.popover) {\n      this.popover.hide();\n    }\n    clearContactTypeahead();\n  }\n\n  render() {\n    const {\n      placeholder,\n      hidePopoverWhenInactive,\n    } = this.props;\n    const { contacts, isActive } = this.state;\n    const showPopover = !hidePopoverWhenInactive || isActive;\n\n    return (\n      <div className=\"contact-input\">\n        <div className=\"input\">\n          <input\n            dir=\"auto\"\n            type=\"text\"\n            ref={this.handleInputRef}\n            placeholder={placeholder}\n            onChange={this.handleValueChange}\n            onKeyDown={this.handleKeyDown}\n            onBlur={this.handleInputBlur}\n            autoComplete=\"none\"\n          />\n        </div>\n        {showPopover &&\n          <ContactTypeaheadPopover\n            ref={this.handlePopoverRef}\n            contacts={contacts}\n            onSelect={this.handleContactSelect}\n            onHide={this.onPopoverHide}\n            onShow={this.onPopoverShow}\n          />\n        }\n      </div>\n    );\n  }\n}\n\nexport default ContactInput;\n"]}]}