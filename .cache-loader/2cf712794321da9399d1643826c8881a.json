{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/mocks/templates.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/mocks/templates.ts","mtime":1675280254071},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkgewogICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHsKICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHsKICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTsKICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKQogICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07CiAgICAgICAgfQogICAgICAgIHJldHVybiB0OwogICAgfTsKICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9OwppbXBvcnQgeyBUZW1wbGF0ZVR5cGUgfSBmcm9tICdAc3JjL3R5cGVzJzsKZXhwb3J0IHZhciBjcmVhdGVUZW1wbGF0ZSA9IGZ1bmN0aW9uIChsb2NrZWQsIHRlbXBsYXRlKSB7CiAgICBpZiAobG9ja2VkID09PSB2b2lkIDApIHsgbG9ja2VkID0gZmFsc2U7IH0KICAgIHZhciBuZXdUZW1wbGF0ZSA9IF9fYXNzaWduKHsgaWQ6ICdtZXNzYWdlVGVtcGxhdGUwJywgY3JlYXRlZDogbmV3IERhdGUoJzIwMTctMDktMjhUMDk6MTc6MTgtMDc6MDAnKSwgdXBkYXRlZDogbmV3IERhdGUoJzIwMTctMDktMjhUMDk6MTc6MTgtMDc6MDAnKSwgdHlwZTogVGVtcGxhdGVUeXBlLk1lc3NhZ2UsIG5hbWU6ICdDb2xkIFNhbGVzIE91dHJlYWNoJywgYm9keTogJ0hleSB7Zmlyc3QgbmFtZX0sICBJIHdhbnRlZCB0byBpbnRyb2R1Y2UgbXlzZWxmIG9uIGJlaGFsZiBvZiBBd2Vzb21lIENvbXBhbnkgaGVsbG8gaGhlbCcsIHN1YmplY3Q6ICdDb2xkIFNhbGVzIE91dHJlYWNoJywgdXNlcjogJ3VzZXIwJywgYXR0YWNobWVudHM6IFtdIH0sIHRlbXBsYXRlKTsKICAgIGlmICghbG9ja2VkKSB7CiAgICAgICAgbmV3VGVtcGxhdGUudGVhbSA9ICd0ZWFtMCc7CiAgICB9CiAgICByZXR1cm4gbmV3VGVtcGxhdGU7Cn07CmV4cG9ydCBkZWZhdWx0IHsKICAgIGNyZWF0ZVRlbXBsYXRlOiBjcmVhdGVUZW1wbGF0ZSwKfTsK"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/mocks/templates.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/mocks/templates.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,OAAO,EAAE,YAAY,EAAqB,MAAM,YAAY,CAAC;AAE7D,MAAM,CAAC,IAAM,cAAc,GAAG,UAAC,MAAc,EAAE,QAA4B;IAA5C,uBAAA,EAAA,cAAc;IAC3C,IAAM,WAAW,cACf,EAAE,EAAE,kBAAkB,EACtB,OAAO,EAAE,IAAI,IAAI,CAAC,2BAA2B,CAAC,EAC9C,OAAO,EAAE,IAAI,IAAI,CAAC,2BAA2B,CAAC,EAC9C,IAAI,EAAE,YAAY,CAAC,OAAO,EAC1B,IAAI,EAAE,qBAAqB,EAC3B,IAAI,EAAE,yFAAyF,EAC/F,OAAO,EAAE,qBAAqB,EAC9B,IAAI,EAAE,OAAO,EACb,WAAW,EAAE,EAAE,IACZ,QAAQ,CACZ,CAAC;IACF,IAAI,CAAC,MAAM,EAAE;QACX,WAAW,CAAC,IAAI,GAAG,OAAO,CAAC;KAC5B;IACD,OAAO,WAAW,CAAC;AACrB,CAAC,CAAC;AAEF,eAAe;IACb,cAAc,gBAAA;CACf,CAAC","sourcesContent":["import { TemplateType, Template, Partial } from '@src/types';\n\nexport const createTemplate = (locked = false, template?: Partial<Template>): Template => {\n  const newTemplate: Template = {\n    id: 'messageTemplate0',\n    created: new Date('2017-09-28T09:17:18-07:00'),\n    updated: new Date('2017-09-28T09:17:18-07:00'),\n    type: TemplateType.Message,\n    name: 'Cold Sales Outreach',\n    body: 'Hey {first name},  I wanted to introduce myself on behalf of Awesome Company hello hhel',\n    subject: 'Cold Sales Outreach',\n    user: 'user0',\n    attachments: [],\n    ...template,\n  };\n  if (!locked) {\n    newTemplate.team = 'team0';\n  }\n  return newTemplate;\n};\n\nexport default {\n  createTemplate,\n};\n"]}]}