{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/Cells/CommentCell/index.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/Cells/CommentCell/index.tsx","mtime":1675280253992},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4JzsKaW1wb3J0IENvbW1lbnRDZWxsIGZyb20gJy4vQ29tbWVudENlbGwnOwppbXBvcnQgeyBjb21tZW50UmVhZCB9IGZyb20gJ0BzcmMvZHVja3MvY29tbWVudHMnOwppbXBvcnQgeyBzZWxlY3RUZWFtTWVtYmVyIH0gZnJvbSAnQHNyYy9kdWNrcy90ZWFtTWVtYmVycyc7CnZhciBtYXBTdGF0ZVRvUHJvcHMgPSBmdW5jdGlvbiAoc3RhdGUsIG93blByb3BzKSB7CiAgICByZXR1cm4gewogICAgICAgIG1lbWJlcjogc2VsZWN0VGVhbU1lbWJlcihzdGF0ZSwgb3duUHJvcHMuY29tbWVudC51c2VyKSwKICAgIH07Cn07CnZhciBtYXBEaXNwYXRjaFRvUHJvcHMgPSBmdW5jdGlvbiAoZGlzcGF0Y2gpIHsgcmV0dXJuICh7CiAgICByZWFkQ29tbWVudDogZnVuY3Rpb24gKG1ldGEpIHsgcmV0dXJuIGRpc3BhdGNoKGNvbW1lbnRSZWFkKG1ldGEpKTsgfSwKfSk7IH07CmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QobWFwU3RhdGVUb1Byb3BzLCBtYXBEaXNwYXRjaFRvUHJvcHMpKENvbW1lbnRDZWxsKTsK"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/Cells/CommentCell/index.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/Cells/CommentCell/index.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAY,MAAM,aAAa,CAAC;AAGhD,OAAO,WAAiD,MAAM,eAAe,CAAC;AAC9E,OAAO,EAAE,WAAW,EAAE,MAAM,qBAAqB,CAAC;AAClD,OAAO,EAAE,gBAAgB,EAAE,MAAM,wBAAwB,CAAC;AAE1D,IAAM,eAAe,GAAG,UAAC,KAAiB,EAAE,QAAe;IACzD,OAAO;QACL,MAAM,EAAE,gBAAgB,CAAC,KAAK,EAAE,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC;KACvD,CAAC;AACJ,CAAC,CAAC;AAEF,IAAM,kBAAkB,GAAG,UAAC,QAA8B,IAAoB,OAAA,CAAC;IAC7E,WAAW,EAAE,UAAA,IAAI,IAAI,OAAA,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,EAA3B,CAA2B;CACjD,CAAC,EAF4E,CAE5E,CAAC;AAEH,eAAe,OAAO,CACpB,eAAe,EAAE,kBAAkB,CACpC,CAAC,WAAW,CAAC,CAAC","sourcesContent":["import { connect, Dispatch } from 'react-redux';\n\nimport { StoreState } from '@src/types';\nimport CommentCell, { Props, StateProps, DispatchProps } from './CommentCell';\nimport { commentRead } from '@src/ducks/comments';\nimport { selectTeamMember } from '@src/ducks/teamMembers';\n\nconst mapStateToProps = (state: StoreState, ownProps: Props): StateProps => {\n  return {\n    member: selectTeamMember(state, ownProps.comment.user),\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<StoreState>): DispatchProps => ({\n  readComment: meta => dispatch(commentRead(meta)),\n});\n\nexport default connect<StateProps, DispatchProps, Props>(\n  mapStateToProps, mapDispatchToProps,\n)(CommentCell);\n"]}]}