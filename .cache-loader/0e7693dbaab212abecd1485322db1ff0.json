{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/RightSidebar/components/ContactInfo/components/ContactInteractions/components/NotesPane/Note/index.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/RightSidebar/components/ContactInfo/components/ContactInteractions/components/NotesPane/Note/index.tsx","mtime":1675280254029},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IE5vdGUgZnJvbSAnLi9Ob3RlJzsKaW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4JzsKaW1wb3J0IHsgc2VsZWN0VGVhbU1lbWJlciB9IGZyb20gJ0BzcmMvZHVja3MvdGVhbU1lbWJlcnMnOwp2YXIgbWFwU3RhdGVUb1Byb3BzID0gZnVuY3Rpb24gKHN0YXRlLCBvd25Qcm9wcykgewogICAgdmFyIHRlYW1NZW1iZXI7CiAgICBpZiAoc3RhdGUubWUuZGF0YSAmJiBvd25Qcm9wcy5ub3RlLnVzZXIgPT09IHN0YXRlLm1lLmRhdGEuaWQpIHsKICAgICAgICB0ZWFtTWVtYmVyID0gc3RhdGUubWUuZGF0YTsKICAgIH0KICAgIHJldHVybiB7CiAgICAgICAgdGVhbU1lbWJlcjogb3duUHJvcHMubm90ZS51c2VyICYmICF0ZWFtTWVtYmVyID8KICAgICAgICAgICAgc2VsZWN0VGVhbU1lbWJlcihzdGF0ZSwgb3duUHJvcHMubm90ZS51c2VyKSA6IHRlYW1NZW1iZXIsCiAgICB9Owp9OwpleHBvcnQgZGVmYXVsdCBjb25uZWN0KG1hcFN0YXRlVG9Qcm9wcykoTm90ZSk7Cg=="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/RightSidebar/components/ContactInfo/components/ContactInteractions/components/NotesPane/Note/index.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/RightSidebar/components/ContactInfo/components/ContactInteractions/components/NotesPane/Note/index.tsx"],"names":[],"mappings":"AAAA,OAAO,IAAe,MAAM,QAAQ,CAAC;AACrC,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AAEtC,OAAO,EAAE,gBAAgB,EAAE,MAAM,wBAAwB,CAAC;AAE1D,IAAM,eAAe,GAAG,UAAC,KAAiB,EAAE,QAAe;IACzD,IAAI,UAAU,CAAC;IACf,IAAI,KAAK,CAAC,EAAE,CAAC,IAAI,IAAI,QAAQ,CAAC,IAAI,CAAC,IAAI,KAAK,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE;QAC5D,UAAU,GAAG,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC;KAC5B;IAED,OAAO;QACL,UAAU,EAAE,QAAQ,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC;YAC7C,gBAAgB,CAAC,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU;KACpD,CAAC;AACX,CAAC,CAAC;AAEF,eAAe,OAAO,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,CAAC","sourcesContent":["import Note, { Props } from './Note';\nimport { connect } from 'react-redux';\nimport { StoreState } from '@src/types';\nimport { selectTeamMember } from '@src/ducks/teamMembers';\n\nconst mapStateToProps = (state: StoreState, ownProps: Props): Props => {\n  let teamMember;\n  if (state.me.data && ownProps.note.user === state.me.data.id) {\n    teamMember = state.me.data;\n  }\n\n  return {\n    teamMember: ownProps.note.user && !teamMember ?\n      selectTeamMember(state, ownProps.note.user) : teamMember,\n  } as any;\n};\n\nexport default connect(mapStateToProps)(Note);\n"]}]}