{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Accounts/routes/AccountDetail/AccountDetail.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Accounts/routes/AccountDetail/AccountDetail.tsx","mtime":1675280254095},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Accounts/routes/AccountDetail/AccountDetail.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Accounts/routes/AccountDetail/AccountDetail.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport { findIndex, indexOf, compact, values } from 'lodash';\nimport { Account, Preferences, AttachmentMeta, AutoReply, Resource } from '@src/types';\nimport { mongoId } from '@src/lib/crypt';\n\nimport FileDropZone from '@src/components/Compose/FileDropZone';\nimport TextInput from '@src/components/Form/TextInput';\nimport ContentEditable from '@src/components/ContentEditable/ContentEditable';\nimport ToggleCell from '@src/routes/Settings/components/ToggleCell';\nimport AliasItem from '../../components/AliasItem';\n\nimport Plus from '@src/components/Icons/Plus.svg';\n\nimport './AccountDetail.scss';\nimport { accountSignature } from '@src/lib/account';\nimport NavigationHeader from '@src/routes/Settings/components/NavigationHeader';\nimport Confirm, { Props as ConfirmProps } from '@src/components/Base/Confirm';\nimport browserHistory from '@src/lib/browserHistory';\nimport { RouteComponentProps } from 'react-router';\nimport { AttachmentUploadOptions } from '@src/lib/attachment';\nimport { BlobDescriptor, uploadErrorMessage } from '@src/lib/files';\n\nexport interface Props {\n  preferences: Preferences;\n  account: Account;\n  aliases: Account[];\n  attachmentMetas: Array<Resource<AttachmentMeta>>;\n}\n\nexport interface DispatchProps {\n  updatePreferences: (preferences: Preferences) => void;\n  updateAccount: (account: Account) => void;\n  deleteAccount: (account: Account) => void;\n  addSignatureImage: (meta: AttachmentMeta) => void;\n  removeSignatureImage: (meta: AttachmentMeta) => void;\n}\n\ninterface State {\n  autoBcc: boolean;\n  autoReply?: AutoReply;\n  signature: string;\n  dropzoneActive: boolean;\n  autoBccValue?: string;\n  description?: string;\n  name?: string;\n  showSave?: boolean;\n  confirmProps?: ConfirmProps;\n}\n\n// tslint:disable-next-line:max-line-length\nconst DEFAULT_AUTO_REPLY = 'I’m currently out of the office and may have limited access to my email.';\nclass AccountDetail extends React.PureComponent<\n  Props & DispatchProps & RouteComponentProps<any>, State\n> {\n  contentEditable: ContentEditable;\n  autoReplyContentEditable: ContentEditable;\n\n  constructor(props: Props & DispatchProps & RouteComponentProps<any>) {\n    super();\n\n    this.state = {\n      autoReply: props.account.autoReply,\n      autoBcc: !!props.account.autoBcc,\n      signature: props.account.signature,\n      dropzoneActive: false,\n    };\n  }\n  // Update signature\n  // TODO(SHIN & SHAHAN): Possible race condition or lost change between account diffs.\n  componentDidUpdate(oldProps: Props) {\n    // Handle signature images\n    const nextSignatureImages = this.props.account.signatureImages || [];\n    const oldSignatureImages = oldProps.account.signatureImages || [];\n\n    // Inject signature images if new is found\n    if (nextSignatureImages !== oldSignatureImages) {\n      nextSignatureImages.\n        filter(attachment => findIndex(oldSignatureImages, { id: attachment.id }) === -1)\n        .forEach((attachment) => {\n          this.contentEditable.replaceSignatureImageAttachment({ ...attachment, inline: true });\n        },\n      );\n    }\n\n    // Handle replacing old metas\n    const oldMetas = oldProps.attachmentMetas;\n    const newMetas = this.props.attachmentMetas;\n    const oldMetaIds = compact(values(oldMetas.map(meta => meta.data && meta.data.attachment)));\n    if (oldMetas !== newMetas) {\n      // Inject metas\n      newMetas\n        .forEach((meta) => {\n          if (!meta.data) {\n            return;\n          }\n\n          // Replace if available\n          this.contentEditable.replaceSignatureImageAttachmentMeta(meta.data);\n\n          // Check if attachment meta is new\n          if (indexOf(oldMetaIds, meta.data && meta.data.attachment) !== -1) {\n            return;\n          }\n\n          this.contentEditable.injectSignatureImageAttachmentMeta(meta.data);\n        });\n    }\n  }\n\n  handleContentEditableRef = (ref: ContentEditable) => {\n    this.contentEditable = ref;\n  }\n\n  handleAutoReplyContentEditableRef = (ref: ContentEditable) => {\n    this.autoReplyContentEditable = ref;\n  }\n\n  handleDescriptionChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ description: e.currentTarget.value, showSave: true });\n  }\n\n  handleNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ name: e.currentTarget.value, showSave: true });\n  }\n\n  handleSignatureChange = (html: string) => {\n    this.setState({ signature: html, showSave: true });\n  }\n\n  handleAutoReplyChange = (html: string) => {\n    const autoReply = this.state.autoReply || { enabled: true, body: DEFAULT_AUTO_REPLY };\n\n    this.setState({ autoReply: { ...autoReply, body: html }, showSave: true });\n  }\n\n  handleDefaultAccountChange = () => {\n    const accountId = this.props.account.id;\n    const wasDefault = accountId === this.props.preferences.defaultAccount;\n    const newValue = wasDefault\n      ? ''\n      : accountId;\n\n    const updatedPreferences = { ...this.props.preferences, defaultAccount: newValue };\n    this.props.updatePreferences(updatedPreferences);\n  }\n\n  handleAutoBccValueChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ autoBccValue: e.currentTarget.value, showSave: true });\n  }\n\n  handleAutoBccChange = () => {\n    this.setState({ autoBcc: !this.state.autoBcc, showSave: true });\n  }\n\n  handleAutoReplyEnableChange = () => {\n    const autoReply = this.state.autoReply || { enabled: false, body: DEFAULT_AUTO_REPLY };\n\n    this.setState({\n      autoReply: {\n        ...autoReply,\n        enabled: !autoReply.enabled,\n      },\n      showSave: true,\n    });\n  }\n\n  handleAliasSelect = (id: string) => {\n    const { account } = this.props;\n    browserHistory.push(`/settings/accounts/${account.id}/aliases/${id}`);\n  }\n\n  handleBackPress = () => {\n    browserHistory.goBack();\n  }\n\n  // DropZone handlers\n  handleDragEnter = (event: React.DragEvent<HTMLDivElement>) => {\n    if (event.dataTransfer.types.indexOf('Files') !== -1) {\n      this.setState({ dropzoneActive: true });\n    }\n  }\n\n  handleDragLeave = () => {\n    this.setState({ dropzoneActive: false });\n  }\n\n  // TODO(SHIN): Handle uploading signature image\n  handleUpload = (files: File[], options?: AttachmentUploadOptions) => {\n    const { addSignatureImage, account } = this.props;\n    if (!account) {\n      return;\n    }\n\n    // Block ability to attach files larger than 25 MB.\n    if (files.filter(file => file.size > 25000000).length) {\n      const confirmProps: ConfirmProps = {\n        title: 'Error Uploading Attachment',\n        message: 'You cannot upload an attachment greater than 25 MB.',\n        confirmCopy: 'Ok',\n        onConfirm: () => {\n          this.setState({ confirmProps: undefined });\n        },\n      };\n\n      this.setState({ confirmProps });\n      return;\n    }\n\n    // Only grab image files,\n    const imageFiles = files.filter(file => file.type.startsWith('image'));\n\n    // Handle attachment upload\n    this.setState({ dropzoneActive: false }, () => {\n      // Handle dropping to specific position\n      if (options && options.position && this.contentEditable) {\n        this.contentEditable.moveCursorToPosition(options.position);\n      }\n    });\n\n    // Upload signature images\n    imageFiles.forEach(file => addSignatureImage({\n      attachment: mongoId(),\n      resourceId: account.id,\n      file,\n      inline: true,\n    }));\n  }\n\n  handleDelete = () => {\n    const { account, deleteAccount } = this.props;\n\n    const message = 'All tracking data, activity, and cloud attachments associated '\n      + 'with this account will be removed and cannot be recovered. '\n      + '\\n\\nYou will not be able to re-add this account until it has finished deleting. '\n      + 'Would you like to continue?';\n    const confirmProps: ConfirmProps = {\n      title: 'Deleting Account',\n      message,\n      confirmCopy: 'Delete',\n      onConfirm: () => {\n        this.setState({ confirmProps: undefined });\n        deleteAccount(account);\n      },\n      onCancel: () => this.setState({ confirmProps: undefined }),\n    };\n\n    this.setState({ confirmProps });\n  }\n\n  handleAliasCreate = () => {\n    const { account } = this.props;\n    browserHistory.push(`/settings/accounts/${account.id}/aliases/new`);\n  }\n\n  handleSave = () => {\n    const account = { ...this.props.account };\n    const { updateAccount } = this.props;\n    const { description, autoBccValue, signature, name, autoReply } = this.state;\n    if (name) {\n      account.name = name;\n    }\n\n    if (signature) {\n      account.signature = signature;\n    }\n\n    if (autoBccValue) {\n      account.autoBcc = autoBccValue;\n    }\n\n    if (autoReply) {\n      account.autoReply = autoReply;\n    }\n\n    if (!this.state.autoBcc) {\n      account.autoBcc = null;\n    }\n\n    if (description) {\n      account.description = description;\n    }\n\n    // Update account and reset state\n    updateAccount(account);\n    this.setState({\n      showSave: undefined,\n      autoBccValue: undefined,\n      name: undefined,\n      description: undefined,\n      autoReply: undefined,\n    });\n  }\n\n  handleDirectoryDropError = (b: BlobDescriptor) => {\n    const confirmProps: ConfirmProps = {\n      title: 'Error attaching file',\n      message: uploadErrorMessage(b),\n      confirmCopy: 'Ok',\n      onConfirm: () => {\n        this.setState({ confirmProps: undefined });\n      },\n    };\n\n    this.setState({ confirmProps, dropzoneActive: false });\n  }\n\n  render() {\n    const {\n      email,\n      type,\n      id,\n     } = this.props.account;\n\n    const {\n      autoBcc,\n      dropzoneActive,\n      showSave,\n      confirmProps,\n    } = this.state;\n\n    const description = this.state.description !== undefined\n      ? this.state.description\n      : this.props.account.description;\n    const name = this.state.name !== undefined\n      ? this.state.name\n      : this.props.account.name;\n    const autoBccValue = this.state.autoBccValue !== undefined\n      ? this.state.autoBccValue\n      : this.props.account.autoBcc;\n    const autoReply = this.state.autoReply !== undefined\n      ? this.state.autoReply\n      : this.props.account.autoReply;\n\n    const isDefaultAccount = this.props.preferences.defaultAccount === id;\n    const signature = accountSignature({\n      account: this.props.account,\n      preventEdits: false,\n      returnInnerHTML: true,\n    });\n\n    return (\n      <div className=\"preferences-account-detail\">\n        {confirmProps && <Confirm {...confirmProps} />}\n        <NavigationHeader\n          title=\"Accounts\"\n          onBack={this.handleBackPress}\n          onSave={showSave && this.handleSave || undefined}\n        />\n        <div className=\"account-header\">\n          <div className=\"provider-type\">\n            {type}\n          </div>\n          <div className=\"email\">\n            {email}\n          </div>\n        </div>\n        <div className=\"basic\">\n          <div className=\"descriptors\">\n            <TextInput\n              description=\"Account Description\"\n              placeholder=\"\"\n              value={description}\n              type=\"text\"\n              onChange={this.handleDescriptionChange}\n            />\n            <TextInput\n              description=\"Account Name\"\n              placeholder=\"\"\n              value={name}\n              type=\"text\"\n              onChange={this.handleNameChange}\n            />\n          </div>\n          <div className=\"signature-field\">\n            <div className=\"label\">Signature</div>\n            <div\n              className=\"signature-pane\"\n              onDragEnter={this.handleDragEnter}\n              onDragExit={this.handleDragLeave}\n            >\n              {dropzoneActive &&\n                <FileDropZone\n                  className=\"account-detail-drop-zone\"\n                  onDrop={this.handleUpload}\n                  onLeave={this.handleDragLeave}\n                  title={'Drop here to embed an image into your signature'}\n                  description=\"\"\n                  altCopy=\"\"\n                  onDirectoryDropError={this.handleDirectoryDropError}\n                />\n              }\n              <div className=\"scroll-area\">\n                <ContentEditable\n                  onChange={this.handleSignatureChange}\n                  html={signature}\n                  ref={this.handleContentEditableRef}\n                  onAttachmentUpload={this.handleUpload}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"toggles\">\n          <ToggleCell\n            on={isDefaultAccount}\n            title=\"Send new messages from this account\"\n            onToggle={this.handleDefaultAccountChange}\n          />\n          <ToggleCell\n            on={autoBcc}\n            title=\"Auto-forward messages sent from this account to CRM\"\n            onToggle={this.handleAutoBccChange}\n          />\n          {autoBcc &&\n            <TextInput\n              name=\"Auto BCC\"\n              description=\"Messages sent under this account will automatically bcc this address\"\n              type=\"text\"\n              placeholder=\"Enter email address\"\n              value={autoBccValue || ''}\n              onChange={this.handleAutoBccValueChange}\n              autofocus\n            />\n          }\n          <div className=\"autoreply-wrapper\">\n            <ToggleCell\n              on={!!autoReply && autoReply.enabled}\n              title=\"Vacation Responder\"\n              subtitle=\"Automatically responds to incoming emails with this message:\"\n              onToggle={this.handleAutoReplyEnableChange}\n            />\n            {!!autoReply && autoReply.enabled && <ContentEditable\n              onChange={this.handleAutoReplyChange}\n              html={autoReply.body}\n              ref={this.handleAutoReplyContentEditableRef}\n            />}\n          </div>\n        </div>\n        <div className=\"aliases\">\n          <div className=\"header-pane\">\n            <div>\n              Aliases\n            </div>\n            <button\n              onClick={this.handleAliasCreate}\n              className=\"add-alias-button\"\n            >\n              <Plus />\n              &nbsp; Add Alias\n            </button>\n          </div>\n          <div className=\"table\">\n            {this.props.aliases.map((alias, i) =>\n              <AliasItem\n                key={alias.id}\n                name={alias.name}\n                email={alias.email}\n                id={alias.id}\n                onClick={this.handleAliasSelect}\n              />,\n            )}\n          </div>\n        </div>\n        <button\n          className=\"remove-button\"\n          onClick={this.handleDelete}\n        >\n          Remove Account\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default AccountDetail;\n"]}]}