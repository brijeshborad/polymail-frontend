{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Login/components/ChoosePlan/index.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Login/components/ChoosePlan/index.tsx","mtime":1675280254078},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4JzsKaW1wb3J0IENob29zZVBsYW4gZnJvbSAnLi9DaG9vc2VQbGFuJzsKaW1wb3J0IHsgYmlsbGluZ0NyZWF0ZSwgYmlsbGluZ1VwZ3JhZGVDb3Vwb25TZXQsIGJpbGxpbmdVcGdyYWRlQ291cG9uVW5zZXQsIHNlbGVjdEJpbGxpbmdDb3Vwb24sIHNlbGVjdEJpbGxpbmdMb2FkaW5nLCB9IGZyb20gJ0BzcmMvZHVja3MvYmlsbGluZyc7CmltcG9ydCB7IHNlbGVjdENvdXBvbkxvYWRpbmcgfSBmcm9tICdAc3JjL3JvdXRlcy9TZXR0aW5ncy9yb3V0ZXMvQmlsbGluZy9VcGdyYWRlUGxhbic7CnZhciBtYXBTdGF0ZVRvUHJvcHMgPSBmdW5jdGlvbiAoc3RhdGUpIHsKICAgIHZhciB1cGdyYWRlQ291cG9uID0gc3RhdGUuYmlsbGluZy51cGdyYWRlQ291cG9uICYmCiAgICAgICAgc2VsZWN0QmlsbGluZ0NvdXBvbihzdGF0ZSwgc3RhdGUuYmlsbGluZy51cGdyYWRlQ291cG9uKTsKICAgIHJldHVybiB7CiAgICAgICAgbWU6IHN0YXRlLm1lICYmIHN0YXRlLm1lLmRhdGEsCiAgICAgICAgYWNjb3VudHM6IHN0YXRlLmFjY291bnRzLAogICAgICAgIGVycm9yOiBzdGF0ZS5iaWxsaW5nLnVwZ3JhZGluZ0Vycm9yLAogICAgICAgIHVwZ3JhZGVDb3Vwb246IHN0YXRlLmJpbGxpbmcudXBncmFkZUNvdXBvbiAmJiBzdGF0ZS5iaWxsaW5nLnVwZ3JhZGVDb3Vwb24uY291cG9uIHx8ICcnLAogICAgICAgIHVwZ3JhZGVDb3Vwb25QZXJjZW50OiB1cGdyYWRlQ291cG9uICYmIHVwZ3JhZGVDb3Vwb24uZGF0YSAmJiB1cGdyYWRlQ291cG9uLmRhdGEuY291cG9uUGVyY2VudCwKICAgICAgICBpc0xvYWRpbmdDb3Vwb246IHNlbGVjdENvdXBvbkxvYWRpbmcoc3RhdGUpLAogICAgICAgIGJpbGxpbmdMb2FkaW5nOiBzZWxlY3RCaWxsaW5nTG9hZGluZyhzdGF0ZSksCiAgICB9Owp9Owp2YXIgbWFwRGlzcGF0Y2hUb1Byb3BzID0gZnVuY3Rpb24gKGRpc3BhdGNoKSB7IHJldHVybiAoewogICAgY3JlYXRlQmlsbGluZzogZnVuY3Rpb24gKGJvZHkpIHsgcmV0dXJuIGRpc3BhdGNoKGJpbGxpbmdDcmVhdGUoYm9keSkpOyB9LAogICAgc2V0VXBncmFkZUNvdXBvbjogZnVuY3Rpb24gKGNvdXBvbikgeyByZXR1cm4gZGlzcGF0Y2goYmlsbGluZ1VwZ3JhZGVDb3Vwb25TZXQoY291cG9uKSk7IH0sCiAgICB1bnNldFVwZ3JhZGVDb3Vwb246IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGRpc3BhdGNoKGJpbGxpbmdVcGdyYWRlQ291cG9uVW5zZXQobnVsbCkpOyB9LAp9KTsgfTsKZXhwb3J0IGRlZmF1bHQgY29ubmVjdChtYXBTdGF0ZVRvUHJvcHMsIG1hcERpc3BhdGNoVG9Qcm9wcykoQ2hvb3NlUGxhbik7Cg=="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Login/components/ChoosePlan/index.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Login/components/ChoosePlan/index.tsx"],"names":[],"mappings":"AACA,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AAGtC,OAAO,UAAyC,MAAM,cAAc,CAAC;AAErE,OAAO,EACL,aAAa,EACb,uBAAuB,EACvB,yBAAyB,EACzB,mBAAmB,EACnB,oBAAoB,GACrB,MAAM,oBAAoB,CAAC;AAC5B,OAAO,EAAE,mBAAmB,EAAE,MAAM,iDAAiD,CAAC;AAEtF,IAAM,eAAe,GAAG,UAAC,KAAiB;IACxC,IAAM,aAAa,GAAG,KAAK,CAAC,OAAO,CAAC,aAAa;QACjD,mBAAmB,CAAC,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;IAExD,OAAO;QACL,EAAE,EAAE,KAAK,CAAC,EAAE,IAAI,KAAK,CAAC,EAAE,CAAC,IAAI;QAC7B,QAAQ,EAAE,KAAK,CAAC,QAAQ;QACxB,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,cAAc;QACnC,aAAa,EAAE,KAAK,CAAC,OAAO,CAAC,aAAa,IAAI,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,MAAM,IAAI,EAAE;QACtF,oBAAoB,EAAE,aAAa,IAAI,aAAa,CAAC,IAAI,IAAI,aAAa,CAAC,IAAI,CAAC,aAAa;QAC7F,eAAe,EAAE,mBAAmB,CAAC,KAAK,CAAC;QAC3C,cAAc,EAAE,oBAAoB,CAAC,KAAK,CAAC;KAC5C,CAAC;AACJ,CAAC,CAAC;AAEF,IAAM,kBAAkB,GAAG,UAAC,QAA8B,IAAoB,OAAA,CAAC;IAC7E,aAAa,EAAE,UAAA,IAAI,IAAI,OAAA,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,EAA7B,CAA6B;IACpD,gBAAgB,EAAE,UAAA,MAAM,IAAI,OAAA,QAAQ,CAAC,uBAAuB,CAAC,MAAM,CAAC,CAAC,EAAzC,CAAyC;IACrE,kBAAkB,EAAE,cAAM,OAAA,QAAQ,CAAC,yBAAyB,CAAC,IAAI,CAAC,CAAC,EAAzC,CAAyC;CACpE,CAAC,EAJ4E,CAI5E,CAAC;AAEH,eAAe,OAAO,CAAC,eAAe,EAAE,kBAAkB,CAAC,CAAC,UAAU,CAAC,CAAC","sourcesContent":["import { StoreState } from '@src/types';\nimport { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\n\nimport ChoosePlan, { StateProps, DispatchProps } from './ChoosePlan';\n\nimport {\n  billingCreate,\n  billingUpgradeCouponSet,\n  billingUpgradeCouponUnset,\n  selectBillingCoupon,\n  selectBillingLoading,\n} from '@src/ducks/billing';\nimport { selectCouponLoading } from '@src/routes/Settings/routes/Billing/UpgradePlan';\n\nconst mapStateToProps = (state: StoreState): StateProps => {\n  const upgradeCoupon = state.billing.upgradeCoupon &&\n  selectBillingCoupon(state, state.billing.upgradeCoupon);\n\n  return {\n    me: state.me && state.me.data,\n    accounts: state.accounts,\n    error: state.billing.upgradingError,\n    upgradeCoupon: state.billing.upgradeCoupon && state.billing.upgradeCoupon.coupon || '',\n    upgradeCouponPercent: upgradeCoupon && upgradeCoupon.data && upgradeCoupon.data.couponPercent,\n    isLoadingCoupon: selectCouponLoading(state),  // todo create selector\n    billingLoading: selectBillingLoading(state),\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<StoreState>): DispatchProps => ({\n  createBilling: body => dispatch(billingCreate(body)),\n  setUpgradeCoupon: coupon => dispatch(billingUpgradeCouponSet(coupon)),\n  unsetUpgradeCoupon: () => dispatch(billingUpgradeCouponUnset(null)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChoosePlan);\n"]}]}