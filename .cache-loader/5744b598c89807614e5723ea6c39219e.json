{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Unsubscriber/index.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Unsubscriber/index.ts","mtime":1675280254119},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4JzsKaW1wb3J0IFVuc3Vic2NyaWJlciBmcm9tICcuL1Vuc3Vic2NyaWJlcic7CmltcG9ydCB7IHNlbGVjdENvbnRhY3QgfSBmcm9tICdAc3JjL2R1Y2tzL2NvbnRhY3RzJzsKaW1wb3J0IHsgc2VsZWN0Q29udGFjdEdyb3VwcyB9IGZyb20gJ0BzcmMvZHVja3MvY29udGFjdEdyb3Vwcyc7CmltcG9ydCB7IHNlbGVjdE1haWxib3hDb3VudHMgfSBmcm9tICdAc3JjL2R1Y2tzL21haWxDb3VudHMnOwppbXBvcnQgeyBzZWxlY3RBY2NvdW50cyB9IGZyb20gJ0BzcmMvZHVja3MvYWNjb3VudHMnOwppbXBvcnQgeyByaWdodFNpZGViYXJDb2xsYXBzZSB9IGZyb20gJ0BzcmMvZHVja3MvcmlnaHRTaWRlYmFyJzsKaW1wb3J0IHsgb25ib2FyZGluZ1BhdGNoIH0gZnJvbSAnQHNyYy9kdWNrcy9tZSc7CmltcG9ydCB7IFBhZ2UgfSBmcm9tICdAc3JjL3R5cGVzL3JpZ2h0U2lkZWJhcic7CnZhciBtYXBTdGF0ZVRvUHJvcHMgPSBmdW5jdGlvbiAoc3RhdGUpIHsgcmV0dXJuICh7CiAgICBjb250YWN0R3JvdXBzOiBzZWxlY3RDb250YWN0R3JvdXBzKHN0YXRlKSwKICAgIGNvbnRhY3Q6IHNlbGVjdENvbnRhY3Qoc3RhdGUsICdmb29AcG9seW1haWwuaW8nKSwKICAgIGFjY291bnRzOiBzZWxlY3RBY2NvdW50cyhzdGF0ZSksCiAgICBsaXN0czogc3RhdGUubGlzdHMsCiAgICBzZWxlY3RlZE1haWxib3g6IHN0YXRlLm1haWxib3gsCiAgICBtYWlsQ291bnQ6IHNlbGVjdE1haWxib3hDb3VudHMoc3RhdGUpLAogICAgbGVmdFNpZGViYXJDb3VudDogc3RhdGUucHJlZmVyZW5jZXMubGVmdFNpZGViYXJDb3VudCwKICAgIGZlYXR1cmVzOiBzdGF0ZS5mZWF0dXJlcywKICAgIHNob3dVbnN1YnNjcmliZXJHZW06ICFzdGF0ZS5vbmJvYXJkaW5nLnVuc3Vic2NyaWJlckdlbSwKfSk7IH07CnZhciBtYXBEaXNwYXRjaFRvUHJvcHMgPSBmdW5jdGlvbiAoZGlzcGF0Y2gpIHsgcmV0dXJuICh7CiAgICBjb2xsYXBzZVJpZ2h0U2lkZWJhcjogZnVuY3Rpb24gKGNvbGxhcHNlZCkgeyByZXR1cm4gZGlzcGF0Y2gocmlnaHRTaWRlYmFyQ29sbGFwc2UoewogICAgICAgIGNvbGxhcHNlZDogY29sbGFwc2VkLAogICAgICAgIHBhZ2U6IFBhZ2UuU2V0dGluZ3MsCiAgICB9KSk7IH0sCiAgICBkaXNwYXRjaEFjdGlvbjogZnVuY3Rpb24gKGFjdGlvbikgeyByZXR1cm4gZGlzcGF0Y2goYWN0aW9uKTsgfSwKICAgIHVwZGF0ZU9uYm9hcmRpbmc6IGZ1bmN0aW9uIChtZXRhKSB7IHJldHVybiBkaXNwYXRjaChvbmJvYXJkaW5nUGF0Y2gobWV0YSkpOyB9LAp9KTsgfTsKZXhwb3J0IGRlZmF1bHQgY29ubmVjdChtYXBTdGF0ZVRvUHJvcHMsIG1hcERpc3BhdGNoVG9Qcm9wcykoVW5zdWJzY3JpYmVyKTsK"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Unsubscriber/index.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Unsubscriber/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAY,MAAM,aAAa,CAAC;AAGhD,OAAO,YAAsC,MAAM,gBAAgB,CAAC;AAEpE,OAAO,EAAE,aAAa,EAAE,MAAM,qBAAqB,CAAC;AACpD,OAAO,EAAE,mBAAmB,EAAE,MAAM,0BAA0B,CAAC;AAC/D,OAAO,EAAE,mBAAmB,EAAE,MAAM,uBAAuB,CAAC;AAC5D,OAAO,EAAE,cAAc,EAAE,MAAM,qBAAqB,CAAC;AACrD,OAAO,EAAE,oBAAoB,EAAE,MAAM,yBAAyB,CAAC;AAC/D,OAAO,EAAE,eAAe,EAAE,MAAM,eAAe,CAAC;AAChD,OAAO,EAAE,IAAI,EAAE,MAAM,yBAAyB,CAAC;AAE/C,IAAM,eAAe,GAAG,UAAC,KAAiB,IAAY,OAAA,CAAC;IACrD,aAAa,EAAE,mBAAmB,CAAC,KAAK,CAAC;IACzC,OAAO,EAAE,aAAa,CAAC,KAAK,EAAE,iBAAiB,CAAC;IAChD,QAAQ,EAAE,cAAc,CAAC,KAAK,CAAC;IAC/B,KAAK,EAAE,KAAK,CAAC,KAAK;IAClB,eAAe,EAAE,KAAK,CAAC,OAAO;IAC9B,SAAS,EAAE,mBAAmB,CAAC,KAAK,CAAC;IACrC,gBAAgB,EAAE,KAAK,CAAC,WAAW,CAAC,gBAAgB;IACpD,QAAQ,EAAE,KAAK,CAAC,QAAQ;IACxB,mBAAmB,EAAE,CAAC,KAAK,CAAC,UAAU,CAAC,eAAe;CACvD,CAAC,EAVoD,CAUpD,CAAC;AAEH,IAAM,kBAAkB,GAAG,UAAC,QAAuB,IAAoB,OAAA,CAAC;IACtE,oBAAoB,EAAE,UAAC,SAAkB,IAAK,OAAA,QAAQ,CAAC,oBAAoB,CAAC;QAC1E,SAAS,WAAA;QACT,IAAI,EAAE,IAAI,CAAC,QAAQ;KACpB,CAAC,CAAC,EAH2C,CAG3C;IACH,cAAc,EAAE,UAAA,MAAM,IAAI,OAAA,QAAQ,CAAC,MAAM,CAAC,EAAhB,CAAgB;IAC1C,gBAAgB,EAAE,UAAA,IAAI,IAAI,OAAA,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,EAA/B,CAA+B;CAC1D,CAAC,EAPqE,CAOrE,CAAC;AAEH,eAAe,OAAO,CAAC,eAAe,EAAE,kBAAkB,CAAC,CAAC,YAAY,CAAC,CAAC","sourcesContent":["import { connect, Dispatch } from 'react-redux';\nimport { StoreState } from '@src/types';\n\nimport Unsubscriber, { Props, DispatchProps } from './Unsubscriber';\n\nimport { selectContact } from '@src/ducks/contacts';\nimport { selectContactGroups } from '@src/ducks/contactGroups';\nimport { selectMailboxCounts } from '@src/ducks/mailCounts';\nimport { selectAccounts } from '@src/ducks/accounts';\nimport { rightSidebarCollapse } from '@src/ducks/rightSidebar';\nimport { onboardingPatch } from '@src/ducks/me';\nimport { Page } from '@src/types/rightSidebar';\n\nconst mapStateToProps = (state: StoreState): Props => ({\n  contactGroups: selectContactGroups(state),\n  contact: selectContact(state, 'foo@polymail.io'),\n  accounts: selectAccounts(state),\n  lists: state.lists,\n  selectedMailbox: state.mailbox,\n  mailCount: selectMailboxCounts(state),\n  leftSidebarCount: state.preferences.leftSidebarCount,\n  features: state.features,\n  showUnsubscriberGem: !state.onboarding.unsubscriberGem,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>): DispatchProps => ({\n  collapseRightSidebar: (collapsed: boolean) => dispatch(rightSidebarCollapse({\n    collapsed,\n    page: Page.Settings,\n  })),\n  dispatchAction: action => dispatch(action),\n  updateOnboarding: meta => dispatch(onboardingPatch(meta)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Unsubscriber);\n"]}]}