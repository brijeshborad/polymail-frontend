{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/app.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/app.ts","mtime":1675280254054},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnOwppbXBvcnQgeyB3ZWJhcHBVcGRhdGVSZWFkeSwgREVCVUdfU0VORCwgZGVidWdTZW5kLCBBUFBfVEhFTUVfU0VULCBzdGF0dXNQYWdlR2V0IH0gZnJvbSAnQHNyYy9kdWNrcy9hcHAnOwppbXBvcnQgeyBBY3Rpb25TdGF0dXMsIH0gZnJvbSAnQHNyYy90eXBlcy9pbmRleCc7CmltcG9ydCB7IHJ1bkRlYnVnIH0gZnJvbSAnQHNyYy9saWIvdXRpbHMnOwppbXBvcnQgeyB1cGRhdGVUaGVtZSB9IGZyb20gJ0BzcmMvbGliL3RoZW1lJzsKdmFyIGdldFN0YXR1c1BhZ2VSZXN1bHRzID0gZnVuY3Rpb24gKGFjdGlvbiQsIHN0b3JlLCBkZXBzKSB7CiAgICByZXR1cm4gT2JzZXJ2YWJsZQogICAgICAgIC50aW1lcigxMDAwMCwgMzAwMDAwKSAvLyBldmVyeSA1IG1pbnV0ZXMsIHdpdGggZmlyc3Qgb25lIHRyaWdnZXJpbmcgYWZ0ZXIgMTAgc2Vjb25kcwogICAgICAgIC5mbGF0TWFwKGZ1bmN0aW9uICgpIHsKICAgICAgICByZXR1cm4gZGVwcy5hcHAuZ2V0U3RhdHVzKCkKICAgICAgICAgICAgLm1hcChmdW5jdGlvbiAocGF5bG9hZCkgeyByZXR1cm4gc3RhdHVzUGFnZUdldChudWxsLCBwYXlsb2FkKTsgfSkKICAgICAgICAgICAgLmNhdGNoKGZ1bmN0aW9uIChlKSB7IHJldHVybiBPYnNlcnZhYmxlLm9mKHN0YXR1c1BhZ2VHZXQobnVsbCwgZSkpOyB9KTsKICAgIH0pOwp9Owp2YXIgY2hlY2tGb3JVcGRhdGVzID0gZnVuY3Rpb24gKGFjdGlvbiQsIHN0b3JlLCBkZXBzKSB7CiAgICByZXR1cm4gT2JzZXJ2YWJsZQogICAgICAgIC5pbnRlcnZhbCg2MDAwMDApIC8vIGV2ZXJ5IDEwIG1pbnV0ZXMKICAgICAgICAuZmxhdE1hcChmdW5jdGlvbiAoKSB7CiAgICAgICAgcmV0dXJuIGRlcHMuYXBwLmNoZWNrRm9yVXBkYXRlcygpCiAgICAgICAgICAgIC5maWx0ZXIoZnVuY3Rpb24gKHZlcnNpb24pIHsKICAgICAgICAgICAgcmV0dXJuIHByb2Nlc3MuZW52LlNPVVJDRV9WRVJTSU9OICE9PSB2ZXJzaW9uOwogICAgICAgIH0pCiAgICAgICAgICAgIC5tYXAoZnVuY3Rpb24gKHZlcnNpb24pIHsgcmV0dXJuIHdlYmFwcFVwZGF0ZVJlYWR5KHRydWUpOyB9KTsKICAgIH0pOwp9Owp2YXIgZGVidWdTZW5kRXBpYyA9IGZ1bmN0aW9uIChhY3Rpb24kLCBzdG9yZSkgewogICAgcmV0dXJuIGFjdGlvbiQub2ZUeXBlKERFQlVHX1NFTkQpCiAgICAgICAgLmZpbHRlcihmdW5jdGlvbiAoYWN0aW9uKSB7IHJldHVybiBhY3Rpb24uc3RhdHVzID09PSBBY3Rpb25TdGF0dXMuU3RhcnQ7IH0pCiAgICAgICAgLmZsYXRNYXAoZnVuY3Rpb24gKGFjdGlvbikgeyByZXR1cm4gcnVuRGVidWcoc3RvcmUuZ2V0U3RhdGUoKSk7IH0pCiAgICAgICAgLmZsYXRNYXAoZnVuY3Rpb24gKHJlc3VsdHMpIHsKICAgICAgICAvLyBHZW5lcmF0ZSBmaWxlLCBzdGFydCBkb3dubG9hZCwgYW5kIHJldm9rZSBvYmplY3QgdXJsCiAgICAgICAgdmFyIHN0cmluZ1ZhbHVlID0gSlNPTi5zdHJpbmdpZnkocmVzdWx0cyk7CiAgICAgICAgdmFyIGZpbGUgPSBuZXcgQmxvYihbc3RyaW5nVmFsdWVdLCB7IHR5cGU6ICd0ZXh0L3BsYWluJyB9KTsKICAgICAgICB2YXIgYSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTsKICAgICAgICB2YXIgdXJsID0gVVJMLmNyZWF0ZU9iamVjdFVSTChmaWxlKTsKICAgICAgICBhLmhyZWYgPSB1cmw7CiAgICAgICAgYS5kb3dubG9hZCA9ICJwb2x5bWFpbF9kaWFnbm9zdGljc18iICsgbmV3IERhdGUoKS50b0lTT1N0cmluZygpICsgIi50eHQiOwogICAgICAgIGEuaGlkZGVuID0gZmFsc2U7CiAgICAgICAgYS5pbm5lckhUTUwgPSAnbG9sJzsKICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGEpOwogICAgICAgIGEuY2xpY2soKTsKICAgICAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKGEpOwogICAgICAgIFVSTC5yZXZva2VPYmplY3RVUkwodXJsKTsKICAgICAgICByZXR1cm4gT2JzZXJ2YWJsZS5vZihkZWJ1Z1NlbmQobnVsbCwgbnVsbCkpOwogICAgfSk7Cn07CnZhciBhcHBUaGVtZVNldEVwaWMgPSBmdW5jdGlvbiAoYWN0aW9uJCwgc3RvcmUpIHsKICAgIHJldHVybiBhY3Rpb24kLm9mVHlwZShBUFBfVEhFTUVfU0VUKQogICAgICAgIC5maWx0ZXIoZnVuY3Rpb24gKGFjdGlvbikgeyByZXR1cm4gYWN0aW9uLnN0YXR1cyA9PT0gQWN0aW9uU3RhdHVzLlN0YXJ0OyB9KQogICAgICAgIC5kbyhmdW5jdGlvbiAoYWN0aW9uKSB7IHJldHVybiB1cGRhdGVUaGVtZShzdG9yZSwgYWN0aW9uLm1ldGEpOyB9KQogICAgICAgIC5maWx0ZXIoZnVuY3Rpb24gKCkgeyByZXR1cm4gZmFsc2U7IH0pOwp9OwpleHBvcnQgZGVmYXVsdCBbCiAgICBjaGVja0ZvclVwZGF0ZXMsCiAgICBkZWJ1Z1NlbmRFcGljLAogICAgYXBwVGhlbWVTZXRFcGljLAogICAgZ2V0U3RhdHVzUGFnZVJlc3VsdHMsCl07Cg=="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/app.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/app.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,MAAM,CAAC;AAElC,OAAO,EAAE,iBAAiB,EAAE,UAAU,EAAE,SAAS,EAAE,aAAa,EAAE,aAAa,EAAE,MAAM,gBAAgB,CAAC;AACxG,OAAO,EAGL,YAAY,GAEb,MAAM,kBAAkB,CAAC;AAE1B,OAAO,EAAE,QAAQ,EAAE,MAAM,gBAAgB,CAAC;AAC1C,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAG7C,IAAM,oBAAoB,GACxB,UAAC,OAAO,EAAE,KAAK,EAAE,IAAI;IACnB,OAAA,UAAU;SACP,KAAK,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,8DAA8D;SACnF,OAAO,CAAC;QACP,OAAO,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE;aACxB,GAAG,CAAC,UAAA,OAAO,IAAI,OAAA,aAAa,CAAC,IAAI,EAAE,OAAO,CAAC,EAA5B,CAA4B,CAAC;aAC5C,KAAK,CAAC,UAAA,CAAC,IAAI,OAAA,UAAU,CAAC,EAAE,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAArC,CAAqC,CAAC,CAAC;IACvD,CAAC,CAAC;AANJ,CAMI,CAAC;AAET,IAAM,eAAe,GACnB,UAAC,OAAO,EAAE,KAAK,EAAE,IAAI;IACnB,OAAA,UAAU;SACP,QAAQ,CAAC,MAAM,CAAC,CAAC,mBAAmB;SACpC,OAAO,CAAC;QACP,OAAO,IAAI,CAAC,GAAG,CAAC,eAAe,EAAE;aAC9B,MAAM,CAAC,UAAC,OAAe;YACtB,OAAA,OAAO,CAAC,GAAG,CAAC,cAAc,KAAK,OAAO;QAAtC,CAAsC,CACvC;aACA,GAAG,CAAC,UAAC,OAAe,IAAK,OAAA,iBAAiB,CAAC,IAAI,CAAC,EAAvB,CAAuB,CAAC,CAAC;IACvD,CAAC,CAAC;AARJ,CAQI,CAAC;AAET,IAAM,aAAa,GAAyC,UAAC,OAAO,EAAE,KAAK;IACzE,OAAA,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC;SACvB,MAAM,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,MAAM,KAAK,YAAY,CAAC,KAAK,EAApC,CAAoC,CAAC;SACtD,OAAO,CAAC,UAAC,MAA0B,IAAK,OAAA,QAAQ,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,EAA1B,CAA0B,CAAC;SACnE,OAAO,CAAC,UAAC,OAAO;QAEf,uDAAuD;QACvD,IAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QAC5C,IAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,WAAW,CAAC,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC;QAC7D,IAAM,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QACtC,IAAM,GAAG,GAAG,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QACtC,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC;QACb,CAAC,CAAC,QAAQ,GAAG,0BAAwB,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,SAAM,CAAC;QACpE,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC;QACjB,CAAC,CAAC,SAAS,GAAG,KAAK,CAAC;QACpB,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QAC7B,CAAC,CAAC,KAAK,EAAE,CAAC;QACV,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QAC7B,GAAG,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;QACzB,OAAO,UAAU,CAAC,EAAE,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;IAC9C,CAAC,CAAC;AAnBJ,CAmBI,CAAC;AAEP,IAAM,eAAe,GAAyD,UAAC,OAAO,EAAE,KAAK;IACzF,OAAA,OAAO,CAAC,MAAM,CAAC,aAAa,CAAC;SAC1B,MAAM,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,MAAM,KAAK,YAAY,CAAC,KAAK,EAApC,CAAoC,CAAC;SACtD,EAAE,CAAC,UAAA,MAAM,IAAI,OAAA,WAAW,CAAC,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,EAA/B,CAA+B,CAAC;SAC7C,MAAM,CAAC,cAAM,OAAA,KAAK,EAAL,CAAK,CAAC;AAHtB,CAGsB,CAAC;AAE3B,eAAe;IACb,eAAe;IACf,aAAa;IACb,eAAe;IACf,oBAAoB;CACrB,CAAC","sourcesContent":["import { Observable } from 'rxjs';\nimport { Epic } from 'redux-observable';\nimport { webappUpdateReady, DEBUG_SEND, debugSend, APP_THEME_SET, statusPageGet } from '@src/ducks/app';\nimport {\n  StoreState,\n  Action,\n  ActionStatus,\n  ThemeSetting,\n} from '@src/types/index';\nimport { Deps } from '@src/lib/epic';\nimport { runDebug } from '@src/lib/utils';\nimport { updateTheme } from '@src/lib/theme';\nimport { StatusPageResult } from '@src/api/app';\n\nconst getStatusPageResults: Epic<Action<null, StatusPageResult>, StoreState, Deps> =\n  (action$, store, deps) =>\n    Observable\n      .timer(10000, 300000) // every 5 minutes, with first one triggering after 10 seconds\n      .flatMap(() => {\n        return deps.app.getStatus()\n          .map(payload => statusPageGet(null, payload))\n          .catch(e => Observable.of(statusPageGet(null, e)));\n      });\n\nconst checkForUpdates: Epic<Action<boolean|string, null>, StoreState, Deps> =\n  (action$, store, deps) =>\n    Observable\n      .interval(600000) // every 10 minutes\n      .flatMap(() => {\n        return deps.app.checkForUpdates()\n          .filter((version: string) =>\n            process.env.SOURCE_VERSION !== version,\n          )\n          .map((version: string) => webappUpdateReady(true));\n      });\n\nconst debugSendEpic: Epic<Action<null, null>, StoreState> = (action$, store) =>\n  action$.ofType(DEBUG_SEND)\n    .filter(action => action.status === ActionStatus.Start)\n    .flatMap((action: Action<null, null>) => runDebug(store.getState()))\n    .flatMap((results) => {\n\n      // Generate file, start download, and revoke object url\n      const stringValue = JSON.stringify(results);\n      const file = new Blob([stringValue], { type: 'text/plain' });\n      const a = document.createElement('a');\n      const url = URL.createObjectURL(file);\n      a.href = url;\n      a.download = `polymail_diagnostics_${new Date().toISOString()}.txt`;\n      a.hidden = false;\n      a.innerHTML = 'lol';\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n      return Observable.of(debugSend(null, null));\n    });\n\nconst appThemeSetEpic: Epic<Action<ThemeSetting, ThemeSetting>, StoreState> = (action$, store) =>\n    action$.ofType(APP_THEME_SET)\n      .filter(action => action.status === ActionStatus.Start)\n      .do(action => updateTheme(store, action.meta))\n      .filter(() => false);\n\nexport default [\n  checkForUpdates,\n  debugSendEpic,\n  appThemeSetEpic,\n  getStatusPageResults,\n];\n"]}]}