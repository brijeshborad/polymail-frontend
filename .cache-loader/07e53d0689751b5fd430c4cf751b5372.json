{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/publicTeams.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/publicTeams.ts","mtime":1675280254050},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9hOwppbXBvcnQgdXBkYXRlIGZyb20gJ2ltbXV0YWJpbGl0eS1oZWxwZXInOwppbXBvcnQgeyBrZXlCeSB9IGZyb20gJ2xvZGFzaCc7CmltcG9ydCB7IGNyZWF0ZSB9IGZyb20gJ0BzcmMvbGliL3JlZHV4JzsKLy8gSGFuZGxlIE1lcmdpbmcgUHVibGljIFRlYW0gQXNzZXRzCmV4cG9ydCB2YXIgUFVCTElDX1RFQU1fRkVUQ0ggPSAoX2EgPSBjcmVhdGUoJ1BVQkxJQ19URUFNX0ZFVENIJywgewogICAgc3VjY2VzczogZnVuY3Rpb24gKHN0YXRlLCBtZXRhLCBwYXlsb2FkKSB7CiAgICAgICAgdmFyIF9hOwogICAgICAgIHJldHVybiB1cGRhdGUoc3RhdGUsIHsKICAgICAgICAgICAgcHVibGljTWVtYmVyczogewogICAgICAgICAgICAgICAgJG1lcmdlOiBrZXlCeShwYXlsb2FkLm1lbWJlcnMsICdpZCcpLAogICAgICAgICAgICB9LAogICAgICAgICAgICBwdWJsaWNUZWFtczogKF9hID0ge30sCiAgICAgICAgICAgICAgICBfYVtwYXlsb2FkLnRlYW0uaWRdID0gewogICAgICAgICAgICAgICAgICAgICRzZXQ6IHBheWxvYWQudGVhbSwKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBfYSksCiAgICAgICAgfSk7CiAgICB9LAogICAgZmFpbHVyZTogZnVuY3Rpb24gKHN0YXRlLCBtZXRhLCBlcnJvcikgeyByZXR1cm4gdXBkYXRlKHN0YXRlLCB7CiAgICAgICAgcHVibGljVGVhbXM6IHsKICAgICAgICAgICAgJHVuc2V0OiBbbWV0YV0sCiAgICAgICAgfSwKICAgIH0pOyB9LAp9KSwgX2EudHlwZSksIHB1YmxpY1RlYW1GZXRjaCA9IF9hLmFjdGlvbiwgcHVibGljVGVhbUZldGNoUmVkdWNlciA9IF9hLnJlZHVjZXI7CmV4cG9ydCBkZWZhdWx0IFsKICAgIHB1YmxpY1RlYW1GZXRjaFJlZHVjZXIsCl07Cg=="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/publicTeams.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/publicTeams.ts"],"names":[],"mappings":";AAAA,OAAO,MAAM,MAAM,qBAAqB,CAAC;AACzC,OAAO,EAAE,KAAK,EAAE,MAAM,QAAQ,CAAC;AAC/B,OAAO,EAAE,MAAM,EAAE,MAAM,gBAAgB,CAAC;AAGxC,oCAAoC;AACpC,MAAM,CACJ,IAAA;;;;;;;;;;;;;;;;;;;YAAuB,EACvB,2BAAuB,EACvB,mCAA+B,CAmB9B;AAEH,eAAe;IACb,sBAAsB;CACvB,CAAC","sourcesContent":["import update from 'immutability-helper';\nimport { keyBy } from 'lodash';\nimport { create } from '@src/lib/redux';\nimport { SharedTeamInfo } from '@src/types/sharedThreads';\n\n// Handle Merging Public Team Assets\nexport const {\n  type: PUBLIC_TEAM_FETCH,\n  action: publicTeamFetch,\n  reducer: publicTeamFetchReducer,\n} = create<string, SharedTeamInfo>('PUBLIC_TEAM_FETCH', {\n  success: (state, meta, payload) => {\n    return update(state, {\n      publicMembers: {\n        $merge: keyBy(payload.members, 'id'),\n      },\n      publicTeams: {\n        [payload.team.id]: {\n          $set: payload.team,\n        },\n      },\n    });\n  },\n  failure: (state, meta, error) => update(state, {\n    publicTeams: {\n      $unset: [meta],\n    },\n  }),\n});\n\nexport default [\n  publicTeamFetchReducer,\n];\n"]}]}