{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/sharedThread.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/sharedThread.ts","mtime":1675280254068},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkgewogICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHsKICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHsKICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTsKICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKQogICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07CiAgICAgICAgfQogICAgICAgIHJldHVybiB0OwogICAgfTsKICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9OwppbXBvcnQgQ2FjaGUsIHsgU3RvcmVzIH0gZnJvbSAnLi9kYic7CmltcG9ydCB7IHBhcnNlQWRkcmVzcyB9IGZyb20gJ0BzcmMvbGliL2FkZHJlc3MnOwpleHBvcnQgdmFyIGNvbXB1dGVTaGFyZWRUaHJlYWQgPSBmdW5jdGlvbiAoc2hhcmVkVGhyZWFkKSB7CiAgICB2YXIgYWRkcmVzc2VzID0gc2hhcmVkVGhyZWFkLnBhcnRpY2lwYW50cwogICAgICAgIC5tYXAoZnVuY3Rpb24gKHBhcnRpY2lwYW50KSB7IHJldHVybiBwYXJzZUFkZHJlc3MocGFydGljaXBhbnQpOyB9KSB8fCBbXTsKICAgIHJldHVybiBfX2Fzc2lnbihfX2Fzc2lnbih7fSwgc2hhcmVkVGhyZWFkKSwgeyBwYXJ0aWNpcGFudEFkZHJlc3NlczogYWRkcmVzc2VzIH0pOwp9OwpleHBvcnQgdmFyIGdldFNoYXJlZFRocmVhZEJ5VGhyZWFkSWQgPSBmdW5jdGlvbiAodGhyZWFkKSB7CiAgICByZXR1cm4gQ2FjaGUubGlzdEluZGV4KFN0b3Jlcy5TaGFyZWRUaHJlYWRzLCAndGhyZWFkJywgSURCS2V5UmFuZ2Uub25seSh0aHJlYWQpLCBmYWxzZSwgMSk7Cn07CmV4cG9ydCB2YXIgZ2V0U2hhcmVkVGhyZWFkQnlJZCA9IGZ1bmN0aW9uIChpZCkgewogICAgcmV0dXJuIENhY2hlLmdldChTdG9yZXMuU2hhcmVkVGhyZWFkcywgaWQpOwp9OwpleHBvcnQgdmFyIGxpc3RTaGFyZWRUaHJlYWRzID0gZnVuY3Rpb24gKGZpbHRlcikgewogICAgcmV0dXJuIENhY2hlLmxpc3QoU3RvcmVzLlNoYXJlZFRocmVhZHMsIGZpbHRlcik7Cn07Cg=="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/sharedThread.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/sharedThread.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,OAAO,KAAK,EAAE,EAAE,MAAM,EAAE,MAAM,MAAM,CAAC;AAErC,OAAO,EAAE,YAAY,EAAE,MAAM,kBAAkB,CAAC;AAGhD,MAAM,CAAC,IAAM,mBAAmB,GAAG,UAAC,YAA0B;IAC5D,IAAM,SAAS,GAAG,YAAY,CAAC,YAAY;SACxC,GAAG,CAAC,UAAC,WAAmB,IAAK,OAAA,YAAY,CAAC,WAAW,CAAC,EAAzB,CAAyB,CAAC,IAAI,EAAE,CAAC;IACjE,6BACK,YAAY,KACf,oBAAoB,EAAE,SAAS,IAC/B;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,IAAM,yBAAyB,GAAG,UAAC,MAAc;IACtD,OAAO,KAAK,CAAC,SAAS,CACpB,MAAM,CAAC,aAAa,EACpB,QAAQ,EACR,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,EACxB,KAAK,EACL,CAAC,CACF,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,IAAM,mBAAmB,GAAG,UAAC,EAAU;IAC5C,OAAO,KAAK,CAAC,GAAG,CACd,MAAM,CAAC,aAAa,EACpB,EAAE,CACH,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,IAAM,iBAAiB,GAAG,UAAC,MAA0C;IAC1E,OAAO,KAAK,CAAC,IAAI,CACf,MAAM,CAAC,aAAa,EACpB,MAAM,CACP,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import Cache, { Stores } from './db';\nimport { SharedThread } from '@src/types/sharedThreads';\nimport { parseAddress } from '@src/lib/address';\nimport { Observable } from 'rxjs';\n\nexport const computeSharedThread = (sharedThread: SharedThread): SharedThread => {\n  const addresses = sharedThread.participants\n    .map((participant: string) => parseAddress(participant)) || [];\n  return {\n    ...sharedThread,\n    participantAddresses: addresses,\n  };\n};\n\nexport const getSharedThreadByThreadId = (thread: string): Observable<SharedThread[]> => {\n  return Cache.listIndex(\n    Stores.SharedThreads,\n    'thread',\n    IDBKeyRange.only(thread),\n    false,\n    1,\n  );\n};\n\nexport const getSharedThreadById = (id: string) => {\n  return Cache.get(\n    Stores.SharedThreads,\n    id,\n  );\n};\n\nexport const listSharedThreads = (filter?: (thread: SharedThread) => boolean) => {\n  return Cache.list(\n    Stores.SharedThreads,\n    filter,\n  );\n};\n"]}]}