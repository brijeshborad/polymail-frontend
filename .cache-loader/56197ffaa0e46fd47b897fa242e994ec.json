{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/ContentEditable/FontSelect/FontSizeSelect.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/ContentEditable/FontSelect/FontSizeSelect.tsx","mtime":1675280254003},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkgewogICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBmdW5jdGlvbiAoZCwgYikgewogICAgICAgIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwKICAgICAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fAogICAgICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChiLmhhc093blByb3BlcnR5KHApKSBkW3BdID0gYltwXTsgfTsKICAgICAgICByZXR1cm4gZXh0ZW5kU3RhdGljcyhkLCBiKTsKICAgIH07CiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHsKICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpOwogICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfQogICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTsKICAgIH07Cn0pKCk7CmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7CmltcG9ydCB7IFdlYkZvbnRTaXplcywgV2ViRm9udFNpemVDb252ZXJzaW9ucywgbWF0Y2hGb250UGl4ZWxUb1BvaW50LCB9IGZyb20gJ0BzcmMvbGliL2ZvbnRzL1dlYkZvbnRTaXplcyc7CnZhciBGb250U2l6ZVNlbGVjdCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHsKICAgIF9fZXh0ZW5kcyhGb250U2l6ZVNlbGVjdCwgX3N1cGVyKTsKICAgIGZ1bmN0aW9uIEZvbnRTaXplU2VsZWN0KCkgewogICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMpIHx8IHRoaXM7CiAgICAgICAgX3RoaXMucGFyc2VGb250U2l6ZSA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgdmFyIGZvbnRTaXplID0gX3RoaXMucHJvcHMuc2VsZWN0ZWRGb250U2l6ZTsKICAgICAgICAgICAgaWYgKGZvbnRTaXplKSB7CiAgICAgICAgICAgICAgICB2YXIgcmVnZXggPSBuZXcgUmVnRXhwKCdcXGQrJyk7CiAgICAgICAgICAgICAgICB2YXIgZGlnaXRTdHJpbmcgPSBmb250U2l6ZS5tYXRjaChyZWdleCk7CiAgICAgICAgICAgICAgICB2YXIgbWF0Y2ggPSBkaWdpdFN0cmluZyAmJiBkaWdpdFN0cmluZ1swXTsKICAgICAgICAgICAgICAgIGlmIChtYXRjaCkgewogICAgICAgICAgICAgICAgICAgIHZhciBmb250TnVtYmVyID0gcGFyc2VJbnQobWF0Y2gsIHVuZGVmaW5lZCk7CiAgICAgICAgICAgICAgICAgICAgdmFyIHBvaW50VmFsdWUgPSBtYXRjaEZvbnRQaXhlbFRvUG9pbnQoZm9udE51bWJlcik7CiAgICAgICAgICAgICAgICAgICAgaWYgKHBvaW50VmFsdWUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoeyB2YWx1ZTogIiIgKyBwb2ludFZhbHVlIH0pOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoeyB2YWx1ZTogJycgfSk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfTsKICAgICAgICBfdGhpcy5vbkNoYW5nZSA9IGZ1bmN0aW9uIChlKSB7CiAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHsgdmFsdWU6IGUuY3VycmVudFRhcmdldC52YWx1ZSB9KTsKICAgICAgICAgICAgaWYgKE51bWJlcihlLmN1cnJlbnRUYXJnZXQudmFsdWUpKSB7CiAgICAgICAgICAgICAgICBfdGhpcy5wcm9wcy5vblNlbGVjdChXZWJGb250U2l6ZUNvbnZlcnNpb25zW051bWJlcihlLmN1cnJlbnRUYXJnZXQudmFsdWUpXSk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICBfdGhpcy5wcm9wcy5vblNlbGVjdCgnJyk7CiAgICAgICAgICAgIH0KICAgICAgICB9OwogICAgICAgIF90aGlzLnN0YXRlID0geyB2YWx1ZTogJycgfTsKICAgICAgICByZXR1cm4gX3RoaXM7CiAgICB9CiAgICBGb250U2l6ZVNlbGVjdC5wcm90b3R5cGUuY29tcG9uZW50RGlkVXBkYXRlID0gZnVuY3Rpb24gKG9sZFByb3BzKSB7CiAgICAgICAgaWYgKG9sZFByb3BzLnNlbGVjdGVkRm9udFNpemUgIT09IHRoaXMucHJvcHMuc2VsZWN0ZWRGb250U2l6ZSkgewogICAgICAgICAgICB0aGlzLnBhcnNlRm9udFNpemUoKTsKICAgICAgICB9CiAgICB9OwogICAgRm9udFNpemVTZWxlY3QucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gKCkgewogICAgICAgIHRoaXMucGFyc2VGb250U2l6ZSgpOwogICAgfTsKICAgIEZvbnRTaXplU2VsZWN0LnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgdmFyIGFsbE9wdGlvbnMgPSBbJyddLmNvbmNhdChXZWJGb250U2l6ZXMubWFwKGZ1bmN0aW9uICh2YWx1ZSkgeyByZXR1cm4gIiIgKyB2YWx1ZTsgfSkpOwogICAgICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudCgic2VsZWN0IiwgeyBvbkNoYW5nZTogdGhpcy5vbkNoYW5nZSwgY2xhc3NOYW1lOiAiY29tcG9zZS1mb250LXNpemUtc2VsZWN0IiwgdmFsdWU6IHRoaXMuc3RhdGUudmFsdWUsIHRhYkluZGV4OiAtMSB9LCBhbGxPcHRpb25zLm1hcChmdW5jdGlvbiAoc2l6ZSkgewogICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudCgib3B0aW9uIiwgeyBrZXk6IHNpemUsIHZhbHVlOiBzaXplIH0sIHNpemUpOwogICAgICAgIH0pKSk7CiAgICB9OwogICAgcmV0dXJuIEZvbnRTaXplU2VsZWN0Owp9KFJlYWN0LlB1cmVDb21wb25lbnQpKTsKZXhwb3J0IGRlZmF1bHQgRm9udFNpemVTZWxlY3Q7Cg=="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/ContentEditable/FontSelect/FontSizeSelect.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/ContentEditable/FontSelect/FontSizeSelect.tsx"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,EACL,YAAY,EACZ,sBAAsB,EACtB,qBAAqB,GACtB,MAAM,6BAA6B,CAAC;AAcrC;IAA6B,kCAAiC;IAC5D;QAAA,YACE,iBAAO,SAER;QAYD,mBAAa,GAAG;YACd,IAAM,QAAQ,GAAG,KAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC;YAC7C,IAAI,QAAQ,EAAE;gBACZ,IAAM,KAAK,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC;gBACjC,IAAM,WAAW,GAAG,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBAC1C,IAAM,KAAK,GAAG,WAAW,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC;gBAC5C,IAAI,KAAK,EAAE;oBACT,IAAM,UAAU,GAAG,QAAQ,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;oBAC9C,IAAM,UAAU,GAAG,qBAAqB,CAAC,UAAU,CAAC,CAAC;oBACrD,IAAI,UAAU,EAAE;wBACd,KAAI,CAAC,QAAQ,CAAC,EAAE,KAAK,EAAE,KAAG,UAAY,EAAE,CAAC,CAAC;qBAC3C;yBAAM;wBACL,KAAI,CAAC,QAAQ,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CAAC;qBAC9B;iBACF;aACF;QACH,CAAC,CAAA;QAED,cAAQ,GAAG,UAAC,CAAqC;YAC/C,KAAI,CAAC,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC,CAAC;YAChD,IAAI,MAAM,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE;gBACjC,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aAC5E;iBAAM;gBACL,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;aACzB;QACH,CAAC,CAAA;QAtCC,KAAI,CAAC,KAAK,GAAG,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC;;IAC7B,CAAC;IAED,2CAAkB,GAAlB,UAAmB,QAAe;QAChC,IAAI,QAAQ,CAAC,gBAAgB,KAAK,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE;YAC7D,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;IACH,CAAC;IAED,0CAAiB,GAAjB;QACE,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IA6BD,+BAAM,GAAN;QACE,IAAM,UAAU,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,UAAA,KAAK,IAAI,OAAA,KAAG,KAAO,EAAV,CAAU,CAAC,CAAC,CAAC;QACtE,OAAO,CACL,gCACE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,SAAS,EAAC,0BAA0B,EACpC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EACvB,QAAQ,EAAE,CAAC,CAAC,IAEX,UAAU,CAAC,GAAG,CAAC,UAAA,IAAI;YAClB,OAAA,gCAAQ,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,IAC3B,IAAI,CACE;QAFT,CAES,CACV,CACM,CACV,CAAC;IACJ,CAAC;IACH,qBAAC;AAAD,CAAC,AA5DD,CAA6B,KAAK,CAAC,aAAa,GA4D/C;AAED,eAAe,cAAc,CAAC","sourcesContent":["import React from 'react';\n\nimport {\n  WebFontSizes,\n  WebFontSizeConversions,\n  matchFontPixelToPoint,\n} from '@src/lib/fonts/WebFontSizes';\n\ninterface Props {\n  onSelect: (value: string) => void;\n  selectedFontSize?: string;\n}\ninterface State {\n  value: string;\n}\n\nexport interface StateProps {\n  fontSizePreference: string;\n}\n\nclass FontSizeSelect extends React.PureComponent<Props, State> {\n  constructor() {\n    super();\n    this.state = { value: '' };\n  }\n\n  componentDidUpdate(oldProps: Props) {\n    if (oldProps.selectedFontSize !== this.props.selectedFontSize) {\n      this.parseFontSize();\n    }\n  }\n\n  componentDidMount() {\n    this.parseFontSize();\n  }\n\n  parseFontSize = () => {\n    const fontSize = this.props.selectedFontSize;\n    if (fontSize) {\n      const regex = new RegExp('\\\\d+');\n      const digitString = fontSize.match(regex);\n      const match = digitString && digitString[0];\n      if (match) {\n        const fontNumber = parseInt(match, undefined);\n        const pointValue = matchFontPixelToPoint(fontNumber);\n        if (pointValue) {\n          this.setState({ value: `${pointValue}` });\n        } else {\n          this.setState({ value: '' });\n        }\n      }\n    }\n  }\n\n  onChange = (e: React.FormEvent<HTMLSelectElement>) => {\n    this.setState({ value: e.currentTarget.value });\n    if (Number(e.currentTarget.value)) {\n      this.props.onSelect(WebFontSizeConversions[Number(e.currentTarget.value)]);\n    } else {\n      this.props.onSelect('');\n    }\n  }\n\n  render() {\n    const allOptions = [''].concat(WebFontSizes.map(value => `${value}`));\n    return (\n      <select\n        onChange={this.onChange}\n        className=\"compose-font-size-select\"\n        value={this.state.value}\n        tabIndex={-1}\n      >\n        {allOptions.map(size =>\n          <option key={size} value={size}>\n            {size}\n          </option>,\n        )}\n      </select>\n    );\n  }\n}\n\nexport default FontSizeSelect;\n"]}]}