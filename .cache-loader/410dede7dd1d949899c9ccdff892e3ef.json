{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/RightSidebar/components/ContactInfo/components/ContactInteractions/components/ConversationsPane/Conversation/Conversation.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/RightSidebar/components/ContactInfo/components/ContactInteractions/components/ConversationsPane/Conversation/Conversation.tsx","mtime":1675280254028},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JzsKaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnOwppbXBvcnQgY2xhc3NuYW1lcyBmcm9tICdjbGFzc25hbWVzJzsKaW1wb3J0IHsgbGFzdCB9IGZyb20gJ2xvZGFzaCc7CmltcG9ydCB7IGdldERpc3BsYXlOYW1lIH0gZnJvbSAnQHNyYy9saWIvYWRkcmVzcyc7CmltcG9ydCB7IHJvdXRlRnJvbU1haWxib3gsIHJvdXRlRnJvbVRocmVhZCwgaXNEcmFmdEJveCB9IGZyb20gJ0BzcmMvbGliL21haWxib3gnOwppbXBvcnQgJy4vQ29udmVyc2F0aW9uLnNjc3MnOwp2YXIgQ29udmVyc2F0aW9uID0gZnVuY3Rpb24gKHByb3BzKSB7CiAgICB2YXIgY29udmVyc2F0aW9uID0gcHJvcHMuY29udmVyc2F0aW9uLCBzZWxlY3RlZE1haWxib3ggPSBwcm9wcy5zZWxlY3RlZE1haWxib3gsIGNlbGxIZWlnaHQgPSBwcm9wcy5jZWxsSGVpZ2h0LCBzZWxlY3RDb252ZXJzYXRpb24gPSBwcm9wcy5zZWxlY3RDb252ZXJzYXRpb24sIGhpc3RvcnkgPSBwcm9wcy5oaXN0b3J5LCBzZWxlY3RlZENvbnZlcnNhdGlvbiA9IHByb3BzLnNlbGVjdGVkQ29udmVyc2F0aW9uLCBzZWxlY3RlZEFjY291bnQgPSBwcm9wcy5zZWxlY3RlZEFjY291bnQ7CiAgICB2YXIgbWVzc2FnZSA9IGxhc3QoY29udmVyc2F0aW9uLm1lc3NhZ2VzKTsKICAgIHZhciBwYXJ0aWNpcGFudHMgPSBtZXNzYWdlID8gbWVzc2FnZS50by5jb25jYXQobWVzc2FnZS5jYy5jb25jYXQobWVzc2FnZS5iY2MpKQogICAgICAgIDogdW5kZWZpbmVkOwogICAgdmFyIHRpbWUgPSBtZXNzYWdlID8KICAgICAgICBtb21lbnQobWVzc2FnZS5pbnRlcm5hbCkuY2FsZW5kYXIodW5kZWZpbmVkLCB7CiAgICAgICAgICAgIHNhbWVEYXk6ICdbVG9kYXldJywKICAgICAgICAgICAgbmV4dERheTogJ1tUb21vcnJvd10nLAogICAgICAgICAgICBuZXh0V2VlazogJ2RkZGQnLAogICAgICAgICAgICBsYXN0RGF5OiAnW1llc3RlcmRheV0nLAogICAgICAgICAgICBsYXN0V2VlazogJ01NTSBEJywKICAgICAgICAgICAgc2FtZUVsc2U6ICdNTU0gRCcsCiAgICAgICAgfSkgOgogICAgICAgIHVuZGVmaW5lZDsKICAgIHZhciBoYW5kbGVDbGljayA9IGZ1bmN0aW9uICgpIHsKICAgICAgICBpZiAoc2VsZWN0ZWRNYWlsYm94KSB7CiAgICAgICAgICAgIHNlbGVjdENvbnZlcnNhdGlvbihjb252ZXJzYXRpb24pOwogICAgICAgICAgICBpZiAoaXNEcmFmdEJveChzZWxlY3RlZE1haWxib3gudHlwZSkpIHsKICAgICAgICAgICAgICAgIGhpc3RvcnkucHVzaChyb3V0ZUZyb21UaHJlYWQoY29udmVyc2F0aW9uLCBzZWxlY3RlZE1haWxib3gsIHNlbGVjdGVkQWNjb3VudCkpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgaGlzdG9yeS5wdXNoKHJvdXRlRnJvbU1haWxib3goc2VsZWN0ZWRNYWlsYm94LCBjb252ZXJzYXRpb24uaWQsIHNlbGVjdGVkQWNjb3VudCkpOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfTsKICAgIGlmICghcGFydGljaXBhbnRzIHx8ICFtZXNzYWdlIHx8ICFwYXJ0aWNpcGFudHMubGVuZ3RoKSB7CiAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIG51bGwpOwogICAgfQogICAgdmFyIG5hbWU7CiAgICB2YXIgcGFydGljaXBhbnRzU3RyaW5nOwogICAgaWYgKHBhcnRpY2lwYW50cy5sZW5ndGggPT09IDEpIHsKICAgICAgICBuYW1lID0gZ2V0RGlzcGxheU5hbWUobWVzc2FnZS5mcm9tKTsKICAgICAgICBwYXJ0aWNpcGFudHNTdHJpbmcgPSBtZXNzYWdlLnNlbnQgPyAiTWUgdG8gIiArIG5hbWUgOgogICAgICAgICAgICBuYW1lICsgIiB0byBNZSI7CiAgICB9CiAgICBlbHNlIHsKICAgICAgICBuYW1lID0gZ2V0RGlzcGxheU5hbWUobWVzc2FnZS5mcm9tKTsKICAgICAgICBwYXJ0aWNpcGFudHNTdHJpbmcgPSBtZXNzYWdlLnNlbnQgPyAiTWUgdG8gIiArIHBhcnRpY2lwYW50cy5sZW5ndGggKyAiIG90aGVycyIgOgogICAgICAgICAgICBuYW1lICsgIiB0byAiICsgcGFydGljaXBhbnRzLmxlbmd0aCArICIgb3RoZXJzIjsKICAgIH0KICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudCgiYnV0dG9uIiwgeyBjbGFzc05hbWU6IGNsYXNzbmFtZXMoJ2NvbnZlcnNhdGlvbicsIHsKICAgICAgICAgICAgc2VsZWN0ZWQ6IHNlbGVjdGVkQ29udmVyc2F0aW9uICYmIHNlbGVjdGVkQ29udmVyc2F0aW9uLmlkID09PSBjb252ZXJzYXRpb24uaWQsCiAgICAgICAgfSksIG9uQ2xpY2s6IGhhbmRsZUNsaWNrLCBzdHlsZTogeyBoZWlnaHQ6IGNlbGxIZWlnaHQgfSB9LAogICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIHsgY2xhc3NOYW1lOiAidGhyZWFkIiwgc3R5bGU6IHsgaGVpZ2h0OiBjZWxsSGVpZ2h0IH0gfSwKICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudCgiaDUiLCB7IGNsYXNzTmFtZTogImhlYWRpbmciIH0sIG1lc3NhZ2Uuc3ViamVjdCksCiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIHsgY2xhc3NOYW1lOiAibWFpbiIgfSwKICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoInNwYW4iLCB7IGNsYXNzTmFtZTogInBhcnRpY2lwYW50cyIgfSwgcGFydGljaXBhbnRzU3RyaW5nKSwKICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoInNwYW4iLCB7IGNsYXNzTmFtZTogIm1pZGRvdCIgfSwgIlx1MDBCNyIpLAogICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudCgic3BhbiIsIHsgY2xhc3NOYW1lOiAidGltZXN0YW1wIiB9LCB0aW1lKSkpKSk7Cn07CmV4cG9ydCBkZWZhdWx0IENvbnZlcnNhdGlvbjsK"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/RightSidebar/components/ContactInfo/components/ContactInteractions/components/ConversationsPane/Conversation/Conversation.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/RightSidebar/components/ContactInfo/components/ContactInteractions/components/ConversationsPane/Conversation/Conversation.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport moment from 'moment';\nimport classnames from 'classnames';\nimport { History } from 'history';\nimport { Thread, Mailbox } from '@src/types';\nimport { last } from 'lodash';\nimport { getDisplayName } from '@src/lib/address';\nimport { routeFromMailbox, routeFromThread, isDraftBox } from '@src/lib/mailbox';\n\nimport './Conversation.scss';\n\nexport interface Props {\n  conversation: Thread;\n  selectedMailbox: Mailbox;\n  cellHeight: number;\n  history: History;\n  selectedConversation: Thread;\n  selectedAccount?: string;\n}\n\nexport interface DispatchProps {\n  selectConversation: (conversation: Thread) => void;\n}\n\nconst Conversation = (props: Props & DispatchProps) => {\n  const {\n    conversation,\n    selectedMailbox,\n    cellHeight,\n    selectConversation,\n    history,\n    selectedConversation,\n    selectedAccount,\n  } = props;\n  const message = last(conversation.messages);\n  const participants = message ? message.to.concat(message.cc.concat(message.bcc))\n    : undefined;\n  const time = message ?\n    moment(message.internal).calendar(undefined, {\n      sameDay: '[Today]',\n      nextDay: '[Tomorrow]',\n      nextWeek: 'dddd',\n      lastDay: '[Yesterday]',\n      lastWeek: 'MMM D',\n      sameElse: 'MMM D',\n    }) :\n    undefined;\n  const handleClick = () => {\n    if (selectedMailbox) {\n      selectConversation(conversation);\n      if (isDraftBox(selectedMailbox.type)) {\n        history.push(routeFromThread(conversation, selectedMailbox, selectedAccount));\n      } else {\n        history.push(routeFromMailbox(selectedMailbox, conversation.id, selectedAccount));\n      }\n    }\n  };\n\n  if (!participants || !message || !participants.length) {\n    return <div />;\n  }\n\n  let name;\n  let participantsString;\n  if (participants.length === 1) {\n    name = getDisplayName(message.from);\n    participantsString = message.sent ? `Me to ${name}` :\n      `${name} to Me`;\n  } else {\n    name = getDisplayName(message.from);\n    participantsString = message.sent ? `Me to ${participants.length} others` :\n      `${name} to ${participants.length} others`;\n  }\n\n  return (\n    <button\n      className={classnames('conversation', {\n        selected: selectedConversation && selectedConversation.id === conversation.id,\n      })}\n      onClick={handleClick}\n      style={{ height: cellHeight }}\n    >\n      <div className=\"thread\" style={{ height: cellHeight }}>\n        <h5 className=\"heading\">{message.subject}</h5>\n        <div className=\"main\">\n          <span className=\"participants\">{participantsString}</span>\n          <span className=\"middot\">&middot;</span>\n          <span className=\"timestamp\">{time}</span>\n        </div>\n      </div>\n    </button>\n  );\n};\n\nexport default Conversation;\n"]}]}