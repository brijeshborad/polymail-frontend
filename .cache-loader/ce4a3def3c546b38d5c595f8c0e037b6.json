{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Login/components/MagicLinkSuccess/index.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Login/components/MagicLinkSuccess/index.ts","mtime":1675280254079},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4JzsKaW1wb3J0IHsgYXV0aExvZ2luIH0gZnJvbSAnQHNyYy9kdWNrcy9hdXRoJzsKaW1wb3J0IE1hZ2ljTGlua1N1Y2Nlc3MgZnJvbSAnLi9NYWdpY0xpbmtTdWNjZXNzJzsKaW1wb3J0IHsgTG9naW5UeXBlIH0gZnJvbSAnQHNyYy9hcGkvYXV0aCc7CmltcG9ydCB7IHdpdGhSb3V0ZXIgfSBmcm9tICdyZWFjdC1yb3V0ZXInOwp2YXIgbWFwU3RhdGVUb1Byb3BzID0gZnVuY3Rpb24gKHN0YXRlLCBvd25Qcm9wcykgeyByZXR1cm4gKHsKICAgIGNvZGU6IG5ldyBVUkxTZWFyY2hQYXJhbXMob3duUHJvcHMubG9jYXRpb24uc2VhcmNoIHx8ICcnKS5nZXQoJ2NvZGUnKSB8fCB1bmRlZmluZWQsCn0pOyB9Owp2YXIgbWFwRGlzcGF0Y2hUb1Byb3BzID0gZnVuY3Rpb24gKGRpc3BhdGNoKSB7IHJldHVybiAoewogICAgbG9naW46IGZ1bmN0aW9uIChjb2RlKSB7IHJldHVybiBkaXNwYXRjaChhdXRoTG9naW4oewogICAgICAgIGVtYWlsOiBudWxsLAogICAgICAgIHBhc3N3b3JkOiBudWxsLAogICAgICAgIG1hZ2ljQ29kZTogY29kZSwKICAgICAgICB0eXBlOiBMb2dpblR5cGUuVHJ1c3RlZCwKICAgIH0pKTsgfSwKfSk7IH07CmV4cG9ydCBkZWZhdWx0IHdpdGhSb3V0ZXIoY29ubmVjdChtYXBTdGF0ZVRvUHJvcHMsIG1hcERpc3BhdGNoVG9Qcm9wcykoTWFnaWNMaW5rU3VjY2VzcykpOwo="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Login/components/MagicLinkSuccess/index.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Login/components/MagicLinkSuccess/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAY,MAAM,aAAa,CAAC;AAChD,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAC5C,OAAO,gBAA+C,MAAM,oBAAoB,CAAC;AACjF,OAAO,EAAE,SAAS,EAAE,MAAM,eAAe,CAAC;AAC1C,OAAO,EAAuB,UAAU,EAAE,MAAM,cAAc,CAAC;AAG/D,IAAM,eAAe,GAAG,UAAC,KAAiB,EAAE,QAAkC,IAAiB,OAAA,CAAC;IAC9F,IAAI,EAAE,IAAI,eAAe,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,SAAS;CACnF,CAAC,EAF6F,CAE7F,CAAC;AAEH,IAAM,kBAAkB,GAAG,UAAC,QAAuB,IAAoB,OAAA,CAAC;IACtE,KAAK,EAAE,UAAA,IAAI,IAAI,OAAA,QAAQ,CAAC,SAAS,CAAC;QAChC,KAAK,EAAE,IAAI;QACX,QAAQ,EAAE,IAAI;QACd,SAAS,EAAE,IAAI;QACf,IAAI,EAAE,SAAS,CAAC,OAAO;KACxB,CAAC,CAAC,EALY,CAKZ;CACJ,CAAC,EAPqE,CAOrE,CAAC;AAEH,eAAe,UAAU,CACvB,OAAO,CAA4B,eAAe,EAAE,kBAAkB,CAAC,CAAC,gBAAgB,CAAC,CAC1F,CAAC","sourcesContent":["import { connect, Dispatch } from 'react-redux';\nimport { authLogin } from '@src/ducks/auth';\nimport MagicLinkSuccess, { StateProps, DispatchProps } from './MagicLinkSuccess';\nimport { LoginType } from '@src/api/auth';\nimport { RouteComponentProps, withRouter } from 'react-router';\nimport { StoreState } from '@src/types';\n\nconst mapStateToProps = (state: StoreState, ownProps: RouteComponentProps<any>): StateProps => ({\n  code: new URLSearchParams(ownProps.location.search || '').get('code') || undefined,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>): DispatchProps => ({\n  login: code => dispatch(authLogin({\n    email: null,\n    password: null,\n    magicCode: code,\n    type: LoginType.Trusted,\n  })),\n});\n\nexport default withRouter(\n  connect<StateProps, DispatchProps>(mapStateToProps, mapDispatchToProps)(MagicLinkSuccess),\n);\n"]}]}