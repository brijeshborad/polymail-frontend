{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/models/billing.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/models/billing.ts","mtime":1675280254066},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnOwppbXBvcnQgeyBCaWxsaW5nVGllciB9IGZyb20gJ0BzcmMvdHlwZXMvYmlsbGluZyc7CmltcG9ydCB7IFRlYW1QbGFuIH0gZnJvbSAnQHNyYy90eXBlcyc7CmV4cG9ydCB2YXIgQmlsbGluZ1VwZ3JhZGVUeXBlOwooZnVuY3Rpb24gKEJpbGxpbmdVcGdyYWRlVHlwZSkgewogICAgQmlsbGluZ1VwZ3JhZGVUeXBlWyJDdXJyZW50Il0gPSAiWW91ciBDdXJyZW50IHBsYW4iOwogICAgQmlsbGluZ1VwZ3JhZGVUeXBlWyJVcGdyYWRlIl0gPSAiVXBncmFkZSI7CiAgICBCaWxsaW5nVXBncmFkZVR5cGVbIkRvd25ncmFkZSJdID0gIkRvd25ncmFkZSI7CiAgICBCaWxsaW5nVXBncmFkZVR5cGVbIlNlbGVjdCJdID0gIlNlbGVjdCI7Cn0pKEJpbGxpbmdVcGdyYWRlVHlwZSB8fCAoQmlsbGluZ1VwZ3JhZGVUeXBlID0ge30pKTsKLy8gSW5mZXJzIHRoZSBDVEEgZm9yIHRoZSB1cGdyYWRlL2N1cnJlbnQvZG93bmdyYWRlIHR5cGVzCmV4cG9ydCB2YXIgaW5mZXJVcGdyYWRlVHlwZSA9IGZ1bmN0aW9uIChzZWxlY3RlZCwgY3VycmVudCkgewogICAgaWYgKCFjdXJyZW50KSB7CiAgICAgICAgcmV0dXJuIEJpbGxpbmdVcGdyYWRlVHlwZS5TZWxlY3Q7CiAgICB9CiAgICBpZiAoY3VycmVudCA9PT0gc2VsZWN0ZWQpIHsKICAgICAgICByZXR1cm4gQmlsbGluZ1VwZ3JhZGVUeXBlLkN1cnJlbnQ7CiAgICB9CiAgICBzd2l0Y2ggKGN1cnJlbnQpIHsKICAgICAgICBjYXNlIEJpbGxpbmdUaWVyLkVudGVycHJpc2U6CiAgICAgICAgICAgIHJldHVybiBCaWxsaW5nVXBncmFkZVR5cGUuRG93bmdyYWRlOwogICAgICAgIGNhc2UgQmlsbGluZ1RpZXIuVGVhbToKICAgICAgICAgICAgaWYgKHNlbGVjdGVkID09PSBCaWxsaW5nVGllci5FbnRlcnByaXNlKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gQmlsbGluZ1VwZ3JhZGVUeXBlLlNlbGVjdDsKICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gQmlsbGluZ1VwZ3JhZGVUeXBlLkRvd25ncmFkZTsKICAgICAgICBkZWZhdWx0OgogICAgICAgICAgICByZXR1cm4gQmlsbGluZ1VwZ3JhZGVUeXBlLlNlbGVjdDsKICAgIH0KfTsKZXhwb3J0IHZhciB0aXRsZUZvclRpZXIgPSBmdW5jdGlvbiAodGllcikgewogICAgc3dpdGNoICh0aWVyKSB7CiAgICAgICAgY2FzZSBCaWxsaW5nVGllci5CYXNpYzoKICAgICAgICBjYXNlIEJpbGxpbmdUaWVyLkJhc2ljVjI6CiAgICAgICAgY2FzZSBCaWxsaW5nVGllci5Qcm86CiAgICAgICAgICAgIHJldHVybiAnQmFzaWMnOwogICAgICAgIGNhc2UgQmlsbGluZ1RpZXIuVGVhbToKICAgICAgICAgICAgcmV0dXJuICdQcmVtaXVtJzsKICAgICAgICBjYXNlIEJpbGxpbmdUaWVyLkVudGVycHJpc2U6CiAgICAgICAgICAgIHJldHVybiAnRW50ZXJwcmlzZSc7CiAgICAgICAgZGVmYXVsdDogcmV0dXJuICdVbmtub3duJzsKICAgIH0KfTsKZXhwb3J0IHZhciBhY2NvdW50TGltaXRDb3B5ID0gZnVuY3Rpb24gKGJpbGxpbmcpIHsKICAgIHZhciBwbGFuID0gYmlsbGluZyA9PT0gbnVsbCB8fCBiaWxsaW5nID09PSB2b2lkIDAgPyB2b2lkIDAgOiBiaWxsaW5nLnN1YnNjcmlwdGlvbjsKICAgIGlmICghcGxhbikgewogICAgICAgIHJldHVybiAiWW91J3JlIGN1cnJlbnRseSBvbiB0aGUgZnJlZSB0cmlhbCwgd2hpY2ggc3VwcG9ydHMgMiBjb25uZWN0ZWQgYWNjb3VudHMiOwogICAgfQogICAgc3dpdGNoIChwbGFuLnRpZXIpIHsKICAgICAgICBjYXNlIEJpbGxpbmdUaWVyLkJhc2ljVjI6CiAgICAgICAgY2FzZSBCaWxsaW5nVGllci5Qcm86CiAgICAgICAgICAgIHJldHVybiAiWW91J3JlIGN1cnJlbnRseSBvbiB0aGUgQmFzaWMgdGllciwgd2hpY2ggc3VwcG9ydHMgMiBjb25uZWN0ZWQgYWNjb3VudHMiOwogICAgICAgIGNhc2UgQmlsbGluZ1RpZXIuVGVhbToKICAgICAgICAgICAgcmV0dXJuICJZb3UncmUgY3VycmVudGx5IG9uIHRoZSBQcmVtaXVtIHRpZXIsIHdoaWNoIHN1cHBvcnRzIDIwIGNvbm5lY3RlZCBhY2NvdW50cyI7CiAgICAgICAgZGVmYXVsdDoKICAgICAgICAgICAgcmV0dXJuICJZb3UndmUgcmVhY2hlZCB0aGUgbWF4aW11bSBudW1iZXIgb2YgYWNjb3VudHMgb24gdGhpcyBwbGFuIjsKICAgIH0KfTsKZXhwb3J0IHZhciB0aWVyRnJvbVRlYW1QbGFuID0gZnVuY3Rpb24gKHBsYW4pIHsKICAgIHN3aXRjaCAocGxhbikgewogICAgICAgIGNhc2UgVGVhbVBsYW4uSW5kaXZpZHVhbDoKICAgICAgICAgICAgcmV0dXJuIEJpbGxpbmdUaWVyLlBybzsKICAgICAgICBjYXNlIFRlYW1QbGFuLlRlYW06CiAgICAgICAgICAgIHJldHVybiBCaWxsaW5nVGllci5UZWFtOwogICAgICAgIGNhc2UgVGVhbVBsYW4uRW50ZXJwcmlzZToKICAgICAgICAgICAgcmV0dXJuIEJpbGxpbmdUaWVyLkVudGVycHJpc2U7CiAgICAgICAgZGVmYXVsdDoKICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDsKICAgIH0KfTsKZXhwb3J0IHZhciB0cmlhbERheXNMZWZ0ID0gZnVuY3Rpb24gKHRyaWFsRXhwaXJlcykgewogICAgaWYgKCF0cmlhbEV4cGlyZXMpIHsKICAgICAgICByZXR1cm4gMDsKICAgIH0KICAgIHZhciBkYXlzTGVmdCA9IG1vbWVudCh0cmlhbEV4cGlyZXMpLnN0YXJ0T2YoJ2RheScpLmRpZmYobW9tZW50KCkuc3RhcnRPZignZGF5JyksICdkYXlzJyk7CiAgICBpZiAoZGF5c0xlZnQgPiAwKSB7CiAgICAgICAgcmV0dXJuIGRheXNMZWZ0OwogICAgfQogICAgcmV0dXJuIDA7Cn07Cg=="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/models/billing.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/models/billing.ts"],"names":[],"mappings":"AAAA,OAAO,MAAM,MAAM,QAAQ,CAAC;AAE5B,OAAO,EAAE,WAAW,EAAW,MAAM,oBAAoB,CAAC;AAC1D,OAAO,EAAE,QAAQ,EAAE,MAAM,YAAY,CAAC;AAEtC,MAAM,CAAN,IAAkB,kBAKjB;AALD,WAAkB,kBAAkB;IAClC,mDAA6B,CAAA;IAC7B,yCAAmB,CAAA;IACnB,6CAAuB,CAAA;IACvB,uCAAiB,CAAA;AACnB,CAAC,EALiB,kBAAkB,KAAlB,kBAAkB,QAKnC;AAED,yDAAyD;AACzD,MAAM,CAAC,IAAM,gBAAgB,GAAG,UAC9B,QAAqB,EAAE,OAAqB;IAE5C,IAAI,CAAC,OAAO,EAAE;QACZ,OAAO,kBAAkB,CAAC,MAAM,CAAC;KAClC;IAED,IAAI,OAAO,KAAK,QAAQ,EAAE;QACxB,OAAO,kBAAkB,CAAC,OAAO,CAAC;KACnC;IAED,QAAQ,OAAO,EAAE;QACf,KAAK,WAAW,CAAC,UAAU;YACzB,OAAO,kBAAkB,CAAC,SAAS,CAAC;QACtC,KAAK,WAAW,CAAC,IAAI;YACnB,IAAI,QAAQ,KAAK,WAAW,CAAC,UAAU,EAAE;gBACvC,OAAO,kBAAkB,CAAC,MAAM,CAAC;aAClC;YACD,OAAO,kBAAkB,CAAC,SAAS,CAAC;QACtC;YACE,OAAO,kBAAkB,CAAC,MAAM,CAAC;KACpC;AACH,CAAC,CAAC;AAEF,MAAM,CAAC,IAAM,YAAY,GAAG,UAAC,IAAiB;IAC5C,QAAQ,IAAI,EAAE;QACZ,KAAK,WAAW,CAAC,KAAK,CAAC;QACvB,KAAK,WAAW,CAAC,OAAO,CAAC;QACzB,KAAK,WAAW,CAAC,GAAG;YAClB,OAAO,OAAO,CAAC;QACjB,KAAK,WAAW,CAAC,IAAI;YACnB,OAAO,SAAS,CAAC;QACnB,KAAK,WAAW,CAAC,UAAU;YACzB,OAAO,YAAY,CAAC;QACtB,OAAO,CAAC,CAAC,OAAO,SAAS,CAAC;KAC3B;AACH,CAAC,CAAC;AAEF,MAAM,CAAC,IAAM,gBAAgB,GAAG,UAAC,OAAiB;IAChD,IAAM,IAAI,GAAG,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,YAAY,CAAC;IACnC,IAAI,CAAC,IAAI,EAAE;QACT,OAAO,yEAAyE,CAAC;KAClF;IAED,QAAQ,IAAI,CAAC,IAAI,EAAE;QACjB,KAAK,WAAW,CAAC,OAAO,CAAC;QACzB,KAAK,WAAW,CAAC,GAAG;YAClB,OAAO,yEAAyE,CAAC;QACnF,KAAK,WAAW,CAAC,IAAI;YACnB,OAAO,4EAA4E,CAAC;QACtF;YACE,OAAO,4DAA4D,CAAC;KACvE;AACH,CAAC,CAAC;AAEF,MAAM,CAAC,IAAM,gBAAgB,GAAG,UAAC,IAAc;IAC7C,QAAQ,IAAI,EAAE;QACZ,KAAK,QAAQ,CAAC,UAAU;YACtB,OAAO,WAAW,CAAC,GAAG,CAAC;QAEzB,KAAK,QAAQ,CAAC,IAAI;YAChB,OAAO,WAAW,CAAC,IAAI,CAAC;QAE1B,KAAK,QAAQ,CAAC,UAAU;YACtB,OAAO,WAAW,CAAC,UAAU,CAAC;QAEhC;YACE,OAAO,SAAS,CAAC;KACpB;AACH,CAAC,CAAC;AAEF,MAAM,CAAC,IAAM,aAAa,GAAG,UAAC,YAAmB;IAC/C,IAAI,CAAC,YAAY,EAAE;QACjB,OAAO,CAAC,CAAC;KACV;IAED,IAAM,QAAQ,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,MAAM,CAAC,CAAC;IAE3F,IAAI,QAAQ,GAAG,CAAC,EAAE;QAChB,OAAO,QAAQ,CAAC;KACjB;IAED,OAAO,CAAC,CAAC;AACX,CAAC,CAAC","sourcesContent":["import moment from 'moment';\n\nimport { BillingTier, Billing } from '@src/types/billing';\nimport { TeamPlan } from '@src/types';\n\nexport const enum BillingUpgradeType {\n  Current = 'Your Current plan',\n  Upgrade = 'Upgrade',\n  Downgrade = 'Downgrade',\n  Select = 'Select',\n}\n\n// Infers the CTA for the upgrade/current/downgrade types\nexport const inferUpgradeType = (\n  selected: BillingTier, current?: BillingTier,\n): BillingUpgradeType => {\n  if (!current) {\n    return BillingUpgradeType.Select;\n  }\n\n  if (current === selected) {\n    return BillingUpgradeType.Current;\n  }\n\n  switch (current) {\n    case BillingTier.Enterprise:\n      return BillingUpgradeType.Downgrade;\n    case BillingTier.Team:\n      if (selected === BillingTier.Enterprise) {\n        return BillingUpgradeType.Select;\n      }\n      return BillingUpgradeType.Downgrade;\n    default:\n      return BillingUpgradeType.Select;\n  }\n};\n\nexport const titleForTier = (tier: BillingTier) => {\n  switch (tier) {\n    case BillingTier.Basic:\n    case BillingTier.BasicV2:\n    case BillingTier.Pro:\n      return 'Basic';\n    case BillingTier.Team:\n      return 'Premium';\n    case BillingTier.Enterprise:\n      return 'Enterprise';\n    default: return 'Unknown';\n  }\n};\n\nexport const accountLimitCopy = (billing?: Billing): string => {\n  const plan = billing?.subscription;\n  if (!plan) {\n    return `You're currently on the free trial, which supports 2 connected accounts`;\n  }\n\n  switch (plan.tier) {\n    case BillingTier.BasicV2:\n    case BillingTier.Pro:\n      return `You're currently on the Basic tier, which supports 2 connected accounts`;\n    case BillingTier.Team:\n      return `You're currently on the Premium tier, which supports 20 connected accounts`;\n    default:\n      return `You've reached the maximum number of accounts on this plan`;\n  }\n};\n\nexport const tierFromTeamPlan = (plan: TeamPlan): BillingTier|undefined => {\n  switch (plan) {\n    case TeamPlan.Individual:\n      return BillingTier.Pro;\n\n    case TeamPlan.Team:\n      return BillingTier.Team;\n\n    case TeamPlan.Enterprise:\n      return BillingTier.Enterprise;\n\n    default:\n      return undefined;\n  }\n};\n\nexport const trialDaysLeft = (trialExpires?: Date): number => {\n  if (!trialExpires) {\n    return 0;\n  }\n\n  const daysLeft = moment(trialExpires).startOf('day').diff(moment().startOf('day'), 'days');\n\n  if (daysLeft > 0) {\n    return daysLeft;\n  }\n\n  return 0;\n};\n"]}]}