{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/tracks.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/tracks.ts","mtime":1675280254053},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkgewogICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHsKICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHsKICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTsKICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKQogICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07CiAgICAgICAgfQogICAgICAgIHJldHVybiB0OwogICAgfTsKICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9Owp2YXIgX2E7CmltcG9ydCB7IGNyZWF0ZSB9IGZyb20gJ0BzcmMvbGliL3JlZHV4JzsKaW1wb3J0IHVwZGF0ZSBmcm9tICdpbW11dGFiaWxpdHktaGVscGVyJzsKaW1wb3J0IHsgY3JlYXRlU2VsZWN0b3IgfSBmcm9tICdAc3JjL2xpYi9zZWxlY3Rvcic7CmltcG9ydCB7IHJlc291cmNlUGVuZGluZyB9IGZyb20gJ0BzcmMvbGliL3Jlc291cmNlJzsKaW1wb3J0IHsgUmVzb3VyY2VTdGF0dXMgfSBmcm9tICdAc3JjL3R5cGVzJzsKZnVuY3Rpb24gY3JlYXRlTmVzdGluZyhzdGF0ZSwgdGhyZWFkLCBtZXNzYWdlKSB7CiAgICB2YXIgX2EsIF9iLCBfYzsKICAgIHZhciBuZXdTdGF0ZSA9IHN0YXRlOwogICAgaWYgKCFuZXdTdGF0ZS50cmFja3NbdGhyZWFkXSkgewogICAgICAgIG5ld1N0YXRlID0gX19hc3NpZ24oX19hc3NpZ24oe30sIHN0YXRlKSwgeyB0cmFja3M6IF9fYXNzaWduKF9fYXNzaWduKHt9LCBzdGF0ZS50cmFja3MpLCAoX2EgPSB7fSwgX2FbdGhyZWFkXSA9IHt9LCBfYSkpIH0pOwogICAgfQogICAgaWYgKCFuZXdTdGF0ZS50cmFja3NbdGhyZWFkXVttZXNzYWdlXSkgewogICAgICAgIG5ld1N0YXRlID0gX19hc3NpZ24oX19hc3NpZ24oe30sIG5ld1N0YXRlKSwgeyB0cmFja3M6IF9fYXNzaWduKF9fYXNzaWduKHt9LCBuZXdTdGF0ZS50cmFja3MpLCAoX2IgPSB7fSwgX2JbdGhyZWFkXSA9IF9fYXNzaWduKF9fYXNzaWduKHt9LCBuZXdTdGF0ZS50cmFja3NbdGhyZWFkXSksIChfYyA9IHt9LCBfY1ttZXNzYWdlXSA9IHJlc291cmNlUGVuZGluZygpLCBfYykpLCBfYikpIH0pOwogICAgfQogICAgcmV0dXJuIG5ld1N0YXRlOwp9CmV4cG9ydCB2YXIgVFJBQ0tfRkVUQ0ggPSAoX2EgPSBjcmVhdGUoJ1RSQUNLU19GRVRDSCcsIHsKICAgIHN0YXJ0OiBmdW5jdGlvbiAoc3RhdGUsIG1ldGEpIHsKICAgICAgICB2YXIgX2EsIF9iOwogICAgICAgIHJldHVybiB1cGRhdGUoY3JlYXRlTmVzdGluZyhzdGF0ZSwgbWV0YS50aHJlYWQsIG1ldGEubWVzc2FnZSksIHsKICAgICAgICAgICAgdHJhY2tzOiAoX2EgPSB7fSwKICAgICAgICAgICAgICAgIF9hW21ldGEudGhyZWFkXSA9IChfYiA9IHt9LAogICAgICAgICAgICAgICAgICAgIF9iW21ldGEubWVzc2FnZV0gPSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXR1czogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgJHNldDogUmVzb3VyY2VTdGF0dXMuTG9hZGluZywKICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIF9iKSwKICAgICAgICAgICAgICAgIF9hKSwKICAgICAgICB9KTsKICAgIH0sCiAgICBzdWNjZXNzOiBmdW5jdGlvbiAoc3RhdGUsIG1ldGEsIHBheWxvYWQpIHsKICAgICAgICB2YXIgX2EsIF9iOwogICAgICAgIHJldHVybiB1cGRhdGUoY3JlYXRlTmVzdGluZyhzdGF0ZSwgbWV0YS50aHJlYWQsIG1ldGEubWVzc2FnZSksIHsKICAgICAgICAgICAgdHJhY2tzOiAoX2EgPSB7fSwKICAgICAgICAgICAgICAgIF9hW21ldGEudGhyZWFkXSA9IChfYiA9IHt9LAogICAgICAgICAgICAgICAgICAgIF9iW21ldGEubWVzc2FnZV0gPSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXR1czogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgJHNldDogUmVzb3VyY2VTdGF0dXMuT2ssCiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICRzZXQ6IHBheWxvYWQsCiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBfYiksCiAgICAgICAgICAgICAgICBfYSksCiAgICAgICAgfSk7CiAgICB9LAogICAgZmFpbHVyZTogZnVuY3Rpb24gKHN0YXRlLCBtZXRhLCBlcnJvcikgewogICAgICAgIHZhciBfYSwgX2I7CiAgICAgICAgcmV0dXJuIHVwZGF0ZShjcmVhdGVOZXN0aW5nKHN0YXRlLCBtZXRhLnRocmVhZCwgbWV0YS5tZXNzYWdlKSwgewogICAgICAgICAgICB0cmFja3M6IChfYSA9IHt9LAogICAgICAgICAgICAgICAgX2FbbWV0YS50aHJlYWRdID0gKF9iID0ge30sCiAgICAgICAgICAgICAgICAgICAgX2JbbWV0YS5tZXNzYWdlXSA9IHsKICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiB7ICRzZXQ6IFJlc291cmNlU3RhdHVzLkZhaWx1cmUgfSwKICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3I6IHsgJHNldDogZXJyb3IgfSwKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIF9iKSwKICAgICAgICAgICAgICAgIF9hKSwKICAgICAgICB9KTsKICAgIH0sCn0pLCBfYS50eXBlKSwgdHJhY2tGZXRjaCA9IF9hLmFjdGlvbiwgdHJhY2tGZXRjaFJlZHVjZXIgPSBfYS5yZWR1Y2VyOwpleHBvcnQgZGVmYXVsdCBbdHJhY2tGZXRjaFJlZHVjZXJdOwpleHBvcnQgdmFyIHNlbGVjdFRyYWNrID0gY3JlYXRlU2VsZWN0b3IoWwogICAgZnVuY3Rpb24gKHN0YXRlLCB0aHJlYWQsIG1lc3NhZ2UpIHsgcmV0dXJuIHN0YXRlLnRyYWNrc1t0aHJlYWRdID8gc3RhdGUudHJhY2tzW3RocmVhZF1bbWVzc2FnZV0gOiB1bmRlZmluZWQ7IH0sCl0sIGZ1bmN0aW9uICh0cmFjaykgewogICAgcmV0dXJuIHRyYWNrOwp9LCB1bmRlZmluZWQsIFsndHJhY2tzJ10pOwo="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/tracks.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/tracks.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,gBAAgB,CAAC;AACxC,OAAO,MAAM,MAAM,qBAAqB,CAAC;AACzC,OAAO,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAC;AAEnD,OAAO,EAAE,eAAe,EAAE,MAAM,mBAAmB,CAAC;AACpD,OAAO,EAAwB,cAAc,EAAS,MAAM,YAAY,CAAC;AAOzE,SAAS,aAAa,CAAC,KAAiB,EAAE,MAAc,EAAE,OAAe;;IACvE,IAAI,QAAQ,GAAG,KAAK,CAAC;IACrB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;QAC5B,QAAQ,yBACH,KAAK,KACR,MAAM,wBACD,KAAK,CAAC,MAAM,gBACd,MAAM,IAAG,EAAE,SAEf,CAAC;KACH;IAED,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,EAAE;QACrC,QAAQ,yBACH,QAAQ,KACX,MAAM,wBACD,QAAQ,CAAC,MAAM,gBACjB,MAAM,0BACF,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,gBACzB,OAAO,IAAG,eAAe,EAAS,eAGxC,CAAC;KACH;IAED,OAAO,QAAQ,CAAC;AAClB,CAAC;AAED,MAAM,CACJ,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAAiB,EACjB,sBAAkB,EAClB,8BAA0B,CAyCzB;AAEH,eAAe,CAAC,iBAAiB,CAAC,CAAC;AAEnC,MAAM,CAAC,IAAM,WAAW,GAAG,cAAc,CAKvC;IACE,UAAC,KAAK,EAAE,MAAM,EAAE,OAAO,IAAK,OAAA,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,EAAhE,CAAgE;CAC7F,EACD,UAAC,KAAgC;IAC/B,OAAO,KAAK,CAAC;AACf,CAAC,EACD,SAAS,EACT,CAAC,QAAQ,CAAC,CACX,CAAC","sourcesContent":["import { create } from '@src/lib/redux';\nimport update from 'immutability-helper';\nimport { createSelector } from '@src/lib/selector';\n\nimport { resourcePending } from '@src/lib/resource';\nimport { StoreState, Resource, ResourceStatus, Track } from '@src/types';\n\nexport interface TrackFetchMeta {\n  thread: string;\n  message: string;\n}\n\nfunction createNesting(state: StoreState, thread: string, message: string): StoreState {\n  let newState = state;\n  if (!newState.tracks[thread]) {\n    newState = {\n      ...state,\n      tracks: {\n        ...state.tracks,\n        [thread]: {},\n      },\n    };\n  }\n\n  if (!newState.tracks[thread][message]) {\n    newState = {\n      ...newState,\n      tracks: {\n        ...newState.tracks,\n        [thread]: {\n          ...newState.tracks[thread],\n          [message]: resourcePending<Track>(),\n        },\n      },\n    };\n  }\n\n  return newState;\n}\n\nexport const {\n  type: TRACK_FETCH,\n  action: trackFetch,\n  reducer: trackFetchReducer,\n} = create<TrackFetchMeta, Track>('TRACKS_FETCH', {\n  start: (state, meta) =>\n    update(createNesting(state, meta.thread, meta.message), {\n      tracks: {\n        [meta.thread]: {\n          [meta.message]: {\n            status: {\n              $set: ResourceStatus.Loading,\n            },\n          },\n        },\n      },\n    }),\n  success: (state, meta, payload) =>\n    update(createNesting(state, meta.thread, meta.message), {\n      tracks: {\n        [meta.thread]: {\n          [meta.message]: {\n            status: {\n              $set: ResourceStatus.Ok,\n            },\n            data: {\n              $set: payload,\n            },\n          },\n        },\n      },\n    }),\n\n  failure: (state, meta, error) =>\n    update(createNesting(state, meta.thread, meta.message), {\n      tracks: {\n        [meta.thread]: {\n          [meta.message]: {\n            status: { $set: ResourceStatus.Failure },\n            error: { $set: error },\n          },\n        },\n      },\n    }),\n});\n\nexport default [trackFetchReducer];\n\nexport const selectTrack = createSelector<\n  string,\n  Resource<Track>|undefined,\n  Resource<Track>|undefined\n>(\n  [\n    (state, thread, message) => state.tracks[thread] ? state.tracks[thread][message] : undefined,\n  ],\n  (track: Resource<Track>|undefined) => {\n    return track;\n  },\n  undefined,\n  ['tracks'],\n);\n"]}]}