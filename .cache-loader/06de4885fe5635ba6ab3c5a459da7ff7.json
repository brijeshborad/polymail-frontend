{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/RightSidebar/components/Onboarding/Legend/components/OnboardingSectionDetail/OnboardingSectionDetail.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/RightSidebar/components/Onboarding/Legend/components/OnboardingSectionDetail/OnboardingSectionDetail.tsx","mtime":1675286480570},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/RightSidebar/components/Onboarding/Legend/components/OnboardingSectionDetail/OnboardingSectionDetail.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/RightSidebar/components/Onboarding/Legend/components/OnboardingSectionDetail/OnboardingSectionDetail.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Spring, animated, config } from 'react-spring';\nimport classnames from 'classnames';\nimport {\n  Hotkeys, Preferences,\n  KeyCode, OnboardingType, Action, Features, Account, Onboarding,\n} from '@src/types';\nimport './OnboardingSectionDetail.scss';\nimport { Hotkey, HotkeyCode, HotkeyAction, hotkeysTypeahead, getHotkey, getHotkeyByName } from '@src/lib/hotkeys';\nimport RoundCheckmark from '@src/components/Icons/RoundCheckmark.svg';\nimport KeyboardSymbol from '@src/components/Base/KeyboardSymbol/KeyboardSymbol';\nimport { indexOf } from 'lodash';\nimport { createMailToDraft } from '@src/lib/draft';\nimport { draftCreate } from '@src/ducks/drafts';\nimport {\n  hotkeyForOnboarding,\n  randomizedReinforcement, onboardingRequiresThread,\n  onboardingRequiresDraft,\n} from '@src/lib/onboarding';\nimport { onboardingPatch } from '@src/ducks/me';\nimport { RouteComponentProps } from 'react-router';\nimport browserHistory from '@src/lib/browserHistory';\nimport { getOnboardingActions } from '@src/lib/OnboardingDispatcher';\nimport { Subscription } from 'rxjs';\nimport { IS_MAC } from '@src/lib/device';\nimport OnboardingTip, { AnchorPosition } from '@src/components/Onboarding/components/OnboardingTip/OnboardingTip';\nimport DemoVideoPreview from '@src/components/DemoVideo/DemoVideoPreview';\nimport { isFocusedOnEditableContent } from '@src/lib/utils';\nimport { AmplitudeEvents, logAmplitudeEvent } from '@src/lib/amplitude-analytics';\n\nexport interface StateProps {\n  accounts: Account[];\n  features: Features;\n  preferences: Preferences;\n  onboarding: Onboarding;\n  isDraft?: boolean;\n  isThread?: boolean;\n  allSteps: OnboardingType[];\n}\n\ninterface State {\n  hotkeyType: Hotkeys;\n  transitionAnimation: boolean;\n  hotkeyActivated: boolean;\n  continueActivated: boolean;\n  manualCompletionActivated: boolean;\n  showOnboardingTip?: boolean;\n  activatedHotkeys: {\n    [key: string]: boolean,\n  };\n}\n\nexport interface DispatchProps {\n  updatePreferences: (preferences: Preferences) => void;\n  dispatchAction: (action: Action<any, any>) => void;\n  claimCredit: (action: Partial<Onboarding>) => void;\n  toggleMute: (action: boolean) => void;\n}\n\nexport interface Props {\n  currentStep?: OnboardingType;\n  activeStep?: OnboardingType;\n  onManualNext?: () => void;\n  onLegendClick: () => void;\n}\n\n// tslint:disable-next-line:max-line-length\n// TODO(SHIN): Introduction (Getting Started Information)\nclass OnboardingSectionDetail extends React.PureComponent<\n  Props & StateProps & DispatchProps & RouteComponentProps<any>, State\n> {\n\n  timeout: NodeJS.Timer;\n\n  onboardingSubscription: Subscription;\n\n  constructor(props: Props & StateProps & DispatchProps & RouteComponentProps<any>) {\n    super(props);\n\n    this.state = {\n      hotkeyType: props.preferences.hotkeys,\n      transitionAnimation: false,\n      hotkeyActivated: false,\n      continueActivated: false,\n      manualCompletionActivated: false,\n      activatedHotkeys: {},\n    };\n  }\n\n  // Observes firing of onboarding events through dispatcher mechanism (since unneeded by redux)\n  componentDidMount() {\n    this.setState({ transitionAnimation: false });\n    document.body.addEventListener('keydown', this.observeKeyDown);\n\n    if (this.props.currentStep === OnboardingType.SendMessage) {\n      this.setState({ showOnboardingTip: true });\n    }\n\n    this.observeOnboardingEvents();\n  }\n\n  // Unmounts subscriptions and removes event listeners\n  componentWillUnmount() {\n    this.onboardingSubscription.unsubscribe();\n    document.body.removeEventListener('keydown', this.observeKeyDown);\n    clearTimeout(this.timeout);\n  }\n\n  // Handles Observing Onboarding Event that are manually completed\n  observeOnboardingEvents = () => {\n    this.onboardingSubscription = getOnboardingActions().subscribe({\n      next: (a) => {\n        const { activeStep, currentStep } = this.props;\n        const { transitionAnimation } = this.state;\n\n        // Do not observe actions if transition animation activated\n        if (transitionAnimation) {\n          return;\n        }\n\n        // Let default handling occur if active step is equal to current step\n        if (activeStep === currentStep) {\n          return;\n        }\n\n        // Mark completion if active step is true\n        if (a === activeStep) {\n          // Handle state updates for manual completions\n          this.setState({\n            transitionAnimation: true,\n            continueActivated: false,\n            manualCompletionActivated: true,\n          });\n        }\n      },\n    });\n  }\n\n  // Custom observation for key events to show intermediate step completions\n  observeKeyDown = (e: KeyboardEvent) => {\n    const { activeStep, isDraft, isThread } = this.props;\n    const { transitionAnimation } = this.state;\n    const hotkey = getHotkey(e);\n    if (!activeStep) {\n      return;\n    }\n\n    if (transitionAnimation && e.keyCode === KeyCode.Enter) {\n      this.handleContinue();\n      e.stopPropagation();\n      e.preventDefault();\n    }\n\n    // Do not observe hotkeys when prerequisites have not been met\n    if (activeStep && !transitionAnimation && !isThread && onboardingRequiresThread(activeStep)) {\n      return;\n    }\n\n    // Do not observe hotkeys when prerequisites have not been met, except for draft create\n    if (activeStep && !transitionAnimation && !isDraft && onboardingRequiresDraft(activeStep)) {\n\n      // Don't activate new draft if in a editable element\n      if (isFocusedOnEditableContent()) {\n        return;\n      }\n\n      if (activeStep && hotkey?.name === HotkeyAction.NewDraft) {\n        if (activeStep === OnboardingType.FollowUpReminder) {\n          logAmplitudeEvent(AmplitudeEvents.TourStepTwo, { skipped: false });\n        }\n\n        this.handleDraftCreate();\n        e.stopPropagation();\n        e.preventDefault();\n        return;\n      }\n    }\n\n    const { activatedHotkeys } = this.state;\n\n    // TODO(SHIN): Activate hotkey\n    switch (activeStep) {\n      case OnboardingType.NextThread:\n      case OnboardingType.Archive:\n        if (\n          !activatedHotkeys[HotkeyAction.NextThread] &&\n          [KeyCode.J, KeyCode.Down].indexOf(e.keyCode) > -1\n        ) {\n          const updated = {\n            ...activatedHotkeys,\n            [HotkeyAction.NextThread]: true,\n          };\n          this.setState({ activatedHotkeys: updated });\n        }\n\n        if (!activatedHotkeys[HotkeyAction.PreviousThread] &&\n          [KeyCode.K, KeyCode.Up].indexOf(e.keyCode) > -1\n        ) {\n          const updated = {\n            ...activatedHotkeys,\n            [HotkeyAction.PreviousThread]: true,\n          };\n          this.setState({ activatedHotkeys: updated });\n        }\n\n        if (hotkey && activeStep && hotkeyForOnboarding(activeStep) === hotkey.name) {\n          const updated = {\n            ...activatedHotkeys,\n            [hotkey.name]: true,\n          };\n          this.setState({ activatedHotkeys: updated });\n        }\n\n        break;\n      default:\n        if (hotkey && activeStep && hotkeyForOnboarding(activeStep) === hotkey.name) {\n          const updated = {\n            ...activatedHotkeys,\n            [hotkey.name]: true,\n          };\n          this.setState({ activatedHotkeys: updated });\n        }\n    }\n  }\n\n  componentDidUpdate(oldProps: Props & StateProps & DispatchProps, oldState: State) {\n    if (oldProps !== this.props) {\n      this.setState({\n        hotkeyType: this.props.preferences.hotkeys,\n      });\n    }\n\n    const nextOnboarding = this.props.currentStep;\n    if (nextOnboarding !== oldProps.currentStep) {\n      this.setState({\n        transitionAnimation: true, continueActivated: false,\n      }); return;\n    }\n  }\n\n  handleContinue = () => {\n    const { manualCompletionActivated } = this.state;\n    this.setState({ continueActivated: true, hotkeyActivated: true }, () => {\n      clearTimeout(this.timeout);\n      this.timeout = global.setTimeout(\n        () => {\n          this.setState(\n            {\n              transitionAnimation: false,\n              activatedHotkeys: {},\n              manualCompletionActivated: false,\n            },\n            () => {\n              if (manualCompletionActivated) {\n                this.handleManualNext();\n              }\n            },\n          );\n        },\n        1000,\n      );\n    });\n  }\n\n  handleCreditClaim = () => {\n    const { claimCredit } = this.props;\n    claimCredit({ claimedCredit: true });\n    logAmplitudeEvent(AmplitudeEvents.TourStepFourteen, { skipped: false });\n  }\n\n  handleDownloadNativeApps = () => {\n    const { dispatchAction } = this.props;\n    dispatchAction(onboardingPatch({\n      type: { downloadNativeApps: true },\n      skipped: false,\n    }));\n    logAmplitudeEvent(AmplitudeEvents.TourStepThirteen, { skipped: false });\n    getOnboardingActions().next(OnboardingType.DownloadNativeApps);\n    window.open('https://polymail.io/download?download=1&utm_source=polymail&utm_campaign=webapp', '_blank');\n  }\n\n  handleDraftCreate = () => {\n    const { preferences, dispatchAction, accounts, features, activeStep } = this.props;\n\n    if (preferences && activeStep && activeStep === OnboardingType.SaveAsTemplate) {\n      const mailToString = 'Poly Bot <onboarding+extras@polymail.io>?subject=⚡️ '\n        + 'Saving a Message Template!&body=Hello! 👋🏼\\n\\n'\n        + 'We\\'ll be using this draft to create a template from a message you are creating.'\n        + '\\n\\n'\n        + 'Try following the instructions on the right to save this as a template!';\n      browserHistory.push('/mail');\n      const draft = createMailToDraft(accounts[0], preferences, features, mailToString);\n      dispatchAction(draftCreate(draft));\n      return;\n    }\n\n    if (preferences && activeStep && activeStep !== OnboardingType.SendMessage) {\n      const mailToString = 'Poly Bot <onboarding+extras@polymail.io>?subject=⚡️ '\n        + 'Sending Messages in Polymail!&body=Hello! 👋🏼\\n\\n'\n        + 'Let\\'s learn some other features to supercharge your messages in Polymail.\\n\\n'\n        + 'Check the right sidebar for more information! ------->';\n      browserHistory.push('/mail');\n      const draft = createMailToDraft(accounts[0], preferences, features, mailToString);\n      dispatchAction(draftCreate(draft));\n      return;\n    }\n\n    if (preferences) {\n      const mailToString = 'Poly Bot <onboarding@polymail.io>?subject=⚡️ '\n        + 'Send your first message with tracking!&body=Hello! 👋🏼\\n\\n'\n        + 'Polymail automatically gives you insights on the emails you send!'\n        + '\\n\\n'\n        + 'Try clicking send to see how it works!';\n      browserHistory.push('/mail');\n      const draft = createMailToDraft(accounts[0], preferences, features, mailToString);\n      dispatchAction(draftCreate(draft));\n    }\n  }\n\n  // Handles skipping sections\n  handleSkip = () => {\n    const { dispatchAction, currentStep } = this.props;\n    if (dispatchAction && currentStep) {\n      switch (currentStep) {\n        case OnboardingType.NextThread:\n          dispatchAction(onboardingPatch({\n            skipped: true,\n            type: { steps: { nextThread: true } },\n          }));\n          logAmplitudeEvent(AmplitudeEvents.TourStepSix, { skipped: true });\n          return;\n        case OnboardingType.Archive:\n          dispatchAction(onboardingPatch({\n            skipped: true,\n            type: { steps: { archive: true } },\n          }));\n          logAmplitudeEvent(AmplitudeEvents.TourStepSeven, { skipped: true });\n          return;\n        case OnboardingType.ReadLater:\n          dispatchAction(onboardingPatch({\n            skipped: true,\n            type: { steps: { readLater: true } },\n          }));\n          logAmplitudeEvent(AmplitudeEvents.TourStepNine, { skipped: true });\n          return;\n        case OnboardingType.Undo:\n          dispatchAction(onboardingPatch({\n            skipped: true,\n            type: { steps: { undo: true } },\n          }));\n          logAmplitudeEvent(AmplitudeEvents.TourStepEight, { skipped: true });\n          return;\n        case OnboardingType.SaveAsTemplate:\n          dispatchAction(onboardingPatch({\n            skipped: true,\n            type: { steps: { saveAsTemplate: true } },\n          }));\n          logAmplitudeEvent(AmplitudeEvents.TourStepFive, { skipped: true });\n          return;\n        case OnboardingType.SendMessage:\n          dispatchAction(onboardingPatch({\n            skipped: true,\n            type: { sendMessage: true },\n          }));\n          logAmplitudeEvent(AmplitudeEvents.TourStepOneSend, { skipped: true });\n          return;\n        case OnboardingType.SendLater:\n          dispatchAction(onboardingPatch({\n            skipped: true,\n            type: { steps: { sendLater: true } },\n          }));\n          logAmplitudeEvent(AmplitudeEvents.TourStepTwo, { skipped: true });\n          return;\n        case OnboardingType.FollowUpReminder:\n          dispatchAction(onboardingPatch({\n            skipped: true,\n            type: { steps: { followUpReminder: true } },\n          }));\n          logAmplitudeEvent(AmplitudeEvents.TourStepThree, { skipped: true });\n          return;\n        case OnboardingType.MessageTemplates:\n          dispatchAction(onboardingPatch({\n            skipped: true,\n            type: { steps: { messageTemplates: true } },\n          }));\n          logAmplitudeEvent(AmplitudeEvents.TourStepFour, { skipped: true });\n          return;\n        case OnboardingType.ShareThread:\n          dispatchAction(onboardingPatch({\n            skipped: true,\n            type: { steps: { shareThread: true } },\n          }));\n          logAmplitudeEvent(AmplitudeEvents.TourStepTen, { skipped: true });\n          return;\n        case OnboardingType.Comment:\n          dispatchAction(onboardingPatch({\n            skipped: true,\n            type: { steps: { comment: true } },\n          }));\n          logAmplitudeEvent(AmplitudeEvents.TourStepEleven, { skipped: true });\n          return;\n        case OnboardingType.Scheduling:\n          dispatchAction(onboardingPatch({\n            skipped: true,\n            type: { steps: { scheduling: true } },\n          }));\n          return;\n        case OnboardingType.DownloadNativeApps:\n          dispatchAction(onboardingPatch({\n            skipped: true,\n            type: { downloadNativeApps: true },\n          }));\n          logAmplitudeEvent(AmplitudeEvents.TourStepThirteen, { skipped: true });\n          return;\n        case OnboardingType.ClaimCredit:\n          dispatchAction(onboardingPatch({\n            skipped: true,\n            type: { claimedCredit: true },\n          }));\n          logAmplitudeEvent(AmplitudeEvents.TourStepFourteen, { skipped: true });\n          return;\n        default: return;\n      }\n    }\n  }\n\n  renderStep = (h: Hotkey & HotkeyCode) => {\n    const { activatedHotkeys } = this.state;\n    const navigateInboxActivation = h.name === HotkeyAction.NavigateInbox &&\n      browserHistory.location.pathname.startsWith('/mail');\n    return (\n      <div\n        className=\"steps-wrapper\"\n        key={`${h.name}-onboarding-step`}\n      >\n        <div\n          className=\"hotkeys\"\n        >\n          <div\n            className={\n              classnames('hotkey', {\n                activated: navigateInboxActivation || !!(activatedHotkeys[h.name]),\n              })\n            }\n            key={h.name}\n          >\n            <div className=\"name\">{h.name}</div>\n            {!!h.metaKey && <KeyboardSymbol character={KeyCode.LeftWindowKey} />}\n            {!!h.ctrlKey && <KeyboardSymbol character={KeyCode.Ctrl} />}\n            {!!h.shiftKey && <KeyboardSymbol character={KeyCode.Shift} />}\n            {!!h.altKey && <KeyboardSymbol character={KeyCode.Alt} />}\n            {!!h.keyCode && <KeyboardSymbol character={h.keyCode} />}\n            {!!h.altKeyCode && <span>/</span>}\n            {!!h.altKeyCode && <KeyboardSymbol character={h.altKeyCode} />}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderSteps = (step: OnboardingType) => {\n    let hotkey: Hotkey & HotkeyCode | undefined;\n\n    switch (step) {\n      case OnboardingType.NextThread:\n        // Identify counter\n        const renderArray = [];\n        const nextThreadAction = hotkeyForOnboarding(OnboardingType.NextThread);\n        if (step && nextThreadAction) {\n          hotkey = hotkeysTypeahead(nextThreadAction)[0] as Hotkey & HotkeyCode;\n          if (hotkey) {\n            renderArray.push(this.renderStep(hotkey));\n          }\n        }\n\n        const previousThreadAction = hotkeyForOnboarding(OnboardingType.PreviousThread);\n        if (step && previousThreadAction) {\n          hotkey = hotkeysTypeahead(previousThreadAction)[0] as Hotkey & HotkeyCode;\n          if (hotkey) {\n            renderArray.push(this.renderStep(hotkey));\n          }\n        }\n\n        return renderArray;\n\n      default:\n\n        // Identify counter\n        const action = hotkeyForOnboarding(step);\n        if (step && action) {\n          hotkey = hotkeysTypeahead(action)[0] as Hotkey & HotkeyCode;\n        }\n\n        if (hotkey) {\n          return this.renderStep(hotkey);\n        }\n    }\n\n    return null;\n  }\n\n  renderDraftCreateStep = () => {\n    const createDraft = HotkeyAction.NewDraft;\n    const createDraftHotkey = getHotkeyByName(createDraft);\n    if (!createDraftHotkey) { return null; }\n    return (\n      this.renderStep(createDraftHotkey as Hotkey & HotkeyCode)\n    );\n  }\n\n  renderPrerequisiteStep = (step: OnboardingType) => {\n    const { isDraft, isThread } = this.props;\n\n    // Draft Step\n    if (onboardingRequiresDraft(step) && !isDraft) {\n      const createDraft = HotkeyAction.NewDraft;\n      const createDraftHotkey = getHotkeyByName(createDraft);\n      if (!createDraftHotkey) { return null; }\n      return (\n        this.renderStep(createDraftHotkey as Hotkey & HotkeyCode)\n      );\n    }\n\n    // Prerequisites for handling thread actions\n    if (onboardingRequiresThread(step) && !isThread) {\n      const navigateInbox = HotkeyAction.NavigateInbox;\n      const navigateInboxHotkey = getHotkeyByName(navigateInbox);\n      if (!navigateInboxHotkey) { return null; }\n\n      const nextThread = HotkeyAction.NextThread;\n      const nextThreadHotkey = getHotkeyByName(nextThread);\n      if (!nextThreadHotkey) { return null; }\n      return (\n        [\n          this.renderStep(navigateInboxHotkey as Hotkey & HotkeyCode),\n          this.renderStep(nextThreadHotkey as Hotkey & HotkeyCode),\n        ]\n      );\n    }\n\n    return null;\n  }\n\n  renderCommandControlStep = (step: OnboardingType) => {\n    let copy = '';\n    const { transitionAnimation } = this.state;\n    switch (step) {\n      case OnboardingType.SaveAsTemplate:\n        copy = 'Save as Template';\n        break;\n      case OnboardingType.ReadLater:\n        copy = 'Tomorrow Morning';\n        break;\n      case OnboardingType.ShareThread:\n        copy = 'Share Conversation';\n        break;\n      case OnboardingType.SendLater:\n        copy = '5 mins';\n        break;\n      case OnboardingType.FollowUpReminder:\n        copy = '2 days';\n        break;\n      case OnboardingType.Scheduling:\n        copy = 'Meeting Times';\n        break;\n      default:\n        break;\n    }\n\n    if (!copy) {\n      return null;\n    }\n\n    return (\n      <div\n        className={classnames('steps-wrapper', 'secondary')}\n        key={`${step}-onboarding-step-command`}\n      >\n        <div\n          className={classnames('hotkeys')}\n        >\n          <div\n            className={classnames('hotkey', { activated: transitionAnimation })}\n            key={`${step}-next-step`}\n          >\n            <span className=\"name\">Type: <span className=\"bold\">\"{copy}\"</span></span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderTitle = (h: OnboardingType | undefined) => {\n    const { onboarding } = this.props;\n    let c = 'You Are Unstoppable! 👏';\n    if (h) {\n      switch (h) {\n        case OnboardingType.Archive:\n          c = 'Marking things as done';\n          break;\n        case OnboardingType.ReadLater:\n          c = 'Snoozing Emails';\n          break;\n        case OnboardingType.NextThread:\n          c = 'Becoming a Polymail Master! 💌';\n          break;\n        case OnboardingType.Undo:\n          c = 'Undoing Actions';\n          break;\n        case OnboardingType.Block:\n          c = 'Blocking Senders';\n          break;\n        case OnboardingType.CommandLater:\n          c = 'The Command Center';\n          break;\n\n        // Draft handlers\n\n        case OnboardingType.SendMessage:\n          c = 'Send Your First Message';\n          break;\n\n        case OnboardingType.SendLater:\n          c = 'Scheduling Emails';\n          break;\n        case OnboardingType.FollowUpReminder:\n          c = 'Never miss a Follow up!';\n          break;\n        case OnboardingType.MessageTemplates:\n          c = 'Message Templates';\n          break;\n        case OnboardingType.SaveAsTemplate:\n          c = 'Save as Template';\n          break;\n        case OnboardingType.Complete:\n          c = 'Getting Started!';\n          break;\n\n        case OnboardingType.ShareThread:\n          c = 'Sharing Conversations';\n          break;\n\n        case OnboardingType.Comment:\n          c = 'Adding Comments';\n          break;\n\n        case OnboardingType.ActivityFeed:\n          c = 'Activity Feed';\n          break;\n\n        case OnboardingType.Scheduling:\n          c = 'Sharing Meeting Times';\n          break;\n\n        case OnboardingType.DownloadNativeApps:\n          c = 'Download Desktop App';\n          break;\n\n        case OnboardingType.ClaimCredit:\n          c = 'Claim Your $10 Credit!';\n          if (onboarding.claimedCredit) {\n            c = 'You\\'ve claimed your $10 credit for Polymail!';\n          }\n          break;\n\n        default:\n          c = 'Section Complete!';\n          break;\n      }\n    }\n    return (\n      <div className=\"copy\">\n        <h5 key={c}>{c}</h5>\n      </div>\n    );\n  }\n\n  renderInfoSection = (h: OnboardingType | undefined) => {\n    const { isDraft, isThread } = this.props;\n    // tslint:disable-next-line:max-line-length\n    let c: string | JSX.Element = <span />;\n    if (h) {\n      switch (h) {\n        case OnboardingType.Archive:\n          // tslint:disable-next-line:max-line-length\n          // tslint:disable-next-line:max-line-length\n          c = <span> <br />When you're done with an email, always make sure to archive it.<br /><br />This keeps your inbox clean and full of only important tasks for your day!<br/><br/>Choose any email -- we'll teach you how to undo any action next!</span>;\n          if (!isThread) {\n            // tslint:disable-next-line:max-line-length\n            c = <span> <br />Let's start by going to your inbox and selecting a thread!<br/><br/>Feel free to use the suggested <b>hotkeys</b> or the <b>Command Center</b></span>;\n          }\n          break;\n        case OnboardingType.ReadLater:\n          // tslint:disable-next-line:max-line-length\n          c = <span> <br />You can read later an email when you don't need to handle it today. <br /><br />Try setting an email to read <b>tomorrow morning</b></span>;\n          break;\n        case OnboardingType.NextThread:\n          // tslint:disable-next-line:max-line-length\n          c = <span> <br />Let's teach you how to get around Polymail quickly! <br /><br />Tap either of the keys below to move between threads!</span>;\n          break;\n        case OnboardingType.Undo:\n          // tslint:disable-next-line:max-line-length\n          c = <span> <br />Wait! 🙈 <br /><br />If you took an action you didn't want, you can always bring the message back by tapping undo! <br/><br/> Try undoing the last action you just took</span>;\n          break;\n        case OnboardingType.Block:\n          // tslint:disable-next-line:max-line-length\n          c = <span> <br />Have any emails you want to stop receiving? <br /><br /> We've made it simple to block or unsubscribe from anyone!</span>;\n          break;\n        case OnboardingType.CommandLater:\n          // tslint:disable-next-line:max-line-length\n          c = <span> <br />If you ever forget a hotkey, we make it easy to find any action you'd like to perform!<br /> <br /> Try typing <b>Read Later</b> in the Command Center, then set an email to read <b>3 days</b> from now!</span>;\n          break;\n\n        // Draft Actions\n        case OnboardingType.SendMessage:\n          // tslint:disable-next-line:max-line-length\n          c = <span> <br />Polymail gives you tools to save time and get insights from the messages you send.<br/><br/>Try sending this example message to start.</span>;\n          if (!isDraft) {\n            // tslint:disable-next-line:max-line-length\n            c = <span> <br />Lets send your first message on Polymail!<br /><br /> Start by creating a new message!</span>;\n          }\n          break;\n\n        case OnboardingType.SendLater:\n          // tslint:disable-next-line:max-line-length\n          c = <span> <br />If you want to schedule to send later, you can choose a date and time to send in the future.<br /><br />Try scheduling an email for <b>5 minutes</b> from now</span>;\n          if (!isDraft) {\n            // tslint:disable-next-line:max-line-length\n            c = <span> <br />Learn how to supercharge the emails you send out!<br /><br /> Start by creating another message!</span>;\n          }\n          break;\n        case OnboardingType.FollowUpReminder:\n          // tslint:disable-next-line:max-line-length\n          c = <span> <br />Set a followup reminder on an email to get notified when you haven't received a reply within a set amount of time!<br /><br />Try setting a follow up reminder for <b>2 days</b> from now!</span>;\n          if (!isDraft) {\n            // tslint:disable-next-line:max-line-length\n            c = <span> <br />Learn how to supercharge the emails you send out!<br /><br /> Start by creating another message!</span>;\n          }\n          break;\n        case OnboardingType.SaveAsTemplate:\n          // tslint:disable-next-line:max-line-length\n          c = <span> <br />If you ever want to reuse a draft you can save it as a template!<br /> <br /> Try opening the Command Center and type <b>Save as Template</b> to save a draft as a template!</span>;\n          const templateRoute = this.props.location.pathname.startsWith('/templates');\n          if (!isDraft && !templateRoute) {\n            // tslint:disable-next-line:max-line-length\n            c = <span> <br />Learn how to supercharge the emails you send out!<br /><br />Start by creating another message!</span>;\n          }\n          break;\n        case OnboardingType.MessageTemplates:\n          // tslint:disable-next-line:max-line-length\n          c = <span> <br />You can access any Message Templates you have created in the past to automatically fill in content and files for your new messages!<br/><br/>Try selecting a Message Template to insert into this draft!</span>;\n          if (!isDraft) {\n            // tslint:disable-next-line:max-line-length\n            c = <span> <br />Learn how to supercharge the emails you send out!<br /><br /> Start by creating another message!</span>;\n          }\n          break;\n        case OnboardingType.ShareThread:\n          // tslint:disable-next-line:max-line-length\n          c = <span> <br />You can share a live link to any of your conversations to provide context to your team.<br /><br />Try typing <b>Share Conversation</b> in the Command Center</span>;\n          if (!isThread) {\n            // tslint:disable-next-line:max-line-length\n            c = <span> <br />Let's start by going to your inbox and selecting a thread!<br/><br/>Feel free to use the suggested <b>hotkeys</b> or the <b>Command Center</b></span>;\n          }\n          break;\n\n        case OnboardingType.Comment:\n          // tslint:disable-next-line:max-line-length\n          c = <span> <br />Leave a comment to provide yourself or any teammates with additional information surrounding a conversation. <br /><br />It's useful for context when you visit a conversation in the future! Try to <b>post a comment</b> on one of your messages</span>;\n          if (!isThread) {\n            // tslint:disable-next-line:max-line-length\n            c = <span> <br />Let's start by going to your inbox and selecting a thread!<br/><br/>Feel free to use the suggested <b>hotkeys</b> or the <b>Command Center</b></span>;\n          }\n          break;\n\n        case OnboardingType.ActivityFeed:\n          // tslint:disable-next-line:max-line-length\n          c = <span> <br />You can also check out our Activity Feed in the Right Sidebar to get a live feed of all the interactions with your sent emails so you can always follow up promptly!<br /><br />Try typing <b>Activity Feed</b> in the <b>Command Center</b></span>;\n          break;\n\n        case OnboardingType.Scheduling:\n          // tslint:disable-next-line:max-line-length\n          c = <span><br />If you're setting up a meeting, share your calendar availabilities, so your recipient can book a mutual time that works for them! <br/> <br /> Try typing <b>Meeting Times</b> in the Command Center</span>;\n          break;\n\n        case OnboardingType.ClaimCredit:\n          // tslint:disable-next-line:max-line-length\n          c = <span><br />Congratulations, you're all set up to hit the ground running in Polymail!</span>;\n          break;\n\n        case OnboardingType.Complete:\n          c = <span><br />Great job! Moving onto the next section!</span>;\n          break;\n\n        case OnboardingType.DownloadNativeApps:\n          // tslint:disable-next-line:max-line-length\n          c = <span><br />Download the desktop client on Polymail for the best experience!<br/><br />Use Polymail with improved search, offline capabilities, and better performance!</span>;\n          break;\n\n        default:\n          c = <span> <br />Great job! Now you're ready to manage your inbox at full speed!</span>;\n          break;\n      }\n    }\n    return (\n      <div\n        key={`info-${h}`}\n        className=\"info-section\"\n      >\n        <div className=\"copy\">\n          {c}\n        </div>\n      </div>\n    );\n  }\n\n  renderSecondInfoSection = (h: OnboardingType | undefined) => {\n    let c: JSX.Element | string = '';\n    if (h) {\n      switch (h) {\n        case OnboardingType.ReadLater:\n          // tslint:disable-next-line:max-line-length\n          c = <span><br />At the date and time you choose, we'll pop that email to the top of your inbox! <br/><br/>You can also find these emails in your <b>Read Later</b> folder.</span>;\n          break;\n        case OnboardingType.Archive:\n          // tslint:disable-next-line:max-line-length\n          c = <span> <br />Don't worry! You can find any email you archive by searching or going to your <b>Archive</b> folder.</span>;\n          break;\n        case OnboardingType.NextThread:\n          // c = <span><br />Give it a try! 👆</span>;\n          break;\n        case OnboardingType.PreviousThread:\n          // c = <span><br />Let's keep it going! 🏃</span>;\n          break;\n        case OnboardingType.Undo:\n          // c = <span><br />Try undoing the last action that you just took! 🔙</span>;\n          break;\n        case OnboardingType.Block:\n          // tslint:disable-next-line:max-line-length\n          c = <span><br />Try blocking any email and see what happens! Don't worry, we'll give you a chance to confirm if you really want to block someone! 🙅</span>;\n          break;\n        case OnboardingType.CommandLater:\n          // tslint:disable-next-line:max-line-length\n          c = <span><br />You can use the command center to find a hotkey, or you can type any action and perform it directly from there!</span>;\n          break;\n        case OnboardingType.SendLater:\n          // tslint:disable-next-line:max-line-length\n          c = <span><br /> Once you choose a time, we'll handle everything on our end to make sure your message gets sent at that point in time!<br /><br />You can find these drafts in your <b>Send Later</b> folder.</span>;\n          break;\n        case OnboardingType.FollowUpReminder:\n          // tslint:disable-next-line:max-line-length\n          c = <span> <br />If you haven't received a reply by the time period you chose, we'll bring this email back into your inbox so you can take action on it!<br/> <br/>You can find these messages in your <b>Follow Up</b> folder</span>;\n          break;\n\n        case OnboardingType.MessageTemplates:\n          // tslint:disable-next-line:max-line-length\n          c = <span> <br />You can save a ton of time by using pre-written responses to messages!</span>;\n          break;\n        case OnboardingType.ShareThread:\n          // tslint:disable-next-line:max-line-length\n          c = <span> <br />You can update permissions to anyone by clicking <b>Manage</b>.<br /><br />All the conversations you've shared can be found in the Left sidebar via <b>Shared By Me</b></span>;\n          break;\n\n        case OnboardingType.ClaimCredit:\n          // tslint:disable-next-line:max-line-length\n          c = <span><br />Claim your free $10 credit for Polymail below</span>;\n          break;\n\n        // case OnboardingType.Comment:\n        //   // tslint:disable-next-line:max-line-length\n        //   c = <span> <br />Try posting a comment below!</span>;\n          break;\n        case OnboardingType.Complete:\n          c = '';\n          break;\n        default:\n          c = '';\n          break;\n      }\n    }\n    return (\n      <div\n        key={`s-info-${h}`}\n        className={classnames('info-section', 'secondary')}\n      >\n        <div className=\"copy\">\n          {c}\n        </div>\n      </div>\n    );\n  }\n\n  handleClick = (e: React.MouseEvent<HTMLElement>) => {\n    const threadList = document.getElementsByClassName('infinite-thread-list');\n    const element = threadList[0];\n    if (element && element instanceof HTMLElement) {\n      element.focus();\n    }\n    e.stopPropagation();\n    e.preventDefault();\n  }\n\n  renderNextStepCta = (counter: number) => {\n    const { transitionAnimation, continueActivated } = this.state;\n    if (!transitionAnimation) {\n      return null;\n    }\n\n    return (\n      <Spring\n        config={config.slow}\n        delay={1000}\n        from={{ opacity: 0, t: 0 }}\n        to={{\n          opacity: !!transitionAnimation ? 1 : 0,\n          t: !!transitionAnimation ? 1 : 0,\n        }}\n      >\n        {checkAnimation => transitionAnimation && (\n          <animated.div\n            className={classnames('next-section-cta', { activated: continueActivated })}\n            style={{\n              opacity: checkAnimation.opacity,\n              transform: checkAnimation.t.to({\n                range: [0, 0.25, .5, 0.75, 1],\n                output: [0.8, 1.05, 1.1, 1.05, 1.0],\n              }).to(x => `scale(${x})`),\n            }}\n          >\n            <div className=\"copy\">\n              {`${randomizedReinforcement(counter)} To continue, tap:`}\n            </div>\n            <KeyboardSymbol character={KeyCode.Enter} />\n          </animated.div>\n        )}\n      </Spring>\n    );\n  }\n\n  renderSucessCheckmark = () => {\n    const { transitionAnimation } = this.state;\n    return (\n      <Spring\n        config={config.gentle}\n        from={{ opacity: 0, t: 0 }}\n        to={{\n          opacity: !!transitionAnimation ? 1 : 0,\n          t: !!transitionAnimation ? 1 : 0,\n        }}\n      >\n        {checkAnimation => transitionAnimation && (\n          <animated.div\n            style={{\n              opacity: checkAnimation.opacity,\n              transform: checkAnimation.t.interpolate({\n                range: [0, 0.25, .5, 0.75, 1],\n                output: [0.5, 1.1, 1.15, 1.1, 1.0],\n              }).interpolate(x => `scale(${x})`),\n            }}\n            className=\"transition\"\n          >\n            <RoundCheckmark className=\"check\" height=\"20px\" width=\"20px\" />\n          </animated.div>\n        ) || null}\n      </Spring>\n    );\n  }\n\n  handleManualNext = () => {\n    const { onManualNext } = this.props;\n    if (onManualNext) {\n      onManualNext();\n    }\n  }\n\n  handleTipClear = () => {\n    this.setState(\n      { showOnboardingTip: false },\n      () => {\n        const threadList = document.getElementsByClassName('infinite-thread-list');\n        const element = threadList[0];\n        if (element && element instanceof HTMLElement) {\n          element.focus();\n        }\n      });\n  }\n\n  renderVideoSection = (step: OnboardingType) => {\n    const { transitionAnimation } = this.state;\n    if (transitionAnimation) {\n      return null;\n    }\n\n    switch (step) {\n      case OnboardingType.SendMessage:\n        return (\n          <DemoVideoPreview\n            demoVideo={{\n              name: OnboardingType.SendMessage,\n              thumbnailUrl: 'https://image.mux.com/GZCODZ01AaA6xlsgYZ7Oi2YkrPb6BUw01iRn300LGjQXBY/thumbnail.png?width=400&height=240&fit_mode=smartcrop&time=02',\n              // tslint:disable-next-line:max-line-length\n              url: 'https://stream.mux.com/GZCODZ01AaA6xlsgYZ7Oi2YkrPb6BUw01iRn300LGjQXBY/medium.mp4',\n              captionUrl: 'https://stream.mux.com/GZCODZ01AaA6xlsgYZ7Oi2YkrPb6BUw01iRn300LGjQXBY/text/rfn9cC00nexhCueC4006VM6Zh01Bkc7qrKfk02Om2Ew57qn7o2mv6vqc5w.vtt',\n            }}\n            width={200}\n            labelDisclosure\n          />\n        );\n      case OnboardingType.SendLater:\n        return (\n          <DemoVideoPreview\n            demoVideo={{\n              name: OnboardingType.SendLater,\n              thumbnailUrl: 'https://image.mux.com/HAUS2PxEgU2sOdr2ebmtpUS1Okec35LA5HDeZJ3TgXo/thumbnail.png?width=400&height=240&fit_mode=smartcrop&time=02',\n              // tslint:disable-next-line:max-line-length\n              url: 'https://stream.mux.com/HAUS2PxEgU2sOdr2ebmtpUS1Okec35LA5HDeZJ3TgXo/medium.mp4',\n              captionUrl: 'https://stream.mux.com/HAUS2PxEgU2sOdr2ebmtpUS1Okec35LA5HDeZJ3TgXo/text/8ZKVfWpBliLkINpGG01IuUflQFqdlzDvwDNmKPcyk7612Q6Zxu3z01Kw.vtt',\n            }}\n            width={200}\n            labelDisclosure\n          />\n        );\n      case OnboardingType.ReadLater:\n        return (\n          <DemoVideoPreview\n            demoVideo={{\n              name: OnboardingType.ReadLater,\n              thumbnailUrl: 'https://image.mux.com/E7OFu4Vl46Nu00QHXBvGV00Pg801qEF4lD01whcrw1X00KJs/thumbnail.png?width=400&height=240&fit_mode=smartcrop&time=02',\n              // tslint:disable-next-line:max-line-length\n              url: 'https://stream.mux.com/E7OFu4Vl46Nu00QHXBvGV00Pg801qEF4lD01whcrw1X00KJs/medium.mp4',\n              captionUrl: 'https://stream.mux.com/E7OFu4Vl46Nu00QHXBvGV00Pg801qEF4lD01whcrw1X00KJs/text/X302Jcix6qYwlPAmx2Hclft4aIQh2Ob4y7yPWwxdDXnczpe7TgvTf02Q.vtt',\n            }}\n            width={200}\n            labelDisclosure\n          />\n        );\n      case OnboardingType.SaveAsTemplate:\n        return (\n          <DemoVideoPreview\n            demoVideo={{\n              name: OnboardingType.SaveAsTemplate,\n              thumbnailUrl: 'https://image.mux.com/BJd8OerEh3oFN8JpgSBfT1VM4XYdF63mj4bg01aZ6s5Y/thumbnail.png?width=400&height=240&fit_mode=smartcrop&time=02',\n              // tslint:disable-next-line:max-line-length\n              url: 'https://stream.mux.com/BJd8OerEh3oFN8JpgSBfT1VM4XYdF63mj4bg01aZ6s5Y/medium.mp4',\n              captionUrl: 'https://stream.mux.com/BJd8OerEh3oFN8JpgSBfT1VM4XYdF63mj4bg01aZ6s5Y/text/OXc6A25Q02VSY00WemQju1V01LC01dzIfxgmhLSYd7CcbjAPfzEpfanOrg.vtt',\n            }}\n            width={200}\n            labelDisclosure\n          />\n        );\n      case OnboardingType.MessageTemplates:\n        return (\n          <DemoVideoPreview\n            demoVideo={{\n              name: OnboardingType.MessageTemplates,\n              thumbnailUrl: 'https://image.mux.com/VZuLnu1I00EPUR9llhLab526Mx4SK502qYS2jW1YrUfvg/thumbnail.png?width=400&height=240&fit_mode=smartcrop',\n              // tslint:disable-next-line:max-line-length\n              url: 'https://stream.mux.com/VZuLnu1I00EPUR9llhLab526Mx4SK502qYS2jW1YrUfvg/medium.mp4',\n              captionUrl: 'https://stream.mux.com/VZuLnu1I00EPUR9llhLab526Mx4SK502qYS2jW1YrUfvg/text/G01VabuzAfELsamWpsD8HMJQkxvjOGWUw00Sl536o7SzGxGc00rZFPUUQ.vtt',\n            }}\n            width={200}\n            labelDisclosure\n          />\n        );\n\n      case OnboardingType.Scheduling:\n        return (\n          <DemoVideoPreview\n            demoVideo={{\n              name: OnboardingType.Scheduling,\n              thumbnailUrl: 'https://image.mux.com/vhaIiRTZCuVwgq3zWLtuvY02fKi6gLKVvszyh4l01wpm00/thumbnail.png?width=400&height=240&fit_mode=smartcrop',\n              url: 'https://stream.mux.com/vhaIiRTZCuVwgq3zWLtuvY02fKi6gLKVvszyh4l01wpm00/medium.mp4',\n            }}\n            width={200}\n            labelDisclosure\n          />\n        );\n      default:\n        return null;\n    }\n  }\n\n  render() {\n    const {\n      currentStep, isDraft, activeStep, isThread, allSteps, onboarding,\n    } = this.props;\n    const { transitionAnimation, manualCompletionActivated, showOnboardingTip } = this.state;\n\n    const displayedStep = activeStep || currentStep;\n    let counter = 0;\n    let step: OnboardingType | undefined;\n\n    // Identify counter\n    const stepsLength = allSteps.length;\n\n    // Set counter for what step we're on\n    counter = displayedStep ? indexOf(allSteps, displayedStep) : -1;\n\n    // If standard progression, subtract one from current Onboarding while in a transition step.\n    if (!manualCompletionActivated && transitionAnimation) {\n      counter = counter - 1;\n    }\n\n    // Match hotkey\n    step = allSteps[counter];\n\n    // Identify if prerequisites for step have to be filled\n    let hideCopy = false;\n    if (!transitionAnimation) {\n      if (onboardingRequiresDraft(step) && !isDraft) {\n        hideCopy = true;\n      } else if (onboardingRequiresThread(step) && !isThread) {\n        hideCopy = true;\n      }\n    }\n\n    // Default state\n    if (!step) {\n      step = OnboardingType.Complete;\n    }\n\n    // Message for Onboarding Tip\n    const onboardingMessage = (\n      <span>\n        We'll be sharing steps here to help you learn how to use Polymail most effectively!\n        <br/>\n        <br/>\n        Complete all the steps and you'll receive a $10 credit to any paid plan!\n      </span>\n    );\n\n    return (\n      <div className=\"onboarding-section-detail\">\n        {showOnboardingTip && (\n          <OnboardingTip\n            title=\"Learn How to Use Polymail\"\n            message={onboardingMessage}\n            right=\"274px\"\n            anchorPosition={AnchorPosition.Right}\n            onNext={this.handleTipClear}\n          />\n        )}\n        <div className=\"title\">\n          {this.renderTitle(step)}\n        </div>\n        <div className=\"progress\">\n          <div className=\"top\">\n            {counter > -1 &&\n              <div className=\"copy\">\n                {`${counter} of ${stepsLength || 0} completed`}\n              </div>\n            }\n            {counter === -1 &&\n              <div className=\"copy\">\n                {`Great job! Moving on`}\n              </div>\n            }\n            {this.renderSucessCheckmark()}\n          </div>\n          <div className=\"progress-bar\">\n            <div\n              style={{\n                width: `${ 100.0 * counter / stepsLength}%`,\n              }}\n              className=\"progress-bar-completed\"\n            />\n          </div>\n        </div>\n        {this.renderInfoSection(step)}\n        {!hideCopy &&\n          this.renderSteps(step)\n        }\n        {!hideCopy && this.renderCommandControlStep(step)}\n        {!transitionAnimation && !onboarding.claimedCredit &&\n          activeStep === OnboardingType.ClaimCredit && // Show create draft button\n          <button onClick={this.handleCreditClaim} className=\"create-draft\">\n            Claim Credit\n          </button>\n        }\n        {!transitionAnimation &&\n          activeStep === OnboardingType.DownloadNativeApps && // Show create draft button\n          <button onClick={this.handleDownloadNativeApps} className=\"create-draft\">\n            {IS_MAC ? 'Download Mac App' : 'Download Windows App'}\n          </button>\n        }\n        {hideCopy && // Show create draft button\n          this.renderPrerequisiteStep(step)\n        }\n        {!hideCopy && transitionAnimation && // Do not show when draft is not open and draft section\n          this.renderSecondInfoSection(step)\n        }\n        {this.renderNextStepCta(counter)}\n        {\n          this.renderVideoSection(step)\n        }\n        <div className=\"disclosure-area\">\n          <button onClick={this.props.onLegendClick}>\n            See previous steps\n          </button>\n          {currentStep === activeStep && (\n            <button\n              className={classnames('skip-button', { hide: transitionAnimation })}\n              onClick={this.handleSkip}\n            >\n              Skip Step\n            </button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default OnboardingSectionDetail;\n"]}]}