{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/api/asana.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/api/asana.ts","mtime":1675280253979},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnOwppbXBvcnQgeyBqc29uUmVxdWVzdCB9IGZyb20gJy4vYmFzZSc7CmltcG9ydCB7IGNyZWF0ZUFzYW5hUHJvamVjdCwgY3JlYXRlQXNhbmFVc2VyLCBjcmVhdGVBc2FuYVdvcmtzcGFjZSB9IGZyb20gJ0BzcmMvbW9ja3MvYXNhbmEnOwp2YXIgQXNhbmFDbGllbnQgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7CiAgICBmdW5jdGlvbiBBc2FuYUNsaWVudCgpIHsKICAgIH0KICAgIEFzYW5hQ2xpZW50LnByb3RvdHlwZS5nZXRQcm9qZWN0cyA9IGZ1bmN0aW9uIChxdWVyeSkgewogICAgICAgIHJldHVybiBqc29uUmVxdWVzdCh7CiAgICAgICAgICAgIG1ldGhvZDogJ0dFVCcsCiAgICAgICAgICAgIHJvdXRlOiAiL3YxL2FzYW5hL3Byb2plY3RzP3E9IiArIGVuY29kZVVSSUNvbXBvbmVudChxdWVyeSksCiAgICAgICAgfSk7CiAgICB9OwogICAgQXNhbmFDbGllbnQucHJvdG90eXBlLmdldFVzZXJzID0gZnVuY3Rpb24gKHF1ZXJ5KSB7CiAgICAgICAgcmV0dXJuIGpzb25SZXF1ZXN0KHsKICAgICAgICAgICAgbWV0aG9kOiAnR0VUJywKICAgICAgICAgICAgcm91dGU6ICIvdjEvYXNhbmEvdXNlcnM/cT0iICsgZW5jb2RlVVJJQ29tcG9uZW50KHF1ZXJ5KSwKICAgICAgICB9KTsKICAgIH07CiAgICBBc2FuYUNsaWVudC5wcm90b3R5cGUuZ2V0V29ya3NwYWNlcyA9IGZ1bmN0aW9uICgpIHsKICAgICAgICByZXR1cm4ganNvblJlcXVlc3QoewogICAgICAgICAgICBtZXRob2Q6ICdHRVQnLAogICAgICAgICAgICByb3V0ZTogIi92MS9hc2FuYS93b3Jrc3BhY2VzIiwKICAgICAgICB9KTsKICAgIH07CiAgICByZXR1cm4gQXNhbmFDbGllbnQ7Cn0oKSk7CmV4cG9ydCB7IEFzYW5hQ2xpZW50IH07CmV4cG9ydCBmdW5jdGlvbiBtb2NrQXNhbmFDbGllbnQoKSB7CiAgICByZXR1cm4gewogICAgICAgIGdldFByb2plY3RzOiBmdW5jdGlvbiAoKSB7IHJldHVybiBPYnNlcnZhYmxlLm9mKFtjcmVhdGVBc2FuYVByb2plY3QoKV0pOyB9LAogICAgICAgIGdldFVzZXJzOiBmdW5jdGlvbiAoKSB7IHJldHVybiBPYnNlcnZhYmxlLm9mKFtjcmVhdGVBc2FuYVVzZXIoKV0pOyB9LAogICAgICAgIGdldFdvcmtzcGFjZXM6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIE9ic2VydmFibGUub2YoW2NyZWF0ZUFzYW5hV29ya3NwYWNlKCldKTsgfSwKICAgIH07Cn0K"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/api/asana.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/api/asana.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,MAAM,CAAC;AAElC,OAAO,EAAE,WAAW,EAAE,MAAM,QAAQ,CAAC;AAErC,OAAO,EAAE,kBAAkB,EAAE,eAAe,EAAE,oBAAoB,EAAE,MAAM,kBAAkB,CAAC;AAQ7F;IAAA;IAqBA,CAAC;IApBC,iCAAW,GAAX,UAAY,KAAa;QACvB,OAAO,WAAW,CAAC;YACjB,MAAM,EAAE,KAAK;YACb,KAAK,EAAE,0BAAwB,kBAAkB,CAAC,KAAK,CAAG;SAC3D,CAAC,CAAC;IACL,CAAC;IAED,8BAAQ,GAAR,UAAS,KAAa;QACpB,OAAO,WAAW,CAAC;YACjB,MAAM,EAAE,KAAK;YACb,KAAK,EAAE,uBAAqB,kBAAkB,CAAC,KAAK,CAAG;SACxD,CAAC,CAAC;IACL,CAAC;IAED,mCAAa,GAAb;QACE,OAAO,WAAW,CAAC;YACjB,MAAM,EAAE,KAAK;YACb,KAAK,EAAE,sBAAsB;SAC9B,CAAC,CAAC;IACL,CAAC;IACH,kBAAC;AAAD,CAAC,AArBD,IAqBC;;AAED,MAAM,UAAU,eAAe;IAC7B,OAAO;QACL,WAAW,EAAE,cAAM,OAAA,UAAU,CAAC,EAAE,CAAC,CAAC,kBAAkB,EAAE,CAAC,CAAC,EAArC,CAAqC;QACxD,QAAQ,EAAE,cAAM,OAAA,UAAU,CAAC,EAAE,CAAC,CAAC,eAAe,EAAE,CAAC,CAAC,EAAlC,CAAkC;QAClD,aAAa,EAAE,cAAM,OAAA,UAAU,CAAC,EAAE,CAAC,CAAC,oBAAoB,EAAE,CAAC,CAAC,EAAvC,CAAuC;KAC7D,CAAC;AACJ,CAAC","sourcesContent":["import { Observable } from 'rxjs';\n\nimport { jsonRequest } from './base';\nimport { AsanaProject, AsanaUser, AsanaWorkspace } from '@src/types/asana';\nimport { createAsanaProject, createAsanaUser, createAsanaWorkspace } from '@src/mocks/asana';\n\nexport interface AsanaAPI {\n  getProjects: (query: string) => Observable<AsanaProject[]>;\n  getUsers: (query: string) => Observable<AsanaUser[]>;\n  getWorkspaces: () => Observable<AsanaWorkspace[]>;\n}\n\nexport class AsanaClient implements AsanaAPI {\n  getProjects(query: string): Observable<AsanaProject[]> {\n    return jsonRequest({\n      method: 'GET',\n      route: `/v1/asana/projects?q=${encodeURIComponent(query)}`,\n    });\n  }\n\n  getUsers(query: string): Observable<AsanaUser[]> {\n    return jsonRequest({\n      method: 'GET',\n      route: `/v1/asana/users?q=${encodeURIComponent(query)}`,\n    });\n  }\n\n  getWorkspaces(): Observable<AsanaWorkspace[]> {\n    return jsonRequest({\n      method: 'GET',\n      route: `/v1/asana/workspaces`,\n    });\n  }\n}\n\nexport function mockAsanaClient(): AsanaAPI {\n  return {\n    getProjects: () => Observable.of([createAsanaProject()]),\n    getUsers: () => Observable.of([createAsanaUser()]),\n    getWorkspaces: () => Observable.of([createAsanaWorkspace()]),\n  };\n}\n"]}]}