{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Mentions/Mentions.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Mentions/Mentions.tsx","mtime":1675280254081},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Mentions/Mentions.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Mentions/Mentions.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport LeftSidebar from '@src/components/LeftSidebar';\nimport { Page, RightSidebarTab } from '@src/types/rightSidebar';\nimport RightSidebar from '@src/components/RightSidebar';\nimport './Mentions.scss';\nimport SharedThreadList from './components/SharedThreadList';\nimport ThreadDetail from '@src/components/ThreadDetail';\nimport { NavbarTab } from '@src/types/leftSidebar';\nimport SharedThreadsOnboarding from './components/SharedThreadsOnboarding/SharedThreadsOnboarding';\nimport {\n  Thread,\n  Action,\n  ThreadCommitMeta,\n  ThreadBox,\n  KeyCode,\n  Draft,\n  CommandControlType,\n  MailboxType,\n  Preferences,\n  UnsubscribeBehavior,\n  BlockContactActionType,\n} from '@src/types';\nimport {\n  HotkeyAction,\n  getHotkey,\n  checkNextHotkeyChange,\n} from '@src/lib/hotkeys';\nimport CommandControl from '@src/components/CommandControl';\nimport browserHistory from '@src/lib/browserHistory';\nimport { recordEvent, UserEvents } from '@src/lib/analytics';\nimport { hotkeyUpdate } from '@src/ducks/hotkeys';\nimport Toast from '@src/components/Base/Toast';\nimport { SharedThreadsMode } from '@src/types/sharedThreads';\nimport { filterDelete, filterSet, filterBlockCreate } from '@src/ducks/filters';\nimport { last, startCase } from 'lodash';\nimport { addressToEmail } from '@src/lib/address';\nimport Confirm, { Props as ConfirmProps } from '@src/components/Base/Confirm';\nimport { Filter } from '@src/types/filters';\nimport BlockConfirm, {\n  Props as BlockConfirmProps,\n} from '@src/components/Base/BlockConfirm/BlockConfirm';\nimport { commandControlShow } from '@src/ducks/commandControl';\nimport { leftSidebarToggle } from '@src/ducks/leftSidebar';\nimport { rightSidebarTabSelect } from '@src/ducks/rightSidebar';\nimport ContactSupport from '@src/components/ContactSupport';\nimport { AmplitudeEvents, logAmplitudeEvent } from '@src/lib/amplitude-analytics';\n\nexport interface Props {\n  preferences?: Preferences;\n  selectedThread?: Thread;\n  draft?: Draft;\n  hideActions?: boolean;\n  rightSidebarCollapsed: boolean;\n  rightSidebarTab?: RightSidebarTab;\n  unsubscribeLink?: string;\n  commandControlType?: CommandControlType;\n  schedulingUrl?: string;\n  userSharedThreads?: boolean;\n  showSharedThreadsOnboarding?: boolean;\n  sharedThreadsLoaded?: boolean;\n  hotkeyActions?: { [key: string]: number };\n  blockFilter?: Filter;\n}\n\nexport interface DispatchProps {\n  dispatchAction: (action: Action<any, any>) => void;\n  selectContact: (email: string) => void;\n  submitCommitMeta: (commitMeta: ThreadCommitMeta) => void;\n  collapseRightSidebar: (collapse: boolean) => void;\n  updateHotkey: (hotkey: HotkeyAction) => void;\n}\n\nexport interface State {\n  confirmProps?: ConfirmProps;\n  blockConfirmProps?: BlockConfirmProps;\n}\n\nclass Mentions extends React.PureComponent<Props & DispatchProps, State> {\n\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  getPathAndLogEvent = () => {\n    // otherwise this gets called twice when navigating to shared by me\n    if (window.location.pathname === '/mentions') {\n      logAmplitudeEvent(AmplitudeEvents.ViewTeamMentions);\n    }\n    if (window.location.pathname === '/sharedThreads') {\n      logAmplitudeEvent(AmplitudeEvents.ViewSharedByMe);\n    }\n  }\n\n  componentDidMount () {\n    this.getPathAndLogEvent();\n  }\n\n  componentDidUpdate(oldProps: Props & DispatchProps) {\n    const oldActions = oldProps.hotkeyActions || {};\n    const newActions = this.props.hotkeyActions || {};\n    this.handleHotkeyActionsChange(oldActions, newActions);\n    this.getPathAndLogEvent();\n\n    if (document.activeElement && document.activeElement.tagName === 'BODY') {\n      this.handleFocus();\n    }\n\n    if (document.activeElement && document.activeElement.tagName === 'BODY') {\n      this.handleFocus();\n    }\n  }\n\n  handleUnsubscribe = () => {\n    const { selectedThread, unsubscribeLink, preferences, submitCommitMeta } = this.props;\n    if (selectedThread && unsubscribeLink && preferences) {\n      window.open(unsubscribeLink, '_blank');\n      recordEvent(UserEvents.Unsubscribed);\n      switch (preferences.unsubscribeBehavior) {\n        case UnsubscribeBehavior.Archive:\n          submitCommitMeta({\n            singleResource: selectedThread.id,\n            box: ThreadBox.Archive,\n          });\n          break;\n        case UnsubscribeBehavior.Trash:\n          submitCommitMeta({\n            singleResource: selectedThread.id,\n            box: ThreadBox.Trash,\n          });\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  handleHotkeyActionsChange = (\n    oldActions: { [action: string]: number },\n    newActions: { [action: string]: number },\n  ) => {\n    const {\n      dispatchAction,\n      selectedThread,\n      preferences,\n      submitCommitMeta,\n      blockFilter,\n      unsubscribeLink,\n    } = this.props;\n    // Handle Unblock toggle\n    if (checkNextHotkeyChange(HotkeyAction.UnblockSender, newActions, oldActions)) {\n      if (blockFilter) {\n        dispatchAction(filterDelete(blockFilter.id));\n        return;\n      }\n    }\n\n    // Handle Block toggle\n    if (checkNextHotkeyChange(HotkeyAction.BlockSender, newActions, oldActions)) {\n      if (selectedThread) {\n        const senderLastMessage = last(selectedThread.messages);\n        if (!senderLastMessage) {\n          return;\n        }\n\n        if (!preferences) {\n          return;\n        }\n        // Handle setting block\n        const sender = addressToEmail(senderLastMessage.from).toLowerCase();\n        const blockConfirmProps: BlockConfirmProps = {\n          title: `Block ${sender}`,\n          // tslint:disable-next-line:max-line-length\n          message: `Messages received from this sender will be blocked and automatically moved to ${startCase(preferences.blockContactAction)}.`,\n          hasUnsubscribe: !!unsubscribeLink,\n          onUnsubscribeClick: () => {\n            // Handle unsubscribe\n            this.setState(\n              { blockConfirmProps: undefined },\n              () => this.handleUnsubscribe(),\n            );\n          },\n          onConfirm: () => {\n            // Block filter\n            dispatchAction(filterSet(filterBlockCreate(sender)));\n\n            // Handle sending to proper destination box\n            switch (preferences.blockContactAction) {\n              case BlockContactActionType.Archive:\n                const blockArchiveCommit: ThreadCommitMeta = {\n                  singleResource: selectedThread.id,\n                  box: ThreadBox.Archive,\n                };\n                submitCommitMeta(blockArchiveCommit);\n                break;\n              case BlockContactActionType.Trash:\n                const blockTrashCommit: ThreadCommitMeta = {\n                  singleResource: selectedThread.id,\n                  box: ThreadBox.Trash,\n                };\n                submitCommitMeta(blockTrashCommit);\n                break;\n              default: break;\n            }\n\n            // Remove confirmProps\n            this.setState({ blockConfirmProps: undefined });\n          },\n          onCancel: () => {\n            this.setState({ blockConfirmProps: undefined });\n          },\n        };\n\n        // Set ConfirmProps to confirm block\n        this.setState({ blockConfirmProps });\n      }\n    }\n  }\n\n  handleFocus = () => {\n    if (document.activeElement && document.activeElement.tagName.toLowerCase() !== 'body') {\n      return;\n    }\n\n    const { selectedThread } = this.props;\n    const container = document.getElementsByClassName('shared-thread-list-main');\n    const element = selectedThread && document.getElementById(selectedThread.id);\n\n    if (element) {\n      element.focus();\n    } else if (container && container.length) {\n      (container[0] as HTMLElement).focus();\n    }\n  }\n\n  handleKeyDown = (e: React.KeyboardEvent<HTMLDivElement>) => {\n    const {\n      selectedThread,\n      dispatchAction,\n      submitCommitMeta,\n      draft,\n      hideActions,\n      rightSidebarCollapsed,\n      rightSidebarTab,\n      collapseRightSidebar,\n      preferences,\n      unsubscribeLink,\n      schedulingUrl,\n      blockFilter,\n    } = this.props;\n    let handled = false;\n\n    if (document.activeElement && (document.activeElement.tagName === 'INPUT' ||\n      document.activeElement.tagName === 'TEXTAREA')) {\n      return;\n    }\n\n    const hotkey = getHotkey(e);\n    switch (hotkey && hotkey.name) {\n      case HotkeyAction.NavigationCenter:\n        e.preventDefault();\n        e.stopPropagation();\n        this.props.dispatchAction(commandControlShow(CommandControlType.Navigation));\n        handled = true;\n        break;\n      case HotkeyAction.ToggleCommandControl:\n        if (hotkey && hotkey.action) {\n          const type = this.props.draft\n            ? CommandControlType.Draft\n            : CommandControlType.Thread;\n          dispatchAction(hotkey.action(type));\n          handled = true;\n        }\n        break;\n      case HotkeyAction.CopySchedulingUrl:\n        if (!schedulingUrl) {\n          browserHistory.push('/settings/calendar');\n        } else {\n          dispatchAction(hotkeyUpdate(HotkeyAction.CopySchedulingUrl));\n        }\n        handled = true;\n        break;\n      case HotkeyAction.Comment:\n        if (selectedThread) {\n          this.props.updateHotkey(HotkeyAction.Comment);\n          handled = true;\n        }\n        break;\n      case HotkeyAction.Search:\n        handled = true;\n        e.stopPropagation();\n        e.preventDefault();\n        dispatchAction(hotkeyUpdate(HotkeyAction.Search));\n        break;\n      default:\n        break;\n    }\n\n    if (!selectedThread || hideActions) {\n      return;\n    }\n\n    switch (hotkey && hotkey.name || e.keyCode) {\n      case HotkeyAction.KeyboardShortcutGuide:\n        if (hotkey && hotkey.action && rightSidebarTab) {\n          dispatchAction(hotkey.action(rightSidebarTab));\n          handled = true;\n        }\n        break;\n      case HotkeyAction.NewDraft:\n        if (hotkey && hotkey.action) {\n          dispatchAction(hotkey.action);\n          handled = true;\n        }\n        break;\n      // UI Toggle\n      case HotkeyAction.ToggleLSB:\n        handled = true;\n        dispatchAction(leftSidebarToggle(true));\n        break;\n      case HotkeyAction.ToggleRSB:\n        handled = true;\n        collapseRightSidebar(!rightSidebarCollapsed);\n        break;\n\n      // Drafts\n      case HotkeyAction.Reply:\n      case HotkeyAction.ReplyAll:\n      case HotkeyAction.Forward:\n      case HotkeyAction.ReadLater:\n      case HotkeyAction.Label:\n        if (hotkey && hotkey.action && selectedThread) {\n          dispatchAction(hotkey.action);\n          handled = true;\n        }\n        break;\n\n      // Navigation\n      case HotkeyAction.NavigateInbox:\n      case HotkeyAction.NavigateStarred:\n      case HotkeyAction.NavigateReadLater:\n      case HotkeyAction.NavigateArchive:\n      case HotkeyAction.NavigateTrash:\n      case HotkeyAction.NavigateFollowUp:\n      case HotkeyAction.NavigateSent:\n      case HotkeyAction.NavigateSendLater:\n      case HotkeyAction.NavigateDraft:\n        if (hotkey && hotkey.route) {\n          const newMailbox = { type: MailboxType.Any };\n          browserHistory.push(hotkey.route(newMailbox));\n          handled = true;\n        }\n        break;\n      case HotkeyAction.UnblockSender:\n      case HotkeyAction.BlockSender:\n        if (blockFilter) {\n          dispatchAction(hotkeyUpdate(HotkeyAction.UnblockSender));\n        } else {\n          dispatchAction(hotkeyUpdate(HotkeyAction.BlockSender));\n        }\n        return;\n\n      case HotkeyAction.MuteConversation:\n      case HotkeyAction.UnmuteConversation:\n        if (selectedThread) {\n          const muteCommitMeta = {\n            singleResource: selectedThread.id,\n            muted: !selectedThread.muted,\n          };\n          submitCommitMeta(muteCommitMeta);\n        }\n        return;\n\n      case HotkeyAction.MessageTemplates:\n      case HotkeyAction.CalendarInvite:\n        handled = true;\n        if (hotkey && hotkey.action && draft) {\n          dispatchAction(hotkey.action);\n          handled = true;\n        }\n        break;\n      case HotkeyAction.Inbox:\n        if (selectedThread) {\n          submitCommitMeta({\n            singleResource: selectedThread.id,\n            box: ThreadBox.Inbox,\n          });\n          handled = true;\n        }\n        break;\n      case HotkeyAction.Archive:\n        if (selectedThread) {\n          submitCommitMeta({\n            singleResource: selectedThread.id,\n            box: ThreadBox.Archive,\n          });\n        }\n        break;\n      case HotkeyAction.Trash:\n      case KeyCode.ExtendedDelete:\n      case KeyCode.Delete:\n        if (selectedThread) {\n          submitCommitMeta({\n            singleResource: selectedThread.id,\n            box: ThreadBox.Inbox,\n          });\n        }\n        break;\n      case HotkeyAction.Discard:\n        if (draft && hotkey) {\n          this.props.updateHotkey(HotkeyAction.Discard);\n          handled = true;\n        }\n        break;\n      case HotkeyAction.ToggleUnread:\n        if (selectedThread) {\n          submitCommitMeta({ read: !selectedThread.read });\n        }\n        handled = true;\n        break;\n      case HotkeyAction.ToggleStar:\n        if (selectedThread) {\n          submitCommitMeta({ starred: !selectedThread.starred });\n        }\n        handled = true;\n        break;\n      case HotkeyAction.Unsubscribe:\n        // Handle removing from list by dispatching action\n        if (selectedThread && unsubscribeLink && preferences) {\n          window.open(unsubscribeLink, '_blank');\n          recordEvent(UserEvents.Unsubscribed);\n          switch (preferences.unsubscribeBehavior) {\n            case UnsubscribeBehavior.Archive:\n              submitCommitMeta({ singleResource: selectedThread.id, box: ThreadBox.Archive });\n              break;\n            case UnsubscribeBehavior.Trash:\n              submitCommitMeta({ singleResource: selectedThread.id, box: ThreadBox.Trash });\n              break;\n            default:\n              break;\n          }\n\n          // Open unsubscribe window\n          handled = true;\n        }\n        break;\n\n      case HotkeyAction.OpenCalendar:\n        this.props.dispatchAction(commandControlShow(CommandControlType.Calendar));\n        return;\n      case HotkeyAction.OpenCalendarRsb:\n        this.props.dispatchAction(rightSidebarTabSelect({\n          rsbTab: RightSidebarTab.Calendar,\n        }));\n        return;\n      default:\n        break;\n    }\n\n    if (handled) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  }\n\n  render() {\n    const {\n      hideActions,\n      userSharedThreads,\n      showSharedThreadsOnboarding,\n      sharedThreadsLoaded,\n    } = this.props;\n\n    const { confirmProps, blockConfirmProps } = this.state;\n    const LeftSidebarConnect = LeftSidebar as any;\n    const ThreadDetailConnect = ThreadDetail as any;\n\n    // Determine whether to show Shared Threads Onboarding\n    const mode: SharedThreadsMode = userSharedThreads === true\n      ? SharedThreadsMode.User : SharedThreadsMode.Mentions;\n    const showOnboarding = mode === SharedThreadsMode.User && showSharedThreadsOnboarding\n     && !!sharedThreadsLoaded;\n\n    return (\n      <div\n        className=\"mentions-page\"\n        onKeyDown={this.handleKeyDown}\n      >\n        {blockConfirmProps &&\n          <BlockConfirm\n            {...blockConfirmProps}\n          />\n        }\n        {confirmProps &&\n          <Confirm\n            {...confirmProps}\n          />\n        }\n        <div className=\"main-app\">\n          <ContactSupport />\n          <LeftSidebarConnect accounts={[]} selectedTab={NavbarTab.Mentions} />\n          <SharedThreadList mode={mode}/>\n          {showOnboarding &&\n            <SharedThreadsOnboarding id={0} />\n          }\n          {!showOnboarding &&\n            <ThreadDetailConnect hideActions={hideActions} />\n          }\n          <RightSidebar page={Page.Threads} />\n          <CommandControl default={CommandControlType.Thread}/>\n          <Toast />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Mentions;\n"]}]}