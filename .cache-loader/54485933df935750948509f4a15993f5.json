{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Sequences/routes/SequenceList/SequenceCell/index.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Sequences/routes/SequenceList/SequenceCell/index.tsx","mtime":1675280254090},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4JzsKaW1wb3J0IFNlcXVlbmNlQ2VsbCBmcm9tICcuL1NlcXVlbmNlQ2VsbCc7CmltcG9ydCB7IHNlcXVlbmNlVXBkYXRlIH0gZnJvbSAnQHNyYy9kdWNrcy9zZXF1ZW5jZXMnOwppbXBvcnQgeyBzZWxlY3RQaG90b1VybCB9IGZyb20gJ0BzcmMvZHVja3MvdGVhbU1lbWJlcnMnOwppbXBvcnQgeyBnZW5lcmF0ZVBob3RvVXJsIH0gZnJvbSAnQHNyYy9saWIvY29udGFjdCc7CnZhciBtYXBTdGF0ZVRvUHJvcHMgPSBmdW5jdGlvbiAoc3RhdGUsIHByb3BzKSB7CiAgICByZXR1cm4gewogICAgICAgIHBob3RvVXJsOiAoc3RhdGUubWUuZGF0YSAmJgogICAgICAgICAgICBzZWxlY3RQaG90b1VybChzdGF0ZS50ZWFtTWVtYmVycywgc3RhdGUubWUuZGF0YSwgcHJvcHMuc2VxdWVuY2UudXNlcikpIHx8CiAgICAgICAgICAgIGdlbmVyYXRlUGhvdG9VcmwocHJvcHMuc2VxdWVuY2Uuc2VuZGVyRW1haWwpLAogICAgfTsKfTsKdmFyIG1hcERpc3BhdGNoVG9Qcm9wcyA9IGZ1bmN0aW9uIChkaXNwYXRjaCkgeyByZXR1cm4gKHsKICAgIHVwZGF0ZVNlcXVlbmNlOiBmdW5jdGlvbiAoc2VxdWVuY2UpIHsgcmV0dXJuIGRpc3BhdGNoKHNlcXVlbmNlVXBkYXRlKHNlcXVlbmNlKSk7IH0sCn0pOyB9OwpleHBvcnQgZGVmYXVsdCBjb25uZWN0KG1hcFN0YXRlVG9Qcm9wcywgbWFwRGlzcGF0Y2hUb1Byb3BzKShTZXF1ZW5jZUNlbGwpOwo="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Sequences/routes/SequenceList/SequenceCell/index.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Sequences/routes/SequenceList/SequenceCell/index.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAY,MAAM,aAAa,CAAC;AAIhD,OAAO,YAAkD,MAAM,gBAAgB,CAAC;AAChF,OAAO,EAAE,cAAc,EAAE,MAAM,sBAAsB,CAAC;AACtD,OAAO,EAAE,cAAc,EAAE,MAAM,wBAAwB,CAAC;AACxD,OAAO,EAAE,gBAAgB,EAAE,MAAM,kBAAkB,CAAC;AAEpD,IAAM,eAAe,GAAG,UAAC,KAAiB,EAAE,KAAY;IACtD,OAAO;QACL,QAAQ,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI;YACtB,cAAc,CAAC,KAAK,CAAC,WAAW,EAAE,KAAK,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YACtE,gBAAgB,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC;KAC/C,CAAC;AACJ,CAAC,CAAC;AAEF,IAAM,kBAAkB,GAAG,UAAC,QAA8B,IAAoB,OAAA,CAAC;IAC7E,cAAc,EAAE,UAAC,QAAkB,IAAK,OAAA,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,EAAlC,CAAkC;CAC3E,CAAC,EAF4E,CAE5E,CAAC;AAEH,eAAe,OAAO,CACpB,eAAe,EAAE,kBAAkB,CACpC,CAAC,YAAY,CAAC,CAAC","sourcesContent":["import { connect, Dispatch } from 'react-redux';\nimport { StoreState } from '@src/types';\nimport { Sequence } from '@src/types/sequences';\n\nimport SequenceCell, { StateProps, Props, DispatchProps } from './SequenceCell';\nimport { sequenceUpdate } from '@src/ducks/sequences';\nimport { selectPhotoUrl } from '@src/ducks/teamMembers';\nimport { generatePhotoUrl } from '@src/lib/contact';\n\nconst mapStateToProps = (state: StoreState, props: Props): StateProps => {\n  return {\n    photoUrl: (state.me.data &&\n      selectPhotoUrl(state.teamMembers, state.me.data, props.sequence.user)) ||\n      generatePhotoUrl(props.sequence.senderEmail),\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<StoreState>): DispatchProps => ({\n  updateSequence: (sequence: Sequence) => dispatch(sequenceUpdate(sequence)),\n});\n\nexport default connect<StateProps, DispatchProps, Props>(\n  mapStateToProps, mapDispatchToProps,\n)(SequenceCell);\n"]}]}