{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/me.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/me.ts","mtime":1675280254050},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/me.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/me.ts"],"names":[],"mappings":"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","sourcesContent":["import update from 'immutability-helper';\nimport { setUser, captureException } from '@sentry/browser';\nimport Cookies from 'js-cookie';\n\nimport { create } from '@src/lib/redux';\n\nimport {\n  Me,\n  StoreState,\n  ResourceStatus,\n  Preferences,\n  Onboarding,\n  Account,\n  AccountStatus,\n  OnboardingType,\n  Features,\n  TwoFactorAuthentication,\n  Resource,\n  MePlan,\n  MeStatusNew,\n} from '@src/types';\nimport { Coupon, CouponType } from '@src/types/billing';\nimport { MeBody } from '@src/api/me';\nimport { resourceOk } from '@src/lib/resource';\nimport { createSelector } from '@src/lib/selector';\nimport { selectAccounts } from '@src/ducks/accounts';\nimport { ErrorMessage } from '@src/api/base';\nimport { RightSidebarTab } from '@src/types/rightSidebar';\nimport { OnboardingSection } from '@src/lib/onboarding';\nimport { isElectron } from '@src/lib/electron';\nimport { enableUserDebug, disableUserDebug } from '@src/lib/db';\nimport moment from 'moment';\nimport { recordLog } from '@src/lib/log';\nimport { ExperimentsState } from '@src/lib/unleash-experiments';\n\nexport interface MeCreateMeta {\n  email: string;\n  password: string;\n  firstName?: string;\n  middleName?: string;\n  lastName?: string;\n  gender?: string;\n  preferences?: string;\n  platform?: string;\n  teamName?: string;\n  teamSize?: string;\n  position?: string;\n  phoneNumber?: string;\n  teamInviteNonce?: string;\n  teamInvitePayload?: string;\n  secret?: string;\n  type?: string;\n\n  // Product Source\n  unsubscriberSignUp?: boolean;\n\n  utmSource?: string;\n  utmCampaign?: string;\n  utmMedium?: string;\n\n  rewardfulReferral?: string;\n}\n\nexport const {\n  type: ME_CREATE,\n  action: meCreate,\n  reducer: meCreateReducer,\n} = create<MeCreateMeta, MeBody>('ME_CREATE', {\n  start: (state, meta) => ({ ...state,  signUpPending: true }),\n  success: (state, meta, payload) => ({ ...state, signUpPending: false }),\n  failure: (state, meta, error) => ({ ...state, signUpPending: false }),\n});\n\n// FETCH USER\nexport const {\n  type: ME_FETCH,\n  action: meFetch,\n  reducer: meFetchReducer,\n} = create<string, MeBody>('ME_FETCH', {\n  start: (state, meta) => {\n    return update(state, { me: { status: { $set: ResourceStatus.Loading } } });\n  },\n\n  success: (state, meta, payload) => {\n    let mePayload = payload.me;\n\n    // handle Sentry user identification\n    setUser({\n      id: mePayload.id,\n      email: mePayload.email,\n    });\n\n    const cookie = Cookies.get('referralProperties');\n    if (mePayload.referralRedeemed && cookie) {\n      Cookies.remove('referralProperties');\n    }\n\n    // get coupon -if any- from the localStorage\n    const coupon = localStorage.getItem(CouponType.Coupon);\n    if (coupon && meta !== CouponType.Remove) {\n      const parsedCoupon: Coupon = JSON.parse(coupon);\n      mePayload = { ...mePayload, coupon: parsedCoupon };\n    }\n    if (meta === CouponType.Remove) {\n      localStorage.removeItem(CouponType.Coupon);\n    }\n\n    // save to localstorage\n    localStorage.setItem('me', JSON.stringify(mePayload));\n    localStorage.setItem('lists', JSON.stringify(payload.lists));\n    localStorage.setItem('accounts', JSON.stringify(payload.accounts));\n    localStorage.setItem('devices', JSON.stringify(payload.devices));\n    localStorage.setItem('preferences', JSON.stringify(payload.preferences));\n\n    if (mePayload) {\n      try {\n        // boot intercom\n        (window as any).Intercom('boot', {\n          app_id: 'ppcj3myx',\n          user_id: mePayload.id,\n          email: mePayload.email,\n          user_hash: mePayload.intercomIdentity,\n          hide_default_launcher: true,\n        });\n      } catch (e) {\n        captureException(e);\n      }\n    }\n\n    // handle debugging\n    if (mePayload && mePayload.debugUntil && moment(mePayload.debugUntil).isAfter(moment())) {\n      enableUserDebug('', recordLog);\n    } else {\n      disableUserDebug();\n    }\n\n    // return updated state\n    return {\n      ...state,\n      me: resourceOk(mePayload),\n      lists: payload.lists,\n      accounts: payload.accounts,\n      preferences: payload.preferences,\n      devices: payload.devices,\n      tfaNeeded: false,\n    };\n  },\n\n  failure: (state, meta, error) => {\n    return update(state, {\n      me: {\n        status: { $set: ResourceStatus.Failure },\n        error: { $set: error },\n      },\n      tfaNeeded: {\n        $set: error.message === ErrorMessage.TwoFactorAuthNeeded,\n      },\n    });\n  },\n});\n\nexport const {\n  type: ME_EXPERIMENTS_FETCH,\n  action: meExperimentsFetch,\n  reducer: meExperimentsFetchReducer,\n} = create<string, ExperimentsState>('ME_EXPERIMENTS_FETCH', {\n  start: (state) => {\n    return update(state, {\n      me: {\n        data: {\n          experiments: {\n            $set: {\n              status: ResourceStatus.Loading,\n            },\n          },\n        },\n      },\n    });\n  },\n\n  success: (state, meta, payload) => {\n    return update(state, {\n      me: {\n        data: {\n          experiments: {\n            $merge: {\n              status: ResourceStatus.Ok,\n              ...payload,\n            },\n          },\n        },\n      },\n    });\n  },\n\n  failure: (state, meta, error) => {\n    return update(state, {\n      me: {\n        data: {\n          experiments: {\n            $set: {\n              status: ResourceStatus.Failure,\n              error,\n            },\n          },\n        },\n      },\n    });\n  },\n});\n\n// PATCH USER\n// TODO(SHIN): Figure out error cases for optimistic patches\nexport const {\n  type: ME_UPDATE,\n  action: meUpdate,\n  reducer: meUpdateReducer,\n} = create<Me, MeBody>('ME_PATCH', {\n  start: (state, meta) => {\n    return update(state, { me: { data: { $set: meta } } });\n  },\n\n  success: (state, meta, payload) => {\n    // return updated state\n    return {\n      ...state,\n      me: resourceOk(payload.me),\n    };\n  },\n\n  // TODO(SHIN): Handle state error\n  failure: (state, meta, error) => {\n    return state;\n  },\n});\n\nexport const {\n  type: ME_DELETE,\n  action: meDelete,\n  reducer: meDeleteReducer,\n} = create<null, null>('ME_DELETE', {});\n\nexport enum OnboardingVersion {\n  One = 'one',\n  Two = 'two',\n}\n\nexport const {\n  type: ONBOARDING_RESET,\n  action: onboardingReset,\n  reducer: onboardingResetReducer,\n} = create<OnboardingVersion, null>('ONBOARDING_RESET', {\n  start: (state, meta) => {\n    let onboarding = state.onboarding;\n    if (meta === OnboardingVersion.Two) {\n      onboarding = {\n        ...state.onboarding,\n        [OnboardingType.ExploreModal]: false,\n        [OnboardingType.ClaimCredit]: false,\n        steps: {\n          [OnboardingType.NextThread]: false,\n          [OnboardingType.PreviousThread]: false,\n          [OnboardingType.Archive]: false,\n          [OnboardingType.Undo]: false,\n          [OnboardingType.ReadLater]: false,\n          [OnboardingType.Block]: false,\n          [OnboardingType.CommandLater]: false,\n          [OnboardingType.SendLater]: false,\n          [OnboardingType.MessageTemplates]: false,\n          [OnboardingType.FollowUpReminder]: false,\n          [OnboardingType.SaveAsTemplate]: false,\n          [OnboardingType.MessageTemplates]: false,\n          [OnboardingType.ShareThread]: false,\n          [OnboardingType.Comment]: false,\n          [OnboardingType.ActivityFeed]: false,\n          [OnboardingType.Scheduling]: false,\n        },\n      };\n    } else {\n      onboarding = {\n        ...state.onboarding,\n        [OnboardingType.CreateDraft]: false,\n        [OnboardingType.SendMessage]: false,\n        [OnboardingType.ThreadDetailTracking]: false,\n        [OnboardingType.CreateComment]: false,\n        [OnboardingType.Scheduling]: false,\n        [OnboardingType.Sequences]: false,\n        [OnboardingType.InviteTeamMembers]: false,\n        [OnboardingType.CommandCenter]: false,\n        [OnboardingType.DownloadNativeApps]: false,\n        [OnboardingType.MentionsTab]: false,\n      };\n    }\n\n    localStorage.setItem('onboarding', JSON.stringify(onboarding));\n    return update(state, {\n      onboarding: {\n        $set: onboarding,\n      },\n      rightSidebar: {\n        tab: {\n          $set: meta === OnboardingVersion.Two\n            ? RightSidebarTab.Onboarding\n            : state.rightSidebar.tab,\n        },\n        collapsed: { threads: { $set: false } },\n      },\n    });\n  },\n});\n\nexport const {\n  type: ONBOARDING_FETCH,\n  action: onboardingFetch,\n  reducer: onboardingFetchReducer,\n} = create<null, Onboarding>('ONBOARDING_FETCH', {\n  success: (state, meta, payload) => {\n    localStorage.setItem('onboarding', JSON.stringify(payload));\n    const updatedState = update(state, {\n      onboarding: { $set: payload },\n    });\n    const showOnboardingTab = selectRsbOnboarding(updatedState) !== OnboardingType.Complete ||\n      !payload.exploreModal;\n\n    const rsbTab = showOnboardingTab\n      ? RightSidebarTab.Onboarding\n      : RightSidebarTab.Contact;\n\n    const collapsedState = rsbTab === RightSidebarTab.Onboarding\n      ? false\n      : state.rightSidebar.collapsed.threads;\n    return update(state, {\n      onboarding: {\n        $set: payload,\n      },\n      rightSidebar: {\n        tab: { $set: rsbTab },\n        collapsed: { threads: { $set: collapsedState } },\n      },\n    });\n  },\n});\n\nexport const {\n  type: ME_PHOTO_UPDATE,\n  action: mePhotoUpdate,\n  reducer: mePhotoUpdateReducer,\n} = create<File, Me>('ME_PHOTO_UPDATE', {});\n\nexport interface MeSignUpInfoMeta {\n  teamName?: string;\n  teamSize?: string;\n  position?: string;\n  phoneNumber?: string;\n}\n\nexport const {\n  type: ME_SIGN_UP_INFO_UPDATE,\n  action: meSignUpInfoUpdate,\n  reducer: meSignUpInfoUpdateReducer,\n} = create<MeSignUpInfoMeta, null>('ME_SIGN_UP_INFO_UPDATE', {});\n\nexport interface MeTfaSetMeta {\n  password: string;\n  phone: string;\n}\n\nexport const {\n  type: ME_TFA_SET,\n  action: meTfaSet,\n  reducer: meTfaSetReducer,\n} = create<MeTfaSetMeta, TwoFactorAuthentication>('ME_TFA_SET', {\n  success: (state, meta, payload) => {\n    return update(state, {\n      me: {\n        tfa: {\n          $set: payload,\n        },\n      },\n      tfaPasswordConfirmed: { $set: true },\n    });\n  },\n  failure: (state, meta, payload) => {\n    return update(state, {\n      tfaPasswordConfirmed: { $set: false },\n    });\n  },\n});\n\nexport const {\n  type: ME_TFA_UNSET,\n  action: meTfaUnset,\n  reducer: meTfaUnsetReducer,\n} = create<string, null>('ME_TFA_UNSET', {\n  success: (state, meta, payload) => {\n    return update(state, {\n      me: {\n        data: {\n          $unset: ['tfa'],\n        },\n      },\n      tfaPasswordConfirmed: { $set: false },\n    });\n  },\n});\n\nexport const {\n  type: ME_TFA_VERIFY,\n  action: meTfaVerify,\n  reducer: meTfaVerifyReducer,\n} = create<string, TwoFactorAuthentication>('ME_TFA_VERIFY', {\n  success: (state, meta, payload) => {\n    return update(state, {\n      me: {\n        data: {\n          tfa: {\n            $set: payload,\n          },\n        },\n      },\n    });\n  },\n});\n\nexport interface OnboardingPatchMeta {\n  type: Partial<Onboarding>;\n  skipped: boolean;\n}\n\nexport const {\n  type: ONBOARDING_PATCH,\n  action: onboardingPatch,\n  reducer: onboardingPatchReducer,\n} = create<OnboardingPatchMeta, Onboarding>('ONBOARDING_PATCH', {\n  start: (state, meta) => {\n\n    // TODO(SHIN): Could maybe abstract in component\n    // Prevent other onboarding steps if explore modal is showing\n    if (meta.type.sendMessage && !state.onboarding.exploreModal) {\n      return state;\n    }\n\n    // Force Onboarding tab if setting explore modal to true\n    const rsbTab = meta.type.exploreModal === true\n      ? RightSidebarTab.Onboarding\n      : state.rightSidebar.tab;\n\n    const updated = {\n      ...state.onboarding,\n      ...meta.type,\n      steps: {\n        ...state.onboarding.steps,\n        ...meta.type.steps,\n      },\n    };\n    localStorage.setItem('onboarding', JSON.stringify(updated));\n    return update(state, {\n      onboarding: {\n        $set: updated,\n      },\n      rightSidebar: {\n        tab: { $set: rsbTab },\n      },\n    });\n  },\n});\n\nexport const {\n  type: ONBOARDING_CREDIT_CLAIM,\n  action: onboardingCreditClaim,\n  reducer: onboardingCreditClaimReducer,\n} = create<Partial<Onboarding>, Onboarding>('ONBOARDING_CREDIT_CLAIM', {\n  start: (state, meta) => {\n    const updated = {\n      ...state.onboarding,\n      claimedCredit: true,\n    };\n    localStorage.setItem('onboarding', JSON.stringify(updated));\n    return update(state, {\n      onboarding: {\n        $set: updated,\n      },\n    });\n  },\n});\n\n// PATCH USER\n// TODO(SHIN): Figure out error cases for optimistic patches\nexport const {\n  type: PREFERENCES_UPDATE,\n  action: preferencesUpdate,\n  reducer: preferencesUpdateReducer,\n} = create<Preferences, MeBody>('PREFERENCES_UPDATE', {\n  start: (state, meta) => {\n    return update(state, { preferences: { $set: meta } });\n  },\n\n  success: (state, meta, payload) => {\n    // return updated state\n    return {\n      ...state,\n      me: resourceOk(payload.me),\n    };\n  },\n\n  // TODO(SHIN): Handle state error\n  failure: (state, meta, error) => {\n    return state;\n  },\n});\n\nexport default [\n  meFetchReducer,\n  meCreateReducer,\n  meUpdateReducer,\n  preferencesUpdateReducer,\n  onboardingFetchReducer,\n  onboardingPatchReducer,\n  onboardingCreditClaimReducer,\n  onboardingResetReducer,\n  meTfaSetReducer,\n  meTfaUnsetReducer,\n  meExperimentsFetchReducer,\n];\n\nexport function selectMe(state: StoreState): Me {\n  return state.me.data!;\n}\n\nexport function selectUserIsAdmin(state: StoreState): boolean {\n  return state.me.data && state.team.data\n    && state.team.data.admins.filter(id => id === state.me.data!.id).length > 0 || false;\n}\n\n// Identifies whether an onboarding tip should be shown\nexport const selectRsbOnboarding = createSelector<\n  null, Onboarding | OnboardingType | Features, OnboardingType | undefined\n>(\n  [\n    state => state.onboarding,\n    state => state.features,\n  ],\n  (onboarding: Onboarding, features: Features) => {\n    if (!onboarding.steps) {\n      return OnboardingType.Complete;\n    }\n\n    const options: Array<{ [key: string]: boolean }> = [\n      // Composing\n      {\n        [OnboardingType.SendMessage]: onboarding.sendMessage,\n      },\n      {\n        [OnboardingType.SendLater]: onboarding.steps.sendLater,\n      },\n      {\n        [OnboardingType.FollowUpReminder]: onboarding.steps.followUpReminder,\n      },\n      {\n        [OnboardingType.MessageTemplates]: onboarding.steps.messageTemplates,\n      },\n      {\n        [OnboardingType.SaveAsTemplate]: onboarding.steps.saveAsTemplate,\n      },\n\n      // Navigation\n      {\n        [OnboardingType.NextThread]: onboarding.steps.nextThread,\n      },\n      // Managing Email\n      {\n        [OnboardingType.Archive]: onboarding.steps.archive,\n      },\n      {\n        [OnboardingType.Undo]: onboarding.steps.undo,\n      },\n      {\n        [OnboardingType.ReadLater]: onboarding.steps.readLater,\n      },\n\n      // Power User\n      {\n        [OnboardingType.ShareThread]: onboarding.steps.shareThread,\n      },\n      {\n        [OnboardingType.Comment]: onboarding.steps.comment,\n      },\n      {\n        [OnboardingType.Scheduling]: onboarding.steps.scheduling,\n      },\n    ];\n\n    // Add download native option\n    if (!isElectron) {\n      options.push({ [OnboardingType.DownloadNativeApps]: onboarding.downloadNativeApps });\n    }\n\n    // Only show claim credit if option is available\n    if (onboarding.creditClaimable) {\n      options.push({\n        [OnboardingType.ClaimCredit]: onboarding.claimedCredit,\n      });\n    }\n\n    const filteredOptions = options\n      .filter(a => !Object.values(a)[0])\n      .map(a => Object.keys(a)[0] as OnboardingType);\n\n    if (!filteredOptions.length) {\n      return OnboardingType.Complete;\n    }\n    return filteredOptions[0];\n  },\n  (onboarding: Onboarding, features: Features) => 'rsb-onboarding',\n  ['onboarding', 'features'],\n);\n\n// Identifies whether an onboarding tip should be shown\nexport const selectShownOnboardingSections = createSelector<\n  null, Onboarding | OnboardingType | Features, OnboardingSection[]\n>(\n  [\n    state => state.onboarding,\n  ],\n  (onboarding: Onboarding) => {\n\n    const baseSettings = [\n      OnboardingSection.Composing,\n      OnboardingSection.NavigatingPolymail,\n      OnboardingSection.ManagingYourEmail,\n      OnboardingSection.PowerUser,\n    ];\n\n    if (!isElectron) {\n      baseSettings.push(OnboardingSection.DownloadNativeApps);\n    }\n\n    if (onboarding.creditClaimable) {\n      baseSettings.push(OnboardingSection.ClaimCredit);\n    }\n\n    return baseSettings;\n  },\n  (onboarding: Onboarding) => 'onboarding-sections',\n  ['onboarding', 'features'],\n);\n\n// Identifies whether an onboarding tip should be shown\nexport const selectAllOnboardingSteps = createSelector<\n  null, Onboarding | OnboardingType | Features, OnboardingType[]\n>(\n  [\n    state => state.onboarding,\n  ],\n  (onboarding: Onboarding) => {\n    const baseSettings = [\n      OnboardingType.SendMessage,\n      OnboardingType.SendLater,\n      OnboardingType.FollowUpReminder,\n      OnboardingType.MessageTemplates,\n      OnboardingType.SaveAsTemplate,\n      OnboardingType.NextThread,\n      OnboardingType.Archive,\n      OnboardingType.Undo,\n      OnboardingType.ReadLater,\n      OnboardingType.ShareThread,\n      OnboardingType.Comment,\n      OnboardingType.Scheduling,\n    ];\n\n    if (!isElectron) {\n      baseSettings.push(OnboardingType.DownloadNativeApps);\n    }\n\n    if (onboarding.creditClaimable) {\n      baseSettings.push(OnboardingType.ClaimCredit);\n    }\n\n    return baseSettings;\n  },\n  (onboarding: Onboarding) => 'all-onboarding-typesg',\n  ['onboarding', 'features'],\n);\n\n// Identifies whether an onboarding tip should be shown\nexport const selectOnboardingShow = createSelector<\n  OnboardingType, Onboarding|OnboardingType|Features, boolean\n>(\n  [\n    state => state.onboarding,\n    (state: StoreState, type: OnboardingType) => type,\n    state => state.features,\n  ],\n  (onboarding: Onboarding, type: OnboardingType, features: Features) => {\n    if (onboarding[type] === undefined) {\n      return false;\n    }\n\n    switch (type) {\n      case OnboardingType.CreateDraft:\n        return onboarding.exploreModal && !onboarding.createDraft;\n      case OnboardingType.SendMessage:\n        return onboarding.createDraft && !onboarding.sendMessage;\n      case OnboardingType.ThreadDetailTracking:\n        return !onboarding.threadDetailTracking;\n      case OnboardingType.CreateComment:\n        return onboarding.threadDetailTracking && features.comments && !onboarding.createComment;\n      case OnboardingType.Scheduling:\n        return onboarding.mentionsTab && !onboarding.scheduling;\n      case OnboardingType.Sequences:\n        return onboarding.scheduling && !onboarding.sequences;\n      case OnboardingType.InviteTeamMembers:\n        return features.comments && onboarding.createComment && !onboarding.inviteTeamMembers;\n      case OnboardingType.CommandCenter:\n        return onboarding.createComment && onboarding.inviteTeamMembers &&\n          !onboarding.commandCenter;\n      case OnboardingType.DownloadNativeApps:\n        return onboarding.commandCenter && !onboarding.downloadNativeApps;\n      case OnboardingType.MentionsTab:\n        return onboarding.downloadNativeApps && features.comments && !onboarding.mentionsTab;\n      default:\n        return !(onboarding[type]);\n    }\n  },\n  (onboarding: Onboarding, type: OnboardingType, features: Features) => type,\n  ['onboarding', 'features'],\n);\n\n// Identifies if user has been synced\nexport const selectUserInitialSyncFinished = createSelector<undefined, Account[], boolean>(\n  [\n    state => selectAccounts(state),\n  ],\n  (accounts: Account[]) => {\n    const accountsOk = accounts.filter(account => account.status === AccountStatus.Ok);\n    const syncedAccountsLength = accountsOk.filter(\n      each => !!each.mailInitSynced,\n    ).length;\n    return syncedAccountsLength === accountsOk.length;\n  },\n  undefined,\n  ['accounts'],\n);\n\nexport const selectShouldSeeTrialEndedBanner = createSelector<\n  undefined,\n  Resource<Me> | Features,\n  boolean\n>(\n  [\n    state => state.me,\n    state => state.features,\n  ],\n  (me: Resource<Me>, features: Features) => {\n    // legacy logic\n    const isExpiredStatusPlan =\n      !features.freeTier\n      && me.data?.plan === MePlan.Free;\n\n    // new logic\n    const meStatusNew = me.data?.statusNew;\n    const isExpiredStatusNew = meStatusNew === MeStatusNew.TrialExpired;\n\n    // statusNew takes precedence\n    if (meStatusNew) {\n      return isExpiredStatusNew;\n    }\n\n    // for legacy account without statusNew\n    return isExpiredStatusPlan;\n  },\n  undefined,\n  ['me', 'features'],\n);\n"]}]}