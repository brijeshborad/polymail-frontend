{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/me.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/me.ts","mtime":1675280254057},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/me.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/me.ts"],"names":[],"mappings":"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","sourcesContent":["import { Observable } from 'rxjs';\nimport { Epic } from 'redux-observable';\nimport Cookies from 'js-cookie';\n\nimport {\n  StoreState,\n  Action,\n  ActionStatus,\n  Me,\n  Preferences,\n  Onboarding,\n  TwoFactorAuthentication,\n  DevicePlatform,\n} from '@src/types/index';\n\nimport {\n  ME_FETCH,\n  meFetch,\n  ME_UPDATE,\n  meUpdate,\n  PREFERENCES_UPDATE,\n  preferencesUpdate,\n  ME_CREATE,\n  meCreate,\n  ONBOARDING_FETCH,\n  onboardingFetch,\n  ONBOARDING_PATCH,\n  onboardingPatch,\n  ME_DELETE,\n  meDelete,\n  ME_PHOTO_UPDATE,\n  MeSignUpInfoMeta,\n  meSignUpInfoUpdate,\n  ME_SIGN_UP_INFO_UPDATE,\n  ME_TFA_SET,\n  meTfaSet,\n  MeTfaSetMeta,\n  ME_TFA_UNSET,\n  meTfaUnset,\n  meTfaVerify,\n  ME_TFA_VERIFY,\n  onboardingCreditClaim,\n  ONBOARDING_CREDIT_CLAIM,\n  OnboardingPatchMeta,\n  ME_EXPERIMENTS_FETCH,\n  meExperimentsFetch,\n} from '@src/ducks/me';\n\nimport { authLogout, authLogin, authLoggedInSet } from '@src/ducks/auth';\n\nimport { Deps } from '@src/lib/epic';\nimport { updateMe, MeBody } from '@src/api/me';\nimport { ApiError, getToken, AUTH_TOKEN_NONE } from '@src/api/base';\nimport { toastSet } from '@src/ducks/toasts';\nimport { dbClear } from '@src/ducks/db';\nimport { teamFetch } from '@src/ducks/team';\nimport { LoginType, Token } from '@src/api/auth';\nimport { isElectron, isElectronMac, isElectronWindows } from '@src/lib/electron';\nimport moment from 'moment';\nimport browserHistory from '@src/lib/browserHistory';\nimport { recordGAEvent, recordEvent, UserEvents, recordFBEvent } from '@src/lib/analytics';\nimport { isValidPhoneNumber } from '@src/lib/utils';\nimport { AmplitudeEvents, logAmplitudeEvent } from '@src/lib/amplitude-analytics';\nimport { ExperimentsState, initUnleash } from '@src/lib/unleash-experiments';\n\n// Creates Me\nexport const createMeEpic: Epic<Action<any, MeBody|null|Token>, StoreState, Deps> =\n(action$, store, deps) =>\n  action$.ofType(ME_CREATE)\n    .filter(action => action.status === ActionStatus.Start)\n    .flatMap((action) => {\n      const cookie = Cookies.get('referralProperties');\n\n      let code;\n      try {\n        if (cookie) {\n          code = JSON.parse(cookie).code;\n        }\n      } catch (error) {\n        // tslint:disable-next-line:no-console\n        console.warn(error);\n      }\n\n      // Identify platform\n      let platform = DevicePlatform.Web;\n      if (isElectronMac) {\n        platform = DevicePlatform.macOS;\n      }\n      if (isElectronWindows) {\n        platform = DevicePlatform.Windows;\n      }\n\n      // Override with redirect platform if existss\n      const redirectPlatform = store.getState().redirectPlatform;\n      if (redirectPlatform) {\n        platform = redirectPlatform;\n      }\n\n      const utmParams = store.getState().utmParams;\n      return deps.me.create({\n        ...action.meta,\n        code,\n        platform,\n        timeZone: moment.tz.guess(),\n        utmCampaign: utmParams?.campaign,\n        utmMedium: utmParams?.medium,\n        utmSource: utmParams?.source,\n        rewardfulReferral: window?.Rewardful?.referral,\n      })\n        .flatMap((meBody) => {\n          logAmplitudeEvent(\n            AmplitudeEvents.SignUpStepOne,\n            { details: { email: action.meta.email, type: action.meta.type } },\n          );\n\n          return Observable.merge(\n            Observable.of(meCreate(action.meta, meBody)),\n            Observable.of(authLogin({\n              email: action.meta.email,\n              password: action.meta.password,\n              type: isElectron ? LoginType.Trusted : LoginType.Extended,\n            })),\n          );\n        })\n        .do(() => {\n          recordGAEvent('user', 'created');\n          recordFBEvent('track', 'CompleteRegistration');\n        })\n        .catch((e: Error) => {\n          const errorMessage = 'We ran into an issue creating your account. ' + e.message;\n          return Observable.merge(\n            Observable.of(meCreate(action.meta, e)),\n            Observable.of(toastSet(new Error(errorMessage))),\n          );\n        });\n    });\n\n// Redirect to profile on successful creation\nexport const redirectCreateSuccessEpic: Epic<Action<any, MeBody | null | Token>, StoreState, Deps> =\n  (action$, store, deps) =>\n    action$.ofType(ME_CREATE)\n      .filter(action => action.status === ActionStatus.Success)\n      .do((action) => {\n        return browserHistory.push('/login/choosePlan');\n      })\n      .filter(() => false);\n\nexport const fetchMe: Epic<Action<string|{}, MeBody|null>, StoreState, Deps> =\n      (action$, store, deps) =>\n        action$.ofType(ME_FETCH)\n          .filter(action => action.status === ActionStatus.Start)\n          .filter(() => getToken() !== AUTH_TOKEN_NONE)\n          .flatMap(action =>\n            deps.me.get()\n              .flatMap((meBody: MeBody) => {\n                const actions: Array<Observable<any>> = [\n                  Observable.of(meFetch(action.meta as string, meBody)),\n                  Observable.of(authLoggedInSet(true)),\n                  Observable.of(meExperimentsFetch(meBody.me.id)),\n                ];\n\n                const state = store.getState();\n                if (state.me.data && state.me.data.team !== meBody.me.team) {\n                  actions.push(Observable.of(dbClear(null)));\n                  actions.push(Observable.of(teamFetch('')));\n                }\n\n                return Observable.merge(...actions);\n              })\n              .catch((e: Error) => {\n                const actions: Array<Observable<any>> =\n                  [Observable.of(meFetch(action.meta as string, e))];\n\n                if ((e as ApiError).code === 401) {\n                  actions.unshift(Observable.of(authLogout(null)));\n                }\n\n                return Observable.merge(...actions);\n              }),\n          );\n\nexport const meExperimentsFetchEpic: Epic<Action<string, ExperimentsState>, StoreState, Deps> =\n(action$, store, deps) =>\n  action$.ofType(ME_EXPERIMENTS_FETCH)\n    .filter(action => action.status === ActionStatus.Start)\n    .flatMap((action) => {\n      const unleashPromise = initUnleash(action.meta as string);\n      return Observable.fromPromise(unleashPromise)\n        .flatMap((experiments: ExperimentsState) => {\n          return Observable.of(meExperimentsFetch(action.meta, experiments));\n        })\n        .catch((e: Error) => {\n          return Observable.of(meExperimentsFetch(action.meta, e));\n        });\n    });\n\nconst patchMe: Epic<Action<Me|Error|null, MeBody|null>, StoreState> = action$ =>\n action$.ofType(ME_UPDATE)\n  .filter(action => action.status === ActionStatus.Start)\n  .flatMap((action: Action<Me, MeBody>) =>\n    updateMe({\n      ...action.meta,\n      timeZone: action.meta.timeZone || moment.tz.guess(),\n    })\n      .map(meBody => meUpdate(action.meta, meBody))\n      .catch((e: Error) => Observable.merge(\n        Observable.of(meUpdate(action.meta, e)),\n        Observable.of(toastSet(e)),\n      )),\n  );\n\nconst deleteMeEpic: Epic<Action<null|Error, null>, StoreState, Deps> = (action$, store, deps) =>\n  action$.ofType(ME_DELETE)\n    .filter(action => action.status === ActionStatus.Start)\n    .flatMap((action: Action<null, null>) =>\n      deps.me.delete()\n        .map(() => meDelete(null, null))\n        .catch(e => Observable.of(toastSet(e))),\n  );\n\nconst fetchOnboardingEpic: Epic<Action<null, Onboarding>, StoreState, Deps> =\n(action$, store, deps) =>\n  action$.ofType(ONBOARDING_FETCH)\n    .filter(action => action.status === ActionStatus.Start)\n    .flatMap(action => deps.me.getOnboarding()\n      .map(onboarding => onboardingFetch(null, onboarding))\n      .catch((e: Error) => Observable.of(onboardingFetch(null, e))),\n  );\n\nconst patchOnboardingEpic: Epic<Action<OnboardingPatchMeta, Onboarding>, StoreState, Deps> =\n  (action$, store, deps) =>\n    action$.ofType(ONBOARDING_PATCH)\n      .filter(action => action.status === ActionStatus.Start)\n      .filter(action => !(action.meta.type.sendMessage &&\n        !store.getState().onboarding.exploreModal),\n      )\n      .do(action => recordEvent(\n        UserEvents.OnboardingStepCompleted,\n        { type: action.meta.type, skipped: action.meta.skipped }),\n      )\n      .flatMap(action => deps.me.setOnboarding({\n        ...store.getState().onboarding,\n        ...action.meta.type,\n      })\n      .map(onboarding => onboardingPatch(action.meta, onboarding))\n      .catch((e: Error) => Observable.of(onboardingPatch(action.meta, e))),\n    );\n\nconst claimOnboardingCredit: Epic<\nAction<Partial<Onboarding>|Error|null, Onboarding|null>, StoreState, Deps\n> = (action$, store, deps) =>\n    action$.ofType(ONBOARDING_CREDIT_CLAIM)\n      .filter(action => action.status === ActionStatus.Start)\n      .flatMap((action: Action<Partial<Onboarding>, Onboarding>) => deps.me.claimCredit()\n        .map(onboarding => onboardingCreditClaim(action.meta, onboarding))\n        .catch((e: Error) => Observable.merge(\n          Observable.of(toastSet(e)),\n          Observable.of(onboardingCreditClaim(action.meta, e)),\n        ),\n      ));\n\nconst patchPreferences: Epic<\n  Action<Preferences|Error|string|null, MeBody|null>, StoreState, Deps\n> = (action$, store, deps) => action$.ofType(PREFERENCES_UPDATE)\n  .filter(action => action.status === ActionStatus.Start)\n  .flatMap((action: Action<Preferences, MeBody>) =>\n    deps.me.updatePreferences(action.meta)\n      .map(meBody => preferencesUpdate(action.meta, meBody))\n      .catch((e: Error) =>\n        Observable.merge(\n          Observable.of(toastSet(e)),\n          Observable.of(preferencesUpdate(action.meta, e)),\n          Observable.of(meFetch('')),\n        ),\n      ),\n  );\n\nconst updateMePhoto: Epic<Action<File|Me, Me|MeBody>, StoreState, Deps>\n  = (action$, store, deps) =>\n    action$.ofType(ME_PHOTO_UPDATE)\n      .filter(action => action.status === ActionStatus.Start && !!store.getState().me.data)\n      .flatMap((action: Action<File, Me>) =>\n        deps.cloudFile.upload(action.meta, true)\n          .map(cloudFile => meUpdate({\n            ...store.getState().me.data!,\n            photoCloudFile: cloudFile.cloudFile,\n          })),\n      );\n\nconst updateMeSignUpInfo: Epic<Action<MeSignUpInfoMeta, null>, StoreState, Deps>\n  = (action$, store, deps) =>\n    action$.ofType(ME_SIGN_UP_INFO_UPDATE)\n      .filter(action => action.status === ActionStatus.Start)\n      .flatMap(action =>\n        deps.me.updateSignUpInfo(action.meta)\n          .map(() => meSignUpInfoUpdate(action.meta, null)),\n      );\n\nconst setTfa: Epic<Action<MeTfaSetMeta|Error|null, TwoFactorAuthentication|null>, StoreState, Deps>\n  = (action$, store, deps) =>\n    action$.ofType(ME_TFA_SET)\n      .filter(action => action.status === ActionStatus.Start)\n      .flatMap((action: Action<MeTfaSetMeta, TwoFactorAuthentication>) => {\n        if (!isValidPhoneNumber(action.meta.phone)) {\n          const error = new Error('Phone Number is invalid.');\n          return Observable.merge(\n            Observable.of(meTfaSet(action.meta, error)),\n            Observable.of(toastSet(error)),\n          );\n        }\n\n        return deps.me.setTFA(action.meta.phone, action.meta.password)\n          .map(result => meTfaSet(action.meta, result))\n          .catch((e: Error) => Observable.merge(\n            Observable.of(meTfaSet(action.meta, e)),\n            Observable.of(toastSet(e)),\n          ));\n      });\n\nconst unsetTfa: Epic<Action<string|Error|null, null>, StoreState, Deps>\n  = (action$, store, deps) =>\n    action$.ofType(ME_TFA_UNSET)\n      .filter(action => action.status === ActionStatus.Start)\n      .flatMap((action: Action<string, null>) => {\n        return deps.me.unsetTFA(action.meta)\n          .map(meBody => meTfaUnset(action.meta, meBody))\n          .catch((e: Error) => Observable.merge(\n            Observable.of(meTfaUnset(action.meta, e)),\n            Observable.of(toastSet(e)),\n          ));\n      });\n\nconst verifyMeTfa: Epic<\n  Action<string|Error|null, TwoFactorAuthentication|Error|null\n>, StoreState, Deps> = (action$, store, deps) =>\n  action$.ofType(ME_TFA_VERIFY)\n    .filter(action => action.status === ActionStatus.Start)\n    .flatMap((action: Action<string, TwoFactorAuthentication>) => {\n      return deps.me.verifyTFA(action.meta)\n        .map(tfa => meTfaVerify(action.meta, tfa))\n        .catch((e: Error) => Observable.merge(\n          Observable.of(meTfaVerify(action.meta, e)),\n          Observable.of(toastSet(e)),\n        ));\n    });\n\nexport default [\n  fetchMe,\n  patchMe,\n  patchPreferences,\n  createMeEpic,\n  redirectCreateSuccessEpic,\n  meExperimentsFetchEpic,\n  fetchOnboardingEpic,\n  patchOnboardingEpic,\n  claimOnboardingCredit,\n  deleteMeEpic,\n  updateMePhoto,\n  updateMeSignUpInfo,\n  setTfa,\n  unsetTfa,\n  verifyMeTfa,\n];\n"]}]}