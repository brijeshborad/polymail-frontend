{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/ThreadDetail/components/Composer/components/CommentEditor/index.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/ThreadDetail/components/Composer/components/CommentEditor/index.tsx","mtime":1675280254041},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4JzsKaW1wb3J0IHsgdmFsdWVzIH0gZnJvbSAnbG9kYXNoJzsKaW1wb3J0IENvbW1lbnRFZGl0b3IgZnJvbSAnLi9Db21tZW50RWRpdG9yJzsKaW1wb3J0IHsgY29udGFjdFR5cGVhaGVhZERvbWFpbiwgY29udGFjdFR5cGVhaGVhZENsZWFyIH0gZnJvbSAnQHNyYy9kdWNrcy9jb250YWN0cyc7CmltcG9ydCB7IHNlbGVjdERvbWFpbnMgfSBmcm9tICdAc3JjL2R1Y2tzL2FjY291bnRzJzsKaW1wb3J0IHsgc2hhcmVkVGhyZWFkQWN0aXZpdHlDcmVhdGUgfSBmcm9tICdAc3JjL2R1Y2tzL3NoYXJlZFRocmVhZHMnOwp2YXIgbWFwU3RhdGVUb1Byb3BzID0gZnVuY3Rpb24gKHN0YXRlLCBvd25Qcm9wcykgewogICAgcmV0dXJuIHsKICAgICAgICB0ZWFtTWVtYmVyczogdmFsdWVzKHN0YXRlLnRlYW1NZW1iZXJzKSwKICAgICAgICBjb250YWN0czogc3RhdGUudHlwZWFoZWFkQ29udGFjdHMsCiAgICAgICAgZG9tYWluczogc2VsZWN0RG9tYWlucyhzdGF0ZSksCiAgICAgICAgc2hhcmVkVGhyZWFkOiBzdGF0ZS5zZWxlY3RlZFNoYXJlZFRocmVhZCwKICAgIH07Cn07CnZhciBtYXBEaXNwYXRjaFRvUHJvcHMgPSBmdW5jdGlvbiAoZGlzcGF0Y2gpIHsgcmV0dXJuICh7CiAgICBjb250YWN0VHlwZWFoZWFkOiBmdW5jdGlvbiAoZG9tYWlucykgeyByZXR1cm4gZGlzcGF0Y2goY29udGFjdFR5cGVhaGVhZERvbWFpbihkb21haW5zKSk7IH0sCiAgICBjbGVhckNvbnRhY3RUeXBlYWhlYWQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGRpc3BhdGNoKGNvbnRhY3RUeXBlYWhlYWRDbGVhcigpKTsgfSwKICAgIGNyZWF0ZVNoYXJlZFRocmVhZEFjdGl2aXR5OiBmdW5jdGlvbiAobWV0YSkgeyByZXR1cm4gZGlzcGF0Y2goc2hhcmVkVGhyZWFkQWN0aXZpdHlDcmVhdGUobWV0YSkpOyB9LAp9KTsgfTsKLy8gSEFDSyhTSElOKTogVXNlcyB3aXRoUmVmIC8vIGdldFdyYXBwZWRJbnN0YW5jZSB1bnRpbCB3ZSBjYW4gdXBncmFkZSB0byA+IFJlYWN0IDE2LjMKZXhwb3J0IGRlZmF1bHQgY29ubmVjdChtYXBTdGF0ZVRvUHJvcHMsIG1hcERpc3BhdGNoVG9Qcm9wcywgbnVsbCwgeyB3aXRoUmVmOiB0cnVlIH0pKENvbW1lbnRFZGl0b3IpOwo="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/ThreadDetail/components/Composer/components/CommentEditor/index.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/ThreadDetail/components/Composer/components/CommentEditor/index.tsx"],"names":[],"mappings":"AACA,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AACtC,OAAO,EAAE,MAAM,EAAE,MAAM,QAAQ,CAAC;AAKhC,OAAO,aAAmD,MAAM,iBAAiB,CAAC;AAClF,OAAO,EAAE,sBAAsB,EAAE,qBAAqB,EAAE,MAAM,qBAAqB,CAAC;AACpF,OAAO,EAAE,aAAa,EAAE,MAAM,qBAAqB,CAAC;AACpD,OAAO,EAAE,0BAA0B,EAAE,MAAM,0BAA0B,CAAC;AAEtE,IAAM,eAAe,GAAG,UAAC,KAAiB,EAAE,QAAe;IACzD,OAAO;QACL,WAAW,EAAE,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC;QACtC,QAAQ,EAAE,KAAK,CAAC,iBAAiB;QACjC,OAAO,EAAE,aAAa,CAAC,KAAK,CAAC;QAC7B,YAAY,EAAE,KAAK,CAAC,oBAAoB;KACzC,CAAC;AACJ,CAAC,CAAC;AAEF,IAAM,kBAAkB,GAAG,UAAC,QAA8B,IAAoB,OAAA,CAAC;IAC7E,gBAAgB,EAAE,UAAA,OAAO,IAAI,OAAA,QAAQ,CAAC,sBAAsB,CAAC,OAAO,CAAC,CAAC,EAAzC,CAAyC;IACtE,qBAAqB,EAAE,cAAM,OAAA,QAAQ,CAAC,qBAAqB,EAAE,CAAC,EAAjC,CAAiC;IAC9D,0BAA0B,EAAE,UAAA,IAAI,IAAI,OAAA,QAAQ,CAAC,0BAA0B,CAAC,IAAI,CAAC,CAAC,EAA1C,CAA0C;CAC/E,CAAC,EAJ4E,CAI5E,CAAC;AAEH,sFAAsF;AACtF,eAAe,OAAO,CACpB,eAAe,EAAE,kBAAkB,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAC7D,CAAC,aAAa,CAAC,CAAC","sourcesContent":["import { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport { values } from 'lodash';\nimport {\n  StoreState,\n} from '@src/types';\n\nimport CommentEditor, { Props, DispatchProps, StateProps } from './CommentEditor';\nimport { contactTypeaheadDomain, contactTypeaheadClear } from '@src/ducks/contacts';\nimport { selectDomains } from '@src/ducks/accounts';\nimport { sharedThreadActivityCreate } from '@src/ducks/sharedThreads';\n\nconst mapStateToProps = (state: StoreState, ownProps: Props): StateProps => {\n  return {\n    teamMembers: values(state.teamMembers),\n    contacts: state.typeaheadContacts,\n    domains: selectDomains(state),\n    sharedThread: state.selectedSharedThread,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<StoreState>): DispatchProps => ({\n  contactTypeahead: domains => dispatch(contactTypeaheadDomain(domains)),\n  clearContactTypeahead: () => dispatch(contactTypeaheadClear()),\n  createSharedThreadActivity: meta => dispatch(sharedThreadActivityCreate(meta)),\n});\n\n// HACK(SHIN): Uses withRef // getWrappedInstance until we can upgrade to > React 16.3\nexport default connect<StateProps, DispatchProps, Props>(\n  mapStateToProps, mapDispatchToProps, null, { withRef: true },\n)(CommentEditor);\n"]}]}