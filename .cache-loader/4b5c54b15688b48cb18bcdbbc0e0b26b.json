{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Sequences/routes/SequenceDetail/SequenceSettings/index.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Sequences/routes/SequenceDetail/SequenceSettings/index.tsx","mtime":1675280254088},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4JzsKaW1wb3J0IHsgd2l0aFJvdXRlciB9IGZyb20gJ3JlYWN0LXJvdXRlcic7CmltcG9ydCBTZXF1ZW5jZVNldHRpbmdzIGZyb20gJy4vU2VxdWVuY2VTZXR0aW5ncyc7CmltcG9ydCB7IHNlcXVlbmNlVXBkYXRlIH0gZnJvbSAnQHNyYy9kdWNrcy9zZXF1ZW5jZXMnOwp2YXIgbWFwU3RhdGVUb1Byb3BzID0gZnVuY3Rpb24gKHN0YXRlLCBvd25Qcm9wcykgewogICAgdmFyIHNlbGVjdGVkU2VxdWVuY2UgPSBvd25Qcm9wcy5tYXRjaCAmJiBvd25Qcm9wcy5tYXRjaC5wYXJhbXMuc2VxdWVuY2VJZDsKICAgIHZhciBzZXF1ZW5jZSA9IHNlbGVjdGVkU2VxdWVuY2UgPyBzdGF0ZS5zZXF1ZW5jZXNbc2VsZWN0ZWRTZXF1ZW5jZV0gOiB1bmRlZmluZWQ7CiAgICB2YXIgZW5hYmxlQWNjb3VudENob29zZXIgPSBzdGF0ZS5tZS5kYXRhICYmIHNlcXVlbmNlICYmIHNlcXVlbmNlLmRhdGEgJiYKICAgICAgICBzdGF0ZS5tZS5kYXRhLmlkID09PSBzZXF1ZW5jZS5kYXRhLnVzZXI7CiAgICByZXR1cm4gewogICAgICAgIHNlcXVlbmNlOiBzZXF1ZW5jZSwKICAgICAgICBhY2NvdW50czogZW5hYmxlQWNjb3VudENob29zZXIgPyBzdGF0ZS5hY2NvdW50cyA6IHVuZGVmaW5lZCwKICAgIH07Cn07CnZhciBtYXBEaXNwYXRjaFRvUHJvcHMgPSBmdW5jdGlvbiAoZGlzcGF0Y2gpIHsgcmV0dXJuICh7CiAgICB1cGRhdGVTZXF1ZW5jZTogZnVuY3Rpb24gKHNlcXVlbmNlKSB7IHJldHVybiBkaXNwYXRjaChzZXF1ZW5jZVVwZGF0ZShzZXF1ZW5jZSkpOyB9LAp9KTsgfTsKZXhwb3J0IGRlZmF1bHQgd2l0aFJvdXRlcihjb25uZWN0KG1hcFN0YXRlVG9Qcm9wcywgbWFwRGlzcGF0Y2hUb1Byb3BzKShTZXF1ZW5jZVNldHRpbmdzKSk7Cg=="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Sequences/routes/SequenceDetail/SequenceSettings/index.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Sequences/routes/SequenceDetail/SequenceSettings/index.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAY,MAAM,aAAa,CAAC;AAEhD,OAAO,EAAE,UAAU,EAAuB,MAAM,cAAc,CAAC;AAE/D,OAAO,gBAA+C,MAAM,oBAAoB,CAAC;AAEjF,OAAO,EAAE,cAAc,EAAE,MAAM,sBAAsB,CAAC;AAEtD,IAAM,eAAe,GAAG,UAAC,KAAiB,EAAE,QAAkC;IAC5E,IAAM,gBAAgB,GAAG,QAAQ,CAAC,KAAK,IAAI,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC;IAC5E,IAAM,QAAQ,GAAG,gBAAgB,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;IAClF,IAAM,oBAAoB,GAAG,KAAK,CAAC,EAAE,CAAC,IAAI,IAAI,QAAQ,IAAI,QAAQ,CAAC,IAAI;QACrE,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,KAAK,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;IAE1C,OAAO;QACL,QAAQ,UAAA;QACR,QAAQ,EAAE,oBAAoB,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS;KAC5D,CAAC;AACJ,CAAC,CAAC;AAEF,IAAM,kBAAkB,GAAG,UAAC,QAA8B,IAAoB,OAAA,CAAC;IAC7E,cAAc,EAAE,UAAC,QAAkB,IAAK,OAAA,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,EAAlC,CAAkC;CAC3E,CAAC,EAF4E,CAE5E,CAAC;AAEH,eAAe,UAAU,CAAC,OAAO,CAC/B,eAAe,EAAE,kBAAkB,CACpC,CAAC,gBAAgB,CAA6B,CAAC,CAAC","sourcesContent":["import { connect, Dispatch } from 'react-redux';\nimport { StoreState } from '@src/types';\nimport { withRouter, RouteComponentProps } from 'react-router';\n\nimport SequenceSettings, { StateProps, DispatchProps } from './SequenceSettings';\nimport { Sequence } from '@src/types/sequences';\nimport { sequenceUpdate } from '@src/ducks/sequences';\n\nconst mapStateToProps = (state: StoreState, ownProps: RouteComponentProps<any>): StateProps => {\n  const selectedSequence = ownProps.match && ownProps.match.params.sequenceId;\n  const sequence = selectedSequence ? state.sequences[selectedSequence] : undefined;\n  const enableAccountChooser = state.me.data && sequence && sequence.data &&\n    state.me.data.id === sequence.data.user;\n\n  return {\n    sequence,\n    accounts: enableAccountChooser ? state.accounts : undefined,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<StoreState>): DispatchProps => ({\n  updateSequence: (sequence: Sequence) => dispatch(sequenceUpdate(sequence)),\n});\n\nexport default withRouter(connect<StateProps, DispatchProps>(\n  mapStateToProps, mapDispatchToProps,\n)(SequenceSettings) as React.ComponentType<any>);\n"]}]}