{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Preferences/Preferences.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Preferences/Preferences.tsx","mtime":1675280254107},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Preferences/Preferences.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Preferences/Preferences.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,MAAM,MAAM,QAAQ,CAAC;AAC5B,OAAO,EAAE,MAAM,EAAE,MAAM,QAAQ,CAAC;AAEhC,OAAO,gBAAgB,MAAM,mCAAmC,CAAC;AACjE,OAAO,UAAU,MAAM,6BAA6B,CAAC;AACrD,OAAO,YAAY,MAAM,+BAA+B,CAAC;AACzD,OAAO,iBAAiB,MAAM,oCAAoC,CAAC;AAEnE,OAAO,EAEL,UAAU,EACV,gBAAgB,EAChB,SAAS,EACT,OAAO,EACP,KAAK,EACL,mBAAmB,EACnB,WAAW,EACX,YAAY,GAEb,MAAM,YAAY,CAAC;AAEpB,OAAO,oBAAoB,CAAC;AAC5B,OAAO,EAAE,UAAU,EAAE,MAAM,mBAAmB,CAAC;AAoB/C,IAAM,WAAW,GAAG;IAClB,IAAI,EAAE,YAAY,CAAC,IAAI;IACvB,KAAK,EAAE,YAAY,CAAC,KAAK;IACzB,IAAI,EAAE,YAAY,CAAC,IAAI;CACxB,CAAC;AAEF,IAAM,iBAAiB,GAAG;IACxB,OAAO,EAAE,WAAW,CAAC,OAAO;IAC5B,QAAQ,EAAE,WAAW,CAAC,OAAO;CAC9B,CAAC;AACF,IAAM,aAAa,GAAG;IACpB,OAAO,EAAE,OAAO,CAAC,OAAO;IACxB,KAAK,EAAE,OAAO,CAAC,KAAK;CACrB,CAAC;AACF,IAAM,sBAAsB,GAAG;IAC7B,aAAa,EAAE,gBAAgB,CAAC,GAAG;IACnC,cAAc,EAAE,gBAAgB,CAAC,MAAM;CACxC,CAAC;AACF,IAAM,eAAe,GAAG;IACtB,iBAAiB,EAAE,SAAS,CAAC,GAAG;IAChC,oBAAoB,EAAE,SAAS,CAAC,MAAM;IACtC,+BAA+B,EAAE,SAAS,CAAC,IAAI;IAC/C,6BAA6B,EAAE,SAAS,CAAC,UAAU;IACnD,aAAa,EAAE,SAAS,CAAC,IAAI;CAC9B,CAAC;AACF,IAAM,yBAAyB,GAAG;IAChC,kBAAkB,EAAE,mBAAmB,CAAC,IAAI;IAC5C,kBAAkB,EAAE,mBAAmB,CAAC,KAAK;IAC7C,mBAAmB,EAAE,mBAAmB,CAAC,OAAO;CACjD,CAAC;AACF,IAAM,cAAc,GAAG;IACrB,OAAO,EAAE,aAAa;IACtB,gBAAgB,EAAE,sBAAsB;IACxC,SAAS,EAAE,eAAe;IAC1B,mBAAmB,EAAE,yBAAyB;CAC/C,CAAC;AACF,IAAM,WAAW,GAAG;IAClB,KAAK,EAAE,KAAK,CAAC,KAAK;IAClB,OAAO,EAAE,KAAK,CAAC,OAAO;IACtB,KAAK,EAAE,KAAK,CAAC,KAAK;IAClB,IAAI,EAAE,KAAK,CAAC,IAAI;IAChB,KAAK,EAAE,KAAK,CAAC,KAAK;IAClB,MAAM,EAAE,KAAK,CAAC,MAAM;IACpB,IAAI,EAAE,KAAK,CAAC,IAAI;IAChB,IAAI,EAAE,KAAK,CAAC,IAAI;CACjB,CAAC;AACF,IAAM,UAAU,GAAG,EAAE,CAAC;AACtB,IAAM,UAAU,GAAG,MAAM,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;AAC5E,IAAM,QAAQ,GAAG,MAAM,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;AAE1E,OAAO,UAAU,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,QAAQ,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE;IAC1E,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;QACtE,CAAC,UAAU,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,GAAG,UAAU,CAAC,OAAO,EAAE,CAAC;IACrD,UAAU,CAAC,GAAG,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC;CAC/B;AAED,IAAM,kBAAkB,GAAG,EAAE,CAAC;AAC9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE;IAC9B,kBAAkB,CAAI,CAAC,cAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,YAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;CACxE;AAED;IAA0B,+BAA0C;IAApE;QAAA,qEA+RC;QA9RC,uBAAiB,GAAG,UAAC,WAA4B;YAC/C,IAAM,cAAc,GAAG;gBACrB;oBACE,WAAW,EAAE,iBAAiB;oBAC9B,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;oBAChC,QAAQ,EAAE,KAAI,CAAC,YAAY;oBAC3B,EAAE,EAAE,eAAe;oBACnB,UAAU,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,aAAa,CAAC;iBACnE;gBACD;oBACE,WAAW,EAAE,kBAAkB;oBAC/B,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;oBAChC,QAAQ,EAAE,KAAI,CAAC,YAAY;oBAC3B,EAAE,EAAE,gBAAgB;oBACpB,UAAU,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,cAAc,CAAC;iBACpE;gBACD;oBACE,WAAW,EAAE,mBAAmB;oBAChC,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;oBAChC,QAAQ,EAAE,KAAI,CAAC,YAAY;oBAC3B,EAAE,EAAE,iBAAiB;oBACrB,UAAU,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,eAAe,CAAC;iBACrE;gBACD;oBACE,WAAW,EAAE,kBAAkB;oBAC/B,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;oBAChC,QAAQ,EAAE,KAAI,CAAC,YAAY;oBAC3B,EAAE,EAAE,gBAAgB;oBACpB,UAAU,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,cAAc,CAAC;iBACpE;aACF,CAAC;YAEF,OAAO,cAAc,CAAC;QACxB,CAAC,CAAA;QAED,sBAAgB,GAAG,UAAC,WAA4B;YAC9C,IAAM,aAAa,GAAG;gBACpB;oBACE,WAAW,EAAE,OAAO;oBACpB,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC;oBACvC,QAAQ,EAAE,KAAI,CAAC,YAAY;oBAC3B,EAAE,EAAE,YAAY;oBAChB,UAAU,EAAE,CAAC,CAAC,WAAW,CAAC,UAAU,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC;iBACrD;gBACD;oBACE,WAAW,EAAE,SAAS;oBACtB,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;oBAC/B,QAAQ,EAAE,KAAI,CAAC,YAAY;oBAC3B,EAAE,EAAE,cAAc;oBAClB,UAAU,EAAE,MAAM,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,YAAY,CAAC;iBACjE;gBACD;oBACE,WAAW,EAAE,SAAS;oBACtB,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;oBAC/B,QAAQ,EAAE,KAAI,CAAC,YAAY;oBAC3B,EAAE,EAAE,cAAc;oBAClB,UAAU,EAAE,MAAM,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,YAAY,CAAC;iBACjE;aACF,CAAC;YAEF,OAAO,aAAa,CAAC;QACvB,CAAC,CAAA;QAED,kBAAY,GAAG,UAAC,CAAoC;;YAC5C,IAAA,gBAIQ,EAHZ,4BAAW,EAAE,wCAAiB,EAC9B,kDAAsB,EAAE,4CAAmB,EAC3C,gDAAqB,EAAE,oCACX,CAAC;YACf,IAAM,eAAe,GAAG,WAAW,CAAC,cAAc,IAAI,WAAW,CAAC,kBAAkB;mBAC/E,WAAW,CAAC,eAAe,CAAC;YAEjC,QAAQ,CAAC,CAAC,aAAa,CAAC,EAAE,EAAE;gBAC1B,KAAK,YAAY;oBACf,6BAA6B;oBAC7B,IAAI,eAAe,EAAE;wBACnB,UAAI,MAAM,CAAC,gBAAgB,0CAAE,kBAAkB,EAAE;4BAC/C,MAAM,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,CAAC;yBAC9C;wBACD,MAAM;qBACP;oBAED,mDAAmD;oBACnD,sBAAsB,EAAE,CAAC;oBAEzB,MAAM;gBACR,KAAK,qBAAqB;oBACxB,mBAAmB,CAAC,CAAC,qBAAqB,CAAC,CAAC;oBAC5C,MAAM;gBACR,KAAK,iBAAiB;oBACpB,iBAAiB,uBACZ,WAAW,KACd,cAAc,EAAE,CAAC,eAAe,EAChC,kBAAkB,EAAE,CAAC,eAAe,EACpC,eAAe,EAAE,CAAC,eAAe,IACjC,CAAC;oBACH,MAAM;gBACR,KAAK,qBAAqB;oBACxB,iBAAiB,uBACZ,WAAW,KACd,mBAAmB,EAAE,CAAC,WAAW,CAAC,mBAAmB,IACrD,CAAC;oBACH,MAAM;gBACR,KAAK,YAAY;oBACf,iBAAiB,uBACZ,WAAW,KACd,UAAU,EAAE,WAAW,CAAC,UAAU,KAAK,UAAU,CAAC,OAAO,CAAC,CAAC;4BACzD,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,OAAO,IACtC,CAAC;oBACH,MAAM;gBACR;oBACE,MAAM;aACT;QACH,CAAC,CAAA;QAED,kBAAY,GAAG,UAAC,KAAa,EAAE,KAAa,EAAE,EAAW;YACjD,IAAA,gBAAyD,EAAvD,wCAAiB,EAAE,4BAAW,EAAE,sBAAuB,CAAC;YAChE,IAAM,cAAc,GAAG,EAAE,CAAC;YAE1B,IAAI,EAAE,IAAI,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE;gBAC3B,cAAc,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC;aACzC;iBAAM,IAAI,EAAE,IAAI,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE;gBAClC,cAAc,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC;oBAClD,CAAC,CAAC,kBAAkB,CAAC,KAAK,CAAC;oBAC3B,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;aACvB;iBAAM,IAAI,EAAE,IAAI,EAAE,CAAC,KAAK,CAAC,aAAa,CAAC,EAAE;gBACxC,cAAc,CAAC,EAAE,CAAC,GAAG,iBAAiB,CAAC,KAAK,CAAC,CAAC;aAC/C;YAED,iCAAiC;YACjC,IAAI,EAAE,IAAI,EAAE,CAAC,KAAK,CAAC,iBAAiB,CAAC,EAAE;gBACrC,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC7B,OAAO;aACR;YAED,IAAI,EAAE,EAAE;gBACN,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,EAAE;oBACvB,cAAc,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;iBAChD;gBAED,iBAAiB,uBACZ,WAAW,GACX,cAAc,EACjB,CAAC;aACJ;QACH,CAAC,CAAA;;IA6IH,CAAC;IA3IC,4BAAM,GAAN;QACQ,IAAA,eAGQ,EAFZ,4BAAW,EAAE,kDAAsB,EACnC,0BAAU,EAAE,gBAAK,EAAE,gDAAqB,EAAE,oCAC9B,CAAC;QACf,IAAM,eAAe,GAAG,WAAW,CAAC,cAAc,IAAI,WAAW,CAAC,kBAAkB;eAC/E,WAAW,CAAC,eAAe,CAAC;QACjC,IAAM,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC;QAE9B,OAAO,CACL,6BAAK,SAAS,EAAC,4BAA4B;YACzC,oBAAC,gBAAgB,IACf,KAAK,EAAC,aAAa,EACnB,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAC7B,eAAe,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe,EAC3C,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,GACnC;YACF,6BAAK,SAAS,EAAC,MAAM;gBAClB,CAAC,UAAU,IAAI,6BAAK,SAAS,EAAC,aAAa;oBAC1C,6BAAK,SAAS,EAAC,SAAS;wBACpB,6BAAK,SAAS,EAAC,OAAO,mCAEhB;wBACN,gCAAQ,OAAO,EAAE,sBAAsB,mBAAuB,CAC5D;oBACN,6BAAK,SAAS,EAAC,UAAU,6DAEnB,CACF;gBACL,UAAU,IAAI,oBAAC,UAAU,IACxB,KAAK,EAAC,8BAA8B,EACpC,QAAQ,EAAC,wDAAwD,EACjE,EAAE,EAAE,eAAe,EACnB,QAAQ,EAAE,IAAI,CAAC,YAAY,EAC3B,QAAQ,EAAC,YAAY,GACrB;gBACF,oBAAC,UAAU,IACT,KAAK,EAAC,yBAAyB,EAC/B,QAAQ,EAAC,yGAAyG,EAClH,EAAE,EAAE,CAAC,CAAC,qBAAqB,EAC3B,QAAQ,EAAE,IAAI,CAAC,YAAY,EAC3B,QAAQ,EAAC,qBAAqB,GAC9B;gBACF,oBAAC,UAAU,IACT,KAAK,EAAC,2CAA2C,EACjD,QAAQ,EAAC,qEAAqE,EAC9E,EAAE,EAAE,WAAW,CAAC,mBAAmB,EACnC,QAAQ,EAAE,IAAI,CAAC,YAAY,EAC3B,QAAQ,EAAC,qBAAqB,GAC9B;gBACF,oBAAC,UAAU,IACT,KAAK,EAAC,qCAAqC,EAC3C,EAAE,EAAE,WAAW,CAAC,UAAU,KAAK,UAAU,CAAC,OAAO,EACjD,QAAQ,EAAE,IAAI,CAAC,YAAY,EAC3B,QAAQ,EAAC,YAAY,GACrB;gBACF,oBAAC,YAAY,IACX,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,EAChC,QAAQ,EAAE,IAAI,CAAC,YAAY,EAC3B,KAAK,EAAC,iBAAiB,EACvB,QAAQ,EAAC,gDAAgD,EACzD,UAAU,EAAC,iBAAiB,EAC5B,UAAU,EAAE,UAAU,IAAI,MAAM,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,EACjE,IAAI,SACJ;gBACF,oBAAC,UAAU,IACT,KAAK,EAAC,yBAAyB,EAC/B,QAAQ,EAAC,wEAAwE,EACjF,EAAE,EAAE,eAAe,EACnB,QAAQ,EAAE,IAAI,CAAC,YAAY,EAC3B,QAAQ,EAAC,iBAAiB,GAC1B;gBACF,oBAAC,YAAY,IACX,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,EACtC,QAAQ,EAAE,IAAI,CAAC,YAAY,EAC3B,KAAK,EAAC,cAAc,EACpB,QAAQ,EAAC,2DAA2D,EACpE,UAAU,EAAC,aAAa,EACxB,UAAU,EAAE,MAAM,CAAC,iBAAiB,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,WAAW,CAAC,GACtE;gBACF,oBAAC,YAAY,IACX,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,EAClC,QAAQ,EAAE,IAAI,CAAC,YAAY,EAC3B,KAAK,EAAC,oBAAoB,EAC1B,QAAQ,EAAE,6BAAK,SAAS,EAAC,mBAAmB;wBAC1C,gCAAQ,SAAS,EAAC,WAAW,EAAC,OAAO,EAAE,UAAU,8BAExC,CACL,EACN,UAAU,EAAC,SAAS,EACpB,UAAU,EAAE,MAAM,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,OAAO,CAAC,GAC9D;gBACD,CAAC,UAAU,IAAI,oBAAC,YAAY,IAC3B,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,EACpC,QAAQ,EAAE,IAAI,CAAC,YAAY,EAC3B,KAAK,EAAC,gBAAgB,EACtB,QAAQ,EAAC,kDAAkD,EAC3D,UAAU,EAAC,WAAW,EACtB,UAAU,EAAE,MAAM,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,SAAS,CAAC,GAClE;gBACD,UAAU,IAAI,oBAAC,YAAY,IAC1B,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,EACpC,QAAQ,EAAE,IAAI,CAAC,YAAY,EAC3B,KAAK,EAAC,gBAAgB,EACtB,QAAQ,EAAC,mDAAmD,EAC5D,UAAU,EAAC,WAAW,EACtB,UAAU,EAAE,MAAM,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,SAAS,CAAC,GAClE;gBACF,oBAAC,YAAY,IACX,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,sBAAsB,CAAC,EAC3C,QAAQ,EAAE,IAAI,CAAC,YAAY,EAC3B,KAAK,EAAC,eAAe,EACrB,QAAQ,EAAC,2DAA2D,EACpE,UAAU,EAAC,kBAAkB,EAC7B,UAAU,EAAE,MAAM,CAAC,sBAAsB,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,gBAAgB,CAAC,GAChF;gBACF,oBAAC,YAAY,IACX,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,yBAAyB,CAAC,EAC9C,QAAQ,EAAE,IAAI,CAAC,YAAY,EAC3B,KAAK,EAAC,uBAAuB,EAC7B,QAAQ,EAAC,oDAAoD,EAC7D,UAAU,EAAC,qBAAqB,EAChC,UAAU,EAAE,MAAM,CAAC,yBAAyB,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,mBAAmB,CAAC,GACtF;gBACF,oBAAC,iBAAiB,IAChB,KAAK,EAAC,sBAAsB,EAC5B,QAAQ,EAAC,gEAAgE,EACzE,SAAS,EAAE,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,GAC9C;gBACF,oBAAC,iBAAiB,IAChB,KAAK,EAAC,uBAAuB,EAC7B,QAAQ,EAAE,mEAAmE;wBAC3E,2BAA2B,EAC7B,SAAS,EAAE,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,GAC7C,CACE,CACF,CACP,CAAC;IACJ,CAAC;IACH,kBAAC;AAAD,CAAC,AA/RD,CAA0B,KAAK,CAAC,aAAa,GA+R5C;AAED,eAAe,WAAW,CAAC","sourcesContent":["import React from 'react';\nimport moment from 'moment';\nimport { values } from 'lodash';\n\nimport NavigationHeader from '../../components/NavigationHeader';\nimport ToggleCell from '../../components/ToggleCell';\nimport DropdownCell from '../../components/DropdownCell';\nimport MultiDropdownCell from '../../components/MultiDropdownCell';\n\nimport {\n  Preferences as PreferencesType,\n  MarkReadOn,\n  LeftSidebarCount,\n  DockCount,\n  Hotkeys,\n  Swipe,\n  UnsubscribeBehavior,\n  DisplayMode,\n  ThemeSetting,\n  Resource,\n} from '@src/types';\n\nimport './Preferences.scss';\nimport { isElectron } from '@src/lib/electron';\n\nexport interface Props {\n  preferences: PreferencesType;\n  isDefaultClient: boolean;\n  theme: Resource<ThemeSetting>;\n  showHotkeySuggestions?: boolean;\n  isMobile?: boolean;\n  collapsedMobile?: boolean;\n}\n\nexport interface DispatchProps {\n  updatePreferences: (preference: PreferencesType) => void;\n  registerMailToProtocol: () => void;\n  showLegend: () => void;\n  setTheme: (value: ThemeSetting) => void;\n  toggleHotkeySuggest: (value: boolean) => void;\n  collapseLsb: (collapse: boolean) => void;\n}\n\nconst themeValues = {\n  Dark: ThemeSetting.Dark,\n  Light: ThemeSetting.Light,\n  Auto: ThemeSetting.Auto,\n};\n\nconst displayModeValues = {\n  Compact: DisplayMode.Compact,\n  Expanded: DisplayMode.Default,\n};\nconst hotkeysValues = {\n  Default: Hotkeys.Default,\n  Gmail: Hotkeys.Gmail,\n};\nconst leftSidebarCountValues = {\n  'Total count': LeftSidebarCount.All,\n  'Unread count': LeftSidebarCount.Unread,\n};\nconst dockCountValues = {\n  'All inbox count': DockCount.All,\n  'Unread inbox count': DockCount.Unread,\n  'Red dot if inbox is non-empty': DockCount.Bool,\n  'Red dot if inbox has unread': DockCount.BoolUnread,\n  'Don\\'t show': DockCount.None,\n};\nconst unsubscribeBehaviorValues = {\n  'Just Unsubscribe': UnsubscribeBehavior.None,\n  'Delete the email': UnsubscribeBehavior.Trash,\n  'Archive the email': UnsubscribeBehavior.Archive,\n};\nconst dropdownValues = {\n  hotkeys: hotkeysValues,\n  leftSidebarCount: leftSidebarCountValues,\n  dockCount: dockCountValues,\n  unsubscribeBehavior: unsubscribeBehaviorValues,\n};\nconst swipeValues = {\n  Trash: Swipe.Trash,\n  Archive: Swipe.Archive,\n  Later: Swipe.Later,\n  List: Swipe.List,\n  Inbox: Swipe.Inbox,\n  Unread: Swipe.Unread,\n  Star: Swipe.Star,\n  None: Swipe.None,\n};\nconst timeValues = {};\nconst startValue = moment({ y: 2017, M: 1, d: 1, h: 0, m: 0, s: 0, ms: 0 });\nconst endValue = moment({ y: 2017, M: 1, d: 2, h: 0, m: 0, s: 0, ms: 0 });\n\nwhile (startValue.format('MMM DD YYYY') !== endValue.format('MMM DD YYYY')) {\n  timeValues[startValue.format('h:mm A')] = (startValue.hours() * 60 * 60) +\n    (startValue.minutes() * 60) + startValue.seconds();\n  startValue.add(30, 'minutes');\n}\n\nconst relativeTimeValues = {};\nfor (let i = 1; i < 25; i += 1) {\n  relativeTimeValues[`${i} hour${i > 1 ? 's' : ''} later`] = i * 60 * 60;\n}\n\nclass Preferences extends React.PureComponent<Props & DispatchProps> {\n  getSwipeDropdowns = (preferences: PreferencesType) => {\n    const swipeDropdowns = [\n      {\n        description: 'Long left swipe',\n        values: Object.keys(swipeValues),\n        onSelect: this.handleSelect,\n        id: 'swipeLongLeft',\n        startIndex: values(swipeValues).indexOf(preferences.swipeLongLeft),\n      },\n      {\n        description: 'Short left swipe',\n        values: Object.keys(swipeValues),\n        onSelect: this.handleSelect,\n        id: 'swipeShortLeft',\n        startIndex: values(swipeValues).indexOf(preferences.swipeShortLeft),\n      },\n      {\n        description: 'Short right swipe',\n        values: Object.keys(swipeValues),\n        onSelect: this.handleSelect,\n        id: 'swipeShortRight',\n        startIndex: values(swipeValues).indexOf(preferences.swipeShortRight),\n      },\n      {\n        description: 'Long right swipe',\n        values: Object.keys(swipeValues),\n        onSelect: this.handleSelect,\n        id: 'swipeLongRight',\n        startIndex: values(swipeValues).indexOf(preferences.swipeLongRight),\n      },\n    ];\n\n    return swipeDropdowns;\n  }\n\n  getTimeDropdowns = (preferences: PreferencesType) => {\n    const timeDropdowns = [\n      {\n        description: 'Later',\n        values: Object.keys(relativeTimeValues),\n        onSelect: this.handleSelect,\n        id: 'laterToday',\n        startIndex: ((preferences.laterToday / 60) / 60) - 1,\n      },\n      {\n        description: 'Morning',\n        values: Object.keys(timeValues),\n        onSelect: this.handleSelect,\n        id: 'laterMorning',\n        startIndex: values(timeValues).indexOf(preferences.laterMorning),\n      },\n      {\n        description: 'Evening',\n        values: Object.keys(timeValues),\n        onSelect: this.handleSelect,\n        id: 'laterEvening',\n        startIndex: values(timeValues).indexOf(preferences.laterEvening),\n      },\n    ];\n\n    return timeDropdowns;\n  }\n\n  handleToggle = (e: React.SyntheticEvent<HTMLElement>) => {\n    const {\n      preferences, updatePreferences,\n      registerMailToProtocol, toggleHotkeySuggest,\n      showHotkeySuggestions, isDefaultClient,\n    } = this.props;\n    const gmailCategories = preferences.showSocialList || preferences.showPromotionsList\n      || preferences.showUpdatesList;\n\n    switch (e.currentTarget.id) {\n      case 'app-toggle':\n        // handle electron untoggling\n        if (isDefaultClient) {\n          if (window.PMElectronBridge?.unsetDefaultClient) {\n            window.PMElectronBridge.unsetDefaultClient();\n          }\n          break;\n        }\n\n        // handle registering as default handler for mailto\n        registerMailToProtocol();\n\n        break;\n      case 'keyboardSuggestions':\n        toggleHotkeySuggest(!showHotkeySuggestions);\n        break;\n      case 'gmailCategories':\n        updatePreferences({\n          ...preferences,\n          showSocialList: !gmailCategories,\n          showPromotionsList: !gmailCategories,\n          showUpdatesList: !gmailCategories,\n        });\n        break;\n      case 'blockTrackingPixels':\n        updatePreferences({\n          ...preferences,\n          blockTrackingPixels: !preferences.blockTrackingPixels,\n        });\n        break;\n      case 'markReadOn':\n        updatePreferences({\n          ...preferences,\n          markReadOn: preferences.markReadOn === MarkReadOn.Archive ?\n            MarkReadOn.None : MarkReadOn.Archive,\n        });\n        break;\n      default:\n        break;\n    }\n  }\n\n  handleSelect = (value: string, index: number, id?: string) => {\n    const { updatePreferences, preferences, setTheme } = this.props;\n    const newPreferences = {};\n\n    if (id && id.match('swipe')) {\n      newPreferences[id] = swipeValues[value];\n    } else if (id && id.match('later')) {\n      newPreferences[id] = id.toLowerCase().match('today')\n        ? relativeTimeValues[value]\n        : timeValues[value];\n    } else if (id && id.match('displayMode')) {\n      newPreferences[id] = displayModeValues[value];\n    }\n\n    // Set Theme based off preference\n    if (id && id.match('themePreference')) {\n      setTheme(themeValues[value]);\n      return;\n    }\n\n    if (id) {\n      if (!newPreferences[id]) {\n        newPreferences[id] = dropdownValues[id][value];\n      }\n\n      updatePreferences({\n        ...preferences,\n        ...newPreferences,\n      });\n    }\n  }\n\n  render() {\n    const {\n      preferences, registerMailToProtocol,\n      showLegend, theme, showHotkeySuggestions, isDefaultClient,\n    } = this.props;\n    const gmailCategories = preferences.showSocialList || preferences.showPromotionsList\n      || preferences.showUpdatesList;\n    const themeValue = theme.data;\n\n    return (\n      <div className=\"settings-panel preferences\">\n        <NavigationHeader\n          title=\"Preferences\"\n          isMobile={this.props.isMobile}\n          collapsedMobile={this.props.collapsedMobile}\n          collapseLsb={this.props.collapseLsb}\n        />\n        <div className=\"main\">\n          {!isElectron && <div className=\"default-app\">\n            <div className=\"top-row\">\n                <div className=\"title\">\n                  Make Polymail my default app\n                </div>\n                <button onClick={registerMailToProtocol}>Make Default</button>\n            </div>\n            <div className=\"subtitle\">\n              Sets Polymail as your default system-wide email client\n            </div>\n          </div>}\n          {isElectron && <ToggleCell\n            title=\"Make Polymail my default app\"\n            subtitle=\"Sets Polymail as your default system-wide email client\"\n            on={isDefaultClient}\n            onToggle={this.handleToggle}\n            toggleId=\"app-toggle\"\n          />}\n          <ToggleCell\n            title=\"Show Hotkey Suggestions\"\n            subtitle=\"Learn Polymail faster by showing keyboard shortcuts when taking actions that can be done with a hotkey.\"\n            on={!!showHotkeySuggestions}\n            onToggle={this.handleToggle}\n            toggleId=\"keyboardSuggestions\"\n          />\n          <ToggleCell\n            title=\"Block email tracking on incoming messages\"\n            subtitle=\"Prevents other people from tracking when you've read their messages\"\n            on={preferences.blockTrackingPixels}\n            onToggle={this.handleToggle}\n            toggleId=\"blockTrackingPixels\"\n          />\n          <ToggleCell\n            title=\"Mark archived conversations as read\"\n            on={preferences.markReadOn === MarkReadOn.Archive}\n            onToggle={this.handleToggle}\n            toggleId=\"markReadOn\"\n          />\n          <DropdownCell\n            values={Object.keys(themeValues)}\n            onSelect={this.handleSelect}\n            title=\"Interface Theme\"\n            subtitle=\"Choose the color theme you'd like for Polymail\"\n            dropdownId=\"themePreference\"\n            startIndex={themeValue && values(themeValues).indexOf(themeValue)}\n            beta\n          />\n          <ToggleCell\n            title=\"Enable Gmail Categories\"\n            subtitle=\"Auto-filters new mail into Social, Promotions, and Updates categories.\"\n            on={gmailCategories}\n            onToggle={this.handleToggle}\n            toggleId=\"gmailCategories\"\n          />\n          <DropdownCell\n            values={Object.keys(displayModeValues)}\n            onSelect={this.handleSelect}\n            title=\"Display mode\"\n            subtitle=\"Choose how much information is shown when viewing threads\"\n            dropdownId=\"displayMode\"\n            startIndex={values(displayModeValues).indexOf(preferences.displayMode)}\n          />\n          <DropdownCell\n            values={Object.keys(hotkeysValues)}\n            onSelect={this.handleSelect}\n            title=\"Keyboard shortcuts\"\n            subtitle={<div className=\"shortcuts-wrapper\">\n              <button className=\"shortcuts\" onClick={showLegend}>\n                View keyboard shortcuts\n              </button>\n            </div>}\n            dropdownId=\"hotkeys\"\n            startIndex={values(hotkeysValues).indexOf(preferences.hotkeys)}\n          />\n          {!isElectron && <DropdownCell\n            values={Object.keys(dockCountValues)}\n            onSelect={this.handleSelect}\n            title=\"App icon badge\"\n            subtitle=\"This is the count that displays in the tab title\"\n            dropdownId=\"dockCount\"\n            startIndex={values(dockCountValues).indexOf(preferences.dockCount)}\n          />}\n          {isElectron && <DropdownCell\n            values={Object.keys(dockCountValues)}\n            onSelect={this.handleSelect}\n            title=\"App icon badge\"\n            subtitle=\"This displays in the badge on Polymail's app Icon\"\n            dropdownId=\"dockCount\"\n            startIndex={values(dockCountValues).indexOf(preferences.dockCount)}\n          />}\n          <DropdownCell\n            values={Object.keys(leftSidebarCountValues)}\n            onSelect={this.handleSelect}\n            title=\"Inbox counter\"\n            subtitle=\"This is the inbox count that displays in the left sidebar\"\n            dropdownId=\"leftSidebarCount\"\n            startIndex={values(leftSidebarCountValues).indexOf(preferences.leftSidebarCount)}\n          />\n          <DropdownCell\n            values={Object.keys(unsubscribeBehaviorValues)}\n            onSelect={this.handleSelect}\n            title=\"One-click unsubscribe\"\n            subtitle=\"What should happen when unsubscribing from emails?\"\n            dropdownId=\"unsubscribeBehavior\"\n            startIndex={values(unsubscribeBehaviorValues).indexOf(preferences.unsubscribeBehavior)}\n          />\n          <MultiDropdownCell\n            title=\"Custom swipe actions\"\n            subtitle=\"Customize what actions are performed by swiping conversations.\"\n            dropdowns={this.getSwipeDropdowns(preferences)}\n          />\n          <MultiDropdownCell\n            title=\"Default time settings\"\n            subtitle={'Morning, afternoon, and evening times for Read Later, Send Later,' +\n              ' and Follow Up Reminders.'}\n            dropdowns={this.getTimeDropdowns(preferences)}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Preferences;\n"]}]}