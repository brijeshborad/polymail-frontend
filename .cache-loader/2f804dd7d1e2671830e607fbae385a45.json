{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/api/sequenceStageRecipients.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/api/sequenceStageRecipients.ts","mtime":1675280253980},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnOwppbXBvcnQgeyBqc29uUmVxdWVzdCB9IGZyb20gJy4vYmFzZSc7CmltcG9ydCB7IGNyZWF0ZVNlcXVlbmNlU3RhZ2VSZWNpcGllbnQgfSBmcm9tICdAc3JjL21vY2tzL3NlcXVlbmNlcyc7CmltcG9ydCB7IGNvbXB1dGVTZXF1ZW5jZVN0YWdlUmVjaXBpZW50IH0gZnJvbSAnQHNyYy9saWIvbW9kZWxzL3NlcXVlbmNlU3RhZ2VSZWNpcGllbnRzJzsKdmFyIFNlcXVlbmNlU3RhZ2VSZWNpcGllbnRDbGllbnQgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7CiAgICBmdW5jdGlvbiBTZXF1ZW5jZVN0YWdlUmVjaXBpZW50Q2xpZW50KCkgewogICAgfQogICAgU2VxdWVuY2VTdGFnZVJlY2lwaWVudENsaWVudC5wcm90b3R5cGUubGlzdCA9IGZ1bmN0aW9uIChtZXRhKSB7CiAgICAgICAgdmFyIHF1ZXJ5ID0gbmV3IFVSTFNlYXJjaFBhcmFtcygpOwogICAgICAgIGlmIChtZXRhLnF1ZXJ5KSB7CiAgICAgICAgICAgIHF1ZXJ5LmFwcGVuZCgncScsIG1ldGEucXVlcnkpOwogICAgICAgIH0KICAgICAgICBpZiAobWV0YS5maWx0ZXIpIHsKICAgICAgICAgICAgcXVlcnkuYXBwZW5kKCdmaWx0ZXInLCBtZXRhLmZpbHRlcik7CiAgICAgICAgfQogICAgICAgIGlmIChtZXRhLnNvcnQpIHsKICAgICAgICAgICAgcXVlcnkuYXBwZW5kKCdzb3J0JywgbWV0YS5zb3J0KTsKICAgICAgICAgICAgaWYgKG1ldGEuZGVzYykgewogICAgICAgICAgICAgICAgcXVlcnkuYXBwZW5kKCdkZXNjJywgJ3RydWUnKTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBpZiAobWV0YS5vZmZzZXQpIHsKICAgICAgICAgICAgcXVlcnkuYXBwZW5kKCdvZmZzZXQnLCBtZXRhLm9mZnNldC50b1N0cmluZygpKTsKICAgICAgICB9CiAgICAgICAgdmFyIHF1ZXJ5U3RyaW5nID0gcXVlcnkudG9TdHJpbmcoKTsKICAgICAgICByZXR1cm4ganNvblJlcXVlc3QoewogICAgICAgICAgICBtZXRob2Q6ICdHRVQnLAogICAgICAgICAgICByb3V0ZTogISFxdWVyeVN0cmluZyA/CiAgICAgICAgICAgICAgICAiL3YyL3NlcXVlbmNlcy8iICsgbWV0YS5zZXF1ZW5jZSArICIvc3RhZ2VzLyIgKyBtZXRhLnN0YWdlICsgIi9yZWNpcGllbnRzPyIgKyBxdWVyeVN0cmluZyA6CiAgICAgICAgICAgICAgICAiL3YyL3NlcXVlbmNlcy8iICsgbWV0YS5zZXF1ZW5jZSArICIvc3RhZ2VzLyIgKyBtZXRhLnN0YWdlICsgIi9yZWNpcGllbnRzIiwKICAgICAgICB9KQogICAgICAgICAgICAubWFwKGZ1bmN0aW9uIChyZXNwb25zZSkgeyByZXR1cm4gcmVzcG9uc2Uuc3RhZ2VSZWNpcGllbnRzLm1hcChmdW5jdGlvbiAociwgaSkgewogICAgICAgICAgICByZXR1cm4gY29tcHV0ZVNlcXVlbmNlU3RhZ2VSZWNpcGllbnQociwgcmVzcG9uc2UucmVjaXBpZW50c1tpXSk7CiAgICAgICAgfSk7IH0pOwogICAgfTsKICAgIHJldHVybiBTZXF1ZW5jZVN0YWdlUmVjaXBpZW50Q2xpZW50Owp9KCkpOwpleHBvcnQgeyBTZXF1ZW5jZVN0YWdlUmVjaXBpZW50Q2xpZW50IH07CmV4cG9ydCBmdW5jdGlvbiBtb2NrU2VxdWVuY2VTdGFnZVJlY2lwaWVudENsaWVudCgpIHsKICAgIHJldHVybiB7CiAgICAgICAgbGlzdDogZnVuY3Rpb24gKCkgeyByZXR1cm4gT2JzZXJ2YWJsZS5vZihbY3JlYXRlU2VxdWVuY2VTdGFnZVJlY2lwaWVudCgpXSk7IH0sCiAgICB9Owp9Cg=="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/api/sequenceStageRecipients.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/api/sequenceStageRecipients.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,MAAM,CAAC;AAGlC,OAAO,EAAE,WAAW,EAAE,MAAM,QAAQ,CAAC;AACrC,OAAO,EAAE,4BAA4B,EAAE,MAAM,sBAAsB,CAAC;AACpE,OAAO,EAAE,6BAA6B,EAAE,MAAM,yCAAyC,CAAC;AAOxF;IAAA;IAoCA,CAAC;IAnCC,2CAAI,GAAJ,UAAK,IAAgC;QACnC,IAAM,KAAK,GAAG,IAAI,eAAe,EAAE,CAAC;QAEpC,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,KAAK,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;SAC/B;QAED,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;SACrC;QAED,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,KAAK,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;YAChC,IAAI,IAAI,CAAC,IAAI,EAAE;gBACb,KAAK,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;aAC9B;SACF;QAED,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;SAChD;QAED,IAAM,WAAW,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;QAErC,OAAO,WAAW,CAAC;YACjB,MAAM,EAAE,KAAK;YACb,KAAK,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC;gBACpB,mBAAiB,IAAI,CAAC,QAAQ,gBAAW,IAAI,CAAC,KAAK,oBAAe,WAAa,CAAC,CAAC;gBACjF,mBAAiB,IAAI,CAAC,QAAQ,gBAAW,IAAI,CAAC,KAAK,gBAAa;SACnE,CAAC;aACD,GAAG,CAAC,UAAA,QAAQ,IAAI,OAAA,QAAQ,CAAC,eAAe,CAAC,GAAG,CAC3C,UAAC,CAAyB,EAAE,CAAS;YACnC,OAAA,6BAA6B,CAAC,CAAC,EAAE,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QAAxD,CAAwD,CAC3D,EAHgB,CAGhB,CAAC,CAAC;IACL,CAAC;IACH,mCAAC;AAAD,CAAC,AApCD,IAoCC;;AAED,MAAM,UAAU,gCAAgC;IAC9C,OAAO;QACL,IAAI,EAAE,cAAM,OAAA,UAAU,CAAC,EAAE,CAAC,CAAC,4BAA4B,EAAE,CAAC,CAAC,EAA/C,CAA+C;KAC5D,CAAC;AACJ,CAAC","sourcesContent":["import { Observable } from 'rxjs';\n\nimport { SequenceStageRecipient } from '@src/types/sequences';\nimport { jsonRequest } from './base';\nimport { createSequenceStageRecipient } from '@src/mocks/sequences';\nimport { computeSequenceStageRecipient } from '@src/lib/models/sequenceStageRecipients';\nimport { SequenceStageRecipientMeta } from '@src/ducks/sequenceStageRecipients';\n\nexport interface SequenceStageRecipientAPI {\n  list(meta: SequenceStageRecipientMeta): Observable<SequenceStageRecipient[]>;\n}\n\nexport class SequenceStageRecipientClient implements SequenceStageRecipientAPI {\n  list(meta: SequenceStageRecipientMeta): Observable<SequenceStageRecipient[]> {\n    const query = new URLSearchParams();\n\n    if (meta.query) {\n      query.append('q', meta.query);\n    }\n\n    if (meta.filter) {\n      query.append('filter', meta.filter);\n    }\n\n    if (meta.sort) {\n      query.append('sort', meta.sort);\n      if (meta.desc) {\n        query.append('desc', 'true');\n      }\n    }\n\n    if (meta.offset) {\n      query.append('offset', meta.offset.toString());\n    }\n\n    const queryString = query.toString();\n\n    return jsonRequest({\n      method: 'GET',\n      route: !!queryString ?\n        `/v2/sequences/${meta.sequence}/stages/${meta.stage}/recipients?${queryString}` :\n        `/v2/sequences/${meta.sequence}/stages/${meta.stage}/recipients`,\n    })\n    .map(response => response.stageRecipients.map(\n      (r: SequenceStageRecipient, i: number) =>\n        computeSequenceStageRecipient(r, response.recipients[i]),\n    ));\n  }\n}\n\nexport function mockSequenceStageRecipientClient(): SequenceStageRecipientAPI {\n  return {\n    list: () => Observable.of([createSequenceStageRecipient()]),\n  };\n}\n"]}]}