{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/typeahead.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/typeahead.ts","mtime":1675280254069},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHNwZWNpYWxSZWdleENoYXJzID0gWydbJywgJ3snLCAnXFwnLCAnKCcsICcpJywgJysnLCAnXicsICckJywgJz8nLCAnfCcsICcuJywgJyonXTsKZXhwb3J0IHZhciB0eXBlYWhlYWRSZWdleCA9IGZ1bmN0aW9uIChxdWVyeSwgaW5jbHVkZVdoaXRlc3BhY2UpIHsKICAgIGlmIChpbmNsdWRlV2hpdGVzcGFjZSA9PT0gdm9pZCAwKSB7IGluY2x1ZGVXaGl0ZXNwYWNlID0gZmFsc2U7IH0KICAgIC8vIENsZWFudXAgd2hpdGVzcGFjZSBmaXJzdAogICAgdmFyIG5ld1F1ZXJ5ID0gaW5jbHVkZVdoaXRlc3BhY2UgPyBxdWVyeSA6IHF1ZXJ5LnJlcGxhY2UoL1xzKy9nLCAnJyk7CiAgICByZXR1cm4gbmV3IFJlZ0V4cChuZXdRdWVyeQogICAgICAgIC5zcGxpdCgnJykKICAgICAgICAvLyBOZWVkIHRvIGVzY2FwZSBzcGVjaWFsIFJlZ2V4IGNoYXJhY3RlcnMgdG8gcHJldmVudCBjcmFzaGluZwogICAgICAgIC5tYXAoZnVuY3Rpb24gKGMpIHsKICAgICAgICBpZiAoc3BlY2lhbFJlZ2V4Q2hhcnMuaW5kZXhPZihjKSA+PSAwKSB7CiAgICAgICAgICAgIHJldHVybiAnXFwnICsgYzsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIGM7CiAgICB9KQogICAgICAgIC5qb2luKCcuKicpLCAnaScpOwp9Owo="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/typeahead.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/typeahead.ts"],"names":[],"mappings":"AAAA,IAAM,iBAAiB,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AAExF,MAAM,CAAC,IAAM,cAAc,GAAG,UAAC,KAAa,EAAE,iBAAkC;IAAlC,kCAAA,EAAA,yBAAkC;IAC9E,2BAA2B;IAC3B,IAAM,QAAQ,GAAG,iBAAiB,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;IACvE,OAAO,IAAI,MAAM,CACf,QAAQ;SACL,KAAK,CAAC,EAAE,CAAC;QACV,8DAA8D;SAC7D,GAAG,CAAC,UAAC,CAAC;QACL,IAAI,iBAAiB,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE;YACrC,OAAO,IAAI,GAAG,CAAC,CAAC;SACjB;QACD,OAAO,CAAC,CAAC;IACX,CAAC,CAAC;SACD,IAAI,CAAC,IAAI,CAAC,EACb,GAAG,CACJ,CAAC;AACJ,CAAC,CAAC","sourcesContent":["const specialRegexChars = ['[', '{', '\\\\', '(', ')', '+', '^', '$', '?', '|', '.', '*'];\n\nexport const typeaheadRegex = (query: string, includeWhitespace: boolean = false): RegExp => {\n  // Cleanup whitespace first\n  const newQuery = includeWhitespace ? query : query.replace(/\\s+/g, '');\n  return new RegExp(\n    newQuery\n      .split('')\n      // Need to escape special Regex characters to prevent crashing\n      .map((c) => {\n        if (specialRegexChars.indexOf(c) >= 0) {\n          return '\\\\' + c;\n        }\n        return c;\n      })\n      .join('.*'),\n    'i',\n  );\n};\n"]}]}