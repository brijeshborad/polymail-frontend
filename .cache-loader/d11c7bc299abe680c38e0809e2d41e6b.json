{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/PublicSharedThreads/index.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/PublicSharedThreads/index.tsx","mtime":1675280254086},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4JzsKaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnOwppbXBvcnQgUHVibGljU2hhcmVkVGhyZWFkcyBmcm9tICcuL1B1YmxpY1NoYXJlZFRocmVhZHMnOwppbXBvcnQgeyBzZWxlY3RNZXNzYWdlQm9kaWVzIH0gZnJvbSAnQHNyYy9kdWNrcy9tZXNzYWdlQm9kaWVzJzsKaW1wb3J0IHsgc2VsZWN0VGVhbU1lbWJlciB9IGZyb20gJ0BzcmMvZHVja3MvdGVhbU1lbWJlcnMnOwppbXBvcnQgeyBjb21tZW50Q3JlYXRlIH0gZnJvbSAnQHNyYy9kdWNrcy9jb21tZW50cyc7CmltcG9ydCB7IHNoYXJlZFRocmVhZEFjdGl2aXR5Q3JlYXRlLCBUVEwgfSBmcm9tICdAc3JjL2R1Y2tzL3NoYXJlZFRocmVhZHMnOwppbXBvcnQgeyB2YWx1ZXMgfSBmcm9tICdsb2Rhc2gnOwp2YXIgbWFwU3RhdGVUb1Byb3BzID0gZnVuY3Rpb24gKHN0YXRlLCBvd25Qcm9wcykgewogICAgdmFyIF9hOwogICAgdmFyIHNoYXJlZFRocmVhZCA9IHN0YXRlLnNlbGVjdGVkU2hhcmVkVGhyZWFkID8KICAgICAgICBzdGF0ZS5zaGFyZWRUaHJlYWRzW3N0YXRlLnNlbGVjdGVkU2hhcmVkVGhyZWFkXSA6IHVuZGVmaW5lZDsKICAgIHZhciBzaGFyZWRUaHJlYWREYXRhID0gc2hhcmVkVGhyZWFkICYmIHNoYXJlZFRocmVhZC5kYXRhOwogICAgdmFyIHRocmVhZCA9IHNoYXJlZFRocmVhZCAmJiBzaGFyZWRUaHJlYWQuZGF0YSAmJgogICAgICAgIHN0YXRlLnRocmVhZHNbc2hhcmVkVGhyZWFkLmRhdGEudGhyZWFkXSAmJgogICAgICAgIHN0YXRlLnRocmVhZHNbc2hhcmVkVGhyZWFkLmRhdGEudGhyZWFkXS5kYXRhIHx8IHN0YXRlLnNlbGVjdGVkVGhyZWFkOwogICAgdmFyIHNoYXJlZE93bmVyID0gc2hhcmVkVGhyZWFkRGF0YSAmJiBzZWxlY3RUZWFtTWVtYmVyKHN0YXRlLCBzaGFyZWRUaHJlYWREYXRhLnVzZXIpOwogICAgdmFyIG1lc3NhZ2VJZCA9IG93blByb3BzLm1hdGNoICYmIG93blByb3BzLm1hdGNoLnBhcmFtcy5tZXNzYWdlOwogICAgdmFyIHRocmVzaG9sZCA9IG1vbWVudCgpLnN1YnRyYWN0KFRUTCwgJ3NlY29uZHMnKTsKICAgIC8vIElkZW5pdHlmIGlmIHdlIGhhdmUgc2hhcmVkIGRyYWZ0cyBlbmFibGVkIGZvciB0aGlzIHNoYXJlZCB0aHJlYWQKICAgIHZhciBzaGFyZWRUaHJlYWREcmFmdHNFbmFibGVkID0gISEoKF9hID0gc2hhcmVkVGhyZWFkRGF0YSA9PT0gbnVsbCB8fCBzaGFyZWRUaHJlYWREYXRhID09PSB2b2lkIDAgPyB2b2lkIDAgOiBzaGFyZWRUaHJlYWREYXRhLmRyYWZ0cykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmxlbmd0aCk7CiAgICByZXR1cm4gewogICAgICAgIHNoYXJlZFRocmVhZDogc2hhcmVkVGhyZWFkLAogICAgICAgIHRocmVhZDogdGhyZWFkLAogICAgICAgIGJvZGllczogdGhyZWFkID8gc2VsZWN0TWVzc2FnZUJvZGllcyhzdGF0ZSwgdGhyZWFkLmlkKSA6IHVuZGVmaW5lZCwKICAgICAgICBjb21tZW50czogc2hhcmVkVGhyZWFkRGF0YSAmJiBzdGF0ZS5jb21tZW50c1tzaGFyZWRUaHJlYWREYXRhLmlkXSwKICAgICAgICBzaGFyZWRPd25lcjogc2hhcmVkT3duZXIsCiAgICAgICAgc2hhcmVkT3duZXJQaG90b1VybDogc2hhcmVkT3duZXIgJiYgc2hhcmVkT3duZXIucGhvdG9VcmwsCiAgICAgICAgbWU6IHN0YXRlLm1lICYmIHN0YXRlLm1lLmRhdGEsCiAgICAgICAgc2VsZWN0ZWRNZXNzYWdlSWQ6IG1lc3NhZ2VJZCwKICAgICAgICBvcmlnaW5hbFRocmVhZEVycm9yOiBzaGFyZWRUaHJlYWQgJiYgc2hhcmVkVGhyZWFkLmRhdGEgJiYKICAgICAgICAgICAgc3RhdGUudGhyZWFkc1tzaGFyZWRUaHJlYWQuZGF0YS50aHJlYWRdICYmIHN0YXRlLnRocmVhZHNbc2hhcmVkVGhyZWFkLmRhdGEudGhyZWFkXS5lcnJvciwKICAgICAgICByZXBseWluZzogIXNoYXJlZFRocmVhZERyYWZ0c0VuYWJsZWQgJiYgdmFsdWVzKHN0YXRlLnNoYXJlZFRocmVhZEFjdGl2aXR5LnJlcGx5KQogICAgICAgICAgICAuZmlsdGVyKGZ1bmN0aW9uIChhY3Rpdml0eSkgeyByZXR1cm4gbW9tZW50KGFjdGl2aXR5LnRpbWVzdGFtcCkuaXNBZnRlcih0aHJlc2hvbGQpOyB9KSB8fCBbXSwKICAgICAgICBjb21tZW50aW5nOiB2YWx1ZXMoc3RhdGUuc2hhcmVkVGhyZWFkQWN0aXZpdHkuY29tbWVudCkKICAgICAgICAgICAgLmZpbHRlcihmdW5jdGlvbiAoYWN0aXZpdHkpIHsgcmV0dXJuIG1vbWVudChhY3Rpdml0eS50aW1lc3RhbXApLmlzQWZ0ZXIodGhyZXNob2xkKTsgfSksCiAgICAgICAgc2hhcmVkVGhyZWFkRHJhZnQ6IHNoYXJlZFRocmVhZERhdGEgJiYgc2hhcmVkVGhyZWFkRHJhZnRzRW5hYmxlZCAmJgogICAgICAgICAgICBzdGF0ZS5zaGFyZWRUaHJlYWREcmFmdHNbc2hhcmVkVGhyZWFkRGF0YS5pZF0gfHwgdW5kZWZpbmVkLAogICAgfTsKfTsKdmFyIG1hcERpc3BhdGNoVG9Qcm9wcyA9IGZ1bmN0aW9uIChkaXNwYXRjaCkgeyByZXR1cm4gKHsKICAgIGNyZWF0ZUNvbW1lbnQ6IGZ1bmN0aW9uIChtZXRhKSB7IHJldHVybiBkaXNwYXRjaChjb21tZW50Q3JlYXRlKG1ldGEpKTsgfSwKICAgIGNyZWF0ZVNoYXJlZFRocmVhZEFjdGl2aXR5OiBmdW5jdGlvbiAobWV0YSkgeyByZXR1cm4gZGlzcGF0Y2goc2hhcmVkVGhyZWFkQWN0aXZpdHlDcmVhdGUobWV0YSkpOyB9LAp9KTsgfTsKZXhwb3J0IGRlZmF1bHQgY29ubmVjdChtYXBTdGF0ZVRvUHJvcHMsIG1hcERpc3BhdGNoVG9Qcm9wcykoUHVibGljU2hhcmVkVGhyZWFkcyk7Cg=="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/PublicSharedThreads/index.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/PublicSharedThreads/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import { connect, Dispatch } from 'react-redux';\nimport moment from 'moment';\nimport { StoreState } from '@src/types';\nimport PublicSharedThreads, { StateProps, DispatchProps } from './PublicSharedThreads';\nimport { selectMessageBodies } from '@src/ducks/messageBodies';\nimport { selectTeamMember } from '@src/ducks/teamMembers';\nimport { commentCreate } from '@src/ducks/comments';\nimport { RouteComponentProps } from 'react-router';\nimport { sharedThreadActivityCreate, TTL } from '@src/ducks/sharedThreads';\nimport { values } from 'lodash';\n\nconst mapStateToProps = (state: StoreState, ownProps: RouteComponentProps<any>): StateProps => {\n  const sharedThread = state.selectedSharedThread ?\n    state.sharedThreads[state.selectedSharedThread] : undefined;\n  const sharedThreadData = sharedThread && sharedThread.data;\n  const thread = sharedThread && sharedThread.data &&\n    state.threads[sharedThread.data.thread] &&\n    state.threads[sharedThread.data.thread].data || state.selectedThread;\n  const sharedOwner = sharedThreadData && selectTeamMember(state, sharedThreadData.user);\n  const messageId = ownProps.match && ownProps.match.params.message;\n  const threshold = moment().subtract(TTL, 'seconds');\n\n  // Idenityf if we have shared drafts enabled for this shared thread\n  const sharedThreadDraftsEnabled = !!sharedThreadData?.drafts?.length;\n\n  return {\n    sharedThread,\n    thread,\n    bodies: thread ? selectMessageBodies(\n      state,\n      thread.id,\n    ) : undefined,\n    comments: sharedThreadData && state.comments[sharedThreadData.id],\n    sharedOwner,\n    sharedOwnerPhotoUrl: sharedOwner && sharedOwner.photoUrl,\n    me: state.me && state.me.data,\n    selectedMessageId: messageId,\n    originalThreadError: sharedThread && sharedThread.data &&\n      state.threads[sharedThread.data.thread] && state.threads[sharedThread.data.thread].error,\n    replying: !sharedThreadDraftsEnabled && values(state.sharedThreadActivity.reply)\n      .filter(activity => moment(activity.timestamp).isAfter(threshold)) || [],\n    commenting: values(state.sharedThreadActivity.comment)\n      .filter(activity => moment(activity.timestamp).isAfter(threshold)),\n    sharedThreadDraft: sharedThreadData && sharedThreadDraftsEnabled &&\n      state.sharedThreadDrafts[sharedThreadData.id] || undefined,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<StoreState>): DispatchProps => ({\n  createComment: meta => dispatch(commentCreate(meta)),\n  createSharedThreadActivity: meta => dispatch(sharedThreadActivityCreate(meta)),\n});\n\nexport default connect<StateProps>(mapStateToProps, mapDispatchToProps)(PublicSharedThreads);\n"]}]}