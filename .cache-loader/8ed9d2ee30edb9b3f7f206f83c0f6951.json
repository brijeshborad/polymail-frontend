{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/selector.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/selector.ts","mtime":1675280254068},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9fc3ByZWFkQXJyYXlzID0gKHRoaXMgJiYgdGhpcy5fX3NwcmVhZEFycmF5cykgfHwgZnVuY3Rpb24gKCkgewogICAgZm9yICh2YXIgcyA9IDAsIGkgPSAwLCBpbCA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBpbDsgaSsrKSBzICs9IGFyZ3VtZW50c1tpXS5sZW5ndGg7CiAgICBmb3IgKHZhciByID0gQXJyYXkocyksIGsgPSAwLCBpID0gMDsgaSA8IGlsOyBpKyspCiAgICAgICAgZm9yICh2YXIgYSA9IGFyZ3VtZW50c1tpXSwgaiA9IDAsIGpsID0gYS5sZW5ndGg7IGogPCBqbDsgaisrLCBrKyspCiAgICAgICAgICAgIHJba10gPSBhW2pdOwogICAgcmV0dXJuIHI7Cn07CmltcG9ydCB7IG1lbW9pemUgfSBmcm9tICdsb2Rhc2gnOwpleHBvcnQgZnVuY3Rpb24gY3JlYXRlU2VsZWN0b3Ioc3RhdGVQcm9wcywgY2FsbGJhY2ssIGN1c3RvbUhhc2gsIHNjb3BlU3RhdGVQcm9wcykgewogICAgbWVtb2l6ZS5DYWNoZSA9IE1hcDsKICAgIHZhciBtZW1vaXplZCA9IGN1c3RvbUhhc2ggPwogICAgICAgIG1lbW9pemUoY2FsbGJhY2ssIGN1c3RvbUhhc2gpIDogbWVtb2l6ZShjYWxsYmFjayk7CiAgICB2YXIgcHJldlN0YXRlOwogICAgcmV0dXJuIGZ1bmN0aW9uIHNlbGVjdG9yKHN0YXRlKSB7CiAgICAgICAgdmFyIGFyZ3MgPSBbXTsKICAgICAgICBmb3IgKHZhciBfaSA9IDE7IF9pIDwgYXJndW1lbnRzLmxlbmd0aDsgX2krKykgewogICAgICAgICAgICBhcmdzW19pIC0gMV0gPSBhcmd1bWVudHNbX2ldOwogICAgICAgIH0KICAgICAgICB2YXIgbmV3U3RhdGVQcm9wcyA9IHN0YXRlUHJvcHMKICAgICAgICAgICAgLm1hcChmdW5jdGlvbiAocHJvcHMpIHsgcmV0dXJuIHByb3BzLmFwcGx5KHZvaWQgMCwgX19zcHJlYWRBcnJheXMoW3N0YXRlXSwgYXJncykpOyB9KTsKICAgICAgICB2YXIgbWVtb0FyZ3MgPSBuZXdTdGF0ZVByb3BzLmNvbmNhdChhcmdzKTsKICAgICAgICB2YXIgc2hvdWxkQ2xlYXJDYWNoZSA9IHByZXZTdGF0ZSAhPT0gc3RhdGU7CiAgICAgICAgaWYgKHNjb3BlU3RhdGVQcm9wcyAmJiBwcmV2U3RhdGUpIHsKICAgICAgICAgICAgc2hvdWxkQ2xlYXJDYWNoZSA9IGZhbHNlOwogICAgICAgICAgICBzY29wZVN0YXRlUHJvcHMuZm9yRWFjaChmdW5jdGlvbiAocHJvcCkgewogICAgICAgICAgICAgICAgaWYgKHByZXZTdGF0ZVtwcm9wXSAhPT0gc3RhdGVbcHJvcF0pIHsKICAgICAgICAgICAgICAgICAgICBzaG91bGRDbGVhckNhY2hlID0gdHJ1ZTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICAgIGlmICghcHJldlN0YXRlIHx8IHNob3VsZENsZWFyQ2FjaGUpIHsKICAgICAgICAgICAgcHJldlN0YXRlID0gc3RhdGU7CiAgICAgICAgICAgIG1lbW9pemVkLmNhY2hlLmNsZWFyKCk7CiAgICAgICAgfQogICAgICAgIHJldHVybiBtZW1vaXplZC5hcHBseSh2b2lkIDAsIG1lbW9BcmdzKTsKICAgIH07Cn0K"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/selector.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/selector.ts"],"names":[],"mappings":";;;;;;;AACA,OAAO,EAAE,OAAO,EAAoB,MAAM,QAAQ,CAAC;AAEnD,MAAM,UAAU,cAAc,CAK5B,UAA6E,EAC7E,QAAmE,EACnE,UAAgE,EAChE,eAA0B;IAE1B,OAAO,CAAC,KAAK,GAAG,GAAG,CAAC;IACpB,IAAM,QAAQ,GAAqB,UAAU,CAAC,CAAC;QAC7C,OAAO,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IACpD,IAAI,SAAqB,CAAC;IAE1B,OAAO,SAAS,QAAQ,CAAC,KAAiB;QAAE,cAAuB;aAAvB,UAAuB,EAAvB,qBAAuB,EAAvB,IAAuB;YAAvB,6BAAuB;;QACjE,IAAM,aAAa,GAAG,UAAU;aAC7B,GAAG,CAAC,UAAA,KAAK,IAAI,OAAA,KAAK,+BAAC,KAAK,GAAK,IAAI,IAApB,CAAqB,CAAC,CAAC;QACvC,IAAM,QAAQ,GAAI,aAAkD,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAClF,IAAI,gBAAgB,GAAG,SAAS,KAAK,KAAK,CAAC;QAE3C,IAAI,eAAe,IAAI,SAAS,EAAE;YAChC,gBAAgB,GAAG,KAAK,CAAC;YACzB,eAAe,CAAC,OAAO,CAAC,UAAC,IAAI;gBAC3B,IAAI,SAAS,CAAC,IAAI,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,EAAE;oBACnC,gBAAgB,GAAG,IAAI,CAAC;iBACzB;YACH,CAAC,CAAC,CAAC;SACJ;QAED,IAAI,CAAC,SAAS,IAAI,gBAAgB,EAAE;YAClC,SAAS,GAAG,KAAK,CAAC;YAClB,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;SACxB;QAED,OAAO,QAAQ,eAAI,QAAQ,EAAE;IAC/B,CAAC,CAAC;AACJ,CAAC","sourcesContent":["import { StoreState } from '@src/types';\nimport { memoize, MemoizedFunction } from 'lodash';\n\nexport function createSelector<\n  ArgumentType,\n  StateProps,\n  ReturnType\n>(\n  stateProps: Array<(state: StoreState, ...args: ArgumentType[]) => StateProps>,\n  callback: (...args: Array<StateProps | ArgumentType>) => ReturnType,\n  customHash?: (...args: Array<StateProps | ArgumentType>) => void,\n  scopeStateProps?: string[],\n) {\n  memoize.Cache = Map;\n  const memoized: MemoizedFunction = customHash ?\n    memoize(callback, customHash) : memoize(callback);\n  let prevState: StoreState;\n\n  return function selector(state: StoreState, ...args: ArgumentType[]) {\n    const newStateProps = stateProps\n      .map(props => props(state, ...args));\n    const memoArgs = (newStateProps as Array<StateProps | ArgumentType>).concat(args);\n    let shouldClearCache = prevState !== state;\n\n    if (scopeStateProps && prevState) {\n      shouldClearCache = false;\n      scopeStateProps.forEach((prop) => {\n        if (prevState[prop] !== state[prop]) {\n          shouldClearCache = true;\n        }\n      });\n    }\n\n    if (!prevState || shouldClearCache) {\n      prevState = state;\n      memoized.cache.clear();\n    }\n\n    return memoized(...memoArgs);\n  };\n}\n"]}]}