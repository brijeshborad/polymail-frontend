{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/css-loader/dist/cjs.js??ref--7-2!/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/sass-loader/dist/cjs.js??ref--7-3!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/YearInReview/components/OverviewCell.scss","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/YearInReview/components/OverviewCell.scss","mtime":1675280254120},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/styles/helpers.scss","mtime":1675280254121},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/styles/colors.scss","mtime":1675280254121},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/styles/typography.scss","mtime":1675280254121},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/styles/mixins.scss","mtime":1675280254121},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/css-loader/dist/cjs.js","mtime":1675365393897},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/sass-loader/dist/cjs.js","mtime":1675365391315}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIpKHRydWUpOwovLyBNb2R1bGUKZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsICIub3ZlcnZpZXctY2VsbC10ZXh0LWJsb2NrIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgY29sb3I6ICM0NDQ0NDQ7XG4gIHBhZGRpbmc6IDIwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmYWZhZmE7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgZmxleC1iYXNpczogMjAlO1xuICBib3gtc2hhZG93OiAycHggMnB4IDRweCAwIHJnYmEoMTI1LCAxNDMsIDE2MCwgMC41KTtcbn1cbi5vdmVydmlldy1jZWxsLXRleHQtYmxvY2sgPiAuc3RhdC1zZWN0aW9uIHtcbiAgZm9udC1zaXplOiA0MHB4O1xuICBmb250LXdlaWdodDogNzAwO1xufVxuLm92ZXJ2aWV3LWNlbGwtdGV4dC1ibG9jayA+IC50aXRsZSB7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIGZvbnQtc2l6ZTogMThweDtcbn1cblxuLm92ZXJ2aWV3LWNlbGwtY2FyZCB7XG4gIG1hcmdpbi10b3A6IDEwcHg7XG4gIGNvbG9yOiAjNDQ0NDQ0O1xuICB3aWR0aDogMzAwcHg7XG4gIHBhZGRpbmc6IDEwcHggMDtcbn1cbi5vdmVydmlldy1jZWxsLWNhcmQgPiAudGl0bGUge1xuICBmb250LXNpemU6IDIwcHg7XG4gIGNvbG9yOiAjNDQ0NDQ0O1xuICBmb250LXdlaWdodDogNzAwO1xufVxuLm92ZXJ2aWV3LWNlbGwtY2FyZCA+IC50aXRsZS53aGl0ZSB7XG4gIGNvbG9yOiAjZmZmZmZmO1xufVxuLm92ZXJ2aWV3LWNlbGwtY2FyZCA+IC5jb250YWluZXIge1xuICBtYXJnaW4tdG9wOiAxMHB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBwYWRkaW5nOiAyMHB4O1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIGJveC1zaGFkb3c6IDJweCAycHggNHB4IDAgcmdiYSgxMjUsIDE0MywgMTYwLCAwLjUpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmFmYWZhO1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4ycyBlYXNlLWluLW91dDtcbn1cbi5vdmVydmlldy1jZWxsLWNhcmQgPiAuY29udGFpbmVyOmhvdmVyIHtcbiAgdHJhbnNmb3JtOiBzY2FsZSgxLjAyKTtcbn1cbi5vdmVydmlldy1jZWxsLWNhcmQgPiAuY29udGFpbmVyID4gLnN0YXQtc2VjdGlvbiB7XG4gIGZvbnQtc2l6ZTogMjRweDtcbiAgYm9yZGVyLXdpZHRoOiAycHg7XG4gIGJvcmRlci1ib3R0b206IHNvbGlkIDNweCAjMDc5Y2VmO1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gIHBhZGRpbmc6IDAgOHB4O1xuICBmb250LXdlaWdodDogNzAwO1xufVxuLm92ZXJ2aWV3LWNlbGwtY2FyZCA+IC5jb250YWluZXIgPiAuc3RhdC1zZWN0aW9uID4gLnZhbHVlLWRlc2NyaXB0b3Ige1xuICBmb250LXNpemU6IDE0cHg7XG59XG4ub3ZlcnZpZXctY2VsbC1jYXJkID4gLmNvbnRhaW5lciA+IC5kZXNjcmlwdGlvbiB7XG4gIG1hcmdpbi10b3A6IDE2cHg7XG4gIGNvbG9yOiAjN2U4ZjlmO1xuICBmb250LXdlaWdodDogNTAwO1xufSIsICIiLHsidmVyc2lvbiI6Mywic291cmNlcyI6WyIvVXNlcnMvYW5kcmV3c2FtYm95L0Rlc2t0b3AvR2l0L3BvbHltYWlsL3dlYmFwcC9zcmMvcm91dGVzL1llYXJJblJldmlldy9jb21wb25lbnRzL092ZXJ2aWV3Q2VsbC5zY3NzIiwiL1VzZXJzL2FuZHJld3NhbWJveS9EZXNrdG9wL0dpdC9wb2x5bWFpbC93ZWJhcHAvc3JjL3N0eWxlcy9jb2xvcnMuc2NzcyIsIk92ZXJ2aWV3Q2VsbC5zY3NzIiwiL1VzZXJzL2FuZHJld3NhbWJveS9EZXNrdG9wL0dpdC9wb2x5bWFpbC93ZWJhcHAvc3JjL3N0eWxlcy90eXBvZ3JhcGh5LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFDRSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxtQkFBQTtFQUNBLGNDSFM7RURJVCxhQUFBO0VBQ0EseUJDTks7RURPTCxrQkFBQTtFQUNBLGVBQUE7RUFDQSxrREMwQlU7QUMzQlo7QUZHRTtFQUNFLGVBQUE7RUFDQSxnQkdORztBREtQO0FGSUU7RUFDRSxnQkdYTztFSFlQLGVBQUE7QUVGSjs7QUZNQTtFQUNFLGdCQUFBO0VBQ0EsY0N2QlM7RUR3QlQsWUFBQTtFQUNBLGVBQUE7QUVIRjtBRktFO0VBQ0UsZUFBQTtFQUNBLGNDN0JPO0VEOEJQLGdCR3hCRztBRHFCUDtBRktJO0VBQ0UsY0NuQ0U7QUNnQ1I7QUZPRTtFQUNFLGdCQUFBO0VBQ0EsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsYUFBQTtFQUNBLGtCQUFBO0VBQ0Esa0RDVFE7RURVUix5QkM3Q0c7RUQrQ0gsc0NBQUE7QUVOSjtBRk9JO0VBQ0Usc0JBQUE7QUVMTjtBRlFJO0VBQ0UsZUFBQTtFQUNBLGlCQUFBO0VBQ0EsZ0NBQUE7RUFDQSxrQkFBQTtFQUNBLGNBQUE7RUFDQSxnQkduREM7QUQ2Q1A7QUZRTTtFQUNFLGVBQUE7QUVOUjtBRlVJO0VBQ0UsZ0JBQUE7RUFDQSxjQ2hFRztFRGlFSCxnQkcvREc7QUR1RFQiLCJmaWxlIjoiT3ZlcnZpZXdDZWxsLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0ICdoZWxwZXJzJztcblxuLm92ZXJ2aWV3LWNlbGwtdGV4dC1ibG9jayB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGNvbG9yOiAkY2hhcmNvYWw7XG4gIHBhZGRpbmc6IDIwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICRzbm93O1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIGZsZXgtYmFzaXM6IDIwJTtcbiAgYm94LXNoYWRvdzogJGJveFNoYWRvdztcblxuICA+IC5zdGF0LXNlY3Rpb24ge1xuICAgIGZvbnQtc2l6ZTogNDBweDtcbiAgICBmb250LXdlaWdodDogJGJvbGQ7XG4gIH1cblxuICA+IC50aXRsZSB7XG4gICAgZm9udC13ZWlnaHQ6ICRzZW1pYm9sZDtcbiAgICBmb250LXNpemU6IDE4cHg7XG4gIH1cbn1cblxuLm92ZXJ2aWV3LWNlbGwtY2FyZCB7XG4gIG1hcmdpbi10b3A6IDEwcHg7XG4gIGNvbG9yOiAkY2hhcmNvYWw7XG4gIHdpZHRoOiAzMDBweDtcbiAgcGFkZGluZzogMTBweCAwO1xuXG4gID4gLnRpdGxlIHtcbiAgICBmb250LXNpemU6IDIwcHg7XG4gICAgY29sb3I6ICRjaGFyY29hbDtcbiAgICBmb250LXdlaWdodDogJGJvbGQ7XG5cbiAgICAmLndoaXRlIHtcbiAgICAgIGNvbG9yOiAkd2hpdGU7XG4gICAgfVxuICB9XG5cbiAgPiAuY29udGFpbmVyIHtcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBwYWRkaW5nOiAyMHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICBib3gtc2hhZG93OiAkYm94U2hhZG93O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRzbm93O1xuXG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuMnMgZWFzZS1pbi1vdXQ7XG4gICAgJjpob3ZlciB7XG4gICAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMDIpO1xuICAgIH1cblxuICAgID4gLnN0YXQtc2VjdGlvbiB7XG4gICAgICBmb250LXNpemU6IDI0cHg7XG4gICAgICBib3JkZXItd2lkdGg6IDJweDtcbiAgICAgIGJvcmRlci1ib3R0b206IHNvbGlkIDNweCAkYXp1cmU7XG4gICAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gICAgICBwYWRkaW5nOiAwIDhweDtcbiAgICAgIGZvbnQtd2VpZ2h0OiAkYm9sZDtcblxuICAgICAgPiAudmFsdWUtZGVzY3JpcHRvciB7XG4gICAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICA+IC5kZXNjcmlwdGlvbiB7XG4gICAgICBtYXJnaW4tdG9wOiAxNnB4O1xuICAgICAgY29sb3I6ICRzaWx2ZXI7XG4gICAgICBmb250LXdlaWdodDogJG1lZGl1bTtcbiAgICB9XG4gIH1cbn1cbiIsIi8vIExpZ2h0IFRoZW1lcyBTQVNTIHZhcnNcbiR3aGl0ZTogI2ZmZmZmZjtcbiRzbm93OiAjZmFmYWZhO1xuJGNoYXJjb2FsOiAjNDQ0NDQ0O1xuJGdyYXk6ICNjOWQ0ZTA7XG4kc2lsdmVyOiAjN2U4ZjlmO1xuJGxhYmVsOiAjZDM0N2FlO1xuJGluYm94OiAjNDdkZmY1O1xuJG1pZG5pZ2h0OiAjMjQyZTQ0O1xuJGF6dXJlOiAjMDc5Y2VmO1xuJHJlYWRMYXRlcjogI2ZmYTA1NztcbiRhcmNoaXZlOiAjODdlY2JiO1xuJHRyYXNoOiAjZmY2YjdjO1xuJHN0YXI6ICNmZmRmMzI7XG4kc2VuZExhdGVyOiAjMTA5N2RkO1xuJGZvbGxvd1VwOiAjZjY0YjgxO1xuJGVycm9yOiAjZTc0YzNjO1xuJGNvbXBvc2VIb3ZlcjogIzRFRDZFQjtcbiRsc2JDZWxsSG92ZXI6ICM0MzRmNjc7XG4kbHNiQ2VsbFNlbGVjdGVkOiAjMzMzZTU1O1xuJGxpZ2h0R3JheTogI2YyZjVmODtcbiRkYXJrQmx1ZTogIzJjNzFjMTtcbiRtZWRpdW1HcmVlbjogIzBlYzM2YjtcbiRib3JkZXJHcmF5OiAjZWVlZWVlO1xuJGljZUJsdWU6ICNlOGYzZmY7XG4kY29tcGxldGVkR3JheTogI2FmYmJjODtcbiRncmF5SG92ZXI6IGRhcmtlbigkd2hpdGUsIDQlKTtcbiR0aHJlYWRIb3ZlcjogcmdiYSgkaWNlQmx1ZSwgLjUpO1xuJHRocmVhZFNlbGVjdGVkOiAkaWNlQmx1ZTtcbiRjb21tZW50Qm9keTogcmdiYSgwLCAxNzAsIDI1NSwgMC4xKTtcbiRibGFjazogIzAwMDAwMDtcblxuJGZhY2Vib29rOiAjNWE3YWM3O1xuJHR3aXR0ZXI6ICM1YmJjZWM7XG4kYW5nZWxMaXN0OiAjMDAwMDAwO1xuJGxpbmtlZEluOiAjMDA3YmI1O1xuXG4kYm94U2hhZG93OiAycHggMnB4IDRweCAwIHJnYmEoMTI1LCAxNDMsIDE2MCwgMC41KTtcbiRncmF5Qm9yZGVyOiBzb2xpZCAycHggJGJvcmRlckdyYXk7XG4kbGlnaHRHcmF5Qm9yZGVyOiAkbGlnaHRHcmF5IDFweCBzb2xpZDtcbiRzZXF1ZW5jZU1heFdpZHRoOiAxMDQwcHg7XG5cbi8vIENvbnN0YW50cyAoTm90IGNoYW5nZWQgYnkgdGhlbWUpXG4kdHJ1ZVdoaXRlOiAjZmZmZmZmO1xuJHRydWVEYXJrOiAjMTIxMjEyO1xuXG4vLyBMaWdodCBUaGVtZXMgU0FTUyB2YXJzXG4kZGFya1ByaW1hcnlUZXh0OiAjZThlOGU4O1xuJGRhcmtTZWNvbmRhcnlUZXh0OiAjQUFBQUFBO1xuXG4kZGFyazogJ2RhcmsnO1xuJGxpZ2h0OiAnbGlnaHQnO1xuXG4vLyBUaGVtaWZpZWQgQ29sb3JzXG4kdGhlbWVzOiAoXG4gICRsaWdodDogKFxuICAgIHRydWVEYXJrOiAkdHJ1ZURhcmssXG4gICAgdHJ1ZVdoaXRlOiAjZmFmYWZhLFxuICAgIHVuc2V0OiAndW5zZXQnLFxuICAgIHRyYW5zcGFyZW50Q29sb3I6IHRyYW5zcGFyZW50LFxuICAgIHByaW1hcnlBY2NlbnQ6ICRhenVyZSxcblxuICAgIC8vIE1haW4gQXBwXG4gICAgcHJpbWFyeVRleHRDb2xvcjogJGNoYXJjb2FsLFxuICAgIHNlY29uZGFyeVRleHRDb2xvcjogJHNpbHZlcixcbiAgICB0ZXJ0aWFyeVRleHRDb2xvcjogJGdyYXksXG5cbiAgICAvLyBCYWNrZ3JvdW5kIENvbG9yc1xuICAgIHByaW1hcnlCYWNrZ3JvdW5kQ29sb3I6ICR3aGl0ZSxcbiAgICBzZWNvbmRhcnlCYWNrZ3JvdW5kQ29sb3I6ICRzbm93LFxuICAgIHRlcnRpYXJ5QmFja2dyb3VuZENvbG9yOiAkd2hpdGUsXG4gICAgcHJpbWFyeUNvbnRyYXN0Qm9yZGVyQ29sb3I6ICRsaWdodEdyYXksXG4gICAgc2Vjb25kYXJ5Q29udHJhc3RCb3JkZXJDb2xvcjogJGxpZ2h0R3JheSxcblxuICAgIC8vIExlZnQgU2lkZWJhclxuICAgIGxzYkJhY2tncm91bmRDb2xvcjogJG1pZG5pZ2h0LFxuICAgIGxzYkhlYWRlckNvbG9yOiAkZ3JheSxcblxuICAgIC8vIEJvcmRlcnNcbiAgICBsb3dDb250cmFzdEJvcmRlcjogJGxpZ2h0R3JheSAxcHggc29saWQsXG4gICAgbG93Q29udHJhc3RCb3JkZXJDb2xvcjogJGxpZ2h0R3JheSxcbiAgICBoaWdoQ29udHJhc3RCb3JkZXI6ICRncmF5IDJweCBzb2xpZCxcbiAgICBoaWdoQ29udHJhc3RCb3JkZXJDb2xvcjogJGdyYXksXG4gICAgYm94U2hhZG93OiAkYm94U2hhZG93LFxuXG4gICAgLy8gQWNjZW50c1xuICAgIGxvd0NvbnRyYXN0QWNjZW50OiByZ2JhKDI0MiwgMjQ1LCAyNDgsIDAuNSksXG5cbiAgICAvLyBIb3ZlcnNcbiAgICBoaWdoQ29udHJhc3RIb3ZlcjogJGdyYXlIb3ZlcixcblxuICAgIGdyYXk6ICRncmF5LFxuICAgIGdyYXlUZXh0OiAkZ3JheSxcbiAgICBtaWRuaWdodDogJG1pZG5pZ2h0LFxuICAgIGljZUJsdWU6ICRpY2VCbHVlLFxuICAgIHRocmVhZEhvdmVyOiByZ2JhKCRpY2VCbHVlLCAwLjUpLFxuICAgIGJvcmRlckdyYXk6ICRsaWdodEdyYXksXG4gICAgdGhyZWFkU2VsZWN0ZWQ6ICRpY2VCbHVlLFxuICAgIGxpZ2h0R3JheUJvcmRlcjogJGxpZ2h0R3JheSAxcHggc29saWQsXG4gICAgZ3JheUhvdmVyOiAkZ3JheUhvdmVyLFxuXG4gICksXG4gICRkYXJrOiAoXG4gICAgLy8gQ29uc3RhbnRzIHRoYXQgZG8gbm90IGNoYW5nZVxuICAgIHRydWVXaGl0ZTogI2ZhZmFmYSxcbiAgICB0cnVlRGFyazogJHRydWVEYXJrLFxuICAgIHByaW1hcnlBY2NlbnQ6ICRhenVyZSxcbiAgICB0cmFuc3BhcmVudENvbG9yOiB0cmFuc3BhcmVudCxcbiAgICB1bnNldDogJ3Vuc2V0JyxcblxuICAgIC8vIE1haW4gQXBwXG4gICAgcHJpbWFyeVRleHRDb2xvcjogJGRhcmtQcmltYXJ5VGV4dCxcbiAgICBzZWNvbmRhcnlUZXh0Q29sb3I6ICRkYXJrU2Vjb25kYXJ5VGV4dCxcbiAgICB0ZXJ0aWFyeVRleHRDb2xvcjogIzc3Nzc3NyxcbiAgICBwcmltYXJ5QmFja2dyb3VuZENvbG9yOiAjMjEyMTIxLFxuICAgIHNlY29uZGFyeUJhY2tncm91bmRDb2xvcjogIzIzMjMyMyxcbiAgICB0ZXJ0aWFyeUJhY2tncm91bmRDb2xvcjogIzI1MjUyNSxcbiAgICBzZWNvbmRhcnlDb250cmFzdEJvcmRlckNvbG9yOiBsaWdodGVuKCMxMjEyMTIsIDEwJSksXG4gICAgY29udHJhc3RlZEJvcmRlckNvbG9yOiBsaWdodGVuKCMxMjEyMTIsIDEwJSksXG5cbiAgICAvLyBMZWZ0IFNpZGViYXJcbiAgICBsc2JCYWNrZ3JvdW5kQ29sb3I6ICMyNTI1MjUsXG4gICAgbHNiSGVhZGVyQ29sb3I6IGRhcmtlbigjZmFmYWZhLCAxMCUpLFxuXG4gICAgLy8gQm9yZGVyc1xuICAgIGxvd0NvbnRyYXN0Qm9yZGVyOiAjMkMyQzJDIDFweCBzb2xpZCxcbiAgICBsb3dDb250cmFzdEJvcmRlckNvbG9yOiAjMkMyQzJDLFxuICAgIGhpZ2hDb250cmFzdEJvcmRlcjogIzJFMkUyRSAycHggc29saWQsXG4gICAgaGlnaENvbnRyYXN0Qm9yZGVyQ29sb3I6ICMyRTJFMkUsXG4gICAgYm94U2hhZG93OiAycHggMnB4IDRweCAwICMxMjEyMTIsXG5cbiAgICAvLyBBY2NlbnRzXG4gICAgbG93Q29udHJhc3RBY2NlbnQ6IHJnYmEoNzcsIDc3LCA3NywgMC4xMzIpLFxuXG4gICAgLy8gSG92ZXJzXG4gICAgaGlnaENvbnRyYXN0SG92ZXI6IGxpZ2h0ZW4obGlnaHRlbigjMEYwRjBGLCA1JSksIDUlKSxcblxuICAgIGdyYXk6IGxpZ2h0ZW4oIzBGMEYwRiwgMTUlKSxcbiAgICBtaWRuaWdodDogbGlnaHRlbigjMEYwRjBGLCAxMCUpLFxuICAgIGljZUJsdWU6IGxpZ2h0ZW4oIzBGMEYwRiwgNyUpLFxuICAgIGJvcmRlckdyYXk6IGxpZ2h0ZW4oIzBGMEYwRiwgMTAlKSxcbiAgICB0aHJlYWRIb3ZlcjogcmdiYSgjMzYzNjM2LCAwLjcpLFxuICAgIHRocmVhZFNlbGVjdGVkOiByZ2JhKCMzNjM2MzYsIDAuNSksXG4gICAgbGlnaHRHcmF5Qm9yZGVyOiAjMkMyQzJDIDFweCBzb2xpZCxcbiAgICBncmF5VGV4dDogI2ZhZmFmYSxcbiAgICBncmF5SG92ZXI6ICMyRTJFMkUsXG4gICksXG4pO1xuIiwiLm92ZXJ2aWV3LWNlbGwtdGV4dC1ibG9jayB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGNvbG9yOiAjNDQ0NDQ0O1xuICBwYWRkaW5nOiAyMHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmFmYWZhO1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIGZsZXgtYmFzaXM6IDIwJTtcbiAgYm94LXNoYWRvdzogMnB4IDJweCA0cHggMCByZ2JhKDEyNSwgMTQzLCAxNjAsIDAuNSk7XG59XG4ub3ZlcnZpZXctY2VsbC10ZXh0LWJsb2NrID4gLnN0YXQtc2VjdGlvbiB7XG4gIGZvbnQtc2l6ZTogNDBweDtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cbi5vdmVydmlldy1jZWxsLXRleHQtYmxvY2sgPiAudGl0bGUge1xuICBmb250LXdlaWdodDogNjAwO1xuICBmb250LXNpemU6IDE4cHg7XG59XG5cbi5vdmVydmlldy1jZWxsLWNhcmQge1xuICBtYXJnaW4tdG9wOiAxMHB4O1xuICBjb2xvcjogIzQ0NDQ0NDtcbiAgd2lkdGg6IDMwMHB4O1xuICBwYWRkaW5nOiAxMHB4IDA7XG59XG4ub3ZlcnZpZXctY2VsbC1jYXJkID4gLnRpdGxlIHtcbiAgZm9udC1zaXplOiAyMHB4O1xuICBjb2xvcjogIzQ0NDQ0NDtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cbi5vdmVydmlldy1jZWxsLWNhcmQgPiAudGl0bGUud2hpdGUge1xuICBjb2xvcjogI2ZmZmZmZjtcbn1cbi5vdmVydmlldy1jZWxsLWNhcmQgPiAuY29udGFpbmVyIHtcbiAgbWFyZ2luLXRvcDogMTBweDtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgcGFkZGluZzogMjBweDtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBib3gtc2hhZG93OiAycHggMnB4IDRweCAwIHJnYmEoMTI1LCAxNDMsIDE2MCwgMC41KTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZhZmFmYTtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuMnMgZWFzZS1pbi1vdXQ7XG59XG4ub3ZlcnZpZXctY2VsbC1jYXJkID4gLmNvbnRhaW5lcjpob3ZlciB7XG4gIHRyYW5zZm9ybTogc2NhbGUoMS4wMik7XG59XG4ub3ZlcnZpZXctY2VsbC1jYXJkID4gLmNvbnRhaW5lciA+IC5zdGF0LXNlY3Rpb24ge1xuICBmb250LXNpemU6IDI0cHg7XG4gIGJvcmRlci13aWR0aDogMnB4O1xuICBib3JkZXItYm90dG9tOiBzb2xpZCAzcHggIzA3OWNlZjtcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICBwYWRkaW5nOiAwIDhweDtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cbi5vdmVydmlldy1jZWxsLWNhcmQgPiAuY29udGFpbmVyID4gLnN0YXQtc2VjdGlvbiA+IC52YWx1ZS1kZXNjcmlwdG9yIHtcbiAgZm9udC1zaXplOiAxNHB4O1xufVxuLm92ZXJ2aWV3LWNlbGwtY2FyZCA+IC5jb250YWluZXIgPiAuZGVzY3JpcHRpb24ge1xuICBtYXJnaW4tdG9wOiAxNnB4O1xuICBjb2xvcjogIzdlOGY5ZjtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbn0iLCIvLyBpZiB0aGUgZm9sbG93aW5nIGlzIHVwZGF0ZWQsIHNob3VsZCBhbHNvIHVwZGF0ZSBgbGliL3R5cG9ncmFwaHkudHNgXG4kZGVmYXVsdEZvbnQ6IC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCxcbiAgXCJTZWdvZSBVSVwiLCBcIlJvYm90b1wiLCBcIk94eWdlblwiLCBcIlVidW50dVwiLCBcIkNhbnRhcmVsbFwiLFxuICBcIkZpcmEgU2Fuc1wiLCBcIkRyb2lkIFNhbnNcIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLFxuICBzYW5zLXNlcmlmO1xuXG4kcmVndWxhcjogNDAwO1xuJG1lZGl1bTogNTAwO1xuJHNlbWlib2xkOiA2MDA7XG4kYm9sZDogNzAwO1xuIl19XSk7Cg=="}]}