{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/api/notifications.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/api/notifications.ts","mtime":1675280253980},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnOwppbXBvcnQgeyBibGFua1JlcXVlc3QgfSBmcm9tICcuL2Jhc2UnOwp2YXIgTm90aWZpY2F0aW9uQ2xpZW50ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkgewogICAgZnVuY3Rpb24gTm90aWZpY2F0aW9uQ2xpZW50KCkgewogICAgfQogICAgTm90aWZpY2F0aW9uQ2xpZW50LnByb3RvdHlwZS5kZWxldGUgPSBmdW5jdGlvbiAoaWQpIHsKICAgICAgICByZXR1cm4gYmxhbmtSZXF1ZXN0KHsKICAgICAgICAgICAgbWV0aG9kOiAnREVMRVRFJywKICAgICAgICAgICAgcm91dGU6ICIvdjEvbm90aWZpY2F0aW9ucy8iICsgaWQsCiAgICAgICAgfSk7CiAgICB9OwogICAgcmV0dXJuIE5vdGlmaWNhdGlvbkNsaWVudDsKfSgpKTsKZXhwb3J0IHsgTm90aWZpY2F0aW9uQ2xpZW50IH07CmV4cG9ydCBmdW5jdGlvbiBtb2NrTm90aWZpY2F0aW9uQ2xpZW50KCkgewogICAgcmV0dXJuIHsKICAgICAgICBkZWxldGU6IGZ1bmN0aW9uIChpZCkgeyByZXR1cm4gT2JzZXJ2YWJsZS5vZihudWxsKTsgfSwKICAgIH07Cn0K"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/api/notifications.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/api/notifications.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,MAAM,CAAC;AAClC,OAAO,EAAE,YAAY,EAAE,MAAM,QAAQ,CAAC;AAMtC;IAAA;IAOA,CAAC;IANC,mCAAM,GAAN,UAAO,EAAU;QACf,OAAO,YAAY,CAAC;YAClB,MAAM,EAAE,QAAQ;YAChB,KAAK,EAAE,uBAAqB,EAAI;SACjC,CAAC,CAAC;IACL,CAAC;IACH,yBAAC;AAAD,CAAC,AAPD,IAOC;;AAED,MAAM,UAAU,sBAAsB;IACpC,OAAO;QACL,MAAM,EAAE,UAAA,EAAE,IAAI,OAAA,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,EAAnB,CAAmB;KAClC,CAAC;AACJ,CAAC","sourcesContent":["import { Observable } from 'rxjs';\nimport { blankRequest } from './base';\n\nexport interface NotificationAPI {\n  delete(id: string): Observable<null>;\n}\n\nexport class NotificationClient implements NotificationAPI {\n  delete(id: string): Observable<null> {\n    return blankRequest({\n      method: 'DELETE',\n      route: `/v1/notifications/${id}`,\n    });\n  }\n}\n\nexport function mockNotificationClient(): NotificationAPI {\n  return {\n    delete: id => Observable.of(null),\n  };\n}\n"]}]}