{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/RightSidebar/components/ActivityFeed/index.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/RightSidebar/components/ActivityFeed/index.ts","mtime":1675280254026},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IEFjdGl2aXR5RmVlZCBmcm9tICcuL0FjdGl2aXR5RmVlZCc7CmltcG9ydCB7IGNvbm5lY3QgfSBmcm9tICdyZWFjdC1yZWR1eCc7CmltcG9ydCB7IFJlc291cmNlU3RhdHVzIH0gZnJvbSAnQHNyYy90eXBlcyc7CmltcG9ydCB7IGFjdGl2aXR5RmVlZExpc3QgfSBmcm9tICdAc3JjL2R1Y2tzL2FjdGl2aXR5RmVlZCc7CnZhciBtYXBTdGF0ZVRvUHJvcHMgPSBmdW5jdGlvbiAoc3RhdGUsIG93blByb3BzKSB7CiAgICByZXR1cm4gewogICAgICAgIGFjdGl2aXR5RmVlZExvYWRpbmc6IHN0YXRlLmFjdGl2aXR5RmVlZC5zdGF0dXMgPT09IFJlc291cmNlU3RhdHVzLkxvYWRpbmcsCiAgICAgICAgYWN0aXZpdGllczogc3RhdGUuYWN0aXZpdHlGZWVkLmRhdGEgfHwgW10sCiAgICAgICAgZmVhdHVyZXM6IHN0YXRlLmZlYXR1cmVzLAogICAgICAgIHNlYXJjaE1ldGE6IHN0YXRlLmFjdGl2aXR5RmVlZFNlYXJjaE1ldGEgfHwge30sCiAgICB9Owp9Owp2YXIgbWFwRGlzcGF0Y2hUb1Byb3BzID0gZnVuY3Rpb24gKGRpc3BhdGNoKSB7IHJldHVybiAoewogICAgc2VhcmNoQWN0aXZpdHlGZWVkOiBmdW5jdGlvbiAocXVlcnksIHR5cGUpIHsgcmV0dXJuIGRpc3BhdGNoKGFjdGl2aXR5RmVlZExpc3QoewogICAgICAgIHR5cGU6IHR5cGUsCiAgICAgICAgcXVlcnk6IHF1ZXJ5LAogICAgfSkpOyB9LAp9KTsgfTsKZXhwb3J0IGRlZmF1bHQgY29ubmVjdChtYXBTdGF0ZVRvUHJvcHMsIG1hcERpc3BhdGNoVG9Qcm9wcykoQWN0aXZpdHlGZWVkKTsK"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/RightSidebar/components/ActivityFeed/index.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/RightSidebar/components/ActivityFeed/index.ts"],"names":[],"mappings":"AAAA,OAAO,YAAsC,MAAM,gBAAgB,CAAC;AAEpE,OAAO,EAAE,OAAO,EAAY,MAAM,aAAa,CAAC;AAChD,OAAO,EAA4B,cAAc,EAAE,MAAM,YAAY,CAAC;AACtE,OAAO,EAAE,gBAAgB,EAAE,MAAM,yBAAyB,CAAC;AAE3D,IAAM,eAAe,GAAG,UAAC,KAAiB,EAAE,QAAe;IACzD,OAAO;QACL,mBAAmB,EAAE,KAAK,CAAC,YAAY,CAAC,MAAM,KAAK,cAAc,CAAC,OAAO;QACzE,UAAU,EAAE,KAAK,CAAC,YAAY,CAAC,IAAI,IAAI,EAAE;QACzC,QAAQ,EAAE,KAAK,CAAC,QAAQ;QACxB,UAAU,EAAE,KAAK,CAAC,sBAAsB,IAAI,EAAE;KAC/C,CAAC;AACJ,CAAC,CAAC;AAEF,IAAM,kBAAkB,GAAG,UAAC,QAA8B,IAAoB,OAAA,CAAC;IAC7E,kBAAkB,EAAE,UAAC,KAAa,EAAE,IAAmB,IAAK,OAAA,QAAQ,CAAC,gBAAgB,CAAC;QACpF,IAAI,MAAA;QACJ,KAAK,OAAA;KACN,CAAC,CAAC,EAHyD,CAGzD;CACJ,CAAC,EAL4E,CAK5E,CAAC;AAEH,eAAe,OAAO,CAAuB,eAAe,EAAE,kBAAkB,CAAC,CAAC,YAAY,CAAC,CAAC","sourcesContent":["import ActivityFeed, { Props, DispatchProps } from './ActivityFeed';\n\nimport { connect, Dispatch } from 'react-redux';\nimport { StoreState, ActivityType, ResourceStatus } from '@src/types';\nimport { activityFeedList } from '@src/ducks/activityFeed';\n\nconst mapStateToProps = (state: StoreState, ownProps: Props): Props => {\n  return {\n    activityFeedLoading: state.activityFeed.status === ResourceStatus.Loading,\n    activities: state.activityFeed.data || [],\n    features: state.features,\n    searchMeta: state.activityFeedSearchMeta || {},\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<StoreState>): DispatchProps => ({\n  searchActivityFeed: (query: string, type?: ActivityType) => dispatch(activityFeedList({\n    type,\n    query,\n  })),\n});\n\nexport default connect<Props, DispatchProps>(mapStateToProps, mapDispatchToProps)(ActivityFeed);\n"]}]}