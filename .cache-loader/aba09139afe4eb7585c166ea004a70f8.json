{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/CommandControl/components/SendLater/index.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/CommandControl/components/SendLater/index.ts","mtime":1675280253999},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4JzsKaW1wb3J0IFNlbmRMYXRlciBmcm9tICcuL1NlbmRMYXRlcic7CmltcG9ydCB7IHNlbGVjdERyYWZ0LCBzZWxlY3REcmFmdEZvclRocmVhZCwgZHJhZnRTZW5kLCBkcmFmdFVwZGF0ZSwgfSBmcm9tICdAc3JjL2R1Y2tzL2RyYWZ0cyc7CmltcG9ydCB7IHVwZGF0ZURyYWZ0IH0gZnJvbSAnQHNyYy9saWIvZHJhZnQnOwppbXBvcnQgeyBzZWxlY3RSc2JPbmJvYXJkaW5nLCBvbmJvYXJkaW5nUGF0Y2ggfSBmcm9tICdAc3JjL2R1Y2tzL21lJzsKdmFyIG1hcFN0YXRlVG9Qcm9wcyA9IGZ1bmN0aW9uIChzdGF0ZSwgb3duUHJvcHMpIHsKICAgIHJldHVybiB7CiAgICAgICAgcHJlZmVyZW5jZXM6IHN0YXRlLnByZWZlcmVuY2VzLAogICAgICAgIGRyYWZ0OiBzdGF0ZS5zZWxlY3RlZERyYWZ0CiAgICAgICAgICAgID8gc2VsZWN0RHJhZnQoc3RhdGUsIHN0YXRlLnNlbGVjdGVkRHJhZnQpLmRhdGEKICAgICAgICAgICAgOiBzdGF0ZS5zZWxlY3RlZFRocmVhZCAmJiBzZWxlY3REcmFmdEZvclRocmVhZChzdGF0ZSwgc3RhdGUuc2VsZWN0ZWRUaHJlYWQuaWQpLmRhdGEsCiAgICAgICAgcnNiT25ib2FyZGluZzogc2VsZWN0UnNiT25ib2FyZGluZyhzdGF0ZSksCiAgICB9Owp9Owp2YXIgbWFwRGlzcGF0Y2hUb1Byb3BzID0gZnVuY3Rpb24gKGRpc3BhdGNoKSB7IHJldHVybiAoewogICAgdXBkYXRlRHJhZnQ6IGZ1bmN0aW9uIChkcmFmdCkgeyByZXR1cm4gZGlzcGF0Y2goZHJhZnRVcGRhdGUodXBkYXRlRHJhZnQoZHJhZnQpKSk7IH0sCiAgICBzZW5kRHJhZnQ6IGZ1bmN0aW9uIChkcmFmdCkgeyByZXR1cm4gZGlzcGF0Y2goZHJhZnRTZW5kKGRyYWZ0KSk7IH0sCiAgICB1cGRhdGVPbmJvYXJkaW5nOiBmdW5jdGlvbiAobWV0YSkgeyByZXR1cm4gZGlzcGF0Y2gob25ib2FyZGluZ1BhdGNoKG1ldGEpKTsgfSwKfSk7IH07CmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QobWFwU3RhdGVUb1Byb3BzLCBtYXBEaXNwYXRjaFRvUHJvcHMpKFNlbmRMYXRlcik7Cg=="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/CommandControl/components/SendLater/index.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/CommandControl/components/SendLater/index.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AAGtC,OAAO,SAAmC,MAAM,aAAa,CAAC;AAC9D,OAAO,EACL,WAAW,EACX,oBAAoB,EACpB,SAAS,EACT,WAAW,GAEZ,MAAM,mBAAmB,CAAC;AAC3B,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAC7C,OAAO,EAAE,mBAAmB,EAAE,eAAe,EAAE,MAAM,eAAe,CAAC;AAErE,IAAM,eAAe,GAAG,UAAC,KAAiB,EAAE,QAAe;IACzD,OAAO;QACL,WAAW,EAAE,KAAK,CAAC,WAAW;QAC9B,KAAK,EAAE,KAAK,CAAC,aAAa;YACxB,CAAC,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC,aAAa,CAAC,CAAC,IAAI;YAC9C,CAAC,CAAC,KAAK,CAAC,cAAc,IAAI,oBAAoB,CAAC,KAAK,EAAE,KAAK,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,IAAI;QACrF,aAAa,EAAE,mBAAmB,CAAC,KAAK,CAAC;KAC1C,CAAC;AACJ,CAAC,CAAC;AAEF,IAAM,kBAAkB,GAAG,UAAC,QAA8B,IAAoB,OAAA,CAAC;IAC7E,WAAW,EAAE,UAAC,KAAY,IAAK,OAAA,QAAQ,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,EAAzC,CAAyC;IACxE,SAAS,EAAE,UAAC,KAAoB,IAAK,OAAA,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,EAA1B,CAA0B;IAC/D,gBAAgB,EAAE,UAAA,IAAI,IAAI,OAAA,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,EAA/B,CAA+B;CAC1D,CAAC,EAJ4E,CAI5E,CAAC;AAEH,eAAe,OAAO,CAAC,eAAe,EAAE,kBAAkB,CAAC,CAAC,SAAS,CAAC,CAAC","sourcesContent":["import { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { StoreState, Draft } from '@src/types';\nimport SendLater, { Props, DispatchProps } from './SendLater';\nimport {\n  selectDraft,\n  selectDraftForThread,\n  draftSend,\n  draftUpdate,\n  DraftSendMeta,\n} from '@src/ducks/drafts';\nimport { updateDraft } from '@src/lib/draft';\nimport { selectRsbOnboarding, onboardingPatch } from '@src/ducks/me';\n\nconst mapStateToProps = (state: StoreState, ownProps: Props): any => {\n  return {\n    preferences: state.preferences,\n    draft: state.selectedDraft\n      ? selectDraft(state, state.selectedDraft).data\n      : state.selectedThread && selectDraftForThread(state, state.selectedThread.id).data,\n    rsbOnboarding: selectRsbOnboarding(state),\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<StoreState>): DispatchProps => ({\n  updateDraft: (draft: Draft) => dispatch(draftUpdate(updateDraft(draft))),\n  sendDraft: (draft: DraftSendMeta) => dispatch(draftSend(draft)),\n  updateOnboarding: meta => dispatch(onboardingPatch(meta)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SendLater);\n"]}]}