{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/RightSidebar/components/ContactInfo/components/ContactGroupsPopover.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/RightSidebar/components/ContactInfo/components/ContactGroupsPopover.tsx","mtime":1675280254027},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkgewogICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBmdW5jdGlvbiAoZCwgYikgewogICAgICAgIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwKICAgICAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fAogICAgICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChiLmhhc093blByb3BlcnR5KHApKSBkW3BdID0gYltwXTsgfTsKICAgICAgICByZXR1cm4gZXh0ZW5kU3RhdGljcyhkLCBiKTsKICAgIH07CiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHsKICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpOwogICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfQogICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTsKICAgIH07Cn0pKCk7CmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7CmltcG9ydCBQb3BvdmVyIGZyb20gJ0BzcmMvY29tcG9uZW50cy9Qb3BvdmVyL1BvcG92ZXInOwppbXBvcnQgJy4vQ29udGFjdEdyb3Vwc1BvcG92ZXIuc2Nzcyc7CnZhciBDb250YWN0R3JvdXBzUG9wb3ZlciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHsKICAgIF9fZXh0ZW5kcyhDb250YWN0R3JvdXBzUG9wb3ZlciwgX3N1cGVyKTsKICAgIGZ1bmN0aW9uIENvbnRhY3RHcm91cHNQb3BvdmVyKCkgewogICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMpIHx8IHRoaXM7CiAgICAgICAgX3RoaXMuaGFuZGxlSW5wdXRDaGFuZ2UgPSBmdW5jdGlvbiAoZSkgewogICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IGlucHV0OiBlLnRhcmdldC52YWx1ZSB9KTsKICAgICAgICB9OwogICAgICAgIF90aGlzLnRvZ2dsZSA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgX3RoaXMucG9wb3Zlci50b2dnbGUoKTsKICAgICAgICB9OwogICAgICAgIF90aGlzLnNob3cgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIF90aGlzLnBvcG92ZXIuc2hvdygpOwogICAgICAgIH07CiAgICAgICAgX3RoaXMuaGFuZGxlU2hvdyA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgX3RoaXMuaW5wdXQuZm9jdXMoKTsKICAgICAgICB9OwogICAgICAgIF90aGlzLmhhbmRsZUdyb3VwU2VsZWN0ID0gZnVuY3Rpb24gKGUpIHsKICAgICAgICAgICAgX3RoaXMucHJvcHMub25Hcm91cFNlbGVjdChlLmN1cnJlbnRUYXJnZXQuaWQpOwogICAgICAgIH07CiAgICAgICAgX3RoaXMuaGFuZGxlUG9wb3ZlclJlZiA9IGZ1bmN0aW9uIChyZWYpIHsKICAgICAgICAgICAgX3RoaXMucG9wb3ZlciA9IHJlZjsKICAgICAgICB9OwogICAgICAgIF90aGlzLmhhbmRsZUlucHV0UmVmID0gZnVuY3Rpb24gKHJlZikgewogICAgICAgICAgICBfdGhpcy5pbnB1dCA9IHJlZjsKICAgICAgICB9OwogICAgICAgIF90aGlzLnN0YXRlID0gewogICAgICAgICAgICBpbnB1dDogJycsCiAgICAgICAgfTsKICAgICAgICByZXR1cm4gX3RoaXM7CiAgICB9CiAgICBDb250YWN0R3JvdXBzUG9wb3Zlci5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24gKCkgewogICAgICAgIHZhciBfdGhpcyA9IHRoaXM7CiAgICAgICAgdmFyIGlucHV0ID0gdGhpcy5zdGF0ZS5pbnB1dDsKICAgICAgICB2YXIgY29udGFjdEdyb3VwcyA9IHRoaXMucHJvcHMuY29udGFjdEdyb3VwczsKICAgICAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoUG9wb3ZlciwgeyBjbGFzc05hbWU6ICJjb250YWN0LWdyb3Vwcy1wb3BvdmVyIiwgcmVmOiB0aGlzLmhhbmRsZVBvcG92ZXJSZWYsIG9uU2hvdzogdGhpcy5oYW5kbGVTaG93IH0sCiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIHsgY2xhc3NOYW1lOiAiaGVhZGluZyIgfSwKICAgICAgICAgICAgICAgICJDb250YWN0IEdyb3VwcyIsCiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLCB7IGNsYXNzTmFtZTogImxpbmUiIH0pKSwKICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudCgiaW5wdXQiLCB7IGRpcjogImF1dG8iLCBjbGFzc05hbWU6ICJzZWFyY2gtY3JlYXRlLWlucHV0IiwgdHlwZTogInRleHQiLCBwbGFjZWhvbGRlcjogIlNlYXJjaCBvciBjcmVhdGUgZ3JvdXBzLi4uIiwgb25DaGFuZ2U6IHRoaXMuaGFuZGxlSW5wdXRDaGFuZ2UsIHJlZjogdGhpcy5oYW5kbGVJbnB1dFJlZiB9KSwKICAgICAgICAgICAgY29udGFjdEdyb3Vwcy5tYXAoZnVuY3Rpb24gKGdyb3VwKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudCgiYnV0dG9uIiwgeyBrZXk6IGdyb3VwLmlkLCBjbGFzc05hbWU6ICJncm91cCIsIGlkOiBncm91cC5pZCwgb25DbGljazogX3RoaXMuaGFuZGxlR3JvdXBTZWxlY3QgfSwgZ3JvdXAubmFtZSk7CiAgICAgICAgICAgIH0pLAogICAgICAgICAgICBpbnB1dC5sZW5ndGggPiAwICYmIFJlYWN0LmNyZWF0ZUVsZW1lbnQoImJ1dHRvbiIsIHsgY2xhc3NOYW1lOiAiZ3JvdXAiIH0sCiAgICAgICAgICAgICAgICAiQ3JlYXRlIGdyb3VwIG5hbWVkIFwiIiwKICAgICAgICAgICAgICAgIGlucHV0LAogICAgICAgICAgICAgICAgIlwiIikpKTsKICAgIH07CiAgICByZXR1cm4gQ29udGFjdEdyb3Vwc1BvcG92ZXI7Cn0oUmVhY3QuUHVyZUNvbXBvbmVudCkpOwpleHBvcnQgZGVmYXVsdCBDb250YWN0R3JvdXBzUG9wb3ZlcjsK"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/RightSidebar/components/ContactInfo/components/ContactGroupsPopover.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/RightSidebar/components/ContactInfo/components/ContactGroupsPopover.tsx"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,OAAO,MAAM,iCAAiC,CAAC;AAEtD,OAAO,6BAA6B,CAAC;AAgBrC;IAAmC,wCAAiC;IAIlE;QAAA,YACE,iBAAO,SAKR;QAED,uBAAiB,GAAG,UAAC,CAAM;YACzB,KAAI,CAAC,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;QAC3C,CAAC,CAAA;QAED,YAAM,GAAG;YACP,KAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;QACxB,CAAC,CAAA;QAED,UAAI,GAAG;YACL,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,CAAA;QAED,gBAAU,GAAG;YACX,KAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;QACrB,CAAC,CAAA;QAED,uBAAiB,GAAG,UAAC,CAAM;YACzB,KAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;QAC/C,CAAC,CAAA;QAED,sBAAgB,GAAG,UAAC,GAAY;YAC9B,KAAI,CAAC,OAAO,GAAG,GAAG,CAAC;QACrB,CAAC,CAAA;QAED,oBAAc,GAAG,UAAC,GAAqB;YACrC,KAAI,CAAC,KAAK,GAAG,GAAG,CAAC;QACnB,CAAC,CAAA;QA/BC,KAAI,CAAC,KAAK,GAAG;YACX,KAAK,EAAE,EAAE;SACV,CAAC;;IACJ,CAAC;IA8BD,qCAAM,GAAN;QAAA,iBAmCC;QAlCS,IAAA,wBAAK,CAAgB;QACrB,IAAA,wCAAa,CAAgB;QAErC,OAAO,CACL,oBAAC,OAAO,IACN,SAAS,EAAC,wBAAwB,EAClC,GAAG,EAAE,IAAI,CAAC,gBAAgB,EAC1B,MAAM,EAAE,IAAI,CAAC,UAAU;YAEvB,6BAAK,SAAS,EAAC,SAAS;;gBAEtB,6BAAK,SAAS,EAAC,MAAM,GAAG,CACpB;YACN,+BACE,GAAG,EAAC,MAAM,EACV,SAAS,EAAC,qBAAqB,EAC/B,IAAI,EAAC,MAAM,EACX,WAAW,EAAC,4BAA4B,EACxC,QAAQ,EAAE,IAAI,CAAC,iBAAiB,EAChC,GAAG,EAAE,IAAI,CAAC,cAAc,GACxB;YACD,aAAa,CAAC,GAAG,CAAC,UAAC,KAAuB;gBACzC,OAAO,gCACL,GAAG,EAAE,KAAK,CAAC,EAAE,EACb,SAAS,EAAC,OAAO,EACjB,EAAE,EAAE,KAAK,CAAC,EAAE,EACZ,OAAO,EAAE,KAAI,CAAC,iBAAiB,IAE9B,KAAK,CAAC,IAAI,CACJ,CAAC;YACZ,CAAC,CAAC;YACD,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,gCAAQ,SAAS,EAAC,OAAO;;gBAAsB,KAAK;qBAAW,CAC5E,CACX,CAAC;IACJ,CAAC;IACH,2BAAC;AAAD,CAAC,AA5ED,CAAmC,KAAK,CAAC,aAAa,GA4ErD;AAED,eAAe,oBAAoB,CAAC","sourcesContent":["import React from 'react';\nimport Popover from '@src/components/Popover/Popover';\n\nimport './ContactGroupsPopover.scss';\n\ninterface Props {\n  contactGroups: ContactGroupName[];\n  onGroupSelect: (key: string) => void;\n}\n\ninterface State {\n  input: string;\n}\n\ninterface ContactGroupName {\n  id: string;\n  name: string;\n}\n\nclass ContactGroupsPopover extends React.PureComponent<Props, State> {\n  private popover: Popover;\n  private input: HTMLInputElement;\n\n  constructor() {\n    super();\n\n    this.state = {\n      input: '',\n    };\n  }\n\n  handleInputChange = (e: any) => {\n    this.setState({ input: e.target.value });\n  }\n\n  toggle = () => {\n    this.popover.toggle();\n  }\n\n  show = () => {\n    this.popover.show();\n  }\n\n  handleShow = () => {\n    this.input.focus();\n  }\n\n  handleGroupSelect = (e: any) => {\n    this.props.onGroupSelect(e.currentTarget.id);\n  }\n\n  handlePopoverRef = (ref: Popover) => {\n    this.popover = ref;\n  }\n\n  handleInputRef = (ref: HTMLInputElement) => {\n    this.input = ref;\n  }\n\n  render() {\n    const { input } = this.state;\n    const { contactGroups } = this.props;\n\n    return (\n      <Popover\n        className=\"contact-groups-popover\"\n        ref={this.handlePopoverRef}\n        onShow={this.handleShow}\n      >\n        <div className=\"heading\">\n          Contact Groups\n          <div className=\"line\" />\n        </div>\n        <input\n          dir=\"auto\"\n          className=\"search-create-input\"\n          type=\"text\"\n          placeholder=\"Search or create groups...\"\n          onChange={this.handleInputChange}\n          ref={this.handleInputRef}\n        />\n        {contactGroups.map((group: ContactGroupName) => {\n          return <button\n            key={group.id}\n            className=\"group\"\n            id={group.id}\n            onClick={this.handleGroupSelect}\n          >\n            {group.name}\n          </button>;\n        })}\n        {input.length > 0 && <button className=\"group\">Create group named \"{input}\"</button>}\n      </Popover>\n    );\n  }\n}\n\nexport default ContactGroupsPopover;\n"]}]}