{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/accounts.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/accounts.ts","mtime":1675280254053},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnOwppbXBvcnQgeyBBY3Rpb25TdGF0dXMsIH0gZnJvbSAnQHNyYy90eXBlcy9pbmRleCc7CmltcG9ydCB7IEFDQ09VTlRfVVBEQVRFLCBhY2NvdW50VXBkYXRlLCBBQ0NPVU5UX0RFTEVURSwgYWNjb3VudERlbGV0ZSwgQUNDT1VOVF9ERUxFVEVfTUUsIGFjY291bnREZWxldGVNZSwgU0lHTkFUVVJFX0lNQUdFX0FERCwgc2lnbmF0dXJlSW1hZ2VBZGQsIFNJR05BVFVSRV9JTUFHRV9SRU1PVkUsIHNpZ25hdHVyZUltYWdlUmVtb3ZlLCBBQ0NPVU5UX1BST1ZJREVSX1NFTEVDVCwgYWNjb3VudFByb3ZpZGVyU2VsZWN0LCBBQ0NPVU5UX0NSRUFURSwgYWNjb3VudENyZWF0ZSwgQUNDT1VOVF9SRUFVVEhPUklaRSwgYWNjb3VudFJlYXV0aG9yaXplLCB9IGZyb20gJ0BzcmMvZHVja3MvYWNjb3VudHMnOwppbXBvcnQgYnJvd3Nlckhpc3RvcnkgZnJvbSAnQHNyYy9saWIvYnJvd3Nlckhpc3RvcnknOwppbXBvcnQgeyB0b2FzdFNldCB9IGZyb20gJ0BzcmMvZHVja3MvdG9hc3RzJzsKaW1wb3J0IHsgaXNFbGVjdHJvbiB9IGZyb20gJ0BzcmMvbGliL2VsZWN0cm9uJzsKaW1wb3J0IHsgZGVsZXRlQXV0aENvb2tpZSwgZGVsZXRlVEZBTmVlZGVkQ29va2llIH0gZnJvbSAnQHNyYy9saWIvY29va2llcyc7CmltcG9ydCB7IEFVVEhfVE9LRU5fTk9ORSwgc2V0VG9rZW4gfSBmcm9tICdAc3JjL2FwaS9iYXNlJzsKdmFyIGFjY291bnREZWxldGVFcGljID0gZnVuY3Rpb24gKGFjdGlvbiQsIHN0b3JlLCBkZXBzKSB7CiAgICByZXR1cm4gYWN0aW9uJC5vZlR5cGUoQUNDT1VOVF9ERUxFVEUpCiAgICAgICAgLmZpbHRlcihmdW5jdGlvbiAoYWN0aW9uKSB7IHJldHVybiBhY3Rpb24uc3RhdHVzID09PSBBY3Rpb25TdGF0dXMuU3RhcnQ7IH0pCiAgICAgICAgLmZsYXRNYXAoZnVuY3Rpb24gKGFjdGlvbikgewogICAgICAgIHJldHVybiBkZXBzLmFjY291bnRzLmRlbGV0ZShhY3Rpb24ubWV0YS5pZCkKICAgICAgICAgICAgLmRvKGZ1bmN0aW9uIChhY2NvdW50KSB7IHJldHVybiBicm93c2VySGlzdG9yeS5yZXBsYWNlKCcvc2V0dGluZ3MvYWNjb3VudHMnICsgKGFjdGlvbi5tZXRhLmFjY291bnQgPyAiLyIgKyBhY3Rpb24ubWV0YS5hY2NvdW50IDogJycpKTsgfSkKICAgICAgICAgICAgLm1hcChmdW5jdGlvbiAoYWNjb3VudCkgeyByZXR1cm4gYWNjb3VudERlbGV0ZShhY3Rpb24ubWV0YSwgbnVsbCk7IH0pCiAgICAgICAgICAgIC5jYXRjaChmdW5jdGlvbiAoZSkgeyByZXR1cm4gT2JzZXJ2YWJsZS5vZihhY2NvdW50RGVsZXRlKGFjdGlvbi5tZXRhLCBlKSk7IH0pOwogICAgfSk7Cn07CnZhciBhY2NvdW50RGVsZXRlTWVFcGljID0gZnVuY3Rpb24gKGFjdGlvbiQsIHN0b3JlLCBkZXBzKSB7CiAgICByZXR1cm4gYWN0aW9uJC5vZlR5cGUoQUNDT1VOVF9ERUxFVEVfTUUpCiAgICAgICAgLmZpbHRlcihmdW5jdGlvbiAoYWN0aW9uKSB7IHJldHVybiBhY3Rpb24uc3RhdHVzID09PSBBY3Rpb25TdGF0dXMuU3RhcnQ7IH0pCiAgICAgICAgLmZsYXRNYXAoZnVuY3Rpb24gKGFjdGlvbikgewogICAgICAgIHJldHVybiBkZXBzLmFjY291bnRzLmRlbGV0ZU1lKCkKICAgICAgICAgICAgLm1hcChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIC8vIGRlbGV0ZSBhbGwgdXNlciBkYXRhIHdpdGhvdXQgaGF2aW5nIHRvIGNhbGwgdGhlIGxvZ291dCBlbmRwb2ludAogICAgICAgICAgICAvLyB0aGF0IHdpbGwgb2YgY291cnNlIGZhaWwgc2luY2UgdGhlIHVzZXIgZGF0YSBoYXMgYmVlbiBqdXN0IGRlbGV0ZWQKICAgICAgICAgICAgLy8gdGhlIHRoZSBhYm92ZSBkZWxldGVNZSBPYnNlcnZhYmxlCiAgICAgICAgICAgIGRlbGV0ZUF1dGhDb29raWUoKTsKICAgICAgICAgICAgZGVsZXRlVEZBTmVlZGVkQ29va2llKCk7CiAgICAgICAgICAgIHNldFRva2VuKEFVVEhfVE9LRU5fTk9ORSk7CiAgICAgICAgICAgIHN0b3JlLmRpc3BhdGNoKHRvYXN0U2V0KG5ldyBFcnJvcignQWNjb3VudCBkZWxldGVkJykpKTsKICAgICAgICAgICAgcmV0dXJuIGFjY291bnREZWxldGVNZShhY3Rpb24ubWV0YSwgbnVsbCk7CiAgICAgICAgfSkKICAgICAgICAgICAgLmNhdGNoKGZ1bmN0aW9uIChlKSB7IHJldHVybiBPYnNlcnZhYmxlLm9mKGFjY291bnREZWxldGVNZShhY3Rpb24ubWV0YSwgZSkpOyB9KTsKICAgIH0pOwp9Owp2YXIgYWNjb3VudENyZWF0ZUVwaWMgPSBmdW5jdGlvbiAoYWN0aW9uJCwgc3RvcmUsIGRlcHMpIHsKICAgIHJldHVybiBhY3Rpb24kLm9mVHlwZShBQ0NPVU5UX0NSRUFURSkKICAgICAgICAuZmlsdGVyKGZ1bmN0aW9uIChhY3Rpb24pIHsgcmV0dXJuIGFjdGlvbi5zdGF0dXMgPT09IEFjdGlvblN0YXR1cy5TdGFydDsgfSkKICAgICAgICAuZmxhdE1hcChmdW5jdGlvbiAoYWN0aW9uKSB7CiAgICAgICAgcmV0dXJuIGRlcHMuYWNjb3VudHMuY3JlYXRlKGFjdGlvbi5tZXRhKQogICAgICAgICAgICAubWFwKGZ1bmN0aW9uIChhY2NvdW50KSB7IHJldHVybiBhY2NvdW50Q3JlYXRlKGFjdGlvbi5tZXRhLCBhY2NvdW50KTsgfSkKICAgICAgICAgICAgLmNhdGNoKGZ1bmN0aW9uIChlKSB7IHJldHVybiBPYnNlcnZhYmxlLm9mKHRvYXN0U2V0KGUpKTsgfSk7CiAgICB9KTsKfTsKdmFyIGFjY291bnRDcmVhdGVTdWNjZXNzRXBpYyA9IGZ1bmN0aW9uIChhY3Rpb24kLCBzdG9yZSwgZGVwcykgewogICAgcmV0dXJuIGFjdGlvbiQub2ZUeXBlKEFDQ09VTlRfQ1JFQVRFKQogICAgICAgIC5maWx0ZXIoZnVuY3Rpb24gKGFjdGlvbikgeyByZXR1cm4gYWN0aW9uLnN0YXR1cyA9PT0gQWN0aW9uU3RhdHVzLlN1Y2Nlc3M7IH0pCiAgICAgICAgLmRvKGZ1bmN0aW9uIChhY3Rpb24pIHsKICAgICAgICAvLyBkZXRlY3QgaWYgYWNjb3VudCBhZGRlZCBmcm9tIHRoZSBpbml0aWFsIHNpZ24gdXAgZmxvdwogICAgICAgIGlmIChzdG9yZS5nZXRTdGF0ZSgpLmFjY291bnRzLmxlbmd0aCA+IDEpIHsKICAgICAgICAgICAgdmFyIGFjY291bnQgPSBhY3Rpb24ucGF5bG9hZDsKICAgICAgICAgICAgdmFyIG5ld1BhdGggPSBhY2NvdW50ICYmIGFjY291bnQuYWNjb3VudAogICAgICAgICAgICAgICAgPyAiL3NldHRpbmdzL2FjY291bnRzLyIgKyBhY2NvdW50LmFjY291bnQgKyAiL2FsaWFzZXMvIiArIGFjY291bnQuaWQKICAgICAgICAgICAgICAgIDogIi9zZXR0aW5ncy9hY2NvdW50cy8iICsgYWN0aW9uLnBheWxvYWQuaWQ7CiAgICAgICAgICAgIGJyb3dzZXJIaXN0b3J5LnJlcGxhY2UobmV3UGF0aCk7CiAgICAgICAgfQogICAgICAgIGVsc2UgaWYgKCEhc3RvcmUuZ2V0U3RhdGUoKS51bnN1YnNjcmliZXJTaWdudXApIHsKICAgICAgICAgICAgYnJvd3Nlckhpc3RvcnkucHVzaCgnL3Vuc3Vic2NyaWJlcicpOwogICAgICAgIH0KICAgICAgICBlbHNlIHsKICAgICAgICAgICAgYnJvd3Nlckhpc3RvcnkucmVwbGFjZSgnL29uYm9hcmRpbmcvdGVhbWludml0ZScpOwogICAgICAgIH0KICAgIH0pCiAgICAgICAgLmZpbHRlcihmdW5jdGlvbiAoYWN0aW9uKSB7IHJldHVybiBmYWxzZTsgfSk7Cn07CnZhciBhY2NvdW50VXBkYXRlRXBpYyA9IGZ1bmN0aW9uIChhY3Rpb24kLCBzdG9yZSwgZGVwcykgewogICAgcmV0dXJuIGFjdGlvbiQub2ZUeXBlKEFDQ09VTlRfVVBEQVRFKQogICAgICAgIC5maWx0ZXIoZnVuY3Rpb24gKGFjdGlvbikgeyByZXR1cm4gYWN0aW9uLnN0YXR1cyA9PT0gQWN0aW9uU3RhdHVzLlN0YXJ0OyB9KQogICAgICAgIC5mbGF0TWFwKGZ1bmN0aW9uIChhY3Rpb24pIHsKICAgICAgICByZXR1cm4gZGVwcy5hY2NvdW50cy51cGRhdGUoYWN0aW9uLm1ldGEpCiAgICAgICAgICAgIC5tYXAoZnVuY3Rpb24gKGFjY291bnQpIHsgcmV0dXJuIGFjY291bnRVcGRhdGUoYWN0aW9uLm1ldGEsIGFjY291bnQpOyB9KQogICAgICAgICAgICAuY2F0Y2goZnVuY3Rpb24gKGUpIHsgcmV0dXJuIE9ic2VydmFibGUub2YodG9hc3RTZXQoZSkpOyB9KTsKICAgIH0pOwp9Owp2YXIgYWNjb3VudFJlYXV0aG9yaXplRXBpYyA9IGZ1bmN0aW9uIChhY3Rpb24kLCBzdG9yZSwgZGVwcykgewogICAgcmV0dXJuIGFjdGlvbiQub2ZUeXBlKEFDQ09VTlRfUkVBVVRIT1JJWkUpCiAgICAgICAgLmZpbHRlcihmdW5jdGlvbiAoYWN0aW9uKSB7IHJldHVybiBhY3Rpb24uc3RhdHVzID09PSBBY3Rpb25TdGF0dXMuU3RhcnQ7IH0pCiAgICAgICAgLmZsYXRNYXAoZnVuY3Rpb24gKGFjdGlvbikgewogICAgICAgIHZhciByZWRpcmVjdFVybCA9IGlzRWxlY3Ryb24gPyAicG9seW1haWw6Ly8iICsgd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lCiAgICAgICAgICAgIDogd2luZG93LmxvY2F0aW9uLmhyZWY7CiAgICAgICAgcmV0dXJuIGRlcHMuYWNjb3VudHMKICAgICAgICAgICAgLnJlYXV0aG9yaXplT2F1dGhVcmwoYWN0aW9uLm1ldGEsIHJlZGlyZWN0VXJsLCBpc0VsZWN0cm9uKQogICAgICAgICAgICAuZG8oZnVuY3Rpb24gKHVybCkgeyByZXR1cm4gd2luZG93LmxvY2F0aW9uLmhyZWYgPSB1cmw7IH0pCiAgICAgICAgICAgIC5tYXAoZnVuY3Rpb24gKCkgeyByZXR1cm4gYWNjb3VudFJlYXV0aG9yaXplKGFjdGlvbi5tZXRhLCBudWxsKTsgfSkKICAgICAgICAgICAgLmNhdGNoKGZ1bmN0aW9uIChlKSB7IHJldHVybiBPYnNlcnZhYmxlLm9mKHRvYXN0U2V0KGUpKTsgfSk7CiAgICB9KTsKfTsKLy8gVE9ETyhTSElOKTogSW1wbGVtZW50IHByb3ZpZGVyIHNwZWNpZmljIEFQSSBVUkwgJiYgYm9keSBnZW5lcmF0aW9uLgpleHBvcnQgdmFyIHByb3ZpZGVyU2VsZWN0RXBpYyA9IGZ1bmN0aW9uIChhY3Rpb24kLCBzdG9yZSwgZGVwcykgewogICAgcmV0dXJuIGFjdGlvbiQub2ZUeXBlKEFDQ09VTlRfUFJPVklERVJfU0VMRUNUKQogICAgICAgIC5maWx0ZXIoZnVuY3Rpb24gKGFjdGlvbikgeyByZXR1cm4gYWN0aW9uLnN0YXR1cyA9PT0gQWN0aW9uU3RhdHVzLlN0YXJ0OyB9KQogICAgICAgIC5mbGF0TWFwKGZ1bmN0aW9uIChhY3Rpb24pIHsKICAgICAgICB2YXIgX2E7CiAgICAgICAgdmFyIHN0YXRlID0gc3RvcmUuZ2V0U3RhdGUoKTsKICAgICAgICAvLyBGaWd1cmUgb3V0IGlmIGRyb3BwaW5nIGludG8gdGVhbWludml0ZSBvciB0aGUgYXBwCiAgICAgICAgdmFyIG9uYm9hcmRpbmdVcmwgPSAoKF9hID0gc3RhdGUubWUuZGF0YSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLm9uYm9hcmRpbmdTa2lwcGVkVGVhbSkgPwogICAgICAgICAgICAnLycgOiAnL2xvZ2luL2Nob29zZVBsYW4nOwogICAgICAgIC8vIElkZW50aWZ5IFJlZGlyZWN0IHVybCBhZnRlciBvYXV0aCBjb21wbGV0aW9uCiAgICAgICAgdmFyIHJlZGlyZWN0VXJsID0gaXNFbGVjdHJvbiA/CiAgICAgICAgICAgICEhc3RvcmUuZ2V0U3RhdGUoKS5hY2NvdW50cy5sZW5ndGggPwogICAgICAgICAgICAgICAgJ3BvbHltYWlsOi8vL3NldHRpbmdzL2FjY291bnRzJyA6ICdwb2x5bWFpbDovLycgKyBvbmJvYXJkaW5nVXJsCiAgICAgICAgICAgIDogd2luZG93LmxvY2F0aW9uLm9yaWdpbiArICghIXN0b3JlLmdldFN0YXRlKCkuYWNjb3VudHMubGVuZ3RoID8gJy9zZXR0aW5ncy9hY2NvdW50cycgOiBvbmJvYXJkaW5nVXJsKTsKICAgICAgICBpZiAoISFzdGF0ZS51bnN1YnNjcmliZXJTaWdudXApIHsKICAgICAgICAgICAgcmVkaXJlY3RVcmwgPSB3aW5kb3cubG9jYXRpb24ub3JpZ2luICsgJy91bnN1YnNjcmliZXInOwogICAgICAgIH0KICAgICAgICByZXR1cm4gZGVwcy5hY2NvdW50cy5vYXV0aFVybChhY3Rpb24ubWV0YSwgcmVkaXJlY3RVcmwsIGlzRWxlY3Ryb24pCiAgICAgICAgICAgIC5mbGF0TWFwKGZ1bmN0aW9uICh1cmwpIHsKICAgICAgICAgICAgaWYgKHVybCkgewogICAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSB1cmw7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIE9ic2VydmFibGUubWVyZ2UoT2JzZXJ2YWJsZS5vZihhY2NvdW50UHJvdmlkZXJTZWxlY3QoYWN0aW9uLm1ldGEsIHVybCkpKTsKICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZSkgeyByZXR1cm4gT2JzZXJ2YWJsZS5tZXJnZShPYnNlcnZhYmxlLm9mKGFjY291bnRQcm92aWRlclNlbGVjdChhY3Rpb24ubWV0YSwgZSkpLCBPYnNlcnZhYmxlLm9mKHRvYXN0U2V0KGUpKSk7IH0pOwogICAgfSk7Cn07CmV4cG9ydCB2YXIgc2lnbmF0dXJlSW1hZ2VBZGRFcGljID0gZnVuY3Rpb24gKGFjdGlvbiQsIHN0b3JlLCBkZXBzKSB7CiAgICByZXR1cm4gYWN0aW9uJC5vZlR5cGUoU0lHTkFUVVJFX0lNQUdFX0FERCkKICAgICAgICAuZmlsdGVyKGZ1bmN0aW9uIChhY3Rpb24pIHsgcmV0dXJuIGFjdGlvbi5zdGF0dXMgPT09IEFjdGlvblN0YXR1cy5TdGFydDsgfSkKICAgICAgICAuZmxhdE1hcChmdW5jdGlvbiAoYWN0aW9uKSB7CiAgICAgICAgcmV0dXJuIGRlcHMuYWNjb3VudHMuY3JlYXRlU2lnbmF0dXJlSW1hZ2UoYWN0aW9uLm1ldGEpCiAgICAgICAgICAgIC5tYXAoZnVuY3Rpb24gKGF0dGFjaG1lbnQpIHsgcmV0dXJuIHNpZ25hdHVyZUltYWdlQWRkKGFjdGlvbi5tZXRhLCBhdHRhY2htZW50KTsgfSkKICAgICAgICAgICAgLmNhdGNoKGZ1bmN0aW9uIChlKSB7IHJldHVybiBPYnNlcnZhYmxlLm9mKHNpZ25hdHVyZUltYWdlQWRkKGFjdGlvbi5tZXRhLCBlKSk7IH0pOwogICAgfSk7Cn07CmV4cG9ydCB2YXIgc2lnbmF0dXJlSW1hZ2VSZW1vdmVFcGljID0gZnVuY3Rpb24gKGFjdGlvbiQsIHN0YXRlLCBkZXBzKSB7CiAgICByZXR1cm4gYWN0aW9uJC5vZlR5cGUoU0lHTkFUVVJFX0lNQUdFX1JFTU9WRSkKICAgICAgICAuZmlsdGVyKGZ1bmN0aW9uIChhY3Rpb24pIHsgcmV0dXJuIGFjdGlvbi5zdGF0dXMgPT09IEFjdGlvblN0YXR1cy5TdGFydDsgfSkKICAgICAgICAuZmxhdE1hcChmdW5jdGlvbiAoYWN0aW9uKSB7CiAgICAgICAgcmV0dXJuIGRlcHMuYWNjb3VudHMucmVtb3ZlU2lnbmF0dXJlSW1hZ2UoYWN0aW9uLm1ldGEpCiAgICAgICAgICAgIC5tYXAoZnVuY3Rpb24gKCkgeyByZXR1cm4gc2lnbmF0dXJlSW1hZ2VSZW1vdmUoYWN0aW9uLm1ldGEsIG51bGwpOyB9KQogICAgICAgICAgICAuY2F0Y2goZnVuY3Rpb24gKGUpIHsgcmV0dXJuIE9ic2VydmFibGUub2Yoc2lnbmF0dXJlSW1hZ2VSZW1vdmUoYWN0aW9uLm1ldGEsIGUpKTsgfSk7CiAgICB9KTsKfTsKZXhwb3J0IGRlZmF1bHQgWwogICAgYWNjb3VudENyZWF0ZUVwaWMsCiAgICBhY2NvdW50Q3JlYXRlU3VjY2Vzc0VwaWMsCiAgICBhY2NvdW50VXBkYXRlRXBpYywKICAgIGFjY291bnREZWxldGVFcGljLAogICAgYWNjb3VudERlbGV0ZU1lRXBpYywKICAgIGFjY291bnRSZWF1dGhvcml6ZUVwaWMsCiAgICBzaWduYXR1cmVJbWFnZUFkZEVwaWMsCiAgICBzaWduYXR1cmVJbWFnZVJlbW92ZUVwaWMsCiAgICBwcm92aWRlclNlbGVjdEVwaWMsCl07Cg=="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/accounts.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/accounts.ts"],"names":[],"mappings":"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","sourcesContent":["import { Observable } from 'rxjs';\nimport { Epic } from 'redux-observable';\n\nimport {\n  StoreState,\n  Action,\n  ActionStatus,\n  Account,\n  Attachment,\n  AttachmentMeta,\n  AccountType,\n} from '@src/types/index';\nimport { Deps } from '@src/lib/epic';\nimport {\n  ACCOUNT_UPDATE, accountUpdate,\n  ACCOUNT_DELETE, accountDelete,\n  ACCOUNT_DELETE_ME, accountDeleteMe,\n  SIGNATURE_IMAGE_ADD, signatureImageAdd,\n  SIGNATURE_IMAGE_REMOVE, signatureImageRemove,\n  ACCOUNT_PROVIDER_SELECT, accountProviderSelect,\n  ACCOUNT_CREATE, accountCreate,\n  ACCOUNT_REAUTHORIZE,\n  accountReauthorize,\n} from '@src/ducks/accounts';\nimport browserHistory from '@src/lib/browserHistory';\nimport { toastSet } from '@src/ducks/toasts';\nimport { isElectron } from '@src/lib/electron';\nimport { deleteAuthCookie, deleteTFANeededCookie } from '@src/lib/cookies';\nimport { AUTH_TOKEN_NONE, setToken } from '@src/api/base';\n\nconst accountDeleteEpic: Epic<Action<Account, null>, StoreState, Deps>\n  = (action$, store, deps) =>\n action$.ofType(ACCOUNT_DELETE)\n  .filter(action => action.status === ActionStatus.Start)\n  .flatMap(action =>\n    deps.accounts.delete(action.meta.id)\n      .do((account: Account) => browserHistory.replace(\n        '/settings/accounts' + (action.meta.account ? `/${action.meta.account}` : ''),\n      ))\n      .map((account: Account) => accountDelete(action.meta, null))\n      .catch((e: Error) => Observable.of(accountDelete(action.meta, e))),\n  );\n\nconst accountDeleteMeEpic: Epic<Action<null, null>, StoreState, Deps>\n  = (action$, store, deps) =>\n action$.ofType(ACCOUNT_DELETE_ME)\n  .filter(action => action.status === ActionStatus.Start)\n  .flatMap(action =>\n    deps.accounts.deleteMe()\n      .map(() => {\n        // delete all user data without having to call the logout endpoint\n        // that will of course fail since the user data has been just deleted\n        // the the above deleteMe Observable\n        deleteAuthCookie();\n        deleteTFANeededCookie();\n        setToken(AUTH_TOKEN_NONE);\n        store.dispatch(toastSet(new Error('Account deleted')));\n\n        return accountDeleteMe(action.meta, null);\n      })\n      .catch((e: Error) => Observable.of(accountDeleteMe(action.meta, e))),\n  );\n\nconst accountCreateEpic: Epic<Action<Partial<Account>|Error|null, Account|null>, StoreState, Deps>\n  = (action$, store, deps) =>\n    action$.ofType(ACCOUNT_CREATE)\n      .filter(action => action.status === ActionStatus.Start)\n      .flatMap((action: Action <Partial<Account>, Account>) =>\n        deps.accounts.create(action.meta)\n          .map((account: Account) => accountCreate(action.meta, account))\n          .catch(e => Observable.of(toastSet(e))),\n    );\n\nconst accountCreateSuccessEpic: Epic<Action<Partial<Account>, Account>, StoreState, Deps>\n  = (action$, store, deps) =>\n    action$.ofType(ACCOUNT_CREATE)\n      .filter(action => action.status === ActionStatus.Success)\n      .do((action) => {\n        // detect if account added from the initial sign up flow\n        if (store.getState().accounts.length > 1) {\n          const account = action.payload;\n          const newPath = account && account.account\n            ? `/settings/accounts/${account.account}/aliases/${account.id}`\n            : `/settings/accounts/${action.payload!.id}`;\n          browserHistory.replace(newPath);\n        } else if (!!store.getState().unsubscriberSignup) {\n          browserHistory.push('/unsubscriber');\n        } else {\n          browserHistory.replace('/onboarding/teaminvite');\n        }\n      })\n      .filter(action => false);\n\nconst accountUpdateEpic: Epic<Action<Account|Error|null, Account|null>, StoreState, Deps> =\n  (action$, store, deps) =>\n    action$.ofType(ACCOUNT_UPDATE)\n      .filter(action => action.status === ActionStatus.Start)\n      .flatMap((action: Action<Account, Account>) =>\n        deps.accounts.update(action.meta)\n        .map((account: Account) => accountUpdate(action.meta, account))\n        .catch(e => Observable.of(toastSet(e))),\n      );\n\nconst accountReauthorizeEpic: Epic<Action<string|Error|null, null>, StoreState, Deps> =\n  (action$, store, deps) =>\n    action$.ofType(ACCOUNT_REAUTHORIZE)\n      .filter(action => action.status === ActionStatus.Start)\n      .flatMap((action: Action<string, null>) => {\n        const redirectUrl = isElectron ? `polymail://` + window.location.pathname\n          : window.location.href;\n\n        return deps.accounts\n          .reauthorizeOauthUrl(action.meta, redirectUrl, isElectron)\n          .do(url => window.location.href = url)\n          .map(() => accountReauthorize(action.meta, null))\n          .catch(e => Observable.of(toastSet(e)));\n      });\n\n// TODO(SHIN): Implement provider specific API URL && body generation.\nexport const providerSelectEpic: Epic<Action<AccountType|Error|null, string|null>, StoreState, Deps>\n= (action$, store, deps) =>\n  action$.ofType(ACCOUNT_PROVIDER_SELECT)\n    .filter(action => action.status === ActionStatus.Start)\n    .flatMap((action: Action<AccountType, null>) => {\n      const state = store.getState();\n\n      // Figure out if dropping into teaminvite or the app\n      const onboardingUrl = state.me.data?.onboardingSkippedTeam ?\n        '/' : '/login/choosePlan';\n\n      // Identify Redirect url after oauth completion\n      let redirectUrl = isElectron ?\n        !!store.getState().accounts.length ?\n          'polymail:///settings/accounts' : 'polymail://' + onboardingUrl\n      : window.location.origin + (\n        !!store.getState().accounts.length ? '/settings/accounts' : onboardingUrl\n      );\n      if (!!state.unsubscriberSignup) {\n        redirectUrl = window.location.origin + '/unsubscriber';\n      }\n\n      return deps.accounts.oauthUrl(\n        action.meta,\n        redirectUrl,\n        isElectron,\n      )\n      .flatMap((url) => {\n        if (url) {\n          window.location.href = url;\n        }\n        return Observable.merge(Observable.of(accountProviderSelect(action.meta, url)));\n      }).catch((e: Error) => Observable.merge(\n        Observable.of(accountProviderSelect(action.meta, e)),\n        Observable.of(toastSet(e)),\n      ));\n    });\n\nexport const signatureImageAddEpic: Epic<Action<AttachmentMeta, Attachment>, StoreState, Deps>\n= (action$, store, deps) =>\n action$.ofType(SIGNATURE_IMAGE_ADD)\n  .filter(action => action.status === ActionStatus.Start)\n  .flatMap(action =>\n    deps.accounts.createSignatureImage(action.meta)\n      .map(attachment => signatureImageAdd(action.meta, attachment))\n      .catch(e => Observable.of(signatureImageAdd(action.meta, e))),\n  );\n\nexport const signatureImageRemoveEpic: Epic<Action<AttachmentMeta, null>, StoreState, Deps>\n= (action$, state, deps) =>\n   action$.ofType(SIGNATURE_IMAGE_REMOVE)\n    .filter(action => action.status === ActionStatus.Start)\n    .flatMap(action =>\n      deps.accounts.removeSignatureImage(action.meta)\n        .map(() => signatureImageRemove(action.meta, null))\n        .catch(e => Observable.of(signatureImageRemove(action.meta, e))),\n    );\n\nexport default [\n  accountCreateEpic,\n  accountCreateSuccessEpic,\n  accountUpdateEpic,\n  accountDeleteEpic,\n  accountDeleteMeEpic,\n  accountReauthorizeEpic,\n  signatureImageAddEpic,\n  signatureImageRemoveEpic,\n  providerSelectEpic,\n];\n"]}]}