{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/permissions.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/permissions.ts","mtime":1675280254050},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkgewogICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHsKICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHsKICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTsKICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKQogICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07CiAgICAgICAgfQogICAgICAgIHJldHVybiB0OwogICAgfTsKICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9Owp2YXIgX2EsIF9iLCBfYzsKaW1wb3J0IHsgY3JlYXRlIH0gZnJvbSAnQHNyYy9saWIvcmVkdXgnOwppbXBvcnQgeyBCYW5uZXJUeXBlIH0gZnJvbSAnQHNyYy90eXBlcyc7CmltcG9ydCB1cGRhdGUgZnJvbSAnaW1tdXRhYmlsaXR5LWhlbHBlcic7CmV4cG9ydCB2YXIgUEVSTUlTU0lPTlNfTUFJTFRPX1JFR0lTVEVSID0gKF9hID0gY3JlYXRlKCdQRVJNSVNTSU9OU19NQUlMVE9fUkVHSVNURVInLCAoewogICAgc3RhcnQ6IGZ1bmN0aW9uIChzdGF0ZSwgbWV0YSkgewogICAgICAgIC8vIE5PVEUoU0hBSEFOKTogRWxlY3Ryb24gaXMgaGFuZGxlZCBpbiBjb3JyZXNwb25kaW5nIGVwaWMKICAgICAgICB2YXIgZWxlY3Ryb25BcHAgPSAhIXdpbmRvdy5QTUVsZWN0cm9uQnJpZGdlICYmICEhd2luZG93LlBNRWxlY3Ryb25CcmlkZ2Uuc2V0RGVmYXVsdENsaWVudDsKICAgICAgICBpZiAoIWVsZWN0cm9uQXBwICYmIG5hdmlnYXRvciAmJiBuYXZpZ2F0b3IucmVnaXN0ZXJQcm90b2NvbEhhbmRsZXIpIHsKICAgICAgICAgICAgbmF2aWdhdG9yLnJlZ2lzdGVyUHJvdG9jb2xIYW5kbGVyKCdtYWlsdG8nLCB3aW5kb3cubG9jYXRpb24ucHJvdG9jb2wgKwogICAgICAgICAgICAgICAgKCIvLyIgKyB3aW5kb3cubG9jYXRpb24uaG9zdCArICIvbWFpbC8iKSArCiAgICAgICAgICAgICAgICAoKHN0YXRlLm1haWxib3guYWNjb3VudCB8fCAnYWxsJykgKyAiL2NvbXBvc2UvP21haWx0bz0lcyIpLCAnUG9seW1haWwnKTsKICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3Blcm1pc3Npb25zJywgSlNPTi5zdHJpbmdpZnkoX19hc3NpZ24oX19hc3NpZ24oe30sIHN0YXRlLnBlcm1pc3Npb25zKSwgeyBtYWlsVG9Qcm90b2NvbDogdHJ1ZSB9KSkpOwogICAgICAgICAgICByZXR1cm4gdXBkYXRlKHN0YXRlLCB7CiAgICAgICAgICAgICAgICBwZXJtaXNzaW9uczogewogICAgICAgICAgICAgICAgICAgICRzZXQ6IF9fYXNzaWduKF9fYXNzaWduKHt9LCBzdGF0ZS5wZXJtaXNzaW9ucyksIHsgbWFpbFRvUHJvdG9jb2w6IHRydWUgfSksCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHN0YXRlOwogICAgfSwKfSkpLCBfYS50eXBlKSwgcGVybWlzc2lvbnNNYWlsdG9SZWdpc3RlciA9IF9hLmFjdGlvbiwgcGVybWlzc2lvbnNNYWlsdG9SZWdpc3RlclJlZHVjZXIgPSBfYS5yZWR1Y2VyOwpleHBvcnQgdmFyIFBFUk1JU1NJT05TX05PVElGSUNBVElPTlMgPSAoX2IgPSBjcmVhdGUoJ1BFUk1JU1NJT05TX05PVElGSUNBVElPTlMnLCAoewogICAgc3RhcnQ6IGZ1bmN0aW9uIChzdGF0ZSwgbWV0YSkgewogICAgICAgIGlmICgoJ05vdGlmaWNhdGlvbicgaW4gd2luZG93KSkgewogICAgICAgICAgICBpZiAoTm90aWZpY2F0aW9uLnBlcm1pc3Npb24gPT09ICdncmFudGVkJykgewogICAgICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3Blcm1pc3Npb25zJywgSlNPTi5zdHJpbmdpZnkoX19hc3NpZ24oX19hc3NpZ24oe30sIHN0YXRlLnBlcm1pc3Npb25zKSwgeyBub3RpZmljYXRpb25zOiB0cnVlIH0pKSk7CiAgICAgICAgICAgICAgICByZXR1cm4gdXBkYXRlKHN0YXRlLCB7CiAgICAgICAgICAgICAgICAgICAgcGVybWlzc2lvbnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgJHNldDogX19hc3NpZ24oX19hc3NpZ24oe30sIHN0YXRlLnBlcm1pc3Npb25zKSwgeyBub3RpZmljYXRpb25zOiB0cnVlIH0pLAogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICByZXR1cm4gc3RhdGU7CiAgICB9LAogICAgc3VjY2VzczogZnVuY3Rpb24gKHN0YXRlLCBtZXRhLCBwYXlsb2FkKSB7CiAgICAgICAgaWYgKHBheWxvYWQgPT09ICdncmFudGVkJykgewogICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgncGVybWlzc2lvbnMnLCBKU09OLnN0cmluZ2lmeShfX2Fzc2lnbihfX2Fzc2lnbih7fSwgc3RhdGUucGVybWlzc2lvbnMpLCB7IG5vdGlmaWNhdGlvbnM6IHRydWUgfSkpKTsKICAgICAgICAgICAgcmV0dXJuIHVwZGF0ZShzdGF0ZSwgewogICAgICAgICAgICAgICAgcGVybWlzc2lvbnM6IHsKICAgICAgICAgICAgICAgICAgICAkc2V0OiBfX2Fzc2lnbihfX2Fzc2lnbih7fSwgc3RhdGUucGVybWlzc2lvbnMpLCB7IG5vdGlmaWNhdGlvbnM6IHRydWUgfSksCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHN0YXRlOwogICAgfSwKfSkpLCBfYi50eXBlKSwgcGVybWlzc2lvbnNOb3RpZmljYXRpb25zID0gX2IuYWN0aW9uLCBwZXJtaXNzaW9uc05vdGlmaWNhdGlvbnNSZWR1Y2VyID0gX2IucmVkdWNlcjsKZXhwb3J0IHZhciBQRVJNSVNTSU9OU19CQU5ORVJfQ0xPU0UgPSAoX2MgPSBjcmVhdGUoJ1BFUk1JU1NJT05TX0JBTk5FUl9DTE9TRScsICh7CiAgICBzdGFydDogZnVuY3Rpb24gKHN0YXRlLCBtZXRhKSB7CiAgICAgICAgdmFyIF9hOwogICAgICAgIHZhciBuZXdDbG9zZWRCYW5uZXJzID0gX19hc3NpZ24oX19hc3NpZ24oe30sIHN0YXRlLmNsb3NlZEJhbm5lcnMpLCAoX2EgPSB7fSwgX2FbbWV0YV0gPSB0cnVlLCBfYSkpOwogICAgICAgIGlmIChtZXRhICE9PSBCYW5uZXJUeXBlLlllYXJJblJldmlldykgewogICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnY2xvc2VkQmFubmVycycsIEpTT04uc3RyaW5naWZ5KG5ld0Nsb3NlZEJhbm5lcnMpKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHVwZGF0ZShzdGF0ZSwgewogICAgICAgICAgICBjbG9zZWRCYW5uZXJzOiB7ICRzZXQ6IG5ld0Nsb3NlZEJhbm5lcnMgfSwKICAgICAgICB9KTsKICAgIH0sCn0pKSwgX2MudHlwZSksIHBlcm1pc3Npb25zQmFubmVyQ2xvc2UgPSBfYy5hY3Rpb24sIHBlcm1pc3Npb25zQmFubmVyQ2xvc2VSZWR1Y2VyID0gX2MucmVkdWNlcjsKZXhwb3J0IGRlZmF1bHQgWwogICAgcGVybWlzc2lvbnNNYWlsdG9SZWdpc3RlclJlZHVjZXIsCiAgICBwZXJtaXNzaW9uc05vdGlmaWNhdGlvbnNSZWR1Y2VyLAogICAgcGVybWlzc2lvbnNCYW5uZXJDbG9zZVJlZHVjZXIsCl07Cg=="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/permissions.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/permissions.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,gBAAgB,CAAC;AACxC,OAAO,EAAE,UAAU,EAAE,MAAM,YAAY,CAAC;AACxC,OAAO,MAAM,MAAM,qBAAqB,CAAC;AAEzC,MAAM,CACJ,IAAA;;;;;;;;;;;;;;;;;aAAiC,EACjC,qCAAiC,EACjC,6CAAyC,CA+BvC;AAEJ,MAAM,CACJ,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;aAA+B,EAC/B,oCAAgC,EAChC,4CAAwC,CAyCtC;AAEJ,MAAM,CACJ,IAAA;;;;;;;;;;;aAA8B,EAC9B,kCAA8B,EAC9B,0CAAsC,CAapC;AAEJ,eAAe;IACb,gCAAgC;IAChC,+BAA+B;IAC/B,6BAA6B;CAC9B,CAAC","sourcesContent":["import { create } from '@src/lib/redux';\nimport { BannerType } from '@src/types';\nimport update from 'immutability-helper';\n\nexport const {\n  type: PERMISSIONS_MAILTO_REGISTER,\n  action: permissionsMailtoRegister,\n  reducer: permissionsMailtoRegisterReducer,\n} = create<null, undefined>('PERMISSIONS_MAILTO_REGISTER', ({\n  start: (state, meta) => {\n\n    // NOTE(SHAHAN): Electron is handled in corresponding epic\n    const electronApp = !!window.PMElectronBridge && !!window.PMElectronBridge.setDefaultClient;\n    if (!electronApp && navigator && (navigator as any).registerProtocolHandler) {\n      (navigator as any).registerProtocolHandler(\n        'mailto',\n        window.location.protocol +\n        `//${window.location.host}/mail/` +\n        `${state.mailbox.account || 'all'}/compose/?mailto=%s`,\n        'Polymail',\n      );\n\n      localStorage.setItem('permissions', JSON.stringify({\n        ...state.permissions,\n        mailToProtocol: true,\n      }));\n      return update(state, {\n        permissions: {\n          $set: {\n            ...state.permissions,\n            mailToProtocol: true,\n          },\n        },\n      });\n    }\n\n    return state;\n  },\n}));\n\nexport const {\n  type: PERMISSIONS_NOTIFICATIONS,\n  action: permissionsNotifications,\n  reducer: permissionsNotificationsReducer,\n} = create<null, string>('PERMISSIONS_NOTIFICATIONS', ({\n  start: (state, meta) => {\n    if (('Notification' in window)) {\n      if ((Notification as any).permission === 'granted') {\n        localStorage.setItem('permissions', JSON.stringify({\n          ...state.permissions,\n          notifications: true,\n        }));\n        return update(state, {\n          permissions: {\n            $set: {\n              ...state.permissions,\n              notifications: true,\n            },\n          },\n        });\n      }\n    }\n\n    return state;\n  },\n  success: (state, meta, payload) => {\n    if (payload === 'granted') {\n      localStorage.setItem('permissions', JSON.stringify({\n        ...state.permissions,\n        notifications: true,\n      }));\n\n      return update(state, {\n        permissions: {\n          $set: {\n            ...state.permissions,\n            notifications: true,\n          },\n        },\n      });\n    }\n\n    return state;\n  },\n}));\n\nexport const {\n  type: PERMISSIONS_BANNER_CLOSE,\n  action: permissionsBannerClose,\n  reducer: permissionsBannerCloseReducer,\n} = create<string, undefined>('PERMISSIONS_BANNER_CLOSE', ({\n  start: (state, meta) => {\n\n    const newClosedBanners = { ...state.closedBanners, [meta]: true };\n    if (meta !== BannerType.YearInReview) {\n      localStorage.setItem('closedBanners', JSON.stringify(newClosedBanners));\n    }\n\n    return update(state, {\n      closedBanners: { $set: newClosedBanners },\n    });\n  },\n}));\n\nexport default [\n  permissionsMailtoRegisterReducer,\n  permissionsNotificationsReducer,\n  permissionsBannerCloseReducer,\n];\n"]}]}