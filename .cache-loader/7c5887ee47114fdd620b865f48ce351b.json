{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/app.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/app.ts","mtime":1675280254046},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9hLCBfYiwgX2MsIF9kLCBfZSwgX2YsIF9nLCBfaCwgX2osIF9rLCBfbCwgX207CmltcG9ydCB7IGNyZWF0ZSB9IGZyb20gJ0BzcmMvbGliL3JlZHV4JzsKaW1wb3J0IHVwZGF0ZSBmcm9tICdpbW11dGFiaWxpdHktaGVscGVyJzsKaW1wb3J0IHsgcmVzb3VyY2VPaywgcmVzb3VyY2VSZWZyZXNoaW5nIH0gZnJvbSAnQHNyYy9saWIvcmVzb3VyY2UnOwppbXBvcnQgeyBUaGVtZVNldHRpbmcgfSBmcm9tICdAc3JjL3R5cGVzJzsKZXhwb3J0IHZhciBTVEFUVVNfUEFHRV9HRVQgPSAoX2EgPSBjcmVhdGUoJ1NUQVRVU19QQUdFX0dFVCcsIHsKICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChzdGF0ZSwgbWV0YSwgcGF5bG9hZCkgewogICAgICAgIHJldHVybiB1cGRhdGUoc3RhdGUsIHsKICAgICAgICAgICAgc3RhdHVzOiB7CiAgICAgICAgICAgICAgICBzdGF0dXNQYWdlOiB7ICRzZXQ6IHBheWxvYWQgfSwKICAgICAgICAgICAgfSwKICAgICAgICB9KTsKICAgIH0sCn0pLCBfYS50eXBlKSwgc3RhdHVzUGFnZUdldCA9IF9hLmFjdGlvbiwgc3RhdHVzUGFnZUdldFJlZHVjZXIgPSBfYS5yZWR1Y2VyOwpleHBvcnQgdmFyIEFQUF9TVEFUVVNfU0VUID0gKF9iID0gY3JlYXRlKCdBUFBfU1RBVFVTX1NFVCcsIHsKICAgIHN0YXJ0OiBmdW5jdGlvbiAoc3RhdGUsIG1ldGEpIHsKICAgICAgICByZXR1cm4gdXBkYXRlKHN0YXRlLCB7CiAgICAgICAgICAgIHN0YXR1czogeyAkbWVyZ2U6IG1ldGEgfSwKICAgICAgICB9KTsKICAgIH0sCn0pLCBfYi50eXBlKSwgYXBwU3RhdHVzU2V0ID0gX2IuYWN0aW9uLCBhcHBTdGF0dXNTZXRSZWR1Y2VyID0gX2IucmVkdWNlcjsKZXhwb3J0IHZhciBBUFBfU0VUX0RFTU8gPSAoX2MgPSBjcmVhdGUoJ0FQUF9TRVRfREVNTycsIHsKICAgIHN0YXJ0OiBmdW5jdGlvbiAoc3RhdGUsIG1ldGEpIHsKICAgICAgICByZXR1cm4gdXBkYXRlKHN0YXRlLCB7CiAgICAgICAgICAgIGRlbW9WaWRlbzogeyAkc2V0OiBtZXRhIH0sCiAgICAgICAgfSk7CiAgICB9LAp9KSwgX2MudHlwZSksIGFwcFNldERlbW8gPSBfYy5hY3Rpb24sIGFwcFNldERlbW9SZWR1Y2VyID0gX2MucmVkdWNlcjsKZXhwb3J0IHZhciBBUFBfVEhFTUVfU0VUID0gKF9kID0gY3JlYXRlKCdBUFBfVEhFTUVfU0VUJywgewogICAgc3RhcnQ6IGZ1bmN0aW9uIChzdGF0ZSwgbWV0YSkgewogICAgICAgIHZhciBpbml0aWFsU2V0ID0gIWxvY2FsU3RvcmFnZS5nZXRJdGVtKCd0aGVtZScpOwogICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCd0aGVtZScsIEpTT04uc3RyaW5naWZ5KG1ldGEpKTsKICAgICAgICAvLyBTZXQgdG8gcmVmcmVzaGluZyBpZiBpbnRpdGlhbCBzZXQgdG8gc2hvdyB3ZWxjb21lIGFuaW1hdGlvbgogICAgICAgIGlmIChpbml0aWFsU2V0ICYmIG1ldGEgPT09IFRoZW1lU2V0dGluZy5EYXJrKSB7CiAgICAgICAgICAgIHJldHVybiB1cGRhdGUoc3RhdGUsIHsKICAgICAgICAgICAgICAgIHRoZW1lOiB7CiAgICAgICAgICAgICAgICAgICAgJHNldDogcmVzb3VyY2VSZWZyZXNoaW5nKG1ldGEpLAogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICAgIC8vIE90aGVyd2lzZSBpbW1lZGlhdGVseSBzd2FwIGJldHdlZW4gbW9kZXMKICAgICAgICByZXR1cm4gdXBkYXRlKHN0YXRlLCB7CiAgICAgICAgICAgIHRoZW1lOiB7CiAgICAgICAgICAgICAgICAkc2V0OiByZXNvdXJjZU9rKG1ldGEpLAogICAgICAgICAgICB9LAogICAgICAgIH0pOwogICAgfSwKICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChzdGF0ZSwgbWV0YSwgcGF5bG9hZCkgewogICAgICAgIHJldHVybiB1cGRhdGUoc3RhdGUsIHsKICAgICAgICAgICAgdGhlbWU6IHsgJHNldDogcmVzb3VyY2VPayhtZXRhKSB9LAogICAgICAgIH0pOwogICAgfSwKfSksIF9kLnR5cGUpLCBhcHBUaGVtZVNldCA9IF9kLmFjdGlvbiwgYXBwVGhlbWVTZXRSZWR1Y2VyID0gX2QucmVkdWNlcjsKZXhwb3J0IHZhciBBUFBfVU5TVUJTQ1JJQkVSX1NFVCA9IChfZSA9IGNyZWF0ZSgnQVBQX1VOU1VCU0NSSUJFUl9TRVQnLCB7CiAgICBzdGFydDogZnVuY3Rpb24gKHN0YXRlLCBtZXRhKSB7CiAgICAgICAgcmV0dXJuIHVwZGF0ZShzdGF0ZSwgewogICAgICAgICAgICB1bnN1YnNjcmliZXJTaWdudXA6IHsgJHNldDogbWV0YSB9LAogICAgICAgIH0pOwogICAgfSwKfSksIF9lLnR5cGUpLCBhcHBVbnN1YnNjcmliZXJTZXQgPSBfZS5hY3Rpb24sIGFwcFVuc3Vic2NyaWJlclNldFJlZHVjZXIgPSBfZS5yZWR1Y2VyOwpleHBvcnQgdmFyIEFQUF9NVVRFX1NPVU5EUyA9IChfZiA9IGNyZWF0ZSgnQVBQX01VVEVfU09VTkRTJywgewogICAgc3RhcnQ6IGZ1bmN0aW9uIChzdGF0ZSwgbWV0YSkgewogICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdtdXRlU291bmRzJywgSlNPTi5zdHJpbmdpZnkobWV0YSkpOwogICAgICAgIHJldHVybiB1cGRhdGUoc3RhdGUsIHsKICAgICAgICAgICAgbXV0ZVNvdW5kczogeyAkc2V0OiBtZXRhIH0sCiAgICAgICAgfSk7CiAgICB9LAp9KSwgX2YudHlwZSksIGFwcE11dGVTb3VuZHMgPSBfZi5hY3Rpb24sIGFwcE11dGVTb3VuZHNSZWR1Y2VyID0gX2YucmVkdWNlcjsKZXhwb3J0IHZhciBIT1RLRVlfU1VHR0VTVF9UT0dHTEUgPSAoX2cgPSBjcmVhdGUoJ0hPVEtFWV9TVUdHRVNUX1RPR0dMRScsIHsKICAgIHN0YXJ0OiBmdW5jdGlvbiAoc3RhdGUsIG1ldGEpIHsKICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnc2hvd0hvdGtleVN1Z2dlc3Rpb25zJywgSlNPTi5zdHJpbmdpZnkobWV0YSkpOwogICAgICAgIHJldHVybiB1cGRhdGUoc3RhdGUsIHsKICAgICAgICAgICAgc2hvd0hvdGtleVN1Z2dlc3Rpb25zOiB7ICRzZXQ6IG1ldGEgfSwKICAgICAgICB9KTsKICAgIH0sCn0pLCBfZy50eXBlKSwgaG90a2V5U3VnZ2VzdFRvZ2dsZSA9IF9nLmFjdGlvbiwgaG90a2V5U3VnZ2VzdFRvZ2dsZVJlZHVjZXIgPSBfZy5yZWR1Y2VyOwpleHBvcnQgdmFyIEFQUF9VUERBVEVfUkVBRFkgPSAoX2ggPSBjcmVhdGUoJ0FQUF9VUERBVEVfUkVBRFknLCB7CiAgICBzdGFydDogZnVuY3Rpb24gKHN0YXRlLCBtZXRhKSB7CiAgICAgICAgcmV0dXJuIHVwZGF0ZShzdGF0ZSwgewogICAgICAgICAgICBhcHBVcGRhdGVSZWFkeTogeyAkc2V0OiBtZXRhIH0sCiAgICAgICAgfSk7CiAgICB9LAp9KSwgX2gudHlwZSksIGFwcFVwZGF0ZVJlYWR5ID0gX2guYWN0aW9uLCBhcHBVcGRhdGVSZWFkeVJlZHVjZXIgPSBfaC5yZWR1Y2VyOwpleHBvcnQgdmFyIEFQUF9ERUZBVUxUX0NMSUVOVCA9IChfaiA9IGNyZWF0ZSgnQVBQX0RFRkFVTFRfQ0xJRU5UJywgewogICAgc3RhcnQ6IGZ1bmN0aW9uIChzdGF0ZSwgbWV0YSkgewogICAgICAgIHJldHVybiB1cGRhdGUoc3RhdGUsIHsKICAgICAgICAgICAgaXNEZWZhdWx0Q2xpZW50OiB7ICRzZXQ6IG1ldGEgfSwKICAgICAgICB9KTsKICAgIH0sCn0pLCBfai50eXBlKSwgYXBwRGVmYXVsdENsaWVudCA9IF9qLmFjdGlvbiwgYXBwRGVmYXVsdENsaWVudFJlZHVjZXIgPSBfai5yZWR1Y2VyOwpleHBvcnQgdmFyIFdFQkFQUF9VUERBVEVfUkVBRFkgPSAoX2sgPSBjcmVhdGUoJ1dFQkFQUF9VUERBVEVfUkVBRFknLCB7CiAgICBzdGFydDogZnVuY3Rpb24gKHN0YXRlLCBtZXRhKSB7CiAgICAgICAgcmV0dXJuIHVwZGF0ZShzdGF0ZSwgewogICAgICAgICAgICB3ZWJhcHBVcGRhdGVSZWFkeTogeyAkc2V0OiBtZXRhIH0sCiAgICAgICAgfSk7CiAgICB9LAp9KSwgX2sudHlwZSksIHdlYmFwcFVwZGF0ZVJlYWR5ID0gX2suYWN0aW9uLCB3ZWJhcHBVcGRhdGVSZWFkeVJlZHVjZXIgPSBfay5yZWR1Y2VyOwpleHBvcnQgdmFyIE9OTElORV9TRVQgPSAoX2wgPSBjcmVhdGUoJ09OTElORV9TRVQnLCB7CiAgICBzdGFydDogZnVuY3Rpb24gKHN0YXRlLCBtZXRhKSB7CiAgICAgICAgcmV0dXJuIHVwZGF0ZShzdGF0ZSwgeyBpc09ubGluZTogeyAkc2V0OiBtZXRhIH0gfSk7CiAgICB9LAp9KSwgX2wudHlwZSksIG9ubGluZVNldCA9IF9sLmFjdGlvbiwgb25saW5lU2V0UmVkdWNlciA9IF9sLnJlZHVjZXI7CmV4cG9ydCB2YXIgREVCVUdfU0VORCA9IChfbSA9IGNyZWF0ZSgnREVCVUdfU0VORCcsIHt9KSwgX20udHlwZSksIGRlYnVnU2VuZCA9IF9tLmFjdGlvbiwgZGVidWdTZW5kUmVkdWNlciA9IF9tLnJlZHVjZXI7CmV4cG9ydCBkZWZhdWx0IFsKICAgIGFwcFVuc3Vic2NyaWJlclNldFJlZHVjZXIsCiAgICBhcHBNdXRlU291bmRzUmVkdWNlciwKICAgIGFwcFVwZGF0ZVJlYWR5UmVkdWNlciwKICAgIHdlYmFwcFVwZGF0ZVJlYWR5UmVkdWNlciwKICAgIG9ubGluZVNldFJlZHVjZXIsCiAgICBkZWJ1Z1NlbmRSZWR1Y2VyLAogICAgYXBwVGhlbWVTZXRSZWR1Y2VyLAogICAgaG90a2V5U3VnZ2VzdFRvZ2dsZVJlZHVjZXIsCiAgICBhcHBEZWZhdWx0Q2xpZW50UmVkdWNlciwKICAgIGFwcFNldERlbW9SZWR1Y2VyLAogICAgYXBwU3RhdHVzU2V0UmVkdWNlciwKICAgIHN0YXR1c1BhZ2VHZXRSZWR1Y2VyLApdOwo="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/app.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/app.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,gBAAgB,CAAC;AACxC,OAAO,MAAM,MAAM,qBAAqB,CAAC;AACzC,OAAO,EAAE,UAAU,EAAE,kBAAkB,EAAE,MAAM,mBAAmB,CAAC;AACnE,OAAO,EAAE,YAAY,EAAiC,MAAM,YAAY,CAAC;AAGzE,MAAM,CACJ,IAAA;;;;;;;;YAAqB,EACrB,yBAAqB,EACrB,iCAA6B,CAS5B;AAEH,MAAM,CACJ,IAAA;;;;;;YAAoB,EACpB,wBAAoB,EACpB,gCAA4B,CAO3B;AAEH,MAAM,CACJ,IAAA;;;;;;YAAkB,EAClB,sBAAkB,EAClB,8BAA0B,CAOzB;AAEH,MAAM,CACJ,IAAA;;;;;;;;;;;;;;;;;;;;;;;;YAAmB,EACnB,uBAAmB,EACnB,+BAA2B,CA0B1B;AAEH,MAAM,CACJ,IAAA;;;;;;YAA0B,EAC1B,8BAA0B,EAC1B,sCAAkC,CAOjC;AAEH,MAAM,CACJ,IAAA;;;;;;;YAAqB,EACrB,yBAAqB,EACrB,iCAA6B,CAQ5B;AAEH,MAAM,CACJ,IAAA;;;;;;;YAA2B,EAC3B,+BAA2B,EAC3B,uCAAmC,CAQlC;AAEH,MAAM,CACJ,IAAA;;;;;;YAAsB,EACtB,0BAAsB,EACtB,kCAA8B,CAM7B;AAEH,MAAM,CACJ,IAAA;;;;;;YAAwB,EACxB,4BAAwB,EACxB,oCAAgC,CAM/B;AAEH,MAAM,CACJ,IAAA;;;;;;YAAyB,EACzB,6BAAyB,EACzB,qCAAiC,CAMhC;AAEH,MAAM,CACJ,IAAA;;;;YAAgB,EAChB,qBAAiB,EACjB,6BAAyB,CAKxB;AAEH,MAAM,CACJ,IAAA,qDAAgB,EAChB,qBAAiB,EACjB,6BAAyB,CACc;AAEzC,eAAe;IACb,yBAAyB;IACzB,oBAAoB;IACpB,qBAAqB;IACrB,wBAAwB;IACxB,gBAAgB;IAChB,gBAAgB;IAChB,kBAAkB;IAClB,0BAA0B;IAC1B,uBAAuB;IACvB,iBAAiB;IACjB,mBAAmB;IACnB,oBAAoB;CACrB,CAAC","sourcesContent":["import { create } from '@src/lib/redux';\nimport update from 'immutability-helper';\nimport { resourceOk, resourceRefreshing } from '@src/lib/resource';\nimport { ThemeSetting, DemoVideoMeta, PolymailStatus } from '@src/types';\nimport { StatusPageResult } from '@src/api/app';\n\nexport const {\n  type: STATUS_PAGE_GET,\n  action: statusPageGet,\n  reducer: statusPageGetReducer,\n} = create<null, StatusPageResult>('STATUS_PAGE_GET', {\n  success: (state, meta, payload) => {\n    return update(state, {\n      status: {\n        statusPage: { $set: payload },\n      },\n    });\n  },\n});\n\nexport const {\n  type: APP_STATUS_SET,\n  action: appStatusSet,\n  reducer: appStatusSetReducer,\n} = create<Partial<PolymailStatus> | null, null>('APP_STATUS_SET', {\n  start: (state, meta) => {\n    return update(state, {\n      status: { $merge: meta },\n    });\n  },\n});\n\nexport const {\n  type: APP_SET_DEMO,\n  action: appSetDemo,\n  reducer: appSetDemoReducer,\n} = create<DemoVideoMeta|null, null>('APP_SET_DEMO', {\n  start: (state, meta) => {\n    return update(state, {\n      demoVideo: { $set: meta },\n    });\n  },\n});\n\nexport const {\n  type: APP_THEME_SET,\n  action: appThemeSet,\n  reducer: appThemeSetReducer,\n} = create<ThemeSetting, ThemeSetting>('APP_THEME_SET', {\n  start: (state, meta: ThemeSetting) => {\n    const initialSet = !localStorage.getItem('theme');\n    localStorage.setItem('theme', JSON.stringify(meta));\n\n    // Set to refreshing if intitial set to show welcome animation\n    if (initialSet && meta === ThemeSetting.Dark) {\n      return update(state, {\n        theme: {\n          $set: resourceRefreshing(meta),\n        },\n      });\n    }\n\n    // Otherwise immediately swap between modes\n    return update(state, {\n      theme: {\n        $set: resourceOk(meta),\n      },\n    });\n  },\n  success: (state, meta, payload) =>\n    update(state, {\n      theme: { $set: resourceOk(meta) },\n    }),\n});\n\nexport const {\n  type: APP_UNSUBSCRIBER_SET,\n  action: appUnsubscriberSet,\n  reducer: appUnsubscriberSetReducer,\n} = create<boolean, null>('APP_UNSUBSCRIBER_SET', {\n  start: (state, meta) => {\n    return update(state, {\n      unsubscriberSignup: { $set: meta },\n    });\n  },\n});\n\nexport const {\n  type: APP_MUTE_SOUNDS,\n  action: appMuteSounds,\n  reducer: appMuteSoundsReducer,\n} = create<boolean, null>('APP_MUTE_SOUNDS', {\n  start: (state, meta) => {\n    localStorage.setItem('muteSounds', JSON.stringify(meta));\n    return update(state, {\n      muteSounds: { $set: meta },\n    });\n  },\n});\n\nexport const {\n  type: HOTKEY_SUGGEST_TOGGLE,\n  action: hotkeySuggestToggle,\n  reducer: hotkeySuggestToggleReducer,\n} = create<boolean, null>('HOTKEY_SUGGEST_TOGGLE', {\n  start: (state, meta) => {\n    localStorage.setItem('showHotkeySuggestions', JSON.stringify(meta));\n    return update(state, {\n      showHotkeySuggestions: { $set: meta },\n    });\n  },\n});\n\nexport const {\n  type: APP_UPDATE_READY,\n  action: appUpdateReady,\n  reducer: appUpdateReadyReducer,\n} = create<boolean, null>('APP_UPDATE_READY', {\n  start: (state, meta) =>\n    update(state, {\n      appUpdateReady: { $set: meta },\n    }),\n});\n\nexport const {\n  type: APP_DEFAULT_CLIENT,\n  action: appDefaultClient,\n  reducer: appDefaultClientReducer,\n} = create<boolean, null>('APP_DEFAULT_CLIENT', {\n  start: (state, meta) =>\n    update(state, {\n      isDefaultClient: { $set: meta },\n    }),\n});\n\nexport const {\n  type: WEBAPP_UPDATE_READY,\n  action: webappUpdateReady,\n  reducer: webappUpdateReadyReducer,\n} = create<boolean, null>('WEBAPP_UPDATE_READY', {\n  start: (state, meta) =>\n    update(state, {\n      webappUpdateReady: { $set: meta },\n    }),\n});\n\nexport const {\n  type: ONLINE_SET,\n  action: onlineSet,\n  reducer: onlineSetReducer,\n} = create<boolean, null>('ONLINE_SET', {\n  start: (state, meta) => {\n    return update(state, { isOnline: { $set: meta } });\n  },\n});\n\nexport const {\n  type: DEBUG_SEND,\n  action: debugSend,\n  reducer: debugSendReducer,\n} = create<null, null>('DEBUG_SEND', {});\n\nexport default [\n  appUnsubscriberSetReducer,\n  appMuteSoundsReducer,\n  appUpdateReadyReducer,\n  webappUpdateReadyReducer,\n  onlineSetReducer,\n  debugSendReducer,\n  appThemeSetReducer,\n  hotkeySuggestToggleReducer,\n  appDefaultClientReducer,\n  appSetDemoReducer,\n  appStatusSetReducer,\n  statusPageGetReducer,\n];\n"]}]}