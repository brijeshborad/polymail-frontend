{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Sending/Sending.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Sending/Sending.tsx","mtime":1675280254110},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Sending/Sending.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Sending/Sending.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,QAAQ,CAAC;AAEjE,OAAO,gBAAgB,MAAM,mCAAmC,CAAC;AACjE,OAAO,UAAU,MAAM,6BAA6B,CAAC;AACrD,OAAO,QAAQ,MAAM,+BAA+B,CAAC;AACrD,OAAO,EAAE,YAAY,EAAE,MAAM,6BAA6B,CAAC;AAC3D,OAAO,EACL,YAAY,EACZ,qBAAqB,EACrB,sBAAsB,GACvB,MAAM,6BAA6B,CAAC;AACrC,OAAO,cAAc,MAAM,4BAA4B,CAAC;AACxD,OAAO,aAAa,MAAM,kDAAkD,CAAC;AAI7E,OAAO,gBAAgB,CAAC;AACxB,OAAO,EAAE,MAAM,EAAE,MAAM,iBAAiB,CAAC;AACzC,OAAO,EAAE,iBAAiB,EAAE,MAAM,mBAAmB,CAAC;AACtD,OAAO,EAAE,oBAAoB,EAAE,MAAM,8BAA8B,CAAC;AACpE,OAAO,mBAAmB,MAAM,0CAA0C,CAAC;AAoB3E;IAAsB,2BAAiD;IAMrE,iBAAY,KAA4B;QAAxC,YACE,iBAAO,SAWR;QAaD,wCAAkC,GAAG;YACnC,IAAI,MAAM,CAAC,gBAAgB,IAAI,MAAM,CAAC,gBAAgB,CAAC,4BAA4B,EAAE;gBACnF,IAAI,IAAI,SAAW,CAAC;gBAEpB,yFAAyF;gBACzF,IAAI;oBACF,IAAI,GAAG,MAAM,CAAC,gBAAgB,CAAC,4BAA4B,EAAE,CAAC;iBAC/D;gBAAC,OAAO,CAAC,EAAE;oBACV,IAAI,GAAG,EAAE,CAAC;iBACX;gBAED,KAAI,CAAC,QAAQ,CAAC;oBACZ,iBAAiB,EAAE,IAAI;iBACxB,CAAC,CAAC;aACJ;QACH,CAAC,CAAA;QAED,kBAAY,GAAG,UAAC,CAAoC;YAC5C,IAAA,gBAAyD,EAAvD,4BAAW,EAAE,wCAAiB,EAAE,sBAAuB,CAAC;YAChE,IAAM,cAAc,GAAG,EAAE,CAAC;YAC1B,IAAM,EAAE,GAAG,CAAC,CAAC,aAAa,CAAC,EAAE,CAAC;YAE9B,IAAI,EAAE,KAAK,kBAAkB,IAAI,CAAC,QAAQ,CAAC,gBAAgB,EAAE;gBAC3D,OAAO;aACR;YAED,IAAI,EAAE,KAAK,cAAc,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE;gBACjD,OAAO;aACR;YAED,0DAA0D;YAC1D,IAAI,EAAE,KAAK,kBAAkB,IAAI,CAAC,QAAQ,CAAC,uBAAuB,EAAE;gBAClE,OAAO;aACR;YAED,IAAI,EAAE,EAAE;gBACN,cAAc,CAAC,EAAE,CAAC,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;gBACtC,iBAAiB,uBACZ,WAAW,GACX,cAAc,EACjB,CAAC;aACJ;QACH,CAAC,CAAA;QAED,kBAAY,GAAG,UAAC,KAAa,EAAE,KAAa,EAAE,EAAW;YACvD,QAAQ,EAAE,EAAE;gBACV,KAAK,qBAAqB;oBACxB,IAAM,sBAAoB,GAAG,KAAI,CAAC,kBAAkB,EAAE,CAAC,KAAK,CAAC,CAAC;oBAC9D,KAAI,CAAC,QAAQ,CACX;wBACE,iBAAiB,EAAE,KAAI,CAAC,KAAK,CAAC,iBAAiB;6BAC5C,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,KAAK,sBAAoB,CAAC,IAAI,EAA/B,CAA+B,CAAC;qBAChD,EACD;;wBACE,UAAI,MAAM,CAAC,gBAAgB,0CAAE,wBAAwB,EAAE;4BACrD,MAAM,CAAC,gBAAgB,CAAC,wBAAwB,CAAC,KAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;yBAChF;oBACH,CAAC,CACF,CAAC;oBACF,MAAM;gBACR;oBACE,OAAO;aACV;QACH,CAAC,CAAA;QAED,kBAAY,GAAG,UAAC,KAAa,EAAE,KAAa,EAAE,EAAW;YACjD,IAAA,gBAA+C,EAA7C,wCAAiB,EAAE,4BAA0B,CAAC;YACtD,IAAM,cAAc,gBAAQ,WAAW,CAAE,CAAC;YAE1C,QAAQ,EAAE,EAAE;gBACV,KAAK,mBAAmB;oBACtB,cAAc,CAAC,iBAAiB,GAAG,YAAY,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC;oBAC/D,MAAM;gBACR,KAAK,iBAAiB;oBACpB,IAAM,UAAU,GAAG,sBAAsB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC;oBAC9D,cAAc,CAAC,eAAe,GAAG,UAAU,IAAI,UAAU,IAAI,CAAC,CAAC;oBAC/D,MAAM;gBACR,KAAK,qBAAqB;oBACxB,IAAM,oBAAoB,GAAG,KAAI,CAAC,kBAAkB,EAAE,CAAC,KAAK,CAAC,CAAC;oBAC9D,IAAM,QAAM,GAAG,MAAM,CAAC,gBAAgB,CAAC;oBACvC,IAAI,QAAM,EAAE;wBACF,IAAA,iDAAiB,CAAgB;wBACzC,IAAM,cAAY,GAAG,IAAI,gBACpB,iBAAiB;4BACpB,oBAAoB,CAAC,IAAI;2BACzB,CAAC;wBACH,KAAI,CAAC,QAAQ,CACX;4BACE,iBAAiB,EAAE,cAAY;yBAChC,EACD;4BACE,IAAI,QAAM,aAAN,QAAM,uBAAN,QAAM,CAAE,wBAAwB,EAAE;gCACpC,QAAM,CAAC,wBAAwB,CAAC,cAAY,CAAC,CAAC;6BAC/C;wBACH,CAAC,CACF,CAAC;qBACH;oBACD,MAAM;gBACR;oBACE,MAAM;aACT;YAED,IAAI,EAAE,IAAI,cAAc,CAAC,EAAE,CAAC,KAAK,SAAS,EAAE;gBAC1C,iBAAiB,CAAC,cAAc,CAAC,CAAC;aACnC;QACH,CAAC,CAAA;QAED,yBAAmB,GAAG,UAAC,GAAkB;YACvC,KAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC;QAC/B,CAAC,CAAA;QAED,mBAAa,GAAG,UAAC,GAAkB;YACjC,KAAI,CAAC,WAAW,GAAG,GAAG,CAAC;QACzB,CAAC,CAAA;QAED,uBAAiB,GAAG,UAAC,GAAkB;YACrC,KAAI,CAAC,uBAAuB,GAAG,GAAG,CAAC;QACrC,CAAC,CAAA;QAED,iCAA2B,GAAG;YACpB,IAAA,+BAAQ,CAAgB;YAChC,IAAM,2BAA2B,GAAG,CAAC,QAAQ,CAAC,gBAAgB,CAAC;YAE/D,IAAI,2BAA2B,EAAE;gBAC/B,KAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;aAC/B;QACH,CAAC,CAAA;QAED,2BAAqB,GAAG;YACd,IAAA,+BAAQ,CAAgB;YAChC,IAAM,qBAAqB,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC;YAEnD,IAAI,qBAAqB,EAAE;gBACzB,KAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;aACzB;QACH,CAAC,CAAA;QAED,2BAAqB,GAAG;YACtB,KAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;QAC1B,CAAC,CAAA;QAED,+BAAyB,GAAG;YAClB,IAAA,+BAAQ,CAAgB;YAChC,IAAM,yBAAyB,GAAG,CAAC,QAAQ,CAAC,uBAAuB,CAAC;YAEpE,IAAI,yBAAyB,EAAE;gBAC7B,KAAI,CAAC,uBAAuB,CAAC,IAAI,EAAE,CAAC;aACrC;QACH,CAAC,CAAA;QAED,+BAAyB,GAAG;YAC1B,KAAI,CAAC,uBAAuB,CAAC,IAAI,EAAE,CAAC;QACtC,CAAC,CAAA;QAED,iCAA2B,GAAG;YAC5B,KAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;QAChC,CAAC,CAAA;QAED,0BAAoB,GAAG,UAAC,CAAyC;YACvD,IAAA,qCAAW,CAAgB;YAEnC,IAAI,CAAC,CAAC,aAAa,CAAC,KAAK,KAAK,SAAS,EAAE;gBACvC,IAAM,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;gBAClD,IAAI,KAAK,IAAI,CAAC,EAAE;oBACd,KAAI,CAAC,QAAQ,CACX,EAAE,QAAQ,EAAE,KAAK,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAClC;wBACE,KAAI,CAAC,SAAS,uBACT,WAAW,KACd,QAAQ,EAAE,KAAI,CAAC,KAAK,CAAC,QAAQ,IAC7B,CAAC;oBACL,CAAC,CACF,CAAC;iBACH;aACF;QACH,CAAC,CAAA;QAED,0BAAoB,GAAG;YACf,IAAA,gBAA+C,EAA7C,wCAAiB,EAAE,4BAA0B,CAAC;YACtD,IAAM,sBAAsB,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;YAEhD,iBAAiB,uBACZ,WAAW,KACd,QAAQ,EAAE,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,sBAAsB,IAC7D,CAAC;QACL,CAAC,CAAA;QAED,6BAAuB,GAAG;YAClB,IAAA,gBAA+C,EAA7C,wCAAiB,EAAE,4BAA0B,CAAC;YAEtD,iBAAiB,uBACZ,WAAW,KACd,iBAAiB,EAAE,CAAC,WAAW,CAAC,iBAAiB,IACjD,CAAC;QACL,CAAC,CAAA;QAED,iCAAiC;QACjC,wBAAkB,GAAG;YACnB,0FAA0F;YAC1F,IAAI,CAAC,iBAAiB,EAAE;gBACtB,OAAO,EAAE,CAAC;aACX;YAED,4BAA4B;YAC5B,IAAM,MAAM,GAAG,MAAM,CAAC,gBAAgB,CAAC;YAEvC,IAAI,MAAM,IAAI,MAAM,CAAC,iCAAiC,EAAE;gBACtD,IAAM,SAAS,GAAG,OAAO,CACvB,oBAAoB,CAAC,MAAM,CAAC,iCAAiC,EAAE,CAAC;qBAC7D,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,CAAC,CAAC,KAAK,EAAT,CAAS,CAAC,CAC1B,CAAC;gBACF,IAAM,eAAe,GAAG,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;gBACnD,OAAO,eAAe,CAAC;aACxB;YAED,OAAO,EAAE,CAAC;QACZ,CAAC,CAAA;QA9OC,KAAI,CAAC,SAAS,GAAG,QAAQ,CACvB,KAAK,CAAC,iBAAiB,EACvB,GAAG,CACF,CAAC;QAEJ,KAAI,CAAC,KAAK,GAAG;YACX,QAAQ,EAAE,KAAK,CAAC,WAAW,CAAC,QAAQ;YACpC,iBAAiB,EAAE,EAAE;SACtB,CAAC;;IACJ,CAAC;IAED,kDAAgC,GAAhC,UAAiC,SAAgC;QAC/D,IAAI,SAAS,KAAK,IAAI,CAAC,KAAK,EAAE;YAC5B,IAAI,CAAC,QAAQ,CAAC,EAAE,QAAQ,EAAE,SAAS,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC;SAC7D;IACH,CAAC;IAED,mCAAiB,GAAjB;QACI,yCAAyC;QAC3C,IAAI,CAAC,kCAAkC,EAAE,CAAC;IAC5C,CAAC;IA4ND,wBAAM,GAAN;QACQ,IAAA,eAAsC,EAApC,4BAAW,EAAE,sBAAuB,CAAC;QACvC,IAAA,eAA4C,EAA1C,sBAAQ,EAAE,wCAAgC,CAAC;QACnD,IAAM,4BAA4B,GAChC,6EAA6E,CAAC;QAChF,IAAM,sBAAsB,GAC1B,mFAAmF,CAAC;QACtF,IAAM,kBAAkB,GAAG,WAAW,CAAC,eAAe;YACpD,qBAAqB,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC;QACrD,IAAM,gBAAgB,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,QAAQ,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;QAE7E,iCAAiC;QACjC,2CAA2C;QAC3C,IAAM,2BAA2B,GAAG,uGAAqG,CAAC;QAC1I,IAAM,0BAA0B,GAAG,WAAW,CAAC,gBAAgB,IAAI,KAAK,CAAC;QACzE,IAAM,SAAS,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAE5C,OAAO,CACL,6BACE,SAAS,EAAC,wBAAwB;YAElC,oBAAC,gBAAgB,IACf,KAAK,EAAC,SAAS,EACf,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAC7B,eAAe,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe,EAC3C,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,GACnC;YACF,6BAAK,SAAS,EAAC,MAAM;gBACnB,oBAAC,UAAU,IACT,KAAK,EAAC,oBAAoB,EAC1B,QAAQ,EAAE,wDAAsD,EAChE,EAAE,EAAE,QAAQ,CAAC,uBAAuB,CAAC,CAAC,CAAC,0BAA0B,CAAC,CAAC,CAAC,IAAI,EACxE,QAAQ,EAAE,IAAI,CAAC,YAAY,EAC3B,QAAQ,EAAC,kBAAkB,EAC3B,OAAO,EAAE,oBAAC,aAAa,IACrB,SAAS,EAAC,iBAAiB,EAC3B,GAAG,EAAE,IAAI,CAAC,iBAAiB,EAC3B,KAAK,EAAC,oBAAoB,EAC1B,WAAW,EAAE,2BAA2B,GACxC,EACF,aAAa,EAAE,IAAI,CAAC,yBAAyB,EAC7C,aAAa,EAAE,IAAI,CAAC,yBAAyB,GAC7C;gBACF,oBAAC,UAAU,IACT,KAAK,EAAC,yBAAyB,EAC/B,QAAQ,EAAC,iDAAiD,EAC1D,EAAE,EAAE,CAAC,WAAW,CAAC,qBAAqB,EACtC,QAAQ,EAAE,IAAI,CAAC,YAAY,EAC3B,QAAQ,EAAC,uBAAuB,GAChC;gBACF,oBAAC,UAAU,IACT,KAAK,EAAC,4BAA4B,EAClC,QAAQ,EAAE,yDAAyD;wBACjE,4BAA4B,EAC9B,EAAE,EAAE,QAAQ,CAAC,gBAAgB,CAAC,CAAC,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC,CAAC,KAAK,EACpE,QAAQ,EAAE,IAAI,CAAC,YAAY,EAC3B,QAAQ,EAAC,kBAAkB,EAC3B,OAAO,EAAE,oBAAC,aAAa,IACrB,SAAS,EAAC,iBAAiB,EAC3B,GAAG,EAAE,IAAI,CAAC,mBAAmB,EAC7B,KAAK,EAAC,qBAAqB,EAC3B,WAAW,EAAE,4BAA4B,GACzC,EACF,aAAa,EAAE,IAAI,CAAC,2BAA2B,EAC/C,aAAa,EAAE,IAAI,CAAC,2BAA2B,GAC/C;gBACF,oBAAC,UAAU,IACT,KAAK,EAAC,sBAAsB,EAC5B,QAAQ,EAAC,2DAA2D,EACpE,EAAE,EAAE,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC,KAAK,EAC1D,QAAQ,EAAE,IAAI,CAAC,YAAY,EAC3B,QAAQ,EAAC,cAAc,EACvB,OAAO,EAAE,oBAAC,aAAa,IACrB,SAAS,EAAC,iBAAiB,EAC3B,GAAG,EAAE,IAAI,CAAC,aAAa,EACvB,KAAK,EAAC,eAAe,EACrB,WAAW,EAAE,sBAAsB,GACnC,EACF,aAAa,EAAE,IAAI,CAAC,qBAAqB,EACzC,aAAa,EAAE,IAAI,CAAC,qBAAqB,GACzC;gBACD,KAAK,IAAI,oBAAC,UAAU,IACnB,KAAK,EAAC,WAAW,EACjB,QAAQ,EAAC,iEAAiE,EAC1E,EAAE,EAAE,WAAW,CAAC,qBAAqB,EACrC,QAAQ,EAAE,IAAI,CAAC,YAAY,GAC3B;gBACF,oBAAC,UAAU,IACT,KAAK,EAAC,qCAAqC,EAC3C,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC,4DAA4D,CAAC,CAAC,CAAC,iEAAiE,EACnJ,EAAE,EAAE,WAAW,CAAC,cAAc,EAC9B,QAAQ,EAAE,IAAI,CAAC,YAAY,EAC3B,QAAQ,EAAC,gBAAgB,GACzB;gBACF,oBAAC,UAAU,IACT,KAAK,EAAC,kCAAkC,EACxC,QAAQ,EAAC,iFAAiF,EAC1F,EAAE,EAAE,WAAW,CAAC,aAAa,EAC7B,QAAQ,EAAE,IAAI,CAAC,YAAY,EAC3B,QAAQ,EAAC,eAAe,GACxB;gBACF,6BAAK,SAAS,EAAC,WAAW;oBACxB,oBAAC,UAAU,IACT,KAAK,EAAC,4CAA4C,EAClD,QAAQ,EAAC,4DAA4D,EACrE,EAAE,EAAE,gBAAgB,EACpB,QAAQ,EAAE,IAAI,CAAC,oBAAoB,EACnC,QAAQ,EAAC,UAAU,GACnB;oBACD,gBAAgB,IAAI,6BAAK,SAAS,EAAC,gBAAgB;wBAClD,gEAAwC;wBACxC,+BACE,GAAG,EAAC,MAAM,EACV,IAAI,EAAC,QAAQ,EACb,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,QAAQ,EAAE,EACvD,QAAQ,EAAE,IAAI,CAAC,oBAAoB,GACnC;wBACF,uDAA+B,CAC3B,CACF;gBACN,oBAAC,UAAU,IACT,KAAK,EAAC,qCAAqC,EAC3C,QAAQ,EAAC,8DAA8D,EACvE,EAAE,EAAE,WAAW,CAAC,iBAAiB,IAAI,KAAK,EAC1C,QAAQ,EAAE,IAAI,CAAC,uBAAuB,EACtC,QAAQ,EAAC,mBAAmB,GAC5B;gBACF,oBAAC,UAAU,IACT,KAAK,EAAC,eAAe,EACrB,QAAQ,EAAC,6DAA6D,EACtE,EAAE,EAAE,CAAC,WAAW,CAAC,mBAAmB,EACpC,QAAQ,EAAE,IAAI,CAAC,YAAY,EAC3B,QAAQ,EAAC,qBAAqB,GAC9B;gBACF,6BAAK,SAAS,EAAC,cAAc;oBAC3B,6BAAK,SAAS,EAAC,MAAM,sBAEjB;oBACJ,oBAAC,cAAc,IAAC,SAAS,EAAC,MAAM,GAAG;oBACnC,6BAAK,SAAS,EAAC,SAAS;wBACtB,6BAAK,SAAS,EAAC,OAAO,GAAG;wBACzB,6BAAK,SAAS,EAAC,cAAc;4BAC3B,4BAAI,SAAS,EAAC,OAAO,cAAa;4BAClC,4BAAI,SAAS,EAAC,UAAU,yCAAmC,CACvD,CACF,CACF;gBACL,CAAC,CAAC,SAAS,CAAC,MAAM,IAAI,CACrB,6BAAK,SAAS,EAAC,UAAU;oBACvB,6BAAK,SAAS,EAAC,OAAO,iBAAiB;oBACvC,4BAAI,SAAS,EAAC,UAAU,mEAEnB;oBACL,oBAAC,mBAAmB,IAClB,QAAQ,EAAE,IAAI,CAAC,YAAY,EAC3B,QAAQ,EAAE,IAAI,CAAC,YAAY,EAC3B,MAAM,EAAE,IAAI,CAAC,kBAAkB,EAAE,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,KAAK,EAAP,CAAO,CAAC,EACnD,cAAc,EAAE,oBAAoB,CAAC,iBAAiB,CAAC,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,KAAK,EAAP,CAAO,CAAC,EACzE,QAAQ,EAAE,KAAK,EACf,SAAS,QACT,EAAE,EAAC,qBAAqB,GACxB,CACE,CACP;gBACD,6BAAK,SAAS,EAAC,OAAO;oBACpB,4BAAI,SAAS,EAAC,OAAO,mBAAkB;oBACvC,6BAAK,SAAS,EAAC,YAAY;wBACzB,oBAAC,QAAQ,IACP,QAAQ,EAAE,IAAI,CAAC,YAAY,EAC3B,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,EACjC,UAAU,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,iBAAiB,CAAC,EACvE,QAAQ,EAAE,KAAK,EACf,SAAS,QACT,EAAE,EAAC,mBAAmB,GACtB;wBACF,oBAAC,QAAQ,IACP,QAAQ,EAAE,IAAI,CAAC,YAAY,EAC3B,MAAM,EAAE,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,QAAQ,EAAE,EAAf,CAAe,CAAC,CAAC,EACrE,UAAU,EAAE,kBAAkB,IAAI,YAAY,CAAC,OAAO,CAAC,kBAAkB,CAAC,GAAG,CAAC,IAAI,CAAC,EACnF,EAAE,EAAC,iBAAiB,GACpB,CACE;oBACN,6BACE,SAAS,EAAC,SAAS,EACnB,KAAK,EAAE;4BACL,UAAU,EAAE,WAAW,CAAC,iBAAiB,KAAK,IAAI,CAAC,CAAC;gCAClD,WAAW,CAAC,iBAAiB,CAAC,CAAC,CAAC,SAAS;4BAC3C,QAAQ,EAAE,WAAW,CAAC,eAAe,KAAK,CAAC,CAAC,CAAC;gCAC3C,WAAW,CAAC,eAAe,GAAG,IAAI;gCAClC,CAAC,CAAC,SAAS;yBACd,qDAGG,CACF,CACF,CACF,CACP,CAAC;IACJ,CAAC;IACH,cAAC;AAAD,CAAC,AAhcD,CAAsB,KAAK,CAAC,aAAa,GAgcxC;AAED,eAAe,OAAO,CAAC","sourcesContent":["import React from 'react';\nimport { values, debounce, compact, sortBy, uniq } from 'lodash';\n\nimport NavigationHeader from '../../components/NavigationHeader';\nimport ToggleCell from '../../components/ToggleCell';\nimport Dropdown from '@src/components/Form/Dropdown';\nimport { WebSafeFonts } from '@src/lib/fonts/WebSafeFonts';\nimport {\n  WebFontSizes,\n  matchFontPixelToPoint,\n  WebFontSizeConversions,\n} from '@src/lib/fonts/WebFontSizes';\nimport LongRightArrow from './Icons/LongRightArrow.svg';\nimport UpgradePrompt from '@src/components/Base/UpgradePrompt/UpgradePrompt';\n\nimport { Preferences, Me, Features } from '@src/types';\n\nimport './Sending.scss';\nimport { IS_MAC } from '@src/lib/device';\nimport { isElectronWindows } from '@src/lib/electron';\nimport { convertLanguageCodes } from '@src/lib/languages/languages';\nimport MultiSelectDropdown from '@src/components/Form/MultiSelectDropdown';\n\nexport interface Props {\n  preferences: Preferences;\n  features: Features;\n  isMobile?: boolean;\n  collapsedMobile?: boolean;\n}\n\nexport interface DispatchProps {\n  updateMe: (me: Me) => void;\n  updatePreferences: (preferences: Preferences) => void;\n  collapseLsb: (collapse: boolean) => void;\n}\n\ninterface State {\n  followUp: number;\n  selectedLanguages: string[];\n}\n\nclass Sending extends React.PureComponent<Props & DispatchProps, State> {\n  private attachmentTooltip: UpgradePrompt;\n  private linkTooltip: UpgradePrompt;\n  private sentFromPolymailTooltip: UpgradePrompt;\n  private debounced: any;\n\n  constructor(props: Props & DispatchProps) {\n    super();\n\n    this.debounced = debounce(\n      props.updatePreferences,\n      500,\n      );\n\n    this.state = {\n      followUp: props.preferences.followUp,\n      selectedLanguages: [],\n    };\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props & DispatchProps) {\n    if (nextProps !== this.props) {\n      this.setState({ followUp: nextProps.preferences.followUp });\n    }\n  }\n\n  componentDidMount() {\n      // check for debounced selected languages\n    this.handleCurrentSpellcheckerLanguages();\n  }\n\n  handleCurrentSpellcheckerLanguages = () => {\n    if (window.PMElectronBridge && window.PMElectronBridge.currentSpellcheckerLanguages) {\n      let lang: string [];\n\n      // sometimes the BrowserWindow is not ready yet and it could crash the app if not handled\n      try {\n        lang = window.PMElectronBridge.currentSpellcheckerLanguages();\n      } catch (e) {\n        lang = [];\n      }\n\n      this.setState({\n        selectedLanguages: lang,\n      });\n    }\n  }\n\n  handleToggle = (e: React.SyntheticEvent<HTMLElement>) => {\n    const { preferences, updatePreferences, features } = this.props;\n    const newPreferences = {};\n    const id = e.currentTarget.id;\n\n    if (id === 'cloudAttachments' && !features.cloudAttachments) {\n      return;\n    }\n\n    if (id === 'linkTracking' && !features.trackLinks) {\n      return;\n    }\n\n    // Disallow toggling of sentFromPolymail when on free plan\n    if (id === 'sentFromPolymail' && !features.disableSentFromPolymail) {\n      return;\n    }\n\n    if (id) {\n      newPreferences[id] = !preferences[id];\n      updatePreferences({\n        ...preferences,\n        ...newPreferences,\n      });\n    }\n  }\n\n  handleRemove = (value: string, index: number, id?: string) => {\n    switch (id) {\n      case 'spellcheck-language':\n        const selectedLanguageCode = this.getSortedLanguages()[index];\n        this.setState(\n          {\n            selectedLanguages: this.state.selectedLanguages\n              .filter(l => l !== selectedLanguageCode.code),\n          },\n          () => {\n            if (window.PMElectronBridge?.setSpellcheckerLanguages) {\n              window.PMElectronBridge.setSpellcheckerLanguages(this.state.selectedLanguages);\n            }\n          },\n        );\n        break;\n      default:\n        return;\n    }\n  }\n\n  handleSelect = (value: string, index: number, id?: string) => {\n    const { updatePreferences, preferences } = this.props;\n    const newPreferences = { ...preferences };\n\n    switch (id) {\n      case 'composeFontFamily':\n        newPreferences.composeFontFamily = WebSafeFonts[value] || '\\\\';\n        break;\n      case 'composeFontSize':\n        const pixelValue = WebFontSizeConversions[Number(value)] || 0;\n        newPreferences.composeFontSize = pixelValue && pixelValue || 0;\n        break;\n      case 'spellcheck-language':\n        const selectedLanguageCode = this.getSortedLanguages()[index];\n        const bridge = window.PMElectronBridge;\n        if (bridge) {\n          const { selectedLanguages } = this.state;\n          const newLanguages = uniq([\n            ...selectedLanguages,\n            selectedLanguageCode.code,\n          ]);\n          this.setState(\n            {\n              selectedLanguages: newLanguages,\n            },\n            () => {\n              if (bridge?.setSpellcheckerLanguages) {\n                bridge.setSpellcheckerLanguages(newLanguages);\n              }\n            },\n          );\n        }\n        break;\n      default:\n        break;\n    }\n\n    if (id && newPreferences[id] !== undefined) {\n      updatePreferences(newPreferences);\n    }\n  }\n\n  handleAttachmentRef = (ref: UpgradePrompt) => {\n    this.attachmentTooltip = ref;\n  }\n\n  handleLinkRef = (ref: UpgradePrompt) => {\n    this.linkTooltip = ref;\n  }\n\n  handleSentFromRef = (ref: UpgradePrompt) => {\n    this.sentFromPolymailTooltip = ref;\n  }\n\n  handleAttachmentTooltipShow = () => {\n    const { features } = this.props;\n    const showAttachmentUpgradePrompt = !features.cloudAttachments;\n\n    if (showAttachmentUpgradePrompt) {\n      this.attachmentTooltip.show();\n    }\n  }\n\n  handleLinkTooltipShow = () => {\n    const { features } = this.props;\n    const showLinkUpgradePrompt = !features.trackLinks;\n\n    if (showLinkUpgradePrompt) {\n      this.linkTooltip.show();\n    }\n  }\n\n  handleLinkTooltipHide = () => {\n    this.linkTooltip.hide();\n  }\n\n  handleSentFromTooltipShow = () => {\n    const { features } = this.props;\n    const showSentFromUpgradePrompt = !features.disableSentFromPolymail;\n\n    if (showSentFromUpgradePrompt) {\n      this.sentFromPolymailTooltip.show();\n    }\n  }\n\n  handleSentFromTooltipHide = () => {\n    this.sentFromPolymailTooltip.hide();\n  }\n\n  handleAttachmentTooltipHide = () => {\n    this.attachmentTooltip.hide();\n  }\n\n  handleFollowUpChange = (e: React.SyntheticEvent<HTMLInputElement>) => {\n    const { preferences } = this.props;\n\n    if (e.currentTarget.value !== undefined) {\n      const value = parseInt(e.currentTarget.value, 10);\n      if (value >= 1) {\n        this.setState(\n          { followUp: value * 24 * 60 * 60 },\n          () => {\n            this.debounced({\n              ...preferences,\n              followUp: this.state.followUp,\n            });\n          },\n        );\n      }\n    }\n  }\n\n  handleFollowUpToggle = () => {\n    const { updatePreferences, preferences } = this.props;\n    const DEFAULT_FOLLOW_UP_DAYS = 3 * 60 * 60 * 24;\n\n    updatePreferences({\n      ...preferences,\n      followUp: !!preferences.followUp ? 0 : DEFAULT_FOLLOW_UP_DAYS,\n    });\n  }\n\n  handleSharedDraftToggle = () => {\n    const { updatePreferences, preferences } = this.props;\n\n    updatePreferences({\n      ...preferences,\n      defaultShareDraft: !preferences.defaultShareDraft,\n    });\n  }\n\n  // Gets sorted available language\n  getSortedLanguages = () => {\n    // Setting spellchecker only works on Windows, so restricting this feature to Windows only\n    if (!isElectronWindows) {\n      return [];\n    }\n\n    // Set spellchecker language\n    const bridge = window.PMElectronBridge;\n\n    if (bridge && bridge.getSpellcheckerAvailableLanguages) {\n      const languages = compact(\n        convertLanguageCodes(bridge.getSpellcheckerAvailableLanguages())\n          .filter(l => !!l.value),\n      );\n      const sortedLanguages = sortBy(languages, 'value');\n      return sortedLanguages;\n    }\n\n    return [];\n  }\n\n  render() {\n    const { preferences, features } = this.props;\n    const { followUp, selectedLanguages } = this.state;\n    const attachmentDescriptionTooltip =\n      'To track when recipients download your attachments, upgrade to a paid plan.';\n    const linkDescriptionTooltip =\n      'To track when recipients click links sent in your emails, upgrade to a paid plan.';\n    const fontSizePixelValue = preferences.composeFontSize &&\n      matchFontPixelToPoint(preferences.composeFontSize);\n    const followUpOptionOn = !!Math.trunc(preferences.followUp / (60 * 60 * 24));\n\n    // Sent from Polymail preferences\n    // tslint:disable-next-line:max-line-length\n    const sentFromPolymailDescription = `Upgrade to a paid plan to disable \"Sent from Polymail\" from being added to the end of your messages`;\n    const sentFromPolymailPreference = preferences.sentFromPolymail || false;\n    const languages = this.getSortedLanguages();\n\n    return (\n      <div\n        className=\"settings-panel sending\"\n      >\n        <NavigationHeader\n          title=\"Sending\"\n          isMobile={this.props.isMobile}\n          collapsedMobile={this.props.collapsedMobile}\n          collapseLsb={this.props.collapseLsb}\n        />\n        <div className=\"main\">\n          <ToggleCell\n            title=\"Sent from Polymail\"\n            subtitle={`Add \"Sent from Polymail\" to the end of your messages`}\n            on={features.disableSentFromPolymail ? sentFromPolymailPreference : true}\n            onToggle={this.handleToggle}\n            toggleId=\"sentFromPolymail\"\n            tooltip={<UpgradePrompt\n              className=\"upgrade-tooltip\"\n              ref={this.handleSentFromRef}\n              title=\"Sent from Polymail\"\n              description={sentFromPolymailDescription}\n            />}\n            onTooltipShow={this.handleSentFromTooltipShow}\n            onTooltipHide={this.handleSentFromTooltipHide}\n          />\n          <ToggleCell\n            title=\"Enable message tracking\"\n            subtitle=\"Tracks when recipients read your sent messages.\"\n            on={!preferences.disableTrackByDefault}\n            onToggle={this.handleToggle}\n            toggleId=\"disableTrackByDefault\"\n          />\n          <ToggleCell\n            title=\"Enable attachment tracking\"\n            subtitle={'Tracks when recipients download your sent attachments. ' +\n              'Enables cloud attachments.'}\n            on={features.cloudAttachments ? preferences.cloudAttachments : false}\n            onToggle={this.handleToggle}\n            toggleId=\"cloudAttachments\"\n            tooltip={<UpgradePrompt\n              className=\"upgrade-tooltip\"\n              ref={this.handleAttachmentRef}\n              title=\"Attachment tracking\"\n              description={attachmentDescriptionTooltip}\n            />}\n            onTooltipShow={this.handleAttachmentTooltipShow}\n            onTooltipHide={this.handleAttachmentTooltipHide}\n          />\n          <ToggleCell\n            title=\"Enable link tracking\"\n            subtitle=\"Tracks when recipients click links in your sent messages.\"\n            on={features.trackLinks ? preferences.linkTracking : false}\n            onToggle={this.handleToggle}\n            toggleId=\"linkTracking\"\n            tooltip={<UpgradePrompt\n              className=\"upgrade-tooltip\"\n              ref={this.handleLinkRef}\n              title=\"Link Tracking\"\n              description={linkDescriptionTooltip}\n            />}\n            onTooltipShow={this.handleLinkTooltipShow}\n            onTooltipHide={this.handleLinkTooltipHide}\n          />\n          {false && <ToggleCell\n            title=\"Undo send\"\n            subtitle=\"Allows you to unsend a message for a few seconds after sending.\"\n            on={preferences.disableTrackByDefault}\n            onToggle={this.handleToggle}\n          />}\n          <ToggleCell\n            title=\"Automatically archive after sending\"\n            subtitle={IS_MAC ? 'You can still use ⌘ + ⌥ + Enter to send without archiving.' : 'You can still use ctrl + alt + Enter to send without archiving.'}\n            on={preferences.sendAndArchive}\n            onToggle={this.handleToggle}\n            toggleId=\"sendAndArchive\"\n          />\n          <ToggleCell\n            title=\"Cancel Scheduled Emails on Reply\"\n            subtitle=\"Don't send a scheduled email if you received a reply before the scheduled date.\"\n            on={preferences.cancelOnReply}\n            onToggle={this.handleToggle}\n            toggleId=\"cancelOnReply\"\n          />\n          <div className=\"follow-up\">\n            <ToggleCell\n              title=\"Send with Follow Up Reminder automatically\"\n              subtitle=\"You can change or remove this before sending each message.\"\n              on={followUpOptionOn}\n              onToggle={this.handleFollowUpToggle}\n              toggleId=\"followUp\"\n            />\n            {followUpOptionOn && <div className=\"follow-up-days\">\n              <span>Remind me if no one replies</span>\n              <input\n                dir=\"auto\"\n                type=\"number\"\n                value={Math.trunc(followUp / (60 * 60 * 24)).toString()}\n                onChange={this.handleFollowUpChange}\n              />\n              <span>days after sending</span>\n            </div>}\n          </div>\n          <ToggleCell\n            title=\"Show Drafts on Shared Conversations\"\n            subtitle=\"Allow your drafts to be seen on conversation's you've shared\"\n            on={preferences.defaultShareDraft || false}\n            onToggle={this.handleSharedDraftToggle}\n            toggleId=\"defaultShareDraft\"\n          />\n          <ToggleCell\n            title=\"Link Previews\"\n            subtitle=\"Turn web links into visual previews of the webpage content.\"\n            on={!preferences.disableLinkPreviews}\n            onToggle={this.handleToggle}\n            toggleId=\"disableLinkPreviews\"\n          />\n          <div className=\"link-preview\">\n            <div className=\"link\">\n              www.twitter.com\n          </div>\n            <LongRightArrow className=\"icon\" />\n            <div className=\"preview\">\n              <div className=\"image\" />\n              <div className=\"right-column\">\n                <h4 className=\"title\">Twitter</h4>\n                <h5 className=\"subtitle\">From breaking news and enter…</h5>\n              </div>\n            </div>\n          </div>\n          {!!languages.length && (\n            <div className=\"language\">\n              <div className=\"title\">Spellcheck</div>\n              <h5 className=\"subtitle\">\n                Choose the languages for Polymail to spellcheck as you type.\n              </h5>\n              <MultiSelectDropdown\n                onSelect={this.handleSelect}\n                onRemove={this.handleRemove}\n                values={this.getSortedLanguages().map(l => l.value)}\n                selectedValues={convertLanguageCodes(selectedLanguages).map(l => l.value)}\n                readOnly={false}\n                typeahead\n                id=\"spellcheck-language\"\n              />\n            </div>\n          )}\n          <div className=\"fonts\">\n            <h4 className=\"title\">Compose font</h4>\n            <div className=\"font-style\">\n              <Dropdown\n                onSelect={this.handleSelect}\n                values={Object.keys(WebSafeFonts)}\n                startIndex={values(WebSafeFonts).indexOf(preferences.composeFontFamily)}\n                readOnly={false}\n                typeahead\n                id=\"composeFontFamily\"\n              />\n              <Dropdown\n                onSelect={this.handleSelect}\n                values={['Default'].concat(WebFontSizes.map(size => size.toString()))}\n                startIndex={fontSizePixelValue && WebFontSizes.indexOf(fontSizePixelValue) + 1 || 0}\n                id=\"composeFontSize\"\n              />\n            </div>\n            <div\n              className=\"preview\"\n              style={{\n                fontFamily: preferences.composeFontFamily !== '\\\\' ?\n                  preferences.composeFontFamily : undefined,\n                fontSize: preferences.composeFontSize !== 0 ?\n                  preferences.composeFontSize + 'px'\n                  : undefined,\n              }}\n            >\n              This is what your message font will look like.\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Sending;\n"]}]}