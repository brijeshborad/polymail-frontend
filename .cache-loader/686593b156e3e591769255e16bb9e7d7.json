{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/log_worker.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/log_worker.ts","mtime":1675280254065},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgTG9nRGV2aWNlLCBMb2dPcywgTG9nc0NsaWVudCwgbW9ja0xvZ3NDbGllbnQgfSBmcm9tICcuLi9hcGkvbG9nJzsKdmFyIGFwaSA9IHByb2Nlc3MuZW52LkpFU1QgPT09ICd0cnVlJyA/IG1vY2tMb2dzQ2xpZW50KCkgOiBuZXcgTG9nc0NsaWVudCgpOwpleHBvcnQgZnVuY3Rpb24gcmVjb3JkTG9nV29ya2VyKGxldmVsLCBtZXNzYWdlLCBwcm9wZXJ0aWVzKSB7CiAgICB2YXIgbG9nID0gewogICAgICAgIGxldmVsOiBsZXZlbCwKICAgICAgICBtZXNzYWdlOiBtZXNzYWdlLAogICAgICAgIHByb3BlcnRpZXM6IHByb3BlcnRpZXMsCiAgICAgICAgY3JlYXRlZDogbmV3IERhdGUoKSwKICAgICAgICBvczogTG9nT3MuV2ViLAogICAgICAgIGRldmljZTogTG9nRGV2aWNlLkRlc2t0b3AsCiAgICB9OwogICAgYXBpLnJlY29yZExvZyhsb2cpLnN1YnNjcmliZSh7CiAgICAgICAgZXJyb3I6IGZ1bmN0aW9uIChlKSB7CiAgICAgICAgICAgIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpuby1jb25zb2xlCiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZSk7CiAgICAgICAgfSwKICAgIH0pOwp9Cg=="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/log_worker.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/log_worker.ts"],"names":[],"mappings":"AAAA,OAAO,EAAO,SAAS,EAAY,KAAK,EAAE,UAAU,EAAE,cAAc,EAAE,MAAM,YAAY,CAAC;AAEzF,IAAM,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,KAAK,MAAM,CAAC,CAAC,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,IAAI,UAAU,EAAE,CAAC;AAQ9E,MAAM,UAAU,eAAe,CAC7B,KAAe,EACf,OAAe,EACf,UAAwC;IAExC,IAAM,GAAG,GAAQ;QACf,KAAK,OAAA;QACL,OAAO,SAAA;QACP,UAAU,YAAA;QACV,OAAO,EAAE,IAAI,IAAI,EAAE;QACnB,EAAE,EAAE,KAAK,CAAC,GAAG;QACb,MAAM,EAAE,SAAS,CAAC,OAAO;KAC1B,CAAC;IAEF,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC;QAC3B,KAAK,EAAE,UAAC,CAAC;YACP,sCAAsC;YACtC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACnB,CAAC;KACF,CAAC,CAAC;AACL,CAAC","sourcesContent":["import { Log, LogDevice, LogLevel, LogOs, LogsClient, mockLogsClient } from '../api/log';\n\nconst api = process.env.JEST === 'true' ? mockLogsClient() : new LogsClient();\n\nexport type recordLogFunc = (\n  level: LogLevel,\n  message: string,\n  properties?: { [property: string]: any },\n) => void;\n\nexport function recordLogWorker(\n  level: LogLevel,\n  message: string,\n  properties?: { [property: string]: any },\n) {\n  const log: Log = {\n    level,\n    message,\n    properties,\n    created: new Date(),\n    os: LogOs.Web,\n    device: LogDevice.Desktop,\n  };\n\n  api.recordLog(log).subscribe({\n    error: (e) => {\n      // tslint:disable-next-line:no-console\n      console.error(e);\n    },\n  });\n}\n"]}]}