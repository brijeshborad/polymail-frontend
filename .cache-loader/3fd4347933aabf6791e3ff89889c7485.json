{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Integrations/routes/Asana/index.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Integrations/routes/Asana/index.tsx","mtime":1675280254102},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4JzsKaW1wb3J0IEFzYW5hIGZyb20gJy4vQXNhbmEnOwppbXBvcnQgeyBpbnRlZ3JhdGlvbkFzYW5hTG9naW4sIHNlbGVjdEFzYW5hSW50ZWdyYXRpb24sIGludGVncmF0aW9uQXNhbmFMb2dvdXQsIGludGVncmF0aW9uTGlzdCwgaW50ZWdyYXRpb25Bc2FuYVVwZGF0ZSwgfSBmcm9tICdAc3JjL2R1Y2tzL2ludGVncmF0aW9ucyc7CmltcG9ydCB7IHNlbGVjdFRlYW0gfSBmcm9tICdAc3JjL2R1Y2tzL3RlYW0nOwppbXBvcnQgeyB3aXRoUm91dGVyIH0gZnJvbSAncmVhY3Qtcm91dGVyJzsKaW1wb3J0IHsgYXNhbmFXb3Jrc3BhY2VMaXN0IH0gZnJvbSAnQHNyYy9kdWNrcy9hc2FuYSc7CnZhciBtYXBTdGF0ZVRvUHJvcHMgPSBmdW5jdGlvbiAoc3RhdGUsIG93blByb3BzKSB7CiAgICB2YXIgc2VhcmNoID0gbmV3IFVSTFNlYXJjaFBhcmFtcyhvd25Qcm9wcy5sb2NhdGlvbi5zZWFyY2gpOwogICAgcmV0dXJuIHsKICAgICAgICBhc2FuYUludGVncmF0aW9uOiBzZWxlY3RBc2FuYUludGVncmF0aW9uKHN0YXRlKSwKICAgICAgICB0ZWFtOiBzZWxlY3RUZWFtKHN0YXRlKSwKICAgICAgICByZWZyZXNoSW50ZWdyYXRpb25zOiAhIXNlYXJjaC5nZXQoJ2ludGVncmF0aW9uUmVmcmVzaCcpLAogICAgICAgIHdvcmtzcGFjZXM6IHN0YXRlLmFzYW5hLndvcmtzcGFjZXMuZGF0YSB8fCBbXSwKICAgIH07Cn07CnZhciBtYXBEaXNwYXRjaFRvUHJvcHMgPSBmdW5jdGlvbiAoZGlzcGF0Y2gpIHsgcmV0dXJuICh7CiAgICBsb2dpbkFzYW5hOiBmdW5jdGlvbiAodGVhbUlkKSB7IHJldHVybiBkaXNwYXRjaChpbnRlZ3JhdGlvbkFzYW5hTG9naW4odGVhbUlkKSk7IH0sCiAgICBsb2dvdXRBc2FuYTogZnVuY3Rpb24gKCkgeyByZXR1cm4gZGlzcGF0Y2goaW50ZWdyYXRpb25Bc2FuYUxvZ291dChudWxsKSk7IH0sCiAgICBsaXN0SW50ZWdyYXRpb25zOiBmdW5jdGlvbiAoKSB7IHJldHVybiBkaXNwYXRjaChpbnRlZ3JhdGlvbkxpc3QobnVsbCkpOyB9LAogICAgdXBkYXRlQXNhbmE6IGZ1bmN0aW9uICh3b3Jrc3BhY2UpIHsgcmV0dXJuIGRpc3BhdGNoKGludGVncmF0aW9uQXNhbmFVcGRhdGUod29ya3NwYWNlKSk7IH0sCiAgICBsaXN0V29ya3NwYWNlczogZnVuY3Rpb24gKCkgeyByZXR1cm4gZGlzcGF0Y2goYXNhbmFXb3Jrc3BhY2VMaXN0KG51bGwpKTsgfSwKfSk7IH07CmV4cG9ydCBkZWZhdWx0IHdpdGhSb3V0ZXIoY29ubmVjdChtYXBTdGF0ZVRvUHJvcHMsIG1hcERpc3BhdGNoVG9Qcm9wcykoQXNhbmEpKTsK"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Integrations/routes/Asana/index.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Integrations/routes/Asana/index.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAY,MAAM,aAAa,CAAC;AAGhD,OAAO,KAAoC,MAAM,SAAS,CAAC;AAC3D,OAAO,EACL,qBAAqB,EACrB,sBAAsB,EACtB,sBAAsB,EACtB,eAAe,EACf,sBAAsB,GACvB,MAAM,yBAAyB,CAAC;AACjC,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAC;AAC7C,OAAO,EAAE,UAAU,EAAuB,MAAM,cAAc,CAAC;AAC/D,OAAO,EAAE,kBAAkB,EAAE,MAAM,kBAAkB,CAAC;AAEtD,IAAM,eAAe,GAAG,UAAC,KAAiB,EAAE,QAAkC;IAC5E,IAAM,MAAM,GAAG,IAAI,eAAe,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IAE7D,OAAO;QACL,gBAAgB,EAAE,sBAAsB,CAAC,KAAK,CAAC;QAC/C,IAAI,EAAE,UAAU,CAAC,KAAK,CAAC;QACvB,mBAAmB,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,oBAAoB,CAAC;QACvD,UAAU,EAAE,KAAK,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,IAAI,EAAE;KAC9C,CAAC;AACJ,CAAC,CAAC;AAEF,IAAM,kBAAkB,GAAG,UAAC,QAA8B,IAAoB,OAAA,CAAC;IAC7E,UAAU,EAAE,UAAC,MAAc,IAAK,OAAA,QAAQ,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC,EAAvC,CAAuC;IACvE,WAAW,EAAE,cAAM,OAAA,QAAQ,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC,EAAtC,CAAsC;IACzD,gBAAgB,EAAE,cAAM,OAAA,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,EAA/B,CAA+B;IACvD,WAAW,EAAE,UAAC,SAAiB,IAAK,OAAA,QAAQ,CAAC,sBAAsB,CAAC,SAAS,CAAC,CAAC,EAA3C,CAA2C;IAC/E,cAAc,EAAE,cAAM,OAAA,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,EAAlC,CAAkC;CACzD,CAAC,EAN4E,CAM5E,CAAC;AAEH,eAAe,UAAU,CACvB,OAAO,CAA4B,eAAe,EAAE,kBAAkB,CAAC,CAAC,KAAK,CAAC,CAC/E,CAAC","sourcesContent":["import { connect, Dispatch } from 'react-redux';\n\nimport { StoreState } from '@src/types';\nimport Asana, { StateProps, DispatchProps } from './Asana';\nimport {\n  integrationAsanaLogin,\n  selectAsanaIntegration,\n  integrationAsanaLogout,\n  integrationList,\n  integrationAsanaUpdate,\n} from '@src/ducks/integrations';\nimport { selectTeam } from '@src/ducks/team';\nimport { withRouter, RouteComponentProps } from 'react-router';\nimport { asanaWorkspaceList } from '@src/ducks/asana';\n\nconst mapStateToProps = (state: StoreState, ownProps: RouteComponentProps<any>): StateProps => {\n  const search = new URLSearchParams(ownProps.location.search);\n\n  return {\n    asanaIntegration: selectAsanaIntegration(state),\n    team: selectTeam(state),\n    refreshIntegrations: !!search.get('integrationRefresh'),\n    workspaces: state.asana.workspaces.data || [],\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<StoreState>): DispatchProps => ({\n  loginAsana: (teamId: string) => dispatch(integrationAsanaLogin(teamId)),\n  logoutAsana: () => dispatch(integrationAsanaLogout(null)),\n  listIntegrations: () => dispatch(integrationList(null)),\n  updateAsana: (workspace: string) => dispatch(integrationAsanaUpdate(workspace)),\n  listWorkspaces: () => dispatch(asanaWorkspaceList(null)),\n});\n\nexport default withRouter(\n  connect<StateProps, DispatchProps>(mapStateToProps, mapDispatchToProps)(Asana),\n);\n"]}]}