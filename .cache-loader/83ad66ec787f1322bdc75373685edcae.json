{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Threads/components/ThreadList/components/InfiniteThreadList/ThreadCell/ThreadCell.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Threads/components/ThreadList/components/InfiniteThreadList/ThreadCell/ThreadCell.tsx","mtime":1675280254117},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Threads/components/ThreadList/components/InfiniteThreadList/ThreadCell/ThreadCell.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Threads/components/ThreadList/components/InfiniteThreadList/ThreadCell/ThreadCell.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport moment from 'moment';\nimport { last, indexOf } from 'lodash';\nimport { DraggableCore, DraggableData } from 'react-draggable';\nimport { showMostRecent, TOOLTIP_FORMAT } from '@src/lib/datetime';\nimport { getDisplayName, getFirstName } from '@src/lib/address';\nimport { isElectron } from '@src/lib/electron';\n\nimport './ThreadCell.scss';\nimport {\n  Thread,\n  ThreadActionColor,\n  Message,\n  ContactNote,\n  Contact,\n  Track as TrackType,\n  Resource,\n  ResourceStatus,\n  Commit,\n  Me,\n  ContactType,\n  Features,\n  Swipe,\n  TeamMember,\n} from '@src/types';\nimport {\n  SharedThread,\n} from '@src/types/sharedThreads';\nimport TrackingPopover from '@src/routes/Threads/components/TrackingPopover';\nimport Archive from '@src/components/Icons/Archive.svg';\nimport List from '@src/components/Icons/Label.svg';\nimport Snooze from '@src/components/Icons/Clock.svg';\nimport Trash from '@src/components/Icons/Trash.svg';\nimport Star from '@src/components/Icons/Star.svg';\nimport Track from '@src/components/Icons/Track.svg';\nimport FollowUp from '@src/components/Icons/FollowUp.svg';\nimport Unread from '@src/components/Icons/Unread.svg';\nimport Attachment from '@src/components/Icons/Attachment.svg';\nimport Inbox from '@src/components/Icons/Inbox.svg';\nimport Contacts from '@src/components/Icons/Contacts.svg';\nimport { getFollowUpReminderDisplayString } from '@src/lib/thread';\nimport { captureMessage, withScope } from '@sentry/browser';\n\nexport interface Props {\n  thread: Thread;\n  selected: boolean;\n  note?: ContactNote;\n  resetCounter?: number;\n\n  actionToPerform?: Commit;\n  onClick: (e: React.MouseEvent<HTMLElement>, thread: Thread) => void;\n  onThreadMove: (thread: Thread, action: Swipe) => void;\n  onAnimationComplete: (id: string) => void;\n}\n\nexport interface StateProps {\n  features: Features;\n  actions: Swipe[];\n  sender?: Contact;\n  track?: Resource<TrackType>;\n  me?: Me;\n  cellWidth: number;\n  sharedThread?: SharedThread;\n  member?: TeamMember;\n  compact?: boolean;\n}\n\nexport interface DispatchProps {\n  fetchTrack: (threadId: string, messageId: string) => void;\n  getContact: (email: string) => void;\n}\n\ninterface State {\n  initialX: number;\n  x: number;\n  disableAnimation: boolean;\n  action?: Swipe;\n  completed?: boolean;\n}\n\nconst ACTION_PROPERTIES = {\n  archive: {\n    color: ThreadActionColor.Archive,\n    icon: Archive,\n  },\n  list: {\n    color: ThreadActionColor.List,\n    icon: List,\n  },\n  later: {\n    color: ThreadActionColor.Snooze,\n    icon: Snooze,\n  },\n  trash: {\n    color: ThreadActionColor.Trash,\n    icon: Trash,\n  },\n  spam: {\n    color: ThreadActionColor.Trash,\n    icon: Trash,\n  },\n  inbox: {\n    color: ThreadActionColor.Inbox,\n    icon: Inbox,\n  },\n  unread: {\n    color: ThreadActionColor.Unread,\n    icon: Unread,\n  },\n  star: {\n    color: ThreadActionColor.Star,\n    icon: Star,\n  },\n  none: {\n    color: ThreadActionColor.None,\n    icon: undefined,\n  },\n};\n\nconst ICON_SIZE = 20;\nconst ICON_MARGIN = 18;\nconst START_LEFT = -1 * (ICON_SIZE + 40);\n\n// HTML ID used for ThreadCell\nexport const threadCellIdentifier = (resourceId: string) => {\n  return `pm-thread-${resourceId}`;\n};\n\nenum SwipePhase {\n  Swiping = 'Swiping',\n  Completed = 'Completed',\n  None = 'None',\n}\n\nclass ThreadCell extends React.PureComponent<Props & StateProps & DispatchProps, State> {\n  private timeout: NodeJS.Timer;\n  private popover: TrackingPopover;\n  private swipePhase: SwipePhase = SwipePhase.None;\n  private tracking: boolean;\n\n  constructor() {\n    super();\n\n    this.state = {\n      initialX: 0,\n      x: START_LEFT,\n      disableAnimation: false,\n    };\n  }\n\n  componentDidMount() {\n    const { sender, getContact, thread, cellWidth } = this.props;\n\n    if (sender && sender.type === ContactType.Default && !this.props.compact) {\n      getContact(last(thread.messages)!.from);\n    }\n\n    if (this.props.actionToPerform) {\n      // Handle dismissal immediately if flags have changed\n      if (!this.props.actionToPerform.payload.box) {\n        this.props.onAnimationComplete(this.props.thread.id);\n      }\n\n      const match = indexOf(this.props.actions, this.props.actionToPerform.payload.box);\n\n      let x = this.state.initialX;\n\n      switch (match) {\n        case 0:\n        case 1:\n          x = cellWidth;\n          break;\n        case 2:\n        case 3:\n          x = -cellWidth;\n          break;\n        default:\n          x = cellWidth;\n          break;\n      }\n\n      // TODO(SHIN): Figure out non-settimeout way to perform animation\n      this.setState({\n        action: this.props.actionToPerform.payload.box,\n        x,\n        completed: true,\n      });\n      const actionThread = this.props.thread;\n      this.timeout = global.setTimeout(\n        () => this.props.onAnimationComplete(actionThread.id),\n        600,\n      );\n    }\n\n    // Set swipe listeners if Electron\n    if (isElectron) {\n      window.addEventListener('scroll-touch-end', this.handleScrollStop);\n      window.addEventListener('scroll-touch-begin', this.handleScrollTouchBegin);\n    }\n  }\n\n  // Immediately process animation complete if cell was unmounted due to\n  // (history event before animation completion on send and archive)\n  componentWillUnmount() {\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n    }\n\n    if (this.props.actionToPerform &&\n      this.props.actionToPerform.payload &&\n      this.props.actionToPerform.payload.box\n    ) {\n      this.props.onAnimationComplete(this.props.thread.id);\n    }\n\n    // Remove swipe listeners if electron\n    if (isElectron) {\n      window.removeEventListener('scroll-touch-end', this.handleScrollStop);\n      window.removeEventListener('scroll-touch-begin', this.handleScrollTouchBegin);\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props & StateProps & DispatchProps) {\n    const { thread, sender, getContact, resetCounter, cellWidth } = nextProps;\n    const { completed } = this.state;\n\n    // Handles resetting animations if necessary\n    if (resetCounter !== this.props.resetCounter && !completed) {\n      this.swipePhase = SwipePhase.None;\n      this.setState({\n        initialX: 0,\n        x: START_LEFT,\n        disableAnimation: false,\n        action: undefined,\n      });\n    }\n\n    if (sender && thread.messages !== this.props.thread.messages\n      && sender.type === ContactType.Default && !this.props.compact) {\n      getContact(last(thread.messages)!.from);\n    }\n\n    // If new action passed in, then animate and perform action\n    if (nextProps.actionToPerform && nextProps.actionToPerform !== this.props.actionToPerform) {\n      // Handle dismissal immediately if flags have changed\n      if (!nextProps.actionToPerform.payload.box) {\n        nextProps.onAnimationComplete(this.props.thread.id);\n      }\n\n      const match = indexOf(nextProps.actions, nextProps.actionToPerform.payload.box);\n\n      let x = this.state.initialX;\n\n      switch (match) {\n        case 0:\n        case 1:\n          x = cellWidth;\n          break;\n        case 2:\n        case 3:\n          x = -cellWidth;\n          break;\n        default:\n          x = cellWidth;\n          break;\n      }\n\n      // TODO(SHIN): Figure out non-settimeout way to perform animation\n      this.setState({\n        action: nextProps.actionToPerform.payload.box,\n        x,\n        completed: true,\n      });\n      const actionThread = this.props.thread;\n      this.timeout = global.setTimeout(\n        () => nextProps.onAnimationComplete(actionThread.id),\n        600,\n      );\n    }\n  }\n\n  getActionFromPosition = (x: number) => {\n    let action;\n    const { actions } = this.props;\n    const lowerThreshold = 70;\n    const upperThreshold = 160;\n\n    if (x < START_LEFT && x < upperThreshold * -1 + START_LEFT) {\n      action = actions[2];\n    } else if (x < START_LEFT && x < lowerThreshold * -1 + START_LEFT) {\n      action = actions[3];\n    } else if (x > START_LEFT && x > upperThreshold + START_LEFT) {\n      action = actions[1];\n    } else if (x > START_LEFT && x > lowerThreshold + START_LEFT) {\n      action = actions[0];\n    }\n\n    return action;\n  }\n\n  getMotionStopPosition = (x: number) => {\n    const { cellWidth } = this.props;\n    let lastPosition = START_LEFT;\n    const threshold = 70;\n\n    if (x < START_LEFT && x < threshold * -1 + START_LEFT) {\n      lastPosition = (cellWidth + (ICON_SIZE * 2) + ICON_MARGIN) * -1;\n    } else if (x > START_LEFT && x > threshold + START_LEFT) {\n      lastPosition = cellWidth;\n    }\n\n    return lastPosition;\n  }\n\n  handleDragStart = (e: MouseEvent, data: DraggableData) => {\n    this.setState({ initialX: data.x, disableAnimation: true });\n  }\n\n  handleDrag = (e: MouseEvent, data: DraggableData) => {\n    const dragX = data.x + START_LEFT - this.state.initialX;\n\n    // Handle scroll preventions\n    if (!this.shouldSwipeLeft() && dragX < START_LEFT) {\n      return;\n    }\n    if (!this.shouldSwipeRight() && dragX > START_LEFT) {\n      return;\n    }\n\n    this.setState({\n      x: dragX,\n      action: this.getActionFromPosition(dragX),\n    });\n  }\n\n  handleDragStop = (e: MouseEvent, data: DraggableData) => {\n    const dragX = data.x + START_LEFT - this.state.initialX;\n    const { action } = this.state;\n    let completed: boolean | undefined;\n\n    switch (action) {\n      case Swipe.Archive:\n      case Swipe.Inbox:\n      case Swipe.Trash:\n        completed = true;\n        break;\n      default:\n        break;\n    }\n\n    // Handle reset if setting to None value\n    let stopPosition = this.getMotionStopPosition(dragX);\n    if (!action || action === Swipe.None) {\n      stopPosition = START_LEFT;\n    }\n\n    if (action) {\n      this.swipePhase = SwipePhase.Completed;\n    }\n\n    this.setState({\n      x: stopPosition,\n      disableAnimation: false,\n      completed,\n    });\n\n    // Handle Action\n    if (action) {\n      this.props.onThreadMove(this.props.thread, action);\n    }\n  }\n\n  handleScrollTouchBegin = () => {\n    this.tracking = true;\n  }\n\n  handleScrollStop = () => {\n    const { action } = this.state;\n    this.tracking = false;\n\n    this.setState({\n      x: this.getMotionStopPosition(this.state.x),\n      disableAnimation: false,\n    });\n\n    if (this.swipePhase !== SwipePhase.Swiping) {\n      return;\n    }\n\n    const dragX = this.state.x + START_LEFT - this.state.initialX;\n    let completed: boolean | undefined;\n    if (action) {\n      this.swipePhase = SwipePhase.Completed;\n    }\n\n    switch (action) {\n      case Swipe.Archive:\n      case Swipe.Inbox:\n      case Swipe.Trash:\n        completed = true;\n        break;\n      default:\n        break;\n    }\n\n    // Handle reset if setting to None value\n    let stopPosition = this.getMotionStopPosition(dragX);\n    if (!action || action === Swipe.None) {\n      stopPosition = START_LEFT;\n    }\n\n    this.setState({\n      x: stopPosition,\n      disableAnimation: false,\n      completed,\n    });\n\n    // Handle Action\n    if (action) {\n      this.props.onThreadMove(this.props.thread, action);\n    }\n  }\n\n  handleScroll = (e: any) => {\n    const delta = (e.deltaX / 3);\n    const deltaWithSettings = window.PMElectronBridge && window.PMElectronBridge.swipeInverted\n      ? -delta\n      : delta;\n    const x = this.state.x + deltaWithSettings;\n\n    // Ignore y-axis scrolls\n    if (Math.abs(e.deltaY) > Math.abs(e.deltaX)) {\n      return;\n    }\n\n    // Handle scroll preventions\n    if (!this.shouldSwipeLeft() && x < START_LEFT) {\n      return;\n    }\n    if (!this.shouldSwipeRight() && x > START_LEFT) {\n      return;\n    }\n\n    if (this.swipePhase === SwipePhase.None) {\n      this.swipePhase = SwipePhase.Swiping;\n    }\n\n    if (this.swipePhase === SwipePhase.Completed || !this.tracking) {\n      e.preventDefault();\n      e.stopPropagation();\n      return;\n    }\n\n    this.setState({\n      x,\n      disableAnimation: true,\n      action: this.getActionFromPosition(x),\n    });\n  }\n\n  handleTrackEnter = () => {\n    const { thread, track, fetchTrack } = this.props;\n\n    const trackNumberMismatch = track && track.data &&\n      Object.keys(track.data.actions).length !== thread.tracks;\n    const noTrackRetrieved = !!thread.tracks && !track;\n\n    if (trackNumberMismatch || noTrackRetrieved) {\n      const lastSent = last(thread.messages.filter((message: Message) => message.sent));\n      fetchTrack(thread.id, lastSent!.id);\n    }\n\n    if (thread.tracked) {\n      this.popover.show();\n    }\n  }\n\n  handleTrackLeave = () => {\n    const { thread } = this.props;\n\n    if (thread.tracked) {\n      this.popover.hide();\n    }\n  }\n\n  handleRef = (ref: TrackingPopover) => {\n    this.popover = ref;\n  }\n\n  handleClick = (e: React.MouseEvent<HTMLElement>) => {\n    return this.props.onClick(e, this.props.thread);\n  }\n\n  shouldSwipeLeft = (): boolean => {\n    const { actions } = this.props;\n    return !(actions[2] === Swipe.None && actions[3] === Swipe.None);\n  }\n\n  shouldSwipeRight = (): boolean => {\n    const { actions } = this.props;\n    return !(actions[0] === Swipe.None && actions[1] === Swipe.None);\n  }\n\n  render() {\n    const {\n      thread, actions, selected, track, me,\n      features, sharedThread, member, compact,\n    } = this.props;\n    const { x, disableAnimation, action, completed } = this.state;\n    const { messages, subject, snippet, starred } = thread;\n    const backgroundColor = action ? ACTION_PROPERTIES[action].color : 'transparent';\n    const hideCell = !!(!disableAnimation && action && completed);\n    const LeftIcon = action && actions\n      && ACTION_PROPERTIES[action].icon || Archive;\n    const RightIcon = action && actions\n      && ACTION_PROPERTIES[action].icon || Snooze;\n    const lastMessage: Message | undefined = last(messages);\n    const lastSent = lastMessage && lastMessage.internal;\n    const recipients = lastMessage\n      && lastMessage.to.concat(lastMessage.cc).concat(lastMessage.bcc) || [];\n\n    // Recipients\n    let recipientString = '';\n    const maxNameCount = 3;\n    if (recipients.length === 1) {\n      recipientString = getFirstName(recipients[0], me);\n    } else if (recipients.length <= maxNameCount) {\n      recipientString = recipients.map(recipient => getFirstName(recipient, me)).join(', ');\n    } else if (recipients.length > maxNameCount) {\n      const nameString = recipients\n        .slice(0, maxNameCount)\n        .map(recipient => getFirstName(recipient, me)).join(', ');\n      const otherCount = recipients.length - maxNameCount;\n      const otherString = otherCount === 1 ? 'other' : 'others';\n      recipientString = nameString + ` & ${otherCount} ` + otherString;\n    }\n\n    // Set participants\n    let participantsString = ``;\n    if (lastMessage) {\n      participantsString = getDisplayName(lastMessage.from, me);\n      if (lastMessage.sent || recipients.length > 1) {\n        participantsString = getFirstName(lastMessage.from, me);\n        participantsString += ` to ${recipientString}`;\n      }\n    }\n\n    const now = new Date();\n    const followUp = getFollowUpReminderDisplayString(thread);\n\n    let note;\n    let readLater;\n\n    if (!followUp) {\n      // Log weird edgecase that should never happen\n      if (!thread.box) {\n        withScope((scope) => {\n          scope.setExtra('thread', thread);\n          captureMessage('Got a thread with no box in ThreadCell');\n          // tslint:disable-next-line: no-console\n          console.error('Got a thread with no box in ThreadCell', thread);\n        });\n      }\n\n      readLater = thread.box.valueOf() === Swipe.Later && thread.when ?\n        moment(thread.when).format(\n          now.getFullYear() === thread.when.getFullYear() ?\n          'ddd, MMM D [at] h:mm a' : 'ddd, MMM D YYYY [at] h:mm a',\n        ) : undefined;\n    }\n\n    if (!readLater && !followUp) {\n      note = this.props.note;\n    }\n\n    const showBody = !readLater && !followUp && !note;\n    const readLaterTriggered = thread.when ? thread.when <= now : false;\n    const followUpTriggered = thread.waiting ? thread.waiting.when <= now : false;\n    const showUnread = !thread.read || readLaterTriggered || followUpTriggered;\n    const maxTouchPoints = navigator.msMaxTouchPoints || navigator.maxTouchPoints || 0;\n    const disableDraggable = maxTouchPoints > 0;\n    const detailedLastSent = lastSent && moment(lastSent).format(TOOLTIP_FORMAT) || '';\n\n    // HACK(SHIN): HTML ID used to check if ThreadCell is rendered in DOM\n    // HACK(SHIN): Turn off draggableCore enableUserSelectHack prop because composer\n    // cursor selection gets lost on unmount.\n    // https://github.com/mzabriskie/react-draggable/issues/315\n    return (\n      <div\n        id={threadCellIdentifier(thread.id)}\n        className={classnames('thread-cell', {\n          hide: hideCell,\n          selected,\n          compact,\n          unread: !thread.read,\n          'read-later': !!readLaterTriggered,\n          'follow-up': !!followUpTriggered,\n        })}\n        style={{ backgroundColor }}\n        onWheel={isElectron ? this.handleScroll : undefined}\n        tabIndex={-1}\n      >\n        <DraggableCore\n          onStart={this.handleDragStart}\n          onDrag={this.handleDrag}\n          onStop={this.handleDragStop}\n          enableUserSelectHack={false}\n          disabled={disableDraggable}\n        >\n          <div\n            className={classnames('cell-container', {\n              animate: !disableAnimation,\n              'performing-action': !!action,\n            })}\n            style={{ left: x }}\n          >\n            <LeftIcon\n              className=\"icon\"\n              height={`${ICON_SIZE}px`}\n              width={`${ICON_SIZE}px`}\n            />\n            <button className=\"cell\" onClick={this.handleClick}>\n              {starred && <Star className=\"star-icon\" />}\n              <div className=\"top-row\">\n                {!this.props.compact && this.props.sender &&\n                  <img className=\"avatar\"src={this.props.sender.photoUrl}/>\n                }\n                <small>{participantsString}</small>\n                <div className=\"desc\">\n                  {messages.length > 1 && <small>{messages.length}</small>}\n                  {messages.length > 1 && lastSent && <small className=\"middot\">&#183;</small>}\n                  {lastSent && <small title={detailedLastSent}>{showMostRecent(lastSent)}</small>}\n                </div>\n              </div>\n              <div className=\"subject\">\n                {showUnread && <Unread className=\"unread\"/>}\n                <h5>{subject}</h5>\n                {(thread.tracked || thread.tracks > 0 || (track && track.data)) &&\n                  <div\n                    className=\"track\"\n                    onMouseEnter={this.handleTrackEnter}\n                    onMouseLeave={this.handleTrackLeave}\n                  >\n                    {(thread.tracked || (track && track.data)) &&\n                      <Track className={classnames('track-icon', { tracks: thread.tracks > 0 })} />}\n                    {features.trackRecipients && thread.tracks > 0 &&\n                      <span className=\"tracks\">{thread.tracks}</span>}\n                    <TrackingPopover\n                      track={track && track.data}\n                      ref={this.handleRef}\n                      pending={track && (track.status === ResourceStatus.Pending ||\n                        track.status === ResourceStatus.Loading) || false}\n                      features={features}\n                    />\n                  </div>\n                }\n              </div>\n              <div className={classnames('snippet', { comment: !!member })}>\n                {!!readLater && [\n                  <Snooze key=\"icon\" height=\"14px\" width=\"14px\"/>,\n                  <span className=\"read-later\" key=\"text\">{readLater}</span>,\n                ]}\n                {!!followUp && [\n                  <FollowUp key=\"icon\"/>,\n                  <span className=\"follow-up\" key=\"text\">{followUp}</span>,\n                ]}\n                {!!note && [\n                  <Contacts key=\"icon\" />,\n                  <span className=\"note\" key=\"text\">{note.body}</span>,\n                ]}\n                {showBody && <div className={classnames('preview-snippet', { comment: !!member })}>\n                  {member && <div className=\"avatar\">\n                    <img src={member.photoUrl} />\n                  </div>}\n                  <small>\n                    {sharedThread ? sharedThread.snippet : snippet}\n                  </small>\n                </div>}\n                {thread.hasAttachments && <Attachment className=\"attachment\"/>}\n              </div>\n            </button>\n            <RightIcon\n              className=\"icon\"\n              height={`${ICON_SIZE}px`}\n              width={`${ICON_SIZE}px`}\n            />\n          </div>\n        </DraggableCore>\n      </div>\n    );\n  }\n}\n\nexport default ThreadCell;\n"]}]}