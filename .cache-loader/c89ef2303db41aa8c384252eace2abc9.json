{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/api/teamMembers.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/api/teamMembers.ts","mtime":1675280253981},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnOwppbXBvcnQgeyBqc29uUmVxdWVzdCwgYmxhbmtSZXF1ZXN0IH0gZnJvbSAnLi9iYXNlJzsKaW1wb3J0IHsgY3JlYXRlVGVhbU1lbWJlciwgY3JlYXRlVGVhbSwgY3JlYXRlVGVhbUludml0ZSB9IGZyb20gJ0BzcmMvbW9ja3MvdGVhbXMnOwp2YXIgVGVhbU1lbWJlckNsaWVudCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHsKICAgIGZ1bmN0aW9uIFRlYW1NZW1iZXJDbGllbnQoKSB7CiAgICB9CiAgICBUZWFtTWVtYmVyQ2xpZW50LnByb3RvdHlwZS5saXN0ID0gZnVuY3Rpb24gKHRlYW0pIHsKICAgICAgICByZXR1cm4ganNvblJlcXVlc3QoewogICAgICAgICAgICBtZXRob2Q6ICdHRVQnLAogICAgICAgICAgICByb3V0ZTogIi92MS90ZWFtcy8iICsgdGVhbSArICIvbWVtYmVycyIsCiAgICAgICAgfSk7CiAgICB9OwogICAgVGVhbU1lbWJlckNsaWVudC5wcm90b3R5cGUuaW52aXRlID0gZnVuY3Rpb24gKHRlYW0sIGVtYWlsKSB7CiAgICAgICAgcmV0dXJuIGpzb25SZXF1ZXN0KHsKICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsCiAgICAgICAgICAgIHJvdXRlOiAiL3YxL3RlYW1zLyIgKyB0ZWFtICsgIi9pbnZpdGVzIiwKICAgICAgICAgICAgYm9keTogeyBlbWFpbDogZW1haWwgfSwKICAgICAgICB9KTsKICAgIH07CiAgICBUZWFtTWVtYmVyQ2xpZW50LnByb3RvdHlwZS5saXN0VGVhbUludml0ZSA9IGZ1bmN0aW9uICh0ZWFtKSB7CiAgICAgICAgcmV0dXJuIGpzb25SZXF1ZXN0KHsKICAgICAgICAgICAgbWV0aG9kOiAnR0VUJywKICAgICAgICAgICAgcm91dGU6ICIvdjEvdGVhbXMvIiArIHRlYW0gKyAiL2ludml0ZXMiLAogICAgICAgIH0pOwogICAgfTsKICAgIFRlYW1NZW1iZXJDbGllbnQucHJvdG90eXBlLmNyZWF0ZVRlYW1BZG1pbiA9IGZ1bmN0aW9uICh0ZWFtLCB1c2VyKSB7CiAgICAgICAgcmV0dXJuIGpzb25SZXF1ZXN0KHsKICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsCiAgICAgICAgICAgIHJvdXRlOiAiL3YxL3RlYW1zLyIgKyB0ZWFtICsgIi9hZG1pbnMiLAogICAgICAgICAgICBib2R5OiB7CiAgICAgICAgICAgICAgICB1c2VyOiB1c2VyLAogICAgICAgICAgICB9LAogICAgICAgIH0pOwogICAgfTsKICAgIFRlYW1NZW1iZXJDbGllbnQucHJvdG90eXBlLmRlbGV0ZVRlYW1BZG1pbiA9IGZ1bmN0aW9uICh0ZWFtLCB1c2VyKSB7CiAgICAgICAgcmV0dXJuIGpzb25SZXF1ZXN0KHsKICAgICAgICAgICAgbWV0aG9kOiAnREVMRVRFJywKICAgICAgICAgICAgcm91dGU6ICIvdjEvdGVhbXMvIiArIHRlYW0gKyAiL2FkbWlucy8iICsgdXNlciwKICAgICAgICB9KTsKICAgIH07CiAgICBUZWFtTWVtYmVyQ2xpZW50LnByb3RvdHlwZS5yZXNlbmRJbnZpdGUgPSBmdW5jdGlvbiAodGVhbSwgaW52aXRlKSB7CiAgICAgICAgcmV0dXJuIGJsYW5rUmVxdWVzdCh7CiAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLAogICAgICAgICAgICByb3V0ZTogIi92MS90ZWFtcy8iICsgdGVhbSArICIvaW52aXRlcy8iICsgaW52aXRlLAogICAgICAgIH0pOwogICAgfTsKICAgIFRlYW1NZW1iZXJDbGllbnQucHJvdG90eXBlLmRlbGV0ZSA9IGZ1bmN0aW9uICh0ZWFtLCB1c2VyKSB7CiAgICAgICAgcmV0dXJuIGJsYW5rUmVxdWVzdCh7CiAgICAgICAgICAgIG1ldGhvZDogJ0RFTEVURScsCiAgICAgICAgICAgIHJvdXRlOiAiL3YxL3RlYW1zLyIgKyB0ZWFtICsgIi9tZW1iZXJzLyIgKyB1c2VyLAogICAgICAgIH0pOwogICAgfTsKICAgIFRlYW1NZW1iZXJDbGllbnQucHJvdG90eXBlLmRlbGV0ZUludml0ZSA9IGZ1bmN0aW9uICh0ZWFtLCBpbnZpdGUpIHsKICAgICAgICByZXR1cm4gYmxhbmtSZXF1ZXN0KHsKICAgICAgICAgICAgbWV0aG9kOiAnREVMRVRFJywKICAgICAgICAgICAgcm91dGU6ICIvdjEvdGVhbXMvIiArIHRlYW0gKyAiL2ludml0ZXMvIiArIGludml0ZSwKICAgICAgICB9KTsKICAgIH07CiAgICByZXR1cm4gVGVhbU1lbWJlckNsaWVudDsKfSgpKTsKZXhwb3J0IHsgVGVhbU1lbWJlckNsaWVudCB9OwpleHBvcnQgZnVuY3Rpb24gbW9ja1RlYW1NZW1iZXJDbGllbnQoKSB7CiAgICByZXR1cm4gewogICAgICAgIGxpc3Q6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIE9ic2VydmFibGUub2YoW2NyZWF0ZVRlYW1NZW1iZXIoKV0pOyB9LAogICAgICAgIGludml0ZTogZnVuY3Rpb24gKCkgeyByZXR1cm4gT2JzZXJ2YWJsZS5vZihjcmVhdGVUZWFtSW52aXRlKCkpOyB9LAogICAgICAgIGxpc3RUZWFtSW52aXRlOiBmdW5jdGlvbiAoKSB7IHJldHVybiBPYnNlcnZhYmxlLm9mKFtdKTsgfSwKICAgICAgICBjcmVhdGVUZWFtQWRtaW46IGZ1bmN0aW9uICgpIHsgcmV0dXJuIE9ic2VydmFibGUub2YoY3JlYXRlVGVhbSgpKTsgfSwKICAgICAgICBkZWxldGVUZWFtQWRtaW46IGZ1bmN0aW9uICgpIHsgcmV0dXJuIE9ic2VydmFibGUub2YoY3JlYXRlVGVhbSgpKTsgfSwKICAgICAgICByZXNlbmRJbnZpdGU6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIE9ic2VydmFibGUub2YobnVsbCk7IH0sCiAgICAgICAgZGVsZXRlOiBmdW5jdGlvbiAoKSB7IHJldHVybiBPYnNlcnZhYmxlLm9mKG51bGwpOyB9LAogICAgICAgIGRlbGV0ZUludml0ZTogZnVuY3Rpb24gKCkgeyByZXR1cm4gT2JzZXJ2YWJsZS5vZihudWxsKTsgfSwKICAgIH07Cn0K"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/api/teamMembers.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/api/teamMembers.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,MAAM,CAAC;AAElC,OAAO,EAAE,WAAW,EAAE,YAAY,EAAE,MAAM,QAAQ,CAAC;AACnD,OAAO,EAAE,gBAAgB,EAAE,UAAU,EAAE,gBAAgB,EAAE,MAAM,kBAAkB,CAAC;AAalF;IAAA;IAqDA,CAAC;IApDC,+BAAI,GAAJ,UAAK,IAAY;QACf,OAAO,WAAW,CAAC;YACjB,MAAM,EAAE,KAAK;YACb,KAAK,EAAE,eAAa,IAAI,aAAU;SACnC,CAAC,CAAC;IACL,CAAC;IACD,iCAAM,GAAN,UAAO,IAAY,EAAE,KAAa;QAChC,OAAO,WAAW,CAAC;YACjB,MAAM,EAAE,MAAM;YACd,KAAK,EAAE,eAAa,IAAI,aAAU;YAClC,IAAI,EAAE,EAAE,KAAK,OAAA,EAAE;SAChB,CAAC,CAAC;IACL,CAAC;IACD,yCAAc,GAAd,UAAe,IAAY;QACzB,OAAO,WAAW,CAAC;YACjB,MAAM,EAAE,KAAK;YACb,KAAK,EAAE,eAAa,IAAI,aAAU;SACnC,CAAC,CAAC;IACL,CAAC;IACD,0CAAe,GAAf,UAAgB,IAAY,EAAE,IAAY;QACxC,OAAO,WAAW,CAAC;YACjB,MAAM,EAAE,MAAM;YACd,KAAK,EAAE,eAAa,IAAI,YAAS;YACjC,IAAI,EAAE;gBACJ,IAAI,MAAA;aACL;SACF,CAAC,CAAC;IACL,CAAC;IACD,0CAAe,GAAf,UAAgB,IAAY,EAAE,IAAY;QACxC,OAAO,WAAW,CAAC;YACjB,MAAM,EAAE,QAAQ;YAChB,KAAK,EAAE,eAAa,IAAI,gBAAW,IAAM;SAC1C,CAAC,CAAC;IACL,CAAC;IACD,uCAAY,GAAZ,UAAa,IAAY,EAAE,MAAc;QACvC,OAAO,YAAY,CAAC;YAClB,MAAM,EAAE,MAAM;YACd,KAAK,EAAE,eAAa,IAAI,iBAAY,MAAQ;SAC7C,CAAC,CAAC;IACL,CAAC;IACD,iCAAM,GAAN,UAAO,IAAY,EAAE,IAAY;QAC/B,OAAO,YAAY,CAAC;YAClB,MAAM,EAAE,QAAQ;YAChB,KAAK,EAAE,eAAa,IAAI,iBAAY,IAAM;SAC3C,CAAC,CAAC;IACL,CAAC;IACD,uCAAY,GAAZ,UAAa,IAAY,EAAE,MAAc;QACvC,OAAO,YAAY,CAAC;YAClB,MAAM,EAAE,QAAQ;YAChB,KAAK,EAAE,eAAa,IAAI,iBAAY,MAAQ;SAC7C,CAAC,CAAC;IACL,CAAC;IACH,uBAAC;AAAD,CAAC,AArDD,IAqDC;;AAED,MAAM,UAAU,oBAAoB;IAClC,OAAO;QACL,IAAI,EAAE,cAAM,OAAA,UAAU,CAAC,EAAE,CAAC,CAAC,gBAAgB,EAAE,CAAC,CAAC,EAAnC,CAAmC;QAC/C,MAAM,EAAE,cAAM,OAAA,UAAU,CAAC,EAAE,CAAC,gBAAgB,EAAE,CAAC,EAAjC,CAAiC;QAC/C,cAAc,EAAE,cAAM,OAAA,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,EAAjB,CAAiB;QACvC,eAAe,EAAE,cAAM,OAAA,UAAU,CAAC,EAAE,CAAC,UAAU,EAAE,CAAC,EAA3B,CAA2B;QAClD,eAAe,EAAE,cAAM,OAAA,UAAU,CAAC,EAAE,CAAC,UAAU,EAAE,CAAC,EAA3B,CAA2B;QAClD,YAAY,EAAE,cAAM,OAAA,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,EAAnB,CAAmB;QACvC,MAAM,EAAE,cAAM,OAAA,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,EAAnB,CAAmB;QACjC,YAAY,EAAE,cAAM,OAAA,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,EAAnB,CAAmB;KACxC,CAAC;AACJ,CAAC","sourcesContent":["import { Observable } from 'rxjs';\nimport { TeamMember, TeamInvite, Team } from '@src/types';\nimport { jsonRequest, blankRequest } from './base';\nimport { createTeamMember, createTeam, createTeamInvite } from '@src/mocks/teams';\n\nexport interface TeamMemberAPI {\n  list(id?: string): Observable<TeamMember[]>;\n  invite(team: string, email: string): Observable<TeamInvite>;\n  listTeamInvite(team: string): Observable<TeamInvite[]>;\n  createTeamAdmin(team: string, user: string): Observable<Team>;\n  deleteTeamAdmin(team: string, user: string): Observable<Team>;\n  resendInvite(team: string, invite: string): Observable<null>;\n  delete(team: string, user: string): Observable<null>;\n  deleteInvite(team: string, invite: string): Observable<null>;\n}\n\nexport class TeamMemberClient implements TeamMemberAPI {\n  list(team: string): Observable<TeamMember[]> {\n    return jsonRequest({\n      method: 'GET',\n      route: `/v1/teams/${team}/members`,\n    });\n  }\n  invite(team: string, email: string): Observable<TeamInvite> {\n    return jsonRequest({\n      method: 'POST',\n      route: `/v1/teams/${team}/invites`,\n      body: { email },\n    });\n  }\n  listTeamInvite(team: string): Observable<TeamInvite[]> {\n    return jsonRequest({\n      method: 'GET',\n      route: `/v1/teams/${team}/invites`,\n    });\n  }\n  createTeamAdmin(team: string, user: string): Observable<Team> {\n    return jsonRequest({\n      method: 'POST',\n      route: `/v1/teams/${team}/admins`,\n      body: {\n        user,\n      },\n    });\n  }\n  deleteTeamAdmin(team: string, user: string): Observable<Team> {\n    return jsonRequest({\n      method: 'DELETE',\n      route: `/v1/teams/${team}/admins/${user}`,\n    });\n  }\n  resendInvite(team: string, invite: string): Observable<null> {\n    return blankRequest({\n      method: 'POST',\n      route: `/v1/teams/${team}/invites/${invite}`,\n    });\n  }\n  delete(team: string, user: string): Observable<null> {\n    return blankRequest({\n      method: 'DELETE',\n      route: `/v1/teams/${team}/members/${user}`,\n    });\n  }\n  deleteInvite(team: string, invite: string): Observable<null> {\n    return blankRequest({\n      method: 'DELETE',\n      route: `/v1/teams/${team}/invites/${invite}`,\n    });\n  }\n}\n\nexport function mockTeamMemberClient(): TeamMemberAPI {\n  return {\n    list: () => Observable.of([createTeamMember()]),\n    invite: () => Observable.of(createTeamInvite()),\n    listTeamInvite: () => Observable.of([]),\n    createTeamAdmin: () => Observable.of(createTeam()),\n    deleteTeamAdmin: () => Observable.of(createTeam()),\n    resendInvite: () => Observable.of(null),\n    delete: () => Observable.of(null),\n    deleteInvite: () => Observable.of(null),\n  };\n}\n"]}]}