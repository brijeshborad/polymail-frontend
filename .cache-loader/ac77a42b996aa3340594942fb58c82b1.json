{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/mailbox.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/mailbox.ts","mtime":1675280254065},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/mailbox.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/mailbox.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Mailbox,\n  MailboxType,\n  MailCount,\n  Thread,\n  ThreadBox,\n  List,\n  Tab,\n  ListStatus,\n} from '@src/types';\nimport { values, findIndex, compact, flatten } from 'lodash';\n\nexport const isDraftBox = (type: MailboxType): boolean => {\n  switch (type) {\n    case MailboxType.Drafts:\n    case MailboxType.SendLater:\n    case MailboxType.Outbox:\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction generateRoute(\n  box: string, accountId: string, threadId?: string, selectedAccount: string = 'all',\n): string {\n  if (selectedAccount !== accountId) {\n    return threadId ? `/mail/${selectedAccount}/${box}/account-${accountId}/${threadId}` :\n      `/mail/${selectedAccount}/${box}/account-${accountId}`;\n  }\n\n  return threadId ? `/mail/${accountId}/${box}/${threadId}` : `/mail/${accountId}/${box}`;\n}\n\nexport function routeFromMailbox(\n  mailbox: Mailbox, threadId?: string, selectedAccount?: string,\n): string {\n  const accountId = mailbox.account ? mailbox.account : 'all';\n\n  if (mailbox.type === MailboxType.Any) {\n    if (mailbox.list) {\n      return generateRoute(`lists/${mailbox.list}`, accountId, threadId, selectedAccount);\n    }\n    if (mailbox.starred === true) {\n      return generateRoute(`starred`, accountId, threadId, selectedAccount);\n    }\n    if (mailbox.followUp) {\n      return generateRoute(`followUp`, accountId, threadId, selectedAccount);\n    }\n    if (mailbox.sent) {\n      return generateRoute(`sent`, accountId, threadId, selectedAccount);\n    }\n\n    return generateRoute('unknown', accountId, threadId, selectedAccount);\n  }\n\n  if (values(MailboxType).indexOf(mailbox.type) !== -1) {\n    return generateRoute(mailbox.type, accountId, threadId, selectedAccount);\n  }\n\n  return '/unknown';\n}\n\nexport const routeFromThread = (thread: Thread, oldMailbox: Mailbox, selectedAccount?: string) => {\n  const accountId = !!oldMailbox.account ? thread.account : 'all';\n  switch (thread.box) {\n    case ThreadBox.Inbox:\n      return generateRoute(MailboxType.Inbox, accountId, thread.id, selectedAccount);\n    case ThreadBox.Archive:\n      return generateRoute(MailboxType.Archive, accountId, thread.id, selectedAccount);\n    case ThreadBox.Trash:\n      return generateRoute(MailboxType.Trash, accountId, thread.id, selectedAccount);\n    case ThreadBox.Spam:\n      return generateRoute(MailboxType.Spam, accountId, thread.id, selectedAccount);\n    case ThreadBox.Later:\n      return generateRoute(MailboxType.Later, accountId, thread.id, selectedAccount);\n    case ThreadBox.List:\n      return generateRoute(`lists/${thread.list}`, accountId, thread.id, selectedAccount);\n    default: break;\n  }\n\n  return generateRoute('unknown', accountId, thread.id, selectedAccount);\n};\n\nexport const getAllMailCounts = (counts: { [id: string]: MailCount }) => {\n  const total: MailCount = { ...defaultCounts, listsUnread: {} };\n\n  Object.keys(counts).forEach((currentAccount) => {\n    const current = counts[currentAccount];\n    total.inboxRead += current.inboxRead;\n    total.inboxUnread += current.inboxUnread;\n    total.laterCount += current.laterCount;\n    total.starredCount += current.starredCount;\n    total.followUpCount += current.followUpCount;\n\n    Object.keys(current.listsUnread).forEach((list) => {\n      if (!total.listsUnread[list]) {\n        total.listsUnread[list] = 0;\n      }\n\n      total.listsUnread[list] += current.listsUnread[list];\n    });\n  });\n\n  return total;\n};\n\n// listDisplayName shows the name of the list at its indicated level. (e.g. Parent/Child => Child)\nexport const listDisplayName = (list: List, allLists: List[]): string => {\n  const components = list.name.split('/');\n  const listNames = allLists.map(l => l.name).filter(l => l !== list.name);\n  const reducedValue = components.reduce(\n    (_, value,  i) => {\n      if (!i) {\n        return value;\n      }\n\n      if (!!value) {\n        return value;\n      }\n      const pathByRemovingLastNComponents = components.slice(0, components.length - i).join('/');\n      if (listNames.indexOf(pathByRemovingLastNComponents) !== -1) {\n        return pathByRemovingLastNComponents;\n      }\n\n      return '';\n    },\n    '',\n  );\n  return reducedValue || list.name;\n};\n\n// listLevel shows the indent level of the list. N = how many parents the level has\nexport const listLevel = (list: List, allLists: List[]): number => {\n  const components = list.name.split('/');\n  const listNames = allLists.map(l => l.name).filter(l => l !== list.name);\n  let level = 0;\n  components.forEach(\n    (value, i) => {\n      if (!i) {\n        return;\n      }\n      const pathByRemovingLastNComponents = components\n        .slice(0, components.length - i).join('/');\n      if (listNames.indexOf(pathByRemovingLastNComponents) !== -1) {\n        level += 1;\n      }\n\n      return;\n    });\n  return level;\n};\n\n// parentList returns you the id of the immediate parent of that list. Parent/Child => Parent\nexport const parentList = (list: List, allLists: List[]): string|undefined => {\n  const components = list.name.split('/');\n  const filteredLists = allLists.filter(l => l.id !== list.id);\n  const listNames = allLists.filter(l => l.name !== list.name);\n  let parent: List|undefined;\n  components.forEach(\n    (value, i) => {\n      if (!i) {\n        return;\n      }\n\n      if (parent) {\n        return;\n      }\n\n      // Retrieval of parent\n      const pathByRemovingLastNComponents = components\n        .slice(0, components.length - i).join('/');\n      const foundIndex = findIndex(listNames, { name: pathByRemovingLastNComponents });\n      if (foundIndex !== -1) {\n        parent = filteredLists[foundIndex];\n      }\n    });\n  return parent && parent.id;\n};\n\n// descendants returns you all lists that are descendants of the specified list.\nexport const descendants = (list: List, allLists: List[]): List[] => {\n  return allLists.filter(l => l.name.startsWith(list.name + '/') && l.name !== list.name);\n};\n\n// Returns an array of all lists lists that need to be updated with their new name\n// when a name is provided for a list\nexport const recursivelyRenamedLists = (oldList: List, newName: string, tabs: Tab[]) => {\n  const matchedTab = tabs.filter(t => t.list && t.list.id === oldList.id)[0];\n  if (!matchedTab) {\n    return;\n  }\n\n  // Calculate new name of list dependant on parent tab\n  const parentTab = matchedTab.parentList &&\n    tabs.filter(tab => tab.list && tab.list.id === matchedTab.parentList)[0];\n  const newFullName = parentTab && parentTab.list &&\n    parentTab.list.name + '/' + newName || newName;\n\n  // Gather immediate children of tabs\n  const childrenTabs = (tab: Tab, allTabs: Tab[]): Tab[] => {\n    return allTabs.filter(t => tab.list && t.parentList === tab.list.id);\n  };\n\n  // Recursive method to loop through all lists and rename accordingly to parent\n  const renamedLists = (tab: Tab, name: string, allTabs: Tab[]): List[] => {\n    const changedLists = compact(childrenTabs(tab, allTabs)\n      .filter(t => t.list && t.list.status === ListStatus.Ok)\n      .map(t => t.name && renamedLists(t, name + '/' + t.name, allTabs) || undefined));\n    const newList: List | undefined = tab.list && {\n      ...tab.list,\n      name,\n    };\n\n    return flatten(changedLists).concat(compact([newList]));\n  };\n\n  return renamedLists(matchedTab, newFullName, tabs);\n};\n\nexport const defaultCounts: MailCount = {\n  inboxRead: 0,\n  inboxUnread: 0,\n  listsUnread: {},\n  laterCount: 0,\n  starredCount: 0,\n  followUpCount: 0,\n};\n"]}]}