{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/types/index.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/types/index.ts","mtime":1675280254122},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/types/index.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/types/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { RouterState } from 'react-router-redux';\nimport { Stores } from '@src/lib/db';\nimport { Moment } from 'moment';\n\nimport { SalesforceState } from '@src/types/salesforce';\nimport { BillingState, Coupon } from '@src/types/billing';\n\nimport {\n  Sequence, SequenceRecipient, SequenceTab,\n  SequenceStage, SequenceStageInstance, SequenceStageRecipient,\n  SequenceRecipientsState,\n  SequenceRecipientsAddState,\n} from '@src/types/sequences';\nimport { SchedulingState } from '@src/types/scheduling';\nimport { LeftSidebarState } from '@src/types/leftSidebar';\nimport { RightSidebarState } from '@src/types/rightSidebar';\nimport {\n  SharedThreadFilter, SharedThread, Comment, SharedThreadActivity,\n} from '@src/types/sharedThreads';\nimport { TeamInviteValidateResponse } from '@src/api/team';\nimport { SlackState } from '@src/types/slack';\nimport { AsanaState } from '@src/types/asana';\nimport { ActivityFeedSearchMeta } from '@src/ducks/activityFeed';\nimport { Filter } from './filters';\nimport { ZoomState } from './zoom';\nimport { StatYearlySummary } from '@src/api/analytics';\nimport { HubspotState } from './hubspot';\nimport { StatusPageResult } from '@src/api/app';\nimport { ExperimentsState } from '@src/lib/unleash-experiments';\n\nexport interface StoreState {\n  theme: Resource<ThemeSetting>;\n  dbReady: boolean;\n  appUpdateReady: boolean;\n  webappUpdateReady: boolean;\n  isOnline: boolean;\n  isDefaultClient: boolean;\n  clearingCache: boolean;\n\n  loggedIn: boolean;\n  authPending: boolean;\n  signUpPending: boolean;\n  sharedThreadsStatus?: ResourceStatus;\n  commandControlType?: CommandControlType;\n\n  isMobile?: boolean;\n\n  contactSupportPopup: {\n    collapsed: boolean;\n  };\n\n  team: Resource<Team>;\n\n  me: Resource<Me>;\n  lists: List[];\n  accounts: Account[];\n  devices: Device[];\n  features: Features;\n  preferences: Preferences;\n  billing: BillingState;\n\n  mailbox: Mailbox;\n  mailboxThreads: Resource<Thread[]>;\n\n  selectedIds: Map<string, boolean>;\n\n  // Used for any multistep thread actions\n  threadSwipeId?: string;\n\n  selectedThread?: Thread;\n  selectedSharedThread?: string;\n  selectedDraft?: string;\n  selectedCalendarEvent?: CalendarEvent;\n\n  selectedContact?: string;\n  selectedContactNotes: ContactNote[];\n  selectedContactThreads: Thread[];\n  selectedContactFiles: ContactAttachment[];\n\n  selectedActivity?: Activity;\n  selectedContactThread?: Thread;\n\n  messageBodies: {\n    [id: string]: Resource<MessageBody[]>;\n  };\n\n  contacts: {\n    [id: string]: Resource<Contact>;\n  };\n\n  sharedThreads: {\n    [id: string]: Resource<SharedThread>;\n  };\n\n  sharedThreadDrafts: {\n    [id: string]: Draft;\n  };\n\n  sharedThreadFilter?: SharedThreadFilter;\n  sharedThreadUserFilter?: SharedThreadFilter;\n\n  comments: {\n    [sharedThread: string]: Comment[];\n  };\n\n  // TODO (Cindy): Should not rely on this. Will need to refactor\n  threads: {\n    [id: string]: Resource<Thread>;\n  };\n\n  teamMembers: TeamMembers;\n  teamInvites: Resource<TeamInvite[]>;\n  teamInvitesValidation: {\n    // Key is nonce + payload concatenated together\n    [key: string]: Resource<TeamInviteValidateResponse>;\n  };\n\n  // Public Team Members\n  publicMembers: TeamMembers;\n  publicTeams: {\n    [id: string]: Team;\n  };\n\n  contactGroups: {\n    [id: string]: ContactGroup;\n  };\n\n  drafts: {\n    [id: string]: Resource<Draft>;\n  };\n\n  activityFeed: Resource<Activity[]>;\n  activityFeedSearchMeta?: ActivityFeedSearchMeta;\n\n  // Resource id -> attachment metas\n  // For SequenceStageInstances, the instance id is the resource Id.\n  attachmentMetas: {\n    [resource: string]: {\n      [id: string]: Resource<AttachmentMeta>;\n    };\n  };\n\n  // Resource id -> attachment\n  // For SequenceStageInstances, the instance id is the resource Id.\n  attachments: {\n    [resource: string]: {\n      [id: string]: Attachment;\n    },\n  };\n\n  attachmentsDownloading: {\n    [id: string]: {\n      progress: number,\n      preview: boolean,\n    };\n  };\n\n  templates: {\n    [template: string]: Template;\n  };\n\n  routing: RouterState;\n\n  typeaheadContacts: Contact[];\n\n  mailCounts: {\n    [account: string]: MailCount;\n  };\n\n  tracks: {\n    [thread: string]: {\n      [message: string]: Resource<Track>;\n    };\n  };\n\n  sessionId: number;\n\n  toast?: Error;\n\n  // ShareLink identifier is threadId + messageId\n  shareLinks: {\n    [id: string]: Resource<ShareLink>;\n  };\n  selectedShareLink?: string;\n\n  integrations: Integration[];\n\n  calendars: {\n    [account: string]: Calendar[];\n  };\n\n  calendarEvents: {\n    command: {},\n    rsb: {},\n  };\n\n  permissions: Permission;\n\n  closedBanners: { [banner: string]: boolean };\n\n  onboarding: Onboarding;\n\n  incrementalSyncing: boolean;\n\n  hotkeyActions: { [action: string]: number };\n\n  selectedSequence?: string;\n  sequences: { [sequence: string]: Resource<Sequence> };\n  sequenceRecipientsState?: SequenceRecipientsState;\n\n  // Use identifier to note if list endpoint for resource has completed\n  // SequenceList -> `sequences`\n  // TODO(SHIN): SequenceRecipientsList/SequenceStageRecipientsList/SequenceStageList\n  sequencePageLoaded: {\n    [key: string]: boolean;\n  };\n\n  sequenceStages: {\n    [sequence: string]: {\n      [stage: string]: Resource<SequenceStage>,\n    },\n  };\n  selectedSequenceStage?: string;\n\n  sequenceStageInstances: {\n    [sequenceAndSequenceStage: string]: {\n      [instanceId: string]: Resource<SequenceStageInstance>,\n    },\n  };\n\n  sequenceStageRecipients: {\n    [sequenceStage: string]: Resource<SequenceStageRecipient[]>,\n  };\n\n  sequenceRecipients: {\n    [sequence: string]: {\n      [recipient: string]: Resource<SequenceRecipient>,\n    },\n  };\n\n  selectedSequenceTab?: SequenceTab;\n  sequenceCount?: number;\n\n  sequenceRecipientsAddState?: SequenceRecipientsAddState;\n\n  salesforce: SalesforceState;\n  scheduling: SchedulingState;\n  hubspot: HubspotState;\n  slack?: SlackState;\n  asana: AsanaState;\n  zoom: ZoomState;\n\n  leftSidebar: LeftSidebarState;\n  rightSidebar: RightSidebarState;\n  threadListWidth: number;\n\n  referralInvites: {\n    [invite: string]: ReferralInvite,\n  };\n\n  sharedThreadActivity: {\n    comment: { [user: string]: SharedThreadActivity },\n    reply: { [user: string]: SharedThreadActivity },\n    view: { [user: string]: SharedThreadActivity },\n  };\n\n  // List of blocked users\n  filters: {\n    [id: string]: Filter;\n  };\n\n  // Miscellaneous state to gatekeep user flow\n  tfaNeeded: boolean;\n  tfaPasswordConfirmed?: boolean;\n  banner?: BannerType;\n  muteSounds?: boolean;\n  showHotkeySuggestions?: boolean;\n\n  // UTM params to pass up to server\n  utmParams?: UTMParams;\n\n  // Identifier for special signup source\n  unsubscriberSignup?: boolean;\n\n  // Redirect platform (Used when signing in with magic link)\n  redirectPlatform?: DevicePlatform;\n\n  // Used for demo video\n  demoVideo?: DemoVideoMeta;\n  showTeamInviteAcceptedModal?: boolean;\n\n  // Yearly Summaries for year in review\n  yearlySummaries?: {\n    [key: number]: Resource<StatYearlySummary>;\n  };\n\n  status: PolymailStatus;\n}\n\nexport enum PolymailStatusType {\n  Online = 'online',\n  Syncing = 'syncing',\n}\n\nexport interface PolymailStatus {\n  statusType: PolymailStatusType;\n  commitsRemaining: number;\n  statusPage?: StatusPageResult;\n}\n\nexport interface DemoVideoMeta {\n  url: string;\n  thumbnailUrl: string;\n  captionUrl?: string;\n  name?: string;\n}\n\nexport interface LoginToken {\n  public: string;\n  private?: string;\n  ttl?: number;\n  reuseTtl?: number;\n  reuseDate?: Date;\n}\n\nexport interface UTMParams {\n  source?: string;\n  medium?: string;\n  campaign?: string;\n}\n\nexport interface Permission {\n  mailToProtocol: boolean;\n  notifications: boolean;\n}\n\nexport interface ShareLink {\n  sharedThread: string;\n  message?: string;\n  url?: string;\n}\n\nexport interface AttachmentResource {\n  attachment: Attachment;\n  uploading: boolean;\n  uploadProgress: number;\n}\n\nexport interface RealtimeEvent {\n  name: string;\n  data: any;\n}\n\nexport const enum BannerType {\n  AppleSilicon = 'appleSilicon',\n  DownloadChrome = 'downloadChrome',\n  DefaultMailClient = 'defaultMailClient',\n  InvalidAccount = 'invalidAccount',\n  NotificationEnable = 'notificationEnable',\n  NotificationEnableWarning = 'notificationEnableWarning',\n  TrialExpiring = 'trialExpiring',\n  UpdateAvailable = 'updateAvailable',\n  Offline = 'offline',\n  ReferralRedemption = 'referralRedemption',\n  YearInReview = 'yearInReview',\n  None = 'none',\n  Disabled = 'disabled',\n}\n\nexport const enum CommandControlType {\n  ReadLater = 'readlater',\n  SendLater = 'sendlater',\n  Label = 'label',\n  Thread = 'thread',\n  Draft = 'draft',\n  FollowUp = 'followup',\n  Templates = 'templates',\n  Calendar = 'calendar',\n  Global = 'global',\n  Navigation = 'navigation',\n  System = 'system',\n  SchedulingPages = 'schedulingPages',\n}\n\nexport const enum TeamPlan {\n  Inactive = 'inactive',\n  Individual = 'individual',\n  Team = 'pro',\n  Enterprise = 'enterprise',\n}\n\nexport interface Team {\n  id: string;\n  created: Date;\n  updated: Date;\n  name: string;\n  plan: TeamPlan;\n  admins: string[];\n  trialExpires?: Date;\n  planExpires?: Date;\n  seatsUsed: number;\n  trialPlan?: TeamPlan;\n  cost?: number;\n  syncExpires?: Date;\n}\n\nexport interface Features {\n  freeTier: boolean;\n  messageTemplates: boolean;\n  trackLinks: boolean;\n  trackRecipients: boolean;\n  cloudAttachments: boolean;\n  noBranding: boolean;\n  activityFeed: boolean;\n  autoBcc: boolean;\n  sendLater: boolean;\n  campaigns: boolean;\n  followUp: boolean;\n  sequences: boolean;\n  sharedTemplates: boolean;\n  analytics: boolean;\n  unsubscriber: boolean;\n  salesforce: boolean;\n  scheduling: boolean;\n  schedulingDoubleBooking: boolean;\n  schedulingNoBranding: boolean;\n  comments: boolean;\n  disableSentFromPolymail: boolean;\n  hubspot: boolean;\n\n  // NOTE(SHIN): Experiment on account number limit\n  accounts?: number;\n  schedulings?: number;\n}\n\nexport const enum Swipe {\n  Trash = 'trash',\n  Archive = 'archive',\n  Inbox = 'inbox',\n  Unread = 'unread',\n  Later = 'later',\n  List = 'list',\n  Star = 'star',\n  None = 'none',\n}\n\nexport const enum LeftSidebarCount {\n  All = 'all',\n  Unread = 'unread',\n}\n\nexport const enum DockCount {\n  All = 'all',\n  Unread = 'unread',\n  Bool = 'bool',\n  BoolUnread = 'boolUnread',\n  None = 'none',\n}\n\nexport const enum Hotkeys {\n  Default = 'default',\n  Gmail = 'gmail',\n}\n\nexport const enum UnsubscribeBehavior {\n  None = 'none',\n  Archive = 'archive',\n  Trash = 'trash',\n}\n\nexport const enum DisplayMode {\n  Default = 'default',\n  Compact = 'compact',\n}\n\nexport const enum MarkReadOn {\n  None = 'none',\n  Archive = 'archive',\n}\n\nexport const enum BlockContactActionType {\n  Trash = 'trash',\n  Archive = 'archive',\n}\n\nexport interface Preferences {\n  showSocialList: boolean;\n  showPromotionsList: boolean;\n  showUpdatesList: boolean;\n\n  disableLinkPreviews: boolean;\n  disableTrackByDefault: boolean;\n  sendAndArchive: boolean;\n  cancelOnReply: boolean;\n\n  leftSidebarCount: LeftSidebarCount;\n  dockCount: DockCount;\n  hotkeys: Hotkeys;\n  unsubscribeBehavior: UnsubscribeBehavior;\n  blockContactAction: BlockContactActionType;\n  defaultAccount: string; // account id, may be incorrect or not set\n  displayMode: DisplayMode;\n  markReadOn: MarkReadOn;\n  blockTrackingPixels: boolean;\n\n  swipeShortRight: Swipe;\n  swipeLongRight: Swipe;\n  swipeLongLeft: Swipe;\n  swipeShortLeft: Swipe;\n\n  laterToday: number;\n  laterMorning: number;\n  laterEvening: number;\n\n  linkTracking: boolean;\n  cloudAttachments: boolean;\n  followUp: number;\n\n  composeFontSize: number;\n  composeFontFamily: string;\n  composeFontColor: string;\n\n  defaultShareContact?: string; // team id\n  defaultShareDraft?: boolean; // whether shared drafts are on by default\n  syncEmailsToCrm: boolean;\n  sentFromPolymail?: boolean;\n\n  weeklyUnsubscriberDigest?: boolean;\n}\n\nexport const enum SocialNetwork {\n  Facebook = 'facebook',\n  Twitter = 'twitter',\n  AngelList = 'angellist',\n  LinkedIn = 'linkedin',\n  Instagram = 'instagram',\n}\n\nexport const enum FilterBox {\n  Sent = 'sent',\n  Starred = 'starred',\n  Unread = 'unread',\n}\n\nexport enum MailboxType {\n  Any = 'any',\n  Inbox = 'inbox',\n  Trash = 'trash',\n  Spam = 'spam',\n  Archive = 'archive',\n  Later = 'later',\n  Drafts = 'drafts',\n  SendLater = 'sendLater',\n  Outbox = 'outbox',\n  None = 'none',\n}\n\n// NOTE(SHIN): If modify or add any property to MailBox,\n//  need to update ThreadsDataSource.modeHasChanged()\nexport interface Mailbox {\n  type: MailboxType;\n  list?: string;\n  account?: string;\n  starred?: boolean;\n  sent?: boolean;\n  followUp?: boolean;\n  read?: boolean;\n\n  // NOTE(SHIN): Used by ThreadsDataSource for diffing when to clear the threads list\n  // Increment to re-hydrate threads list, called on THREAD_LIST_SUCCESS\n  hydrateCount?: number;\n\n  // Search Params\n  query?: string;\n  queryParams?: QueryParams;\n  providerSearch?: boolean;\n  providerSearchComplete?: boolean;\n}\n\nexport interface QueryParams {\n  with?: string[];\n  from?: string;\n  to?: string[];\n  before?: Date;\n  after?: Date;\n  isStarred?: boolean;\n  isRead?: boolean;\n  isUnread?: boolean;\n  isUnopened?: boolean;\n  isOpened?: boolean;\n  isUnreplied?: boolean;\n  isReplied?: boolean;\n  sent?: boolean;\n  hasAttachment?: boolean;\n  hasFollowUp?: boolean;\n  box?: ThreadBox;\n  list?: string;\n  text?: string[];\n  quoted?: boolean;\n}\n\nexport interface Social {\n  network: SocialNetwork;\n  username: string;\n  url: string;\n}\n\nexport const enum ActionStatus {\n  Start = 'start',\n  Success = 'success',\n  Failure = 'failure',\n}\n\nexport interface Action<Meta, Payload> {\n  type: string;\n  status: ActionStatus;\n  meta: Meta;\n  payload?: Payload;\n  error?: Error;\n}\n\nexport const enum ResourceStatus {\n  Pending = 'pending',\n  Loading = 'loading',\n  Refreshing = 'refreshing',\n  Ok = 'ok',\n  Failure = 'failure',\n  Disabled = 'disabled',\n}\n\nexport interface Resource<T> {\n  status: ResourceStatus;\n  error?: Error;\n  data?: T;\n\n  // Special counter used to identify how often a reducer was called on a resource\n  incrementCount?: number;\n}\n\nexport interface Thread {\n  id: string;\n  internal: Date;\n  sort: Date;\n  when?: Date;\n  lastSent?: Date;\n  box: ThreadBox;\n  list?: string;\n  account: string;\n  messages: Message[];\n  waiting?: Waiting;\n  apiId?: string;\n\n  // computed properties\n  read: boolean;\n  sent: boolean;\n  starred: boolean;\n  hasAttachments: boolean;\n\n  tracked: boolean;\n  tracks: number;\n\n  participants: Address[];\n  participantEmails: string[];\n  subject: string;\n  snippet: string;\n  sentSnippet: string;\n\n  // Set to 1 if starred is `true`, otherwise `undefined`\n  starredIndex?: number;\n  waitingIndex?: number;\n  listUnreadIndex?: string;\n  inboxUnreadIndex?: number;\n\n  // Last performed query result for thread\n  query?: string;\n\n  // Muted conversations do not receive notifications\n  muted?: boolean;\n}\n\nexport const enum WaitingType {\n  NoReply = 'noReply',\n}\n\nexport interface Waiting {\n  type: WaitingType;\n  when: Date;\n  whenRelative?: number; // for Drafts only\n}\n\nexport interface Message {\n  id: string;\n  internal: Date;\n  sent: boolean;\n  read: boolean;\n  starred: boolean;\n  tracked: boolean;\n  tracks: number;\n  subject: string;\n  snippet: string;\n  hasAttachments: boolean;\n  attachments: MessageAttachment[];\n  rfcId?: string;\n  calendarEvent?: string;\n  optimistic?: DraftStatus;\n\n  from: string;\n  bcc: string[];\n  cc: string[];\n  to: string[];\n  replyTo: string[];\n}\n\nexport interface MessageBody {\n  id: string;\n  body: string;\n  updated: Date;\n  history?: string;\n  historyMarker?: string;\n  unsubscribeLink?: string;\n  thread: string;\n}\n\nexport interface MessageAttachment {\n  id: string;\n  filename: string;\n  type: string;\n  length: number;\n  cid?: string;\n  inline: boolean;\n  url: string;\n  message: string;\n  thread?: string;\n  sharedThread?: string;\n}\n\nexport interface Attachment {\n  id: string;\n  created: Date;\n  updated: Date;\n  filename: string;\n  type: string;\n  length: number;\n  cloudFile: string;\n  cloudUrl: string;\n  cloud: boolean;\n  inline: boolean;\n  uploading?: boolean;\n  template?: string;\n  progress: number;\n  originalCid?: string;\n  optimistic?: boolean;\n}\n\nexport interface AttachmentMeta {\n  resourceId: string;\n  attachment: string;\n  file?: File;\n  inline?: boolean;\n  cloud?: boolean;\n  template?: string;\n\n  // Display Purposes\n  filename?: string;\n  length?: number;\n\n  // Forward properties\n  thread?: string;\n  message?: string;\n  account?: string;\n\n  // Sequence Stage Instance properties\n  // Template forward properties\n  stage?: string;\n  sequence?: string;\n  status?: AttachmentMetaStatus;\n  cloudFile?: string;\n  cloudUrl?: string;\n  progress?: number;\n}\n\nexport const enum AttachmentMetaStatus {\n  Uploading = 'uploading',\n  Create = 'create',\n  CreateAfterUpload = 'createAfterUpload',\n  Delete = 'delete',\n}\n\nexport const enum ThreadBox {\n  Inbox = 'inbox',\n  Trash = 'trash',\n  Spam = 'spam',\n  Archive = 'archive',\n  List = 'list',\n  Later = 'later',\n}\n\nexport const enum TwoFactorAuthenticationStatus {\n  Verified = 'verified',\n  Unverified = 'unverified',\n}\n\nexport const enum TwoFactorAuthenticationType {\n  Phone = 'phone',\n}\n\nexport interface TwoFactorAuthentication {\n  status: TwoFactorAuthenticationStatus;\n  type: TwoFactorAuthenticationType;\n\n  phone?: string;\n}\n\nexport const enum MeStatus {\n  Ok = 'ok',\n  Deleted = 'deleted',\n}\n\n// new status from the API which would keep backwards compatibility\n// with the old status and show more details of user status\n// see: https://polymail.atlassian.net/wiki/spaces/POLYMAIL/pages/22642689/Status+improvement\nexport const enum MeStatusNew {\n  Active = 'active',\n  Deleted = 'deleted',\n  Trial = 'trial',\n  TrialSubscribed = 'trial_subscribed',\n  TrialExpired = 'disabled_trial_expired',\n  Canceled = 'disabled_subscription_canceled',\n  Unpaid = 'disabled_payment_failed',\n  None = 'none',\n}\n\nexport interface Me {\n  id: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  photoUrl: string;\n  email: string;\n  webappTester?: boolean;\n  password?: string;\n  plan: MePlan;\n  slug: string;\n  team: string;\n  timeZone?: string;\n  photoCloudFile?: string;\n  referralUrl: string;\n  referrer?: string;\n  referralRedeemed?: Date;\n  intercomIdentity: string;\n  coupon?: Coupon;\n\n  status: MeStatus;\n  // new status from the API which would keep backwards compatibility\n  // with the old status and show more details of user status\n  statusNew?: MeStatusNew;\n  trialExpires?: Date;\n\n  tfa?: TwoFactorAuthentication;\n  onboardingSkippedTeam?: boolean;\n\n  created: Date;\n  debugUntil?: Date;\n\n  failMessage?: string; // payment failure message\n\n  experiments?: ExperimentsState;\n}\n\nexport interface DeviceTypeNotifications {\n  desktop: DeviceNotifications;\n  mobile: DeviceNotifications;\n  tablet: DeviceNotifications;\n}\n\nexport const enum MePlan {\n  Free = 'free',\n  Pro = 'pro',\n}\n\nexport const enum AccountType {\n  Google = 'google',\n  Alias = 'alias',\n  iCloud = 'icloud',\n  MicrosoftLegacy = 'microsoft',\n  Microsoft = 'microsoftGraph',\n  IMAP = 'imap',\n}\n\nexport const enum AccountStatus {\n  Ok = 'ok',\n  Invalid = 'invalid',\n  Deleting = 'deleting',\n}\n\nexport interface Account {\n  id: string;\n  name: string;\n  description: string;\n  email: string;\n  signature: string;\n  autoBcc?: string|null;\n  type: AccountType;\n  status: AccountStatus;\n  account?: string;\n  team?: string;\n  signatureImages: Attachment[];\n  mailInitSynced?: string;\n  autoReply?: AutoReply;\n\n  // For IMAP Accounts\n  imap?: Imap;\n  smtp?: Smtp;\n  preset?: AccountPreset;\n\n  // For IMAP/iCloud Accounts\n  password?: string;\n\n  notifications: DeviceTypeNotifications;\n}\n\nexport interface AutoReply {\n  updated?: Date;\n  enabled: boolean;\n  body: string;\n}\n\nexport interface Imap {\n  username: string;\n  password: string;\n  ssl: boolean;\n  insecureSsl: boolean;\n  host: string;\n  port: number;\n  idle: boolean;\n  folders: ImapFolders;\n}\n\nexport interface ImapFolders {\n  inbox: string;\n  sent: string;\n  archive: string;\n  trash: string;\n  spam: string;\n  readLater: string;\n}\n\nexport interface Smtp {\n  username: string;\n  password: string;\n  ssl: boolean;\n  starttls: boolean;\n  insecureSsl: boolean;\n  host: string;\n  port: number;\n}\n\nexport const enum AccountPreset {\n  Fastmail = 'fastmail',\n  Yahoo = 'yahoo',\n}\n\nexport interface Tab {\n  key: string;\n  name: string;\n  count: number;\n  errorCopy?: string;\n  sortIdentifier?: string;\n\n  link?: string;\n  icon?: JSX.Element;\n  onClick?: () => void;\n  hidden?: boolean;\n  isOnboarding?: boolean;\n  notificationCount?: boolean;\n\n  // List tabs\n  listLevel?: number;\n  list?: List;\n  parentList?: string;\n  descendants?: boolean;\n  showMore?: boolean;\n  hideCollapsed?: boolean;\n}\n\nexport interface List {\n  id: string;\n  // created: Date;\n  // updated: Date;\n  status: ListStatus;\n  name: string;\n}\n\nexport const enum ListStatus {\n  Ok = 'ok',\n  Updating = 'updating',\n  Deleting = 'deleting',\n}\n\nexport interface Address {\n  fullName: string;\n  givenName: string;\n  familyName: string;\n  email: string;\n}\n\nexport const enum ThreadActionColor {\n  Archive = '#87ecbb',\n  List = '#D14CAD',\n  Snooze = '#FDA05E',\n  Trash = '#FD6D7E',\n  Inbox = '#47dff5',\n  Unread = '#63A0F6',\n  Star = '#ffdf32',\n  None = '#ffffff',\n}\n\nexport const enum PhoneType {\n  Personal = 'personal',\n  Mobile = 'mobile',\n  Pager = 'pager',\n  Main = 'main',\n  HomeFax = 'home_fax',\n  WorkFax = 'work_fax',\n  Home = 'home',\n  Work = 'work',\n  Other = 'other',\n}\n\nexport interface Phone {\n  type: PhoneType;\n  number: string;\n}\n\nexport interface ContactGroup {\n  id: string;\n  created: Date;\n  updated: Date;\n  name: string;\n  team?: string;\n}\n\nexport const enum ContactType {\n  Default = 'default',\n  Cache = 'cache',\n  Enriched = 'enriched',\n}\n\nexport interface Contact {\n  id: string;\n  created: Date;\n  updated: Date;\n  user: string;\n  team?: string;\n  email: string;\n  salutation: string;\n  givenName: string;\n  familyName: string;\n  fullName: string;\n  gender: string;\n  photoUrl: string;\n  firstMet: string;\n  bio: string;\n  birthdate?: Date;\n  location: string;\n  organizationTitle: string;\n  organization: string;\n  website: string;\n  addresses: PhysicalAddress[];\n  phoneNumbers: Phone[];\n  socialMedia: Social[];\n  groups: string[];\n  company?: Company;\n  type: ContactType;\n  lastSent?: Date;\n\n  searchIndex: string[];\n}\n\n// API docs calls this Address\nexport interface PhysicalAddress {\n  type: string;\n  street: string;\n  city: string;\n  region: string;\n  postcode: string;\n  country: string;\n}\n\nexport const enum DraftStatus {\n  Draft = 'draft',\n  Scheduled = 'scheduled',\n  Sending = 'sending',\n  Failed = 'failed',\n  Staged = 'staged',\n}\n\nexport interface Draft {\n  id: string;\n  created: Date;\n  updated: Date;\n  status: DraftStatus;\n  scheduled?: Date | null;\n  cancelBy?: Date;\n  cancelByTtl?: number;\n  error?: string;\n  account: string;\n  to: string[];\n  cc: string[];\n  bcc: string[];\n  subject: string;\n  threadV2?: string;\n  message?: string;\n  split: boolean;\n  thread?: string;\n  smtp?: string;\n  body: string;\n  track: boolean;\n  trackLinks: boolean;\n  attachments: Attachment[];\n  template?: string;\n  waiting?: Waiting | null;\n  sharedThread?: string;\n  calendarInvite?: DraftCalendarInvite | null;\n  version: number;\n\n  // Identifies whether to cancel scheduled on reply\n  cancelOnReply: boolean;\n}\n\nexport interface DraftCalendarInvite {\n  name: string;\n  start: Date;\n  end: Date;\n  recipients: string[];\n  location: string;\n  notes: string;\n}\n\nexport interface Company {\n  name: string;\n  website: string;\n  description: string;\n  socialMedia: Social[];\n  employees: number;\n  raised: number;\n  annualRevenue: number;\n  marketCap: number;\n}\n\nexport interface ContactNote {\n  id: string;\n  created: Date;\n  updated: Date;\n  contact: string;\n  user: string;\n  team?: string;\n  body: string;\n}\n\nexport interface ContactAttachment {\n  created: Date;\n  contact: string;\n  attachment: MessageAttachment;\n}\n\nexport const enum ActivityType {\n  Read = 'read',\n  Link = 'link',\n  Attachment = 'attachment',\n}\n\nexport interface Activity {\n  id: string;\n  date: Date;\n  updated: Date;\n  type: ActivityType;\n  draft?: string;\n  account: string;\n  recipient: string;\n  thread?: string;\n  message?: string;\n  subject?: string;\n\n  url?: string;\n  filename?: string;\n}\n\nexport const enum KeyCode {\n  Tab = 9,\n  Enter = 13,\n  Shift = 16,\n  Ctrl = 17,\n  Alt = 18,\n  PauseBreak = 19,\n  CapsLock = 20,\n  Esc = 27,\n  Space = 32,\n  PageUp = 33,\n  PageDown = 34,\n  End = 35,\n  Home = 36,\n  Left = 37,\n  Up = 38,\n  Right = 39,\n  Down = 40,\n  Insert = 45,\n  Delete = 8,\n  ExtendedDelete = 46,\n  Zero = 48,\n  ClosedParen = 48,\n  One = 49,\n  ExclamationMark = 49,\n  Two = 50,\n  AtSign = 50,\n  Three = 51,\n  PoundSign = 51,\n  Hash = 51,\n  Four = 52,\n  DollarSign = 52,\n  Five = 53,\n  PercentSign = 53,\n  Six = 54,\n  Caret = 54,\n  Hat = 54,\n  Seven = 55,\n  Ampersand = 55,\n  Eight = 56,\n  Star = 56,\n  Asterik = 56,\n  Nine = 57,\n  OpenParen = 57,\n  A = 65,\n  B = 66,\n  C = 67,\n  D = 68,\n  E = 69,\n  F = 70,\n  G = 71,\n  H = 72,\n  I = 73,\n  J = 74,\n  K = 75,\n  L = 76,\n  M = 77,\n  N = 78,\n  O = 79,\n  P = 80,\n  Q = 81,\n  R = 82,\n  S = 83,\n  T = 84,\n  U = 85,\n  V = 86,\n  W = 87,\n  X = 88,\n  Y = 89,\n  Z = 90,\n  LeftWindowKey = 91,\n  RightWindowKey = 92,\n  SelectKey = 93,\n  Numpad0 = 96,\n  Numpad1 = 97,\n  Numpad2 = 98,\n  Numpad3 = 99,\n  Numpad4 = 100,\n  Numpad5 = 101,\n  Numpad6 = 102,\n  Numpad7 = 103,\n  Numpad8 = 104,\n  Numpad9 = 105,\n  Multiply = 106,\n  Add = 107,\n  Subtract = 109,\n  DecimalPoint = 110,\n  Divide = 111,\n  F1 = 112,\n  F2 = 113,\n  F3 = 114,\n  F4 = 115,\n  F5 = 116,\n  F6 = 117,\n  F7 = 118,\n  F8 = 119,\n  F9 = 120,\n  F10 = 121,\n  F11 = 122,\n  F12 = 123,\n  NumLock = 144,\n  ScrollLock = 145,\n  SemiColon = 186,\n  Equals = 187,\n  Comma = 188,\n  Dash = 189,\n  Period = 190,\n  UnderScore = 189,\n  PlusSign = 187,\n  BackSlash = 220,\n  ForwardSlash = 191,\n  Tilde = 192,\n  Accent = 192,\n  OpenBracket = 219,\n  ClosedBracket = 221,\n  Quote = 222,\n}\n\nexport interface LinkPreviewProps {\n  url: string;\n  title: string;\n  description: string;\n  siteName?: string;\n  author?: string;\n  imageUrl?: string;\n  type?: string;\n  twitterCreator?: string;\n  twitterSite?: string;\n  siteIcon?: string;\n}\n\n// TODO(SHIN): Maybe abstract out DraftAttachment\nexport const enum HistoryObject {\n  All = 'all',\n  Calendar = 'calendar',\n  CalendarEvent = 'calendarEvent',\n  Contact = 'contact',\n  ContactGroup = 'contactGroup',\n  ContactNote = 'contactNote',\n  Draft = 'draft',\n  Filter = 'filter',\n  Integration = 'integration',\n  MessageBody = 'messageBody',\n  SharedThread = 'sharedThread',\n  Team = 'team',\n  TeamMember = 'teamMember',\n  Template = 'template',\n  Thread = 'thread',\n\n  DraftAttachment = 'draftAttachment',\n  DraftAttachmentAppend = 'draftAttachmentAppend',\n}\n\nexport interface History {\n  id: string;\n  object: HistoryObject;\n  deleted: string[];\n  clear: string;\n  clearAccount: string;\n  calendars: Calendar[];\n  calendarEvents: CalendarEvent[];\n  contacts: Contact[];\n  contactGroups: ContactGroup[];\n  contactNotes: ContactNote[];\n  sharedThreads: SharedThread[];\n  teamMembers: TeamMember[];\n  threads: Thread[];\n  filters: Filter[];\n}\n\nexport interface TeamMember {\n  id: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  photoUrl: string;\n}\n\nexport const enum TeamInviteStatus {\n  Pending = 'pending',\n  Accepted = 'accepted',\n  Expired = 'expired',\n}\n\nexport interface TeamInvite {\n  id: string;\n  created: Date;\n  updated: Date;\n  team: string;\n  inviter: string;\n  email: string;\n  status: TeamInviteStatus;\n  invitee?: string;\n}\n\nexport interface TeamMembers {\n  [id: string]: TeamMember;\n}\n\nexport interface MailCount {\n  inboxRead: number;\n  inboxUnread: number;\n  listsUnread: { [id: string]: number };\n  laterCount: number;\n  starredCount: number;\n  followUpCount: number;\n}\n\nexport interface Route {\n  pathname: string;\n  component: any;\n  title?: string;\n  hide?: boolean;\n}\n\nexport const enum TemplateType {\n  Message = 'message',\n}\n\nexport interface Template {\n  id: string;\n  created: Date;\n  updated: Date;\n  type: TemplateType;\n  name: string;\n  subject: string;\n  body: string;\n\n  user: string;\n  team?: string;\n  attachments: Attachment[];\n  to?: string[];\n  cc?: string[];\n  bcc?: string[];\n}\n\nexport interface Track {\n  thread: string;\n  message: string;\n  actions: {\n    [email: string]: TrackAction[];\n  };\n}\n\n// TrackActionKeySomeone is used when per-recipient tracking is not available\nexport const TrackActionKeySomeone = 'someone';\n\nexport interface TrackAction {\n  date: Date;\n  type: TrackActionType;\n  url?: string; // provided for type attachment\n  filename?: string; // provided for type link\n}\n\nexport const enum TrackActionType {\n  Read = '',\n  Link = 'link',\n  Attachment = 'attachment',\n  Response = 'response',\n}\n\nexport interface CloudFile {\n  fileName: string;\n  type: string;\n  size: number;\n\n  // Server response\n  url: string;\n  cloudFile: string;\n  cloudUrl: string;\n}\n\nexport const enum FileType {\n  Document = 'document',\n  Pdf = 'pdf',\n  Excel = 'excel',\n  Powerpoint = 'powerpoint',\n  Illustrator = 'illustrator',\n  Photoshop = 'photoshop',\n  Image = 'image',\n  Zip = 'zip',\n  Audio = 'audio',\n  Video = 'video',\n  Unknown = 'unknown',\n}\n\nexport const enum CommitStatus {\n  Pending = 'pending',\n  Ready = 'ready',\n  Processing = 'processing',\n  Complete = 'complete',\n  Error = 'error',\n}\n\n// ThreadCommitMeta has necessary diff to be used in conjunction with thread in Commit constructor\n// TakeOne signifies that we only want to perform operation on selectedThread\nexport interface ThreadCommitMeta {\n  box?: ThreadBox;\n  when?: Date;\n  read?: boolean;\n  starred?: boolean;\n  label?: string;\n  singleResource?: string;\n  waiting?: Waiting | null;\n  muted?: boolean;\n}\n\nexport interface FileUploadMeta {\n  id?: string;\n  attachmentId: string;\n  resourceId: string;\n  created: Date;\n  store: Stores;\n  status: CommitStatus;\n  meta: AttachmentMeta;\n}\n\n// Commit represents an Create, Update, or Delete event for a resource.\n// Id is autogenerated by IndexDB in monotonically ascending order.\nexport interface Commit {\n  id?: number;\n  created: Date;\n  status: CommitStatus;\n  store: Stores;\n  resource: HistoryObject;\n  resourceId: string;\n  resourceHash: string;\n  method: string;\n  route: string;\n  payload?: any;\n  undoable: boolean;\n  undoPayload?: any;\n  account?: string;\n\n  rehydrateMeta?: any;\n}\n\nexport const enum NotificationType {\n  Mail = 'mail',\n  Track = 'track',\n  Comment = 'comment',\n  Generic = 'generic',\n}\n\nexport interface RealtimeNotification {\n  type: NotificationType;\n  sound: boolean;\n  title: string;\n  body: string;\n\n  thread?: string;\n  first?: boolean;\n  draft?: string;\n  message?: string;\n  sharedThread?: string;\n  comment?: string;\n  emailNotification?: string;\n  account?: string;\n}\n\nexport type Partial<T> = { [P in keyof T]?: T[P] };\n\nexport type RequiredPartial<Model, Keys extends keyof Model> = {\n  [K in Keys]: Model[K];\n} & {\n  [P in keyof Model]?: Model[P]\n};\n\nexport interface Device {\n  id: string;\n  created: Date;\n  updated: Date;\n  lastSeen?: Date;\n  os?: string;\n  platform: DevicePlatform;\n  type: DeviceType;\n  deviceId: string;\n  deviceToken?: string;\n  version: number;\n  build: string;\n}\n\nexport const enum DevicePlatform {\n  OSX = 'osx', // Use with OG native mac app only\n  macOS = 'macos', // Use with electron mac app only\n  iOS = 'ios',\n  Web = 'web',\n  Windows = 'windows',\n}\n\nexport const enum DeviceType {\n  Mobile = 'mobile',\n  Tablet = 'tablet',\n  Desktop = 'desktop',\n}\n\nexport const enum DeviceNotificationsMail {\n  New = 'new',\n  None = 'none',\n}\n\nexport const enum DeviceNotificationsTracking {\n  First = 'first',\n  All = 'all',\n  None = 'none',\n}\n\nexport interface DeviceNotifications {\n  enabled: boolean;\n  mail: DeviceNotificationsMail;\n  tracking: DeviceNotificationsTracking;\n  sandbox: boolean;\n}\n\nexport const enum IntegrationStatus {\n  Ok = 'ok',\n  Invalid = 'invalid', // Should ask user to reauthenticate\n  Ready = 'ready', // Enabled for another user on the team\n}\n\nexport const enum IntegrationType {\n  Asana = 'asana',\n  Hubspot = 'hubspot',\n  Salesforce = 'salesforce',\n  Slack = 'slack',\n  Zoom = 'zoom',\n}\n\nexport interface Integration {\n  status: IntegrationStatus;\n  type: IntegrationType;\n\n  // for IntegrationType.Asana\n  asanaWorkspace?: string;\n}\n\nexport const enum EventRecipientType {\n  Contact = 'contact',\n  ContactGroup = 'contactGroup',\n}\n\nexport interface EventRecipient {\n  type: EventRecipientType;\n  displayName: string;\n  identifier: string;\n}\n\nexport interface Event {\n  name: string;\n  notes: string;\n  location: string;\n  recipients: EventRecipient[];\n}\n\nexport interface TimeBlock {\n  startTime: Moment;\n  endTime: Moment;\n  event: Event;\n}\n\nexport interface Calendar {\n  id: string;\n  account: string;\n  apiId: string;\n  name: string;\n  description: string;\n  backgroundColor: string;\n  foregroundColor: string;\n  hidden: boolean;\n  readOnly?: boolean; // Only use readOnly calendars for blocking timeslots in scheduling\n}\n\nexport const enum AttendeeStatus {\n  NeedsAction = 'needsAction',\n  Declined = 'declined',\n  Accepted = 'accepted',\n  Tentative = 'tentative',\n}\n\nexport interface Attendee {\n  name: string;\n  email: string;\n  status: AttendeeStatus;\n  optional: boolean;\n  organizer: boolean;\n}\n\nexport interface CalendarEvent {\n  id: string;\n  account: string;\n  apiId: string;\n  calendarApiId: string;\n  status: string;\n  name: string;\n  location: string;\n  startTime: Date;\n  endTime: Date;\n  recurrence: string[];\n  attendees: Attendee[];\n  isAllDay: boolean;\n  calendar: Calendar;\n}\n\nexport enum OnboardingType {\n  SendMessage = 'sendMessage',\n  CreateDraft = 'createDraft',\n  Sequences = 'sequences',\n  ThreadDetailTracking = 'threadDetailTracking',\n  Scheduling = 'scheduling',\n  DownloadNativeApps = 'downloadNativeApps',\n  CommandCenter = 'commandCenter',\n\n  ExploreModal = 'exploreModal',\n  AddSequenceRecipients = 'addSequenceRecipients',\n  EditSequenceStage = 'editSequenceStage',\n  CreateAdditionalStage = 'createAdditionalStage',\n  ActivateSequence = 'activateSequence',\n\n  CreateComment = 'createComment',\n  MentionsTab = 'mentionsTab',\n  InviteTeamMembers = 'inviteTeamMembers',\n\n  TemplatesTabGem = 'templatesTabGem',\n  SharedThreadsTabGem = 'sharedThreadsTabGem',\n  MeetingTimesTabGem = 'meetingTimesTabGem',\n  UnsubscriberGem = 'unsubscriberGem',\n\n  // Right Sidebar Basic\n  NextThread = 'nextThread',\n  PreviousThread = 'previousThread',\n  Archive = 'archive',\n  Undo = 'undo',\n  Block = 'block',\n  ReadLater = 'readLater',\n  CommandLater = 'commandLater',\n\n  // RSB Draft\n  SendLater = 'sendLater',\n  FollowUpReminder = 'followUpReminder',\n  SaveAsTemplate = 'saveAsTemplate',\n  MessageTemplates = 'messageTemplates',\n\n  // Thread Extra\n  ShareThread = 'shareThread',\n  Comment = 'comment',\n\n  // Claim Credit\n  ClaimCredit = 'claimedCredit',\n  CreditClaimable = 'creditClaimable',\n\n  // Others\n  ActivityFeed = 'activityFeed',\n\n  // UI-specific\n  Complete = 'complete',\n}\n\nexport const enum CalendarEventStatus {\n  Confirmed = 'confirmed',\n  Tentative = 'tentative',\n  Cancelled = 'cancelled',\n}\n\nexport interface Onboarding {\n  exploreModal: boolean;\n  addSequenceRecipients: boolean;\n  editSequenceStage: boolean;\n  createAdditionalStage: boolean;\n  activateSequence: boolean;\n  sendMessage: boolean;\n\n  // Mocks\n  createDraft: boolean;\n  sequences: boolean;\n  threadDetailTracking: boolean;\n  scheduling: boolean;\n  downloadNativeApps: boolean;\n  commandCenter: boolean;\n  contactSupportPopup: boolean;\n\n  createComment: boolean;\n  mentionsTab: boolean;\n  inviteTeamMembers: boolean;\n  meetingTimesTabGem: boolean;\n  templatesTabGem: boolean;\n  sharedThreadsTabGem: boolean;\n  unsubscriberGem: boolean;\n\n  // RSB Draft\n  sendLater: boolean;\n  followUpReminder: boolean;\n  saveAsTemplate: boolean;\n  messageTemplates: boolean;\n\n  // Extras\n  shareThread: boolean;\n  comment: boolean;\n  activityFeed: boolean;\n  creditClaimable: boolean;\n  claimedCredit: boolean;\n\n  // Onboarding Step\n  steps?: { [key: string]: boolean };\n}\n\nexport interface HotkeyActions { [name: string]: number; }\n\nexport const enum ReferralInviteStatus {\n  Pending = 'pending',\n  SignedUp = 'signedUp',\n  Redeemed = 'redeemed',\n}\n\nexport interface ReferralInvite {\n  id: string;\n  email: string;\n  status: ReferralInviteStatus;\n}\n\nexport const enum OAuthType {\n  Google = 'google',\n  Microsoft = 'microsoftGraph',\n}\n\nexport enum ThemeSetting {\n  Dark = 'dark',\n  Light = 'light',\n  Auto = 'auto',\n  Default = 'default',\n}\n\ninterface DownloadAttachmentData {\n  url: string;\n  filename: string;\n  thread?: string;\n  message: string;\n  attachment: string;\n  saveAs?: boolean;\n  preview?: boolean;\n  open?: boolean;\n}\n\nexport interface PMElectronBridge {\n  os?: string;\n  version?: string;\n  swipeInverted?: boolean;\n  rosetta?: boolean;\n\n  setBadgeCount(count: number): boolean;\n  setDefaultClient?(): void;\n  unsetDefaultClient?(): void;\n\n  // Deprecated\n  // When bridge provides these, the new default client funcs will not be available\n  isDefaultClient?(): boolean;\n\n  // New Default Client\n  // When bridge provides these, the old default client funcs will not be available\n  setDefaultClientHandler?(handler: (isDefault: boolean) => void): void;\n  triggerDefaultClientCheck?(): void;\n\n  installUpdate?(): void;\n  appReady?(): void;\n  // clearCache is the old attachment clearing mechanism\n  clearCache?(): void;\n  // clearCacheV2 is the new clearCache mechanism that also deletes IndexedDb files\n  // in addition to attachments cache. If clearCacheV2 exists, clearCache will not exist\n  clearCacheV2?(): void;\n  setClearCacheStatusHandler?(// Always available when clearCacheV2 exists\n    handler: (clearing: boolean, error?: Error) => void,\n  ): void;\n\n  downloadAttachment?(data: DownloadAttachmentData): void;\n  openBackground?(url: string): void;\n  restoreWindow?(): void;\n\n  setMailtoHandler?(handler: (uri: string) => void): void;\n  setNavigationHandler?(handler: (url: string) => void): void;\n  setUpdateReadyHandler?(handler: () => void): void;\n  setShouldSyncHandler?(handler: () => void): void;\n  setAttachmentDownloadingHandler?(\n    handler: (id: string, progress: number, preview: boolean) => void,\n  ): void;\n  setAttachmentDownloadCompleteHandler?(\n    handler: (id: string, preview: boolean) => void,\n  ): void;\n  setErrorToastHandler?(handler: (error: Error) => void): void;\n\n  // Used specifically by windows title bar\n  isMaximized?(): boolean;\n  maximizeWindow?(): void;\n  minimizeWindow?(): void;\n  closeWindow?(): void;\n  saveRestoreCommits?(items: any): void;\n  showMenu?(x: number, y: number): void;\n  setWindowMaximizedHandler(handler: (maximized: boolean) => void): void;\n\n  // Used for Spellchecker preferences UI on Windows only\n  currentSpellcheckerLanguages?(): string[];\n  getSpellcheckerAvailableLanguages?(): string[];\n  setSpellcheckerLanguages?(languages: string[]): void;\n}\n\nexport interface ClearCacheStatus {\n  hash: string;\n  counter: number;\n  ignoreCommits: boolean;\n\n  completedHash: string;\n  completedCounter: number;\n  version?: number; // Migration version\n}\n"]}]}