{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Notifications/Notifications.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Notifications/Notifications.tsx","mtime":1675280254107},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Notifications/Notifications.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Notifications/Notifications.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport { size, map, values, forEach } from 'lodash';\nimport NavigationHeader from '../../components/NavigationHeader';\n\nimport './Notifications.scss';\nimport {\n  Account,\n  DeviceTypeNotifications,\n  DeviceNotificationsMail,\n  DeviceNotificationsTracking,\n} from '@src/types';\nimport ToggleCell from '@src/routes/Settings/components/ToggleCell';\nimport Toggle from '@src/components/Form/Toggle';\n\nexport interface Props {\n  deviceNotifications: { [id: string]: DeviceTypeNotifications };\n  selectAccount: (id: string) => Account;\n  isMobile?: boolean;\n  collapsedMobile?: boolean;\n}\n\nexport interface DispatchProps {\n  updateAccount: (account: Account) => void;\n  collapseLsb: (collapse: boolean) => void;\n}\n\ninterface State {\n  differentSettings: boolean;\n  trackingSetting: DeviceNotificationsTracking;\n}\n\nclass Notifications extends React.PureComponent<Props & DispatchProps, State> {\n  trackingValues = {\n    [DeviceNotificationsTracking.All]: 'Notify every time a message is read',\n    [DeviceNotificationsTracking.First]: 'Notify when a message is read for the first time',\n  };\n\n  constructor(props: Props & DispatchProps) {\n    super(props);\n\n    this.state = {\n      differentSettings: this.isDifferentSettings(props.deviceNotifications),\n      trackingSetting: this.getTrackingSetting(props.deviceNotifications),\n    };\n  }\n\n  getTrackingSetting = (notifications: { [id: string]: DeviceTypeNotifications }) => {\n    if (!size(notifications)) {\n      return DeviceNotificationsTracking.None;\n    }\n\n    const arr = values(notifications);\n    const trackingValues = arr\n      .filter(notification => notification.desktop.tracking !== DeviceNotificationsTracking.None);\n\n    return trackingValues.length ?\n      trackingValues[0].desktop.tracking : DeviceNotificationsTracking.None;\n  }\n\n  isDifferentSettings = (notifications: { [id: string]: DeviceTypeNotifications }) => {\n    let allMailSettingsSame = true;\n    let allTrackSettingsSame = true;\n    if (size(notifications)) {\n      const arr = values(notifications);\n      let notification;\n      for (notification of arr) {\n        if (notification.desktop.mail !== notification.mobile.mail) {\n          allMailSettingsSame = false;\n          break;\n        }\n        if (notification.desktop.tracking !== notification.mobile.tracking) {\n          allTrackSettingsSame = false;\n          break;\n        }\n      }\n    }\n\n    return !(allMailSettingsSame && allTrackSettingsSame);\n  }\n\n  handleToggleChange = (e: React.SyntheticEvent<HTMLElement>) => {\n    const id = e.currentTarget.id;\n    const { selectAccount, updateAccount, deviceNotifications } = this.props;\n    let account;\n\n    if (id === 'different-settings') {\n      const { differentSettings } = this.state;\n      this.setState({ differentSettings: !differentSettings }, () => {\n        // checks that user has set different settings to off\n        // defaults to sync all device notifications settings for account to desktop settings\n        if (!this.state.differentSettings && this.isDifferentSettings(deviceNotifications)) {\n          Object.keys(deviceNotifications).forEach((accountId) => {\n            account = selectAccount(accountId);\n            if (account) {\n              updateAccount({\n                ...account,\n                notifications: {\n                  ...account.notifications,\n                  mobile: account.notifications.desktop,\n                  tablet: account.notifications.desktop,\n                },\n              });\n            }\n          });\n        }\n      });\n      return;\n    }\n\n    let suffix;\n    let device;\n    let updatedNotifications;\n    let matched;\n    let handled;\n\n    const suffixes = ['mail', 'tracking'];\n    const devices = ['mobile', 'desktop'];\n    for (let s = 0; s < suffixes.length && !matched; s += 1) {\n      suffix = suffixes[s];\n      for (device of devices) {\n        if (id.match(new RegExp(`${device}-${suffix}$`, 'ig'))) {\n          matched = true;\n          break;\n        }\n      }\n    }\n\n    if (matched && device && suffix) {\n      account = selectAccount(id.slice(0, id.length - `-${device}-${suffix}`.length));\n\n      switch (suffix) {\n        case 'mail':\n          const mail = account.notifications[device].mail === DeviceNotificationsMail.None ?\n          DeviceNotificationsMail.New : DeviceNotificationsMail.None;\n          updatedNotifications = {\n            ...account.notifications,\n            [device]: {\n              ...account.notifications[device],\n              mail,\n            },\n          };\n\n          // update tablet if we're updating mobile\n          if (device === 'mobile') {\n            updatedNotifications = {\n              ...updatedNotifications,\n              tablet: {\n                ...account.notifications.tablet,\n                mail,\n              },\n            };\n          }\n\n          handled = true;\n          break;\n        case 'tracking':\n          const { trackingSetting } = this.state;\n          let defaultTrackSetting = DeviceNotificationsTracking.First;\n          if (trackingSetting !== DeviceNotificationsTracking.None) {\n            defaultTrackSetting = trackingSetting;\n          }\n\n          const tracking =\n            account.notifications[device].tracking === DeviceNotificationsTracking.All ||\n            account.notifications[device].tracking === DeviceNotificationsTracking.First ?\n              DeviceNotificationsTracking.None : defaultTrackSetting;\n          updatedNotifications = {\n            ...account.notifications,\n            [device]: {\n              ...account.notifications[device],\n              tracking,\n            },\n          };\n\n          // update tablet if we're updating mobile\n          if (device === 'mobile') {\n            updatedNotifications = {\n              ...updatedNotifications,\n              tablet: {\n                ...account.notifications.tablet,\n                tracking,\n              },\n            };\n          }\n\n          handled = true;\n          break;\n        default:\n          break;\n      }\n    }\n\n    if (handled && account && updatedNotifications) {\n      updateAccount({\n        ...account,\n        notifications: updatedNotifications,\n      });\n    }\n  }\n\n  handleTrackingSelect = (value: string, index: number, id?: string) => {\n    const { updateAccount, deviceNotifications, selectAccount } = this.props;\n\n    const trackingDefault = Object.keys(this.trackingValues)[index] as DeviceNotificationsTracking;\n    let account;\n    forEach(deviceNotifications, (notification, accountId) => {\n      if (notification.desktop.tracking !== DeviceNotificationsTracking.None &&\n        notification.desktop.tracking !== trackingDefault) {\n        account = selectAccount(accountId);\n        updateAccount({\n          ...account,\n          notifications: {\n            ...account.notifications,\n            desktop: {\n              ...account.notifications.desktop,\n              tracking: trackingDefault,\n            },\n          },\n        });\n      }\n\n      if (notification.mobile.tracking !== DeviceNotificationsTracking.None &&\n        notification.mobile.tracking !== trackingDefault) {\n        account = selectAccount(accountId);\n        updateAccount({\n          ...account,\n          notifications: {\n            ...account.notifications,\n            mobile: {\n              ...account.notifications.mobile,\n              tracking: trackingDefault,\n            },\n            tablet: {\n              ...account.notifications.tablet,\n              tracking: trackingDefault,\n            },\n          },\n        });\n      }\n    });\n\n    this.setState({ trackingSetting: trackingDefault });\n  }\n\n  render() {\n    const { deviceNotifications, selectAccount } = this.props;\n    const { differentSettings } = this.state;\n\n    if (!size(deviceNotifications)) {\n      return null;\n    }\n\n    return (\n      <div className=\"settings-panel notifications\">\n        <NavigationHeader\n          title=\"Notifications\"\n          isMobile={this.props.isMobile}\n          collapsedMobile={this.props.collapsedMobile}\n          collapseLsb={this.props.collapseLsb}\n        />\n        <div className=\"main\">\n          <div className=\"account-notifications\">\n            <div className=\"heading row\">\n              <h4>Account</h4>\n              <h4>Get notified about</h4>\n            </div>\n            {map(deviceNotifications, (notifications, id) => {\n              const account = selectAccount(id);\n\n              if (!account) {\n                return null;\n              }\n\n              return (\n                <div className=\"row account\" key={id}>\n                  <div className=\"name\">\n                    {account.description}\n                  </div>\n                  <div className=\"toggles\">\n                    <div className=\"mail\">\n                      <Toggle\n                        onChange={this.handleToggleChange}\n                        on={notifications.desktop.mail === DeviceNotificationsMail.New}\n                        id={`${id}-desktop-mail`}\n                      />\n                      <span>New mail</span>\n                    </div>\n                    <div className=\"tracking\">\n                      <Toggle\n                        onChange={this.handleToggleChange}\n                        on={notifications.desktop.tracking === DeviceNotificationsTracking.All ||\n                          notifications.desktop.tracking === DeviceNotificationsTracking.First}\n                        id={`${id}-desktop-tracking`}\n                      />\n                      <span>Email tracking</span>\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n          <div className=\"device-notifications\">\n            <ToggleCell\n              title=\"Use different settings for my mobile devices\"\n              on={differentSettings}\n              onToggle={this.handleToggleChange}\n              toggleId=\"different-settings\"\n            />\n          </div>\n          {differentSettings && <div className=\"mobile-notifications\">\n            <div className=\"heading row\">\n              <h4>Mobile notification settings</h4>\n            </div>\n            {map(deviceNotifications, (notifications, id) => {\n              const account = selectAccount(id);\n\n              if (!account) {\n                return null;\n              }\n\n              return (\n                <div className=\"row account\" key={id}>\n                  <div className=\"name\">\n                    {account.description}\n                  </div>\n                  <div className=\"toggles\">\n                    <div className=\"mail\">\n                      <Toggle\n                        onChange={this.handleToggleChange}\n                        on={notifications.mobile.mail === DeviceNotificationsMail.New}\n                        id={`${id}-mobile-mail`}\n                      />\n                      <span>New mail</span>\n                    </div>\n                    <div className=\"tracking\">\n                      <Toggle\n                        onChange={this.handleToggleChange}\n                        on={notifications.mobile.tracking === DeviceNotificationsTracking.All ||\n                          notifications.mobile.tracking === DeviceNotificationsTracking.First}\n                        id={`${id}-mobile-tracking`}\n                      />\n                      <span>Email tracking</span>\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n          </div>}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Notifications;\n"]}]}