{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/CommandControl/components/ReadLater/index.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/CommandControl/components/ReadLater/index.ts","mtime":1675280253998},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IFJlYWRMYXRlciBmcm9tICcuL1JlYWRMYXRlcic7CmltcG9ydCB7IGNvbm5lY3QgfSBmcm9tICdyZWFjdC1yZWR1eCc7CmltcG9ydCB7IHRocmVhZENvbW1pdHNTdWJtaXQgfSBmcm9tICdAc3JjL2R1Y2tzL3RocmVhZHMnOwppbXBvcnQgeyBvbmJvYXJkaW5nUGF0Y2gsIHNlbGVjdFJzYk9uYm9hcmRpbmcgfSBmcm9tICdAc3JjL2R1Y2tzL21lJzsKdmFyIG1hcFN0YXRlVG9Qcm9wcyA9IGZ1bmN0aW9uIChzdGF0ZSwgb3duUHJvcHMpIHsKICAgIHJldHVybiB7CiAgICAgICAgc2VsZWN0ZWRUaHJlYWQ6IHN0YXRlLnNlbGVjdGVkVGhyZWFkICYmIHN0YXRlLnNlbGVjdGVkVGhyZWFkLmlkIHx8ICcnLAogICAgICAgIHByZWZlcmVuY2VzOiBzdGF0ZS5wcmVmZXJlbmNlcywKICAgICAgICByc2JPbmJvYXJkaW5nOiBzZWxlY3RSc2JPbmJvYXJkaW5nKHN0YXRlKSwKICAgIH07Cn07CnZhciBtYXBEaXNwYXRjaFRvUHJvcHMgPSBmdW5jdGlvbiAoZGlzcGF0Y2gpIHsgcmV0dXJuICh7CiAgICBzdWJtaXRDb21taXRNZXRhOiBmdW5jdGlvbiAoY29tbWl0TWV0YSkgeyByZXR1cm4gZGlzcGF0Y2godGhyZWFkQ29tbWl0c1N1Ym1pdChjb21taXRNZXRhKSk7IH0sCiAgICB1cGRhdGVPbmJvYXJkaW5nOiBmdW5jdGlvbiAobWV0YSkgeyByZXR1cm4gZGlzcGF0Y2gob25ib2FyZGluZ1BhdGNoKG1ldGEpKTsgfSwKfSk7IH07CmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QobWFwU3RhdGVUb1Byb3BzLCBtYXBEaXNwYXRjaFRvUHJvcHMpKFJlYWRMYXRlcik7Cg=="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/CommandControl/components/ReadLater/index.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/CommandControl/components/ReadLater/index.ts"],"names":[],"mappings":"AAAA,OAAO,SAAmC,MAAM,aAAa,CAAC;AAG9D,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AAGtC,OAAO,EAAE,mBAAmB,EAAE,MAAM,oBAAoB,CAAC;AACzD,OAAO,EAAE,eAAe,EAAE,mBAAmB,EAAE,MAAM,eAAe,CAAC;AAErE,IAAM,eAAe,GAAG,UAAC,KAAiB,EAAE,QAAe;IACzD,OAAO;QACL,cAAc,EAAE,KAAK,CAAC,cAAc,IAAI,KAAK,CAAC,cAAc,CAAC,EAAE,IAAI,EAAE;QACrE,WAAW,EAAE,KAAK,CAAC,WAAW;QAC9B,aAAa,EAAE,mBAAmB,CAAC,KAAK,CAAC;KAC1C,CAAC;AACJ,CAAC,CAAC;AAEF,IAAM,kBAAkB,GAAG,UAAC,QAA8B,IAAoB,OAAA,CAAC;IAC7E,gBAAgB,EAAE,UAAA,UAAU,IAAI,OAAA,QAAQ,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC,EAAzC,CAAyC;IACzE,gBAAgB,EAAE,UAAA,IAAI,IAAI,OAAA,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,EAA/B,CAA+B;CAC1D,CAAC,EAH4E,CAG5E,CAAC;AAEH,eAAe,OAAO,CAAC,eAAe,EAAE,kBAAkB,CAAC,CAAC,SAAS,CAAC,CAAC","sourcesContent":["import ReadLater, { Props, DispatchProps } from './ReadLater';\nimport { Dispatch } from 'redux';\n\nimport { connect } from 'react-redux';\nimport { StoreState } from '@src/types';\n\nimport { threadCommitsSubmit } from '@src/ducks/threads';\nimport { onboardingPatch, selectRsbOnboarding } from '@src/ducks/me';\n\nconst mapStateToProps = (state: StoreState, ownProps: Props): any => {\n  return {\n    selectedThread: state.selectedThread && state.selectedThread.id || '',\n    preferences: state.preferences,\n    rsbOnboarding: selectRsbOnboarding(state),\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<StoreState>): DispatchProps => ({\n  submitCommitMeta: commitMeta => dispatch(threadCommitsSubmit(commitMeta)),\n  updateOnboarding: meta => dispatch(onboardingPatch(meta)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ReadLater);\n"]}]}