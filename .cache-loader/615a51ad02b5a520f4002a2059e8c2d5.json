{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/worker/sync/SharedThreadSync.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/worker/sync/SharedThreadSync.ts","mtime":1675280254125},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkgewogICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBmdW5jdGlvbiAoZCwgYikgewogICAgICAgIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwKICAgICAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fAogICAgICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChiLmhhc093blByb3BlcnR5KHApKSBkW3BdID0gYltwXTsgfTsKICAgICAgICByZXR1cm4gZXh0ZW5kU3RhdGljcyhkLCBiKTsKICAgIH07CiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHsKICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpOwogICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfQogICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTsKICAgIH07Cn0pKCk7CmltcG9ydCB7IFN0b3JlcyB9IGZyb20gJ0BzcmMvbGliL2RiJzsKaW1wb3J0IHsgU2hhcmVkVGhyZWFkQ2xpZW50IH0gZnJvbSAnQHNyYy9hcGkvc2hhcmVkVGhyZWFkcyc7CmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJzsKaW1wb3J0IHsgQVBJU3luYyB9IGZyb20gJy4vQVBJU3luYyc7CmltcG9ydCB7IHNlbmRTaGFyZWRUaHJlYWRVcGRhdGVkIH0gZnJvbSAnQHNyYy93b3JrZXIvYnJpZGdlL3dvcmtlckV2ZW50cyc7CmltcG9ydCB7IGNvbXB1dGVTaGFyZWRUaHJlYWQgfSBmcm9tICdAc3JjL2xpYi9zaGFyZWRUaHJlYWQnOwp2YXIgU2hhcmVkVGhyZWFkU3luYyA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHsKICAgIF9fZXh0ZW5kcyhTaGFyZWRUaHJlYWRTeW5jLCBfc3VwZXIpOwogICAgZnVuY3Rpb24gU2hhcmVkVGhyZWFkU3luYyhhcGkpIHsKICAgICAgICBpZiAoYXBpID09PSB2b2lkIDApIHsgYXBpID0gbmV3IFNoYXJlZFRocmVhZENsaWVudCgpOyB9CiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcywgJ1NoYXJlZFRocmVhZFN5bmMnLCBTdG9yZXMuU2hhcmVkVGhyZWFkcywgZmFsc2UpIHx8IHRoaXM7CiAgICAgICAgX3RoaXMuYXBpID0gYXBpOwogICAgICAgIHJldHVybiBfdGhpczsKICAgIH0KICAgIFNoYXJlZFRocmVhZFN5bmMucHJvdG90eXBlLmZldGNoTmV4dFBhZ2UgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuYXBpCiAgICAgICAgICAgIC5saXN0KHRoaXMub2Zmc2V0KQogICAgICAgICAgICAubWFwKGZ1bmN0aW9uICh0aHJlYWRzKSB7IHJldHVybiB0aHJlYWRzLm1hcChmdW5jdGlvbiAodGhyZWFkKSB7IHJldHVybiBjb21wdXRlU2hhcmVkVGhyZWFkKHRocmVhZCk7IH0pOyB9KTsKICAgIH07CiAgICBTaGFyZWRUaHJlYWRTeW5jLnByb3RvdHlwZS5uZXh0UGFnZU9mZnNldCA9IGZ1bmN0aW9uIChtb2RlbHMpIHsKICAgICAgICByZXR1cm4gbW9kZWxzW21vZGVscy5sZW5ndGggLSAxXS5pZDsKICAgIH07CiAgICBTaGFyZWRUaHJlYWRTeW5jLnByb3RvdHlwZS5vblNhdmUgPSBmdW5jdGlvbiAoc2hhcmVkVGhyZWFkcykgewogICAgICAgIHNoYXJlZFRocmVhZHMuZm9yRWFjaChmdW5jdGlvbiAoc2hhcmVkVGhyZWFkKSB7IHJldHVybiBzZW5kU2hhcmVkVGhyZWFkVXBkYXRlZChzaGFyZWRUaHJlYWQpOyB9KTsKICAgICAgICByZXR1cm4gT2JzZXJ2YWJsZS5vZihudWxsKTsKICAgIH07CiAgICByZXR1cm4gU2hhcmVkVGhyZWFkU3luYzsKfShBUElTeW5jKSk7CmV4cG9ydCB7IFNoYXJlZFRocmVhZFN5bmMgfTsKZXhwb3J0IGRlZmF1bHQgU2hhcmVkVGhyZWFkU3luYzsK"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/worker/sync/SharedThreadSync.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/worker/sync/SharedThreadSync.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,aAAa,CAAC;AAErC,OAAO,EAAmB,kBAAkB,EAAE,MAAM,wBAAwB,CAAC;AAC7E,OAAO,EAAE,UAAU,EAAE,MAAM,MAAM,CAAC;AAClC,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AACpC,OAAO,EAAE,uBAAuB,EAAE,MAAM,iCAAiC,CAAC;AAC1E,OAAO,EAAE,mBAAmB,EAAE,MAAM,uBAAuB,CAAC;AAE5D;IAAsC,oCAAqB;IAIzD,0BAAY,GAA+C;QAA/C,oBAAA,EAAA,UAA2B,kBAAkB,EAAE;QAA3D,YACE,kBAAM,kBAAkB,EAAE,MAAM,CAAC,aAAa,EAAE,KAAK,CAAC,SAGvD;QADC,KAAI,CAAC,GAAG,GAAG,GAAG,CAAC;;IACjB,CAAC;IAES,wCAAa,GAAvB;QACE,OAAO,IAAI,CAAC,GAAG;aACZ,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;aACjB,GAAG,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,GAAG,CAAC,UAAA,MAAM,IAAI,OAAA,mBAAmB,CAAC,MAAM,CAAC,EAA3B,CAA2B,CAAC,EAAlD,CAAkD,CAAC,CAAC;IACxE,CAAC;IAES,yCAAc,GAAxB,UAAyB,MAAsB;QAC7C,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;IACtC,CAAC;IAES,iCAAM,GAAhB,UAAiB,aAA6B;QAC5C,aAAa,CAAC,OAAO,CAAC,UAAA,YAAY,IAAI,OAAA,uBAAuB,CAAC,YAAY,CAAC,EAArC,CAAqC,CAAC,CAAC;QAC7E,OAAO,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IACH,uBAAC;AAAD,CAAC,AAxBD,CAAsC,OAAO,GAwB5C;;AAED,eAAe,gBAAgB,CAAC","sourcesContent":["import { Stores } from '@src/lib/db';\nimport { SharedThread } from '@src/types/sharedThreads';\nimport { SharedThreadAPI, SharedThreadClient } from '@src/api/sharedThreads';\nimport { Observable } from 'rxjs';\nimport { APISync } from './APISync';\nimport { sendSharedThreadUpdated } from '@src/worker/bridge/workerEvents';\nimport { computeSharedThread } from '@src/lib/sharedThread';\n\nexport class SharedThreadSync extends APISync<SharedThread> {\n\n  private api: SharedThreadAPI;\n\n  constructor(api: SharedThreadAPI = new SharedThreadClient()) {\n    super('SharedThreadSync', Stores.SharedThreads, false);\n\n    this.api = api;\n  }\n\n  protected fetchNextPage(): Observable<SharedThread[]> {\n    return this.api\n      .list(this.offset)\n      .map(threads => threads.map(thread => computeSharedThread(thread)));\n  }\n\n  protected nextPageOffset(models: SharedThread[]): string {\n    return models[models.length - 1].id;\n  }\n\n  protected onSave(sharedThreads: SharedThread[]): Observable<null> {\n    sharedThreads.forEach(sharedThread => sendSharedThreadUpdated(sharedThread));\n    return Observable.of(null);\n  }\n}\n\nexport default SharedThreadSync;\n"]}]}