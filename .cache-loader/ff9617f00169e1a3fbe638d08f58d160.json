{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Accounts/routes/AliasDetail/index.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Accounts/routes/AliasDetail/index.ts","mtime":1675280254095},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4JzsKaW1wb3J0IHsgd2l0aFJvdXRlciB9IGZyb20gJ3JlYWN0LXJvdXRlcic7CmltcG9ydCB7IHNlbGVjdEF0dGFjaG1lbnRNZXRhc0ZvclJlc291cmNlIH0gZnJvbSAnQHNyYy9kdWNrcy9kcmFmdHMnOwppbXBvcnQgeyBzZWxlY3RBY2NvdW50LCBhY2NvdW50VXBkYXRlLCBzaWduYXR1cmVJbWFnZUFkZCwgc2lnbmF0dXJlSW1hZ2VSZW1vdmUsIGFjY291bnREZWxldGUsIGFjY291bnRDcmVhdGUsIH0gZnJvbSAnQHNyYy9kdWNrcy9hY2NvdW50cyc7CmltcG9ydCBBbGlhc0RldGFpbCBmcm9tICcuL0FsaWFzRGV0YWlsJzsKaW1wb3J0IHsgcHJlZmVyZW5jZXNVcGRhdGUgfSBmcm9tICdAc3JjL2R1Y2tzL21lJzsKdmFyIG1hcFN0YXRlVG9Qcm9wcyA9IGZ1bmN0aW9uIChzdGF0ZSwgb3duUHJvcHMpIHsKICAgIHZhciBhbGlhc1BhdGggPSBvd25Qcm9wcy5tYXRjaCAmJiBvd25Qcm9wcy5tYXRjaC5wYXJhbXMuYWxpYXNJZDsKICAgIHZhciBhY2NvdW50UGF0aCA9IG93blByb3BzLm1hdGNoICYmIG93blByb3BzLm1hdGNoLnBhcmFtcy5hY2NvdW50SWQ7CiAgICB2YXIgYWxpYXMgPSBzZWxlY3RBY2NvdW50KHN0YXRlLCBhbGlhc1BhdGgpOwogICAgdmFyIHBhcmVudCA9IHNlbGVjdEFjY291bnQoc3RhdGUsIGFjY291bnRQYXRoKTsKICAgIHJldHVybiB7CiAgICAgICAgYWxpYXM6IGFsaWFzLAogICAgICAgIHBhcmVudDogcGFyZW50LAogICAgICAgIGF0dGFjaG1lbnRNZXRhczogYWxpYXMgJiYgc2VsZWN0QXR0YWNobWVudE1ldGFzRm9yUmVzb3VyY2Uoc3RhdGUsIGFsaWFzLmlkKSB8fCBbXSwKICAgICAgICBwcmVmZXJlbmNlczogc3RhdGUucHJlZmVyZW5jZXMsCiAgICB9Owp9Owp2YXIgbWFwRGlzcGF0Y2hUb1Byb3BzID0gZnVuY3Rpb24gKGRpc3BhdGNoKSB7IHJldHVybiAoewogICAgLy8gdXBkYXRlUHJlZmVyZW5jZXM6IChwcmVmczogUHJlZmVyZW5jZXMpID0+IGRpc3BhdGNoKHByZWZlcmVuY2VzVXBkYXRlKHByZWZzKSksCiAgICBjcmVhdGVBbGlhczogZnVuY3Rpb24gKGFjY291bnQpIHsgcmV0dXJuIGRpc3BhdGNoKGFjY291bnRDcmVhdGUoYWNjb3VudCkpOyB9LAogICAgdXBkYXRlQWxpYXM6IGZ1bmN0aW9uIChhY2NvdW50KSB7IHJldHVybiBkaXNwYXRjaChhY2NvdW50VXBkYXRlKGFjY291bnQpKTsgfSwKICAgIGFkZFNpZ25hdHVyZUltYWdlOiBmdW5jdGlvbiAobWV0YSkgeyByZXR1cm4gZGlzcGF0Y2goc2lnbmF0dXJlSW1hZ2VBZGQobWV0YSkpOyB9LAogICAgcmVtb3ZlU2lnbmF0dXJlSW1hZ2U6IGZ1bmN0aW9uIChtZXRhKSB7IHJldHVybiBkaXNwYXRjaChzaWduYXR1cmVJbWFnZVJlbW92ZShtZXRhKSk7IH0sCiAgICBkZWxldGVBbGlhczogZnVuY3Rpb24gKG1ldGEpIHsgcmV0dXJuIGRpc3BhdGNoKGFjY291bnREZWxldGUobWV0YSkpOyB9LAogICAgdXBkYXRlUHJlZmVyZW5jZXM6IGZ1bmN0aW9uIChwcmVmcykgeyByZXR1cm4gZGlzcGF0Y2gocHJlZmVyZW5jZXNVcGRhdGUocHJlZnMpKTsgfSwKfSk7IH07CmV4cG9ydCBkZWZhdWx0IHdpdGhSb3V0ZXIoY29ubmVjdChtYXBTdGF0ZVRvUHJvcHMsIG1hcERpc3BhdGNoVG9Qcm9wcykoQWxpYXNEZXRhaWwpKTsK"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Accounts/routes/AliasDetail/index.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Accounts/routes/AliasDetail/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAY,MAAM,aAAa,CAAC;AAChD,OAAO,EAAuB,UAAU,EAAE,MAAM,cAAc,CAAC;AAG/D,OAAO,EAAE,gCAAgC,EAAE,MAAM,mBAAmB,CAAC;AACrE,OAAO,EACL,aAAa,EACb,aAAa,EACb,iBAAiB,EACjB,oBAAoB,EACpB,aAAa,EACb,aAAa,GACb,MAAM,qBAAqB,CAAC;AAC9B,OAAO,WAAqC,MAAM,eAAe,CAAC;AAClE,OAAO,EAAE,iBAAiB,EAAE,MAAM,eAAe,CAAC;AAElD,IAAM,eAAe,GAAG,UAAC,KAAiB,EAAE,QAAkC;IAC5E,IAAM,SAAS,GAAW,QAAQ,CAAC,KAAK,IAAI,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC;IAC1E,IAAM,WAAW,GAAW,QAAQ,CAAC,KAAK,IAAI,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC;IAC9E,IAAM,KAAK,GAAsB,aAAa,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;IACjE,IAAM,MAAM,GAAsB,aAAa,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;IAEpE,OAAO;QACL,KAAK,OAAA;QACL,MAAM,QAAA;QACN,eAAe,EAAE,KAAK,IAAI,gCAAgC,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,IAAI,EAAE;QACjF,WAAW,EAAE,KAAK,CAAC,WAAW;KAC/B,CAAC;AACJ,CAAC,CAAC;AAEF,IAAM,kBAAkB,GAAG,UAAC,QAA8B,IAAoB,OAAA,CAAC;IAC7E,iFAAiF;IACjF,WAAW,EAAE,UAAA,OAAO,IAAI,OAAA,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,EAAhC,CAAgC;IACxD,WAAW,EAAE,UAAA,OAAO,IAAI,OAAA,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,EAAhC,CAAgC;IACxD,iBAAiB,EAAE,UAAA,IAAI,IAAI,OAAA,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,EAAjC,CAAiC;IAC5D,oBAAoB,EAAE,UAAA,IAAI,IAAI,OAAA,QAAQ,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,EAApC,CAAoC;IAClE,WAAW,EAAE,UAAA,IAAI,IAAI,OAAA,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,EAA7B,CAA6B;IAClD,iBAAiB,EAAE,UAAA,KAAK,IAAI,OAAA,QAAQ,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,EAAlC,CAAkC;CAC/D,CAAC,EAR4E,CAQ5E,CAAC;AAEH,eAAe,UAAU,CAAC,OAAO,CAAC,eAAe,EAAE,kBAAkB,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC","sourcesContent":["import { connect, Dispatch } from 'react-redux';\nimport { RouteComponentProps, withRouter } from 'react-router';\n\nimport { StoreState, Account } from '@src/types';\nimport { selectAttachmentMetasForResource } from '@src/ducks/drafts';\nimport {\n  selectAccount,\n  accountUpdate,\n  signatureImageAdd,\n  signatureImageRemove,\n  accountDelete,\n  accountCreate,\n } from '@src/ducks/accounts';\nimport AliasDetail, { Props, DispatchProps } from './AliasDetail';\nimport { preferencesUpdate } from '@src/ducks/me';\n\nconst mapStateToProps = (state: StoreState, ownProps: RouteComponentProps<any>): Partial<Props> => {\n  const aliasPath: string = ownProps.match && ownProps.match.params.aliasId;\n  const accountPath: string = ownProps.match && ownProps.match.params.accountId;\n  const alias: Account|undefined = selectAccount(state, aliasPath);\n  const parent: Account|undefined = selectAccount(state, accountPath);\n\n  return {\n    alias,\n    parent,\n    attachmentMetas: alias && selectAttachmentMetasForResource(state, alias.id) || [],\n    preferences: state.preferences,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<StoreState>): DispatchProps => ({\n  // updatePreferences: (prefs: Preferences) => dispatch(preferencesUpdate(prefs)),\n  createAlias: account => dispatch(accountCreate(account)),\n  updateAlias: account => dispatch(accountUpdate(account)),\n  addSignatureImage: meta => dispatch(signatureImageAdd(meta)),\n  removeSignatureImage: meta => dispatch(signatureImageRemove(meta)),\n  deleteAlias: meta => dispatch(accountDelete(meta)),\n  updatePreferences: prefs => dispatch(preferencesUpdate(prefs)),\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AliasDetail));\n"]}]}