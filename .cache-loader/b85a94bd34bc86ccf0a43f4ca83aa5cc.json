{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/CommandControl/components/Label/Label.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/CommandControl/components/Label/Label.tsx","mtime":1675280253998},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkgewogICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBmdW5jdGlvbiAoZCwgYikgewogICAgICAgIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwKICAgICAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fAogICAgICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChiLmhhc093blByb3BlcnR5KHApKSBkW3BdID0gYltwXTsgfTsKICAgICAgICByZXR1cm4gZXh0ZW5kU3RhdGljcyhkLCBiKTsKICAgIH07CiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHsKICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpOwogICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfQogICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTsKICAgIH07Cn0pKCk7CmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7CmltcG9ydCB7IGZpbmRJbmRleCwgc29ydEJ5IH0gZnJvbSAnbG9kYXNoJzsKaW1wb3J0IHsgRWRpdG9yLCBFZGl0b3JTdGF0ZSwgfSBmcm9tICdkcmFmdC1qcyc7CmltcG9ydCBDb250cm9sUG9wb3ZlciBmcm9tICcuLi9jb21wb25lbnRzL0NvbnRyb2xQb3BvdmVyJzsKaW1wb3J0IHsgQ29tbWFuZENvbnRyb2xUeXBlIH0gZnJvbSAnQHNyYy90eXBlcyc7CmltcG9ydCBMYWJlbEljb24gZnJvbSAnQHNyYy9jb21wb25lbnRzL0ljb25zL0xhYmVsLnN2Zyc7CmltcG9ydCAnLi9MYWJlbC5zY3NzJzsKaW1wb3J0IHsgdHlwZWFoZWFkUmVnZXggfSBmcm9tICdAc3JjL2xpYi90eXBlYWhlYWQnOwppbXBvcnQgeyBzb3J0U3RyaW5nTWF0Y2hlcyB9IGZyb20gJ0BzcmMvbGliL21hdGNoZXInOwp2YXIgTGFiZWwgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7CiAgICBfX2V4dGVuZHMoTGFiZWwsIF9zdXBlcik7CiAgICBmdW5jdGlvbiBMYWJlbCgpIHsKICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzKSB8fCB0aGlzOwogICAgICAgIF90aGlzLmhhbmRsZVN0cmF0ZWd5ID0gZnVuY3Rpb24gKGNvbnRlbnRCbG9jaywgY2FsbGJhY2ssIGNvbnRlbnRTdGF0ZSkgewogICAgICAgICAgICBjb250ZW50QmxvY2suZmluZEVudGl0eVJhbmdlcyhmdW5jdGlvbiAoY2hhcmFjdGVyKSB7CiAgICAgICAgICAgICAgICB2YXIgZW50aXR5S2V5ID0gY2hhcmFjdGVyLmdldEVudGl0eSgpOwogICAgICAgICAgICAgICAgaWYgKGVudGl0eUtleSA9PT0gbnVsbCkgewogICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIHJldHVybiBjb250ZW50U3RhdGUuZ2V0RW50aXR5KGVudGl0eUtleSkuZ2V0VHlwZSgpID09PSAnVE9LRU4nOwogICAgICAgICAgICB9LCBjYWxsYmFjayk7CiAgICAgICAgfTsKICAgICAgICBfdGhpcy5jcmVhdGVSYXdDb250ZW50U3RhdGUgPSBmdW5jdGlvbiAobGFiZWxzKSB7CiAgICAgICAgICAgIHZhciB0ZXh0ID0gJyc7CiAgICAgICAgICAgIHZhciBlbnRpdHlSYW5nZXMgPSBbXTsKICAgICAgICAgICAgdmFyIGxlbmd0aDsKICAgICAgICAgICAgdmFyIG9mZnNldDsKICAgICAgICAgICAgdmFyIGtleTsKICAgICAgICAgICAgdmFyIGVudGl0eU1hcCA9IHt9OwogICAgICAgICAgICBsYWJlbHMubWFwKGZ1bmN0aW9uIChsYWJlbCkgewogICAgICAgICAgICAgICAgbGVuZ3RoID0gbGFiZWwubGVuZ3RoOwogICAgICAgICAgICAgICAgb2Zmc2V0ID0gdGV4dC5sZW5ndGg7CiAgICAgICAgICAgICAgICB0ZXh0ICs9IGxhYmVsOwogICAgICAgICAgICAgICAga2V5ID0gbGFiZWw7CiAgICAgICAgICAgICAgICBlbnRpdHlNYXBba2V5XSA9IHsKICAgICAgICAgICAgICAgICAgICB0eXBlOiAnVE9LRU4nLAogICAgICAgICAgICAgICAgICAgIG11dGFiaWxpdHk6ICdJTU1VVEFCTEUnLAogICAgICAgICAgICAgICAgICAgIGRhdGE6IHsgbGFiZWw6IGxhYmVsIH0sCiAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgZW50aXR5UmFuZ2VzLnB1c2goeyBrZXk6IGtleSwgb2Zmc2V0OiBvZmZzZXQsIGxlbmd0aDogbGVuZ3RoIH0pOwogICAgICAgICAgICB9KTsKICAgICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgICAgIGJsb2NrczogW3sKICAgICAgICAgICAgICAgICAgICAgICAga2V5OiAnJywKICAgICAgICAgICAgICAgICAgICAgICAgZGVwdGg6IDAsCiAgICAgICAgICAgICAgICAgICAgICAgIGlubGluZVN0eWxlUmFuZ2VzOiBbXSwKICAgICAgICAgICAgICAgICAgICAgICAgdGV4dDogdGV4dCwKICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ3Vuc3R5bGVkJywKICAgICAgICAgICAgICAgICAgICAgICAgZW50aXR5UmFuZ2VzOiBlbnRpdHlSYW5nZXMsCiAgICAgICAgICAgICAgICAgICAgfV0sCiAgICAgICAgICAgICAgICBlbnRpdHlNYXA6IGVudGl0eU1hcCwKICAgICAgICAgICAgfTsKICAgICAgICB9OwogICAgICAgIF90aGlzLmhhbmRsZVBvcG92ZXJSZWYgPSBmdW5jdGlvbiAocmVmKSB7CiAgICAgICAgICAgIF90aGlzLnBvcG92ZXIgPSByZWY7CiAgICAgICAgfTsKICAgICAgICBfdGhpcy5oYW5kbGVFZGl0b3JSZWYgPSBmdW5jdGlvbiAocmVmKSB7CiAgICAgICAgICAgIF90aGlzLmVkaXRvciA9IHJlZjsKICAgICAgICB9OwogICAgICAgIF90aGlzLmhhbmRsZUVkaXRvckNoYW5nZSA9IGZ1bmN0aW9uIChlZGl0b3JTdGF0ZSkgewogICAgICAgICAgICB2YXIgY29udGVudFN0YXRlID0gZWRpdG9yU3RhdGUuZ2V0Q3VycmVudENvbnRlbnQoKTsKICAgICAgICAgICAgdmFyIHRleHQgPSBjb250ZW50U3RhdGUuZ2V0UGxhaW5UZXh0KCk7CiAgICAgICAgICAgIHZhciBvbGRFZGl0b3JTdGF0ZSA9IF90aGlzLnN0YXRlLmVkaXRvclN0YXRlOwogICAgICAgICAgICB2YXIgb2xkVGV4dCA9IG9sZEVkaXRvclN0YXRlLmdldEN1cnJlbnRDb250ZW50KCkuZ2V0UGxhaW5UZXh0KCk7CiAgICAgICAgICAgIC8vIE9ubHkgdXBkYXRlIHR5cGVhaGVhZHMgaWYgdGV4dCBoYXMgY2hhbmdlZAogICAgICAgICAgICBpZiAob2xkVGV4dCAhPT0gdGV4dCkgewogICAgICAgICAgICAgICAgX3RoaXMuaGFuZGxlVHlwZWFoZWFkcyh0ZXh0KTsKICAgICAgICAgICAgfQogICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IGVkaXRvclN0YXRlOiBlZGl0b3JTdGF0ZSB9KTsKICAgICAgICAgICAgLy8gY29kZSBmb3IgbXVsdGlwbGUgbGFiZWxzCiAgICAgICAgICAgIC8vIGNvbnN0IHByZXZDdXJzb3JQb3NpdGlvbiA9IHRoaXMuc3RhdGUuZWRpdG9yU3RhdGUuZ2V0U2VsZWN0aW9uKCkuZ2V0QW5jaG9yT2Zmc2V0KCk7CiAgICAgICAgICAgIC8vIGNvbnN0IGN1cnNvclBvc2l0aW9uID0gZWRpdG9yU3RhdGUuZ2V0U2VsZWN0aW9uKCkuZ2V0QW5jaG9yT2Zmc2V0KCk7CiAgICAgICAgICAgIC8vIGNvbnN0IGNvbnRlbnRTdGF0ZSA9IGVkaXRvclN0YXRlLmdldEN1cnJlbnRDb250ZW50KCk7CiAgICAgICAgICAgIC8vIGNvbnN0IGVudGl0eUtleSA9IGNvbnRlbnRTdGF0ZS5nZXRMYXN0QmxvY2soKS5nZXRFbnRpdHlBdChjdXJzb3JQb3NpdGlvbik7CiAgICAgICAgICAgIC8vIGNvbnN0IGJsb2NrS2V5ID0gY29udGVudFN0YXRlLmdldEJsb2NrTWFwKCkubGFzdCgpLmdldEtleSgpOwogICAgICAgICAgICAvLyBsZXQgc2VsZWN0aW9uOwogICAgICAgICAgICAvLwogICAgICAgICAgICAvLyBpZiAoZW50aXR5S2V5KSB7CiAgICAgICAgICAgIC8vICAgY29udGVudFN0YXRlLmdldExhc3RCbG9jaygpLmZpbmRFbnRpdHlSYW5nZXMoCiAgICAgICAgICAgIC8vICAgICAoY2hhcmFjdGVyKSA9PiB7CiAgICAgICAgICAgIC8vICAgICAgIGNvbnN0IGtleSA9IGNoYXJhY3Rlci5nZXRFbnRpdHkoKTsKICAgICAgICAgICAgLy8gICAgICAgaWYgKGtleSA9PT0gbnVsbCkgewogICAgICAgICAgICAvLyAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICAgICAgLy8gICAgICAgfQogICAgICAgICAgICAvLwogICAgICAgICAgICAvLyAgICAgICByZXR1cm4ga2V5ID09PSBlbnRpdHlLZXk7CiAgICAgICAgICAgIC8vICAgICB9LAogICAgICAgICAgICAvLyAgICAgKHN0YXJ0OiBudW1iZXIsIGVuZDogbnVtYmVyKSA9PiB7CiAgICAgICAgICAgIC8vICAgICAgIHNlbGVjdGlvbiA9IG5ldyBTZWxlY3Rpb25TdGF0ZSh7CiAgICAgICAgICAgIC8vICAgICAgICAgYW5jaG9yS2V5OiBibG9ja0tleSwKICAgICAgICAgICAgLy8gICAgICAgICBhbmNob3JPZmZzZXQ6IHByZXZDdXJzb3JQb3NpdGlvbiA+IGN1cnNvclBvc2l0aW9uID8gc3RhcnQgOiBlbmQsCiAgICAgICAgICAgIC8vICAgICAgICAgZm9jdXNLZXk6IGJsb2NrS2V5LAogICAgICAgICAgICAvLyAgICAgICAgIGZvY3VzT2Zmc2V0OiBwcmV2Q3Vyc29yUG9zaXRpb24gPiBjdXJzb3JQb3NpdGlvbiA/IHN0YXJ0IDogZW5kLAogICAgICAgICAgICAvLyAgICAgICB9KTsKICAgICAgICAgICAgLy8gICAgIH0sCiAgICAgICAgICAgIC8vICAgKTsKICAgICAgICAgICAgLy8gfQogICAgICAgICAgICAvLwogICAgICAgICAgICAvLyBpZiAoc2VsZWN0aW9uKSB7CiAgICAgICAgICAgIC8vICAgdGhpcy5zZXRTdGF0ZSh7IGVkaXRvclN0YXRlOiBFZGl0b3JTdGF0ZS5mb3JjZVNlbGVjdGlvbihlZGl0b3JTdGF0ZSwgc2VsZWN0aW9uKSB9KTsKICAgICAgICAgICAgLy8gfSBlbHNlIHsKICAgICAgICAgICAgLy8gICB0aGlzLnNldFN0YXRlKHsgZWRpdG9yU3RhdGUgfSk7CiAgICAgICAgICAgIC8vIH0KICAgICAgICB9OwogICAgICAgIF90aGlzLmhhbmRsZVNob3cgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHsgZWRpdG9yU3RhdGU6IEVkaXRvclN0YXRlLm1vdmVGb2N1c1RvRW5kKF90aGlzLnN0YXRlLmVkaXRvclN0YXRlKSB9KTsKICAgICAgICAgICAgX3RoaXMuZWRpdG9yLmZvY3VzKCk7CiAgICAgICAgfTsKICAgICAgICBfdGhpcy5jcmVhdGVPcHRpb24gPSBmdW5jdGlvbiAob3B0aW9uKSB7CiAgICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgICAgICB0aXRsZTogb3B0aW9uLAogICAgICAgICAgICAgICAgZGVzYzogUmVhY3QuY3JlYXRlRWxlbWVudChMYWJlbEljb24sIHsgd2lkdGg6ICIxNHB4IiwgaGVpZ2h0OiAiMTRweCIgfSksCiAgICAgICAgICAgIH07CiAgICAgICAgfTsKICAgICAgICBfdGhpcy5oYW5kbGVTZWxlY3QgPSBmdW5jdGlvbiAobGFiZWwsIHNlbGVjdGVkSW5kZXgpIHsKICAgICAgICAgICAgdmFyIF9hID0gX3RoaXMucHJvcHMsIHN1Ym1pdENvbW1pdE1ldGEgPSBfYS5zdWJtaXRDb21taXRNZXRhLCBsaXN0cyA9IF9hLmxpc3RzLCBjcmVhdGVMaXN0QW5kTW92ZSA9IF9hLmNyZWF0ZUxpc3RBbmRNb3ZlOwogICAgICAgICAgICB2YXIgZWRpdG9yU3RhdGUgPSBfdGhpcy5zdGF0ZS5lZGl0b3JTdGF0ZTsKICAgICAgICAgICAgLy8gSWYgc2VsZWN0ZWQgbGFiZWwsIGRpc3BhdGNoIGFjdGlvbiBmb3IgbGFiZWxzCiAgICAgICAgICAgIHZhciBtYXRjaGVkSW5kZXggPSBmaW5kSW5kZXgobGlzdHMsIHsgbmFtZTogbGFiZWwgfSk7CiAgICAgICAgICAgIGlmIChtYXRjaGVkSW5kZXggIT09IC0xKSB7CiAgICAgICAgICAgICAgICB2YXIgc2VsZWN0ZWRMaXN0ID0gbGlzdHNbbWF0Y2hlZEluZGV4XTsKICAgICAgICAgICAgICAgIHZhciBtZXRhID0geyBsYWJlbDogc2VsZWN0ZWRMaXN0LmlkIH07CiAgICAgICAgICAgICAgICBzdWJtaXRDb21taXRNZXRhKG1ldGEpOwogICAgICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgICB9CiAgICAgICAgICAgIC8vIENyZWF0ZSBsaXN0IGFuZCBtb3ZlCiAgICAgICAgICAgIC8vIFRPRE8oU0hJTik6IEhhbmRsZSBkZWNvcmF0b3IgZm9yIGVkaXRvciBtdWx0aXBsZSBsYWJlbCBzdXBwb3J0CiAgICAgICAgICAgIHZhciBjb250ZW50U3RhdGUgPSBlZGl0b3JTdGF0ZS5nZXRDdXJyZW50Q29udGVudCgpOwogICAgICAgICAgICB2YXIgdGV4dCA9IGNvbnRlbnRTdGF0ZS5nZXRQbGFpblRleHQoKTsKICAgICAgICAgICAgY3JlYXRlTGlzdEFuZE1vdmUodGV4dCk7CiAgICAgICAgfTsKICAgICAgICBfdGhpcy5oYW5kbGVUeXBlYWhlYWRzID0gZnVuY3Rpb24gKHBhcnRpYWwpIHsKICAgICAgICAgICAgdmFyIGxpc3RzID0gX3RoaXMucHJvcHMubGlzdHM7CiAgICAgICAgICAgIHZhciBxdWVyeSA9IHBhcnRpYWwudHJpbSgpLnRvTG93ZXJDYXNlKCk7CiAgICAgICAgICAgIHZhciByZWdleCA9IHR5cGVhaGVhZFJlZ2V4KHF1ZXJ5KTsKICAgICAgICAgICAgdmFyIHBvdGVudGlhbExhYmVscyA9IHNvcnRCeShsaXN0cwogICAgICAgICAgICAgICAgLm1hcChmdW5jdGlvbiAobGlzdCkgeyByZXR1cm4gbGlzdC5uYW1lOyB9KQogICAgICAgICAgICAgICAgLmZpbHRlcihmdW5jdGlvbiAobmFtZSkgeyByZXR1cm4gbmFtZS50b0xvd2VyQ2FzZSgpLm1hdGNoKHJlZ2V4KTsgfSksIGZ1bmN0aW9uIChsKSB7IHJldHVybiBsLnRvTG93ZXJDYXNlKCk7IH0pOwogICAgICAgICAgICAvLyBSZXNldCBpZiBwb3RlbnRpYWwgbGFiZWxzIG5vdCBzZXQKICAgICAgICAgICAgaWYgKHF1ZXJ5ID09PSAnJykgewogICAgICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoeyBwb3RlbnRpYWxMYWJlbHM6IHBvdGVudGlhbExhYmVscyB9KTsKICAgICAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgICAgfQogICAgICAgICAgICB2YXIgdHlwZWFoZWFkTWF0Y2hlcyA9IHNvcnRTdHJpbmdNYXRjaGVzKHBvdGVudGlhbExhYmVscywgcXVlcnkpOwogICAgICAgICAgICAvLyBBZGQgY3JlYXRlIG5ldyBsYWJlbAogICAgICAgICAgICB0eXBlYWhlYWRNYXRjaGVzLnB1c2goIkNyZWF0ZSBOZXc6ICIgKyBwYXJ0aWFsKTsKICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoeyBwb3RlbnRpYWxMYWJlbHM6IHR5cGVhaGVhZE1hdGNoZXMgfSk7CiAgICAgICAgfTsKICAgICAgICBfdGhpcy5oYW5kbGVSZXR1cm4gPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHJldHVybiAnaGFuZGxlZCc7CiAgICAgICAgfTsKICAgICAgICBfdGhpcy5zdGF0ZSA9IHsKICAgICAgICAgICAgZWRpdG9yU3RhdGU6IEVkaXRvclN0YXRlLmNyZWF0ZUVtcHR5KCksCiAgICAgICAgICAgIHBvdGVudGlhbExhYmVsczogW10sCiAgICAgICAgfTsKICAgICAgICByZXR1cm4gX3RoaXM7CiAgICB9CiAgICBMYWJlbC5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgdmFyIF9hID0gdGhpcy5wcm9wcywgaXNEZWZhdWx0ID0gX2EuaXNEZWZhdWx0LCBzZWxlY3RlZFRocmVhZCA9IF9hLnNlbGVjdGVkVGhyZWFkLCBsaXN0cyA9IF9hLmxpc3RzOwogICAgICAgIGlmIChpc0RlZmF1bHQpIHsKICAgICAgICAgICAgdGhpcy5wb3BvdmVyLmhpZGUoKTsKICAgICAgICB9CiAgICAgICAgaWYgKHNlbGVjdGVkVGhyZWFkICYmIHNlbGVjdGVkVGhyZWFkLmxpc3QpIHsKICAgICAgICAgICAgLy8gY29uc3QgbGlzdCA9IGxpc3RzLmZpbmQobCA9PiBsLmlkID09PSBzZWxlY3RlZFRocmVhZC5saXN0KSEubmFtZTsKICAgICAgICAgICAgLy8gY29uc3QgYmxvY2sgPSBzZWxlY3RlZFRocmVhZC5saXN0ID8KICAgICAgICAgICAgLy8gICBjb252ZXJ0RnJvbVJhdyh0aGlzLmNyZWF0ZVJhd0NvbnRlbnRTdGF0ZShbbGlzdF0pKTsKICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7CiAgICAgICAgICAgICAgICBlZGl0b3JTdGF0ZTogRWRpdG9yU3RhdGUuY3JlYXRlRW1wdHkoKSwKICAgICAgICAgICAgICAgIHBvdGVudGlhbExhYmVsczogc29ydEJ5KGxpc3RzLmZpbHRlcihmdW5jdGlvbiAobCkgeyByZXR1cm4gbC5pZCA9PT0gc2VsZWN0ZWRUaHJlYWQubGlzdDsgfSkubWFwKGZ1bmN0aW9uIChsKSB7IHJldHVybiBsLm5hbWU7IH0pLCBmdW5jdGlvbiAobCkgeyByZXR1cm4gbC50b0xvd2VyQ2FzZSgpOyB9KSwKICAgICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICAgIHRoaXMuc2V0U3RhdGUoeyBwb3RlbnRpYWxMYWJlbHM6IHNvcnRCeShsaXN0cy5tYXAoZnVuY3Rpb24gKGxpc3QpIHsgcmV0dXJuIGxpc3QubmFtZTsgfSksIGZ1bmN0aW9uIChsKSB7IHJldHVybiBsLnRvTG93ZXJDYXNlKCk7IH0pIH0pOwogICAgfTsKICAgIExhYmVsLnByb3RvdHlwZS5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSA9IGZ1bmN0aW9uIChuZXh0UHJvcHMsIG5leHRTdGF0ZSkgewogICAgICAgIGlmIChuZXh0U3RhdGUucG90ZW50aWFsTGFiZWxzICE9PSB0aGlzLnN0YXRlLnBvdGVudGlhbExhYmVscykgewogICAgICAgICAgICB0aGlzLm9wdGlvbnMgPSBuZXh0U3RhdGUucG90ZW50aWFsTGFiZWxzLm1hcCh0aGlzLmNyZWF0ZU9wdGlvbik7CiAgICAgICAgfQogICAgfTsKICAgIExhYmVsLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgdmFyIG9uSGlkZSA9IHRoaXMucHJvcHMub25IaWRlOwogICAgICAgIHZhciBlZGl0b3JTdGF0ZSA9IHRoaXMuc3RhdGUuZWRpdG9yU3RhdGU7CiAgICAgICAgdmFyIHF1ZXJ5ID0gdGhpcy5zdGF0ZS5lZGl0b3JTdGF0ZS5nZXRDdXJyZW50Q29udGVudCgpLmdldFBsYWluVGV4dCgpOwogICAgICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChDb250cm9sUG9wb3ZlciwgeyBjbGFzc05hbWU6ICJsYWJlbC1wb3BvdmVyIiwgdHlwZTogQ29tbWFuZENvbnRyb2xUeXBlLkxhYmVsLCBpY29uOiBSZWFjdC5jcmVhdGVFbGVtZW50KExhYmVsSWNvbiwgeyB3aWR0aDogIjE0cHgiLCBoZWlnaHQ6ICIxNHB4IiB9KSwgaGVhZGluZzogIk1vdmUgdG8gTGFiZWwiLCBvcHRpb25zOiB0aGlzLm9wdGlvbnMgfHwgW10sIHBsYWNlaG9sZGVyOiAic2VhcmNoIGxhYmVscyIsIG9uSGlkZTogb25IaWRlLCByZWY6IHRoaXMuaGFuZGxlUG9wb3ZlclJlZiwgaW5wdXQ6IFJlYWN0LmNyZWF0ZUVsZW1lbnQoRWRpdG9yLCB7IHJlZjogdGhpcy5oYW5kbGVFZGl0b3JSZWYsIGVkaXRvclN0YXRlOiBlZGl0b3JTdGF0ZSwgaGFuZGxlUmV0dXJuOiB0aGlzLmhhbmRsZVJldHVybiwgb25DaGFuZ2U6IHRoaXMuaGFuZGxlRWRpdG9yQ2hhbmdlLCBwbGFjZWhvbGRlcjogImNob29zZSBhIGxhYmVsIGJlbG93IiB9KSwgY3VzdG9tSW5wdXRWYWx1ZTogcXVlcnksIG9uU2VsZWN0OiB0aGlzLmhhbmRsZVNlbGVjdCwgb25TaG93OiB0aGlzLmhhbmRsZVNob3csIHNob3dPbk1vdW50OiB0cnVlIH0pKTsKICAgIH07CiAgICByZXR1cm4gTGFiZWw7Cn0oUmVhY3QuUHVyZUNvbXBvbmVudCkpOwpleHBvcnQgZGVmYXVsdCBMYWJlbDsK"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/CommandControl/components/Label/Label.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/CommandControl/components/Label/Label.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport { findIndex, sortBy } from 'lodash';\nimport {\n  Editor,\n  EditorState,\n  ContentState,\n  RawDraftContentState,\n  ContentBlock,\n  DraftHandleValue,\n} from 'draft-js';\n\nimport ControlPopover, { Option } from '../components/ControlPopover';\n\nimport { CommandControlType, ThreadCommitMeta, Thread, List } from '@src/types';\nimport LabelIcon from '@src/components/Icons/Label.svg';\n\nimport './Label.scss';\nimport { typeaheadRegex } from '@src/lib/typeahead';\nimport { sortStringMatches } from '@src/lib/matcher';\n\nexport interface Props {\n  onHide: () => void;\n  isDefault?: boolean;\n  selectedThread: Thread;\n  lists: List[];\n}\n\nexport interface DispatchProps {\n  submitCommitMeta: (commitMeta: ThreadCommitMeta) => void;\n  createListAndMove: (name: string) => void;\n}\n\ninterface State {\n  editorState: EditorState;\n  potentialLabels: string[];\n}\n\nclass Label extends React.PureComponent<Props & DispatchProps, State> {\n  private popover: ControlPopover;\n  private editor: Editor;\n  private options: Option[];\n\n  constructor() {\n    super();\n\n    this.state = {\n      editorState: EditorState.createEmpty(),\n      potentialLabels: [],\n    };\n  }\n\n  componentDidMount() {\n    const { isDefault, selectedThread, lists } = this.props;\n\n    if (isDefault) {\n      this.popover.hide();\n    }\n\n    if (selectedThread && selectedThread.list) {\n      // const list = lists.find(l => l.id === selectedThread.list)!.name;\n      // const block = selectedThread.list ?\n      //   convertFromRaw(this.createRawContentState([list]));\n      this.setState({\n        editorState: EditorState.createEmpty(),\n        potentialLabels: sortBy(\n          lists.filter(l => l.id === selectedThread.list).map(l => l.name),\n          l => l.toLowerCase(),\n        ),\n      });\n    }\n\n    this.setState({ potentialLabels: sortBy(lists.map(list => list.name), l => l.toLowerCase()) });\n  }\n\n  UNSAFE_componentWillUpdate(nextProps: Props & DispatchProps, nextState: State) {\n    if (nextState.potentialLabels !== this.state.potentialLabels) {\n      this.options = nextState.potentialLabels.map(this.createOption);\n    }\n  }\n\n  handleStrategy = (contentBlock: ContentBlock, callback: any, contentState: ContentState) => {\n    contentBlock.findEntityRanges(\n      (character) => {\n        const entityKey = character.getEntity();\n        if (entityKey === null) {\n          return false;\n        }\n        return contentState.getEntity(entityKey).getType() === 'TOKEN';\n      },\n      callback,\n    );\n  }\n\n  createRawContentState = (labels: string[]): RawDraftContentState => {\n    let text = '';\n    const entityRanges: any[] = [];\n    let length;\n    let offset;\n    let key;\n    const entityMap = {};\n\n    labels.map((label: string) => {\n      length = label.length;\n      offset = text.length;\n      text += label;\n      key = label;\n      entityMap[key] = {\n        type: 'TOKEN',\n        mutability: 'IMMUTABLE',\n        data: { label },\n      };\n      entityRanges.push({ key, offset, length });\n    });\n\n    return {\n      blocks: [{\n        key: '',\n        depth: 0,\n        inlineStyleRanges: [],\n        text,\n        type: 'unstyled',\n        entityRanges,\n      }],\n      entityMap,\n    };\n  }\n\n  handlePopoverRef = (ref: ControlPopover) => {\n    this.popover = ref;\n  }\n\n  handleEditorRef = (ref: Editor) => {\n    this.editor = ref;\n  }\n\n  handleEditorChange = (editorState: EditorState) => {\n    const contentState = editorState.getCurrentContent();\n    const text = contentState.getPlainText();\n\n    const oldEditorState = this.state.editorState;\n    const oldText = oldEditorState.getCurrentContent().getPlainText();\n\n    // Only update typeaheads if text has changed\n    if (oldText !== text) {\n      this.handleTypeaheads(text);\n    }\n\n    this.setState({ editorState });\n\n    // code for multiple labels\n    // const prevCursorPosition = this.state.editorState.getSelection().getAnchorOffset();\n    // const cursorPosition = editorState.getSelection().getAnchorOffset();\n    // const contentState = editorState.getCurrentContent();\n    // const entityKey = contentState.getLastBlock().getEntityAt(cursorPosition);\n    // const blockKey = contentState.getBlockMap().last().getKey();\n    // let selection;\n    //\n    // if (entityKey) {\n    //   contentState.getLastBlock().findEntityRanges(\n    //     (character) => {\n    //       const key = character.getEntity();\n    //       if (key === null) {\n    //         return false;\n    //       }\n    //\n    //       return key === entityKey;\n    //     },\n    //     (start: number, end: number) => {\n    //       selection = new SelectionState({\n    //         anchorKey: blockKey,\n    //         anchorOffset: prevCursorPosition > cursorPosition ? start : end,\n    //         focusKey: blockKey,\n    //         focusOffset: prevCursorPosition > cursorPosition ? start : end,\n    //       });\n    //     },\n    //   );\n    // }\n    //\n    // if (selection) {\n    //   this.setState({ editorState: EditorState.forceSelection(editorState, selection) });\n    // } else {\n    //   this.setState({ editorState });\n    // }\n  }\n\n  handleShow = () => {\n    this.setState({ editorState: EditorState.moveFocusToEnd(this.state.editorState) });\n    this.editor.focus();\n  }\n\n  createOption = (option: string) => {\n    return {\n      title: option,\n      desc: <LabelIcon width=\"14px\" height=\"14px\" />,\n    };\n  }\n\n  handleSelect = (label: string, selectedIndex: number) => {\n    const { submitCommitMeta, lists, createListAndMove } = this.props;\n    const { editorState } = this.state;\n\n    // If selected label, dispatch action for labels\n    const matchedIndex = findIndex(lists, { name: label });\n    if (matchedIndex !== -1) {\n      const selectedList = lists[matchedIndex];\n      const meta = { label: selectedList.id };\n      submitCommitMeta(meta);\n      return;\n    }\n\n    // Create list and move\n    // TODO(SHIN): Handle decorator for editor multiple label support\n    const contentState = editorState.getCurrentContent();\n    const text = contentState.getPlainText();\n    createListAndMove(text);\n  }\n\n  handleTypeaheads = (partial: string) => {\n    const { lists } = this.props;\n    const query = partial.trim().toLowerCase();\n    const regex = typeaheadRegex(query);\n\n    const potentialLabels = sortBy(\n      lists\n        .map(list => list.name)\n        .filter(name => name.toLowerCase().match(regex)),\n      l => l.toLowerCase(),\n    );\n\n    // Reset if potential labels not set\n    if (query === '') {\n      this.setState({ potentialLabels });\n      return;\n    }\n\n    const typeaheadMatches: string[] = sortStringMatches(potentialLabels, query);\n\n    // Add create new label\n    typeaheadMatches.push(`Create New: ${partial}`);\n\n    this.setState({ potentialLabels: typeaheadMatches });\n  }\n\n  handleReturn = (): DraftHandleValue => {\n    return 'handled' ;\n  }\n\n  render() {\n    const { onHide } = this.props;\n    const { editorState } = this.state;\n    const query = this.state.editorState.getCurrentContent().getPlainText();\n\n    return (\n      <ControlPopover\n        className=\"label-popover\"\n        type={CommandControlType.Label}\n        icon={<LabelIcon width=\"14px\" height=\"14px\" />}\n        heading=\"Move to Label\"\n        options={this.options || []}\n        placeholder=\"search labels\"\n        onHide={onHide}\n        ref={this.handlePopoverRef}\n        input={<Editor\n          ref={this.handleEditorRef}\n          editorState={editorState}\n          handleReturn={this.handleReturn}\n          onChange={this.handleEditorChange}\n          placeholder=\"choose a label below\"\n        />}\n        customInputValue={query}\n        onSelect={this.handleSelect}\n        onShow={this.handleShow}\n        showOnMount\n      />\n    );\n  }\n}\n\nexport default Label;\n"]}]}