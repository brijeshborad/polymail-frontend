{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/ThreadDetail/components/ThreadDetailHeader/index.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/ThreadDetail/components/ThreadDetailHeader/index.tsx","mtime":1675280254045},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4JzsKaW1wb3J0IFRocmVhZERldGFpbEhlYWRlciBmcm9tICcuL1RocmVhZERldGFpbEhlYWRlcic7CmltcG9ydCB7IHNlbGVjdFRlYW1NZW1iZXIsIHNlbGVjdFBob3RvVXJsIH0gZnJvbSAnQHNyYy9kdWNrcy90ZWFtTWVtYmVycyc7CmltcG9ydCB7IHNoYXJlZFRocmVhZENyZWF0ZSwgc2hhcmVkVGhyZWFkVXBkYXRlLCBzaGFyZWRUaHJlYWREZWxldGUsIH0gZnJvbSAnQHNyYy9kdWNrcy9zaGFyZWRUaHJlYWRzJzsKaW1wb3J0IHsgc2VsZWN0U2hhcmVMaW5rLCBzaGFyZUxpbmtTZXQgfSBmcm9tICdAc3JjL2R1Y2tzL3NoYXJlTGlua3MnOwppbXBvcnQgeyBzZWxlY3RBc2FuYUVuYWJsZWQsIHNlbGVjdFNsYWNrRW5hYmxlZCB9IGZyb20gJ0BzcmMvZHVja3MvaW50ZWdyYXRpb25zJzsKaW1wb3J0IHsgc2VsZWN0QmxvY2tGaWx0ZXIgfSBmcm9tICdAc3JjL2R1Y2tzL2ZpbHRlcnMnOwp2YXIgbWFwU3RhdGVUb1Byb3BzID0gZnVuY3Rpb24gKHN0YXRlLCBvd25Qcm9wcykgewogICAgcmV0dXJuIHsKICAgICAgICBzaGFyZWRUZWFtTWVtYmVyOiBvd25Qcm9wcy5zaGFyZWRUaHJlYWQgJiYgc2VsZWN0VGVhbU1lbWJlcihzdGF0ZSwgb3duUHJvcHMuc2hhcmVkVGhyZWFkLnVzZXIpLAogICAgICAgIHNoYXJlZE1lbWJlclBob3RvVXJsOiBvd25Qcm9wcy5zaGFyZWRUaHJlYWQgJiYgc3RhdGUubWUuZGF0YSAmJgogICAgICAgICAgICBzZWxlY3RQaG90b1VybChzdGF0ZS50ZWFtTWVtYmVycywgc3RhdGUubWUuZGF0YSwgb3duUHJvcHMuc2hhcmVkVGhyZWFkLnVzZXIpLAogICAgICAgIGlzU2hhcmVkVGhyZWFkT3duZXI6IG93blByb3BzLnNoYXJlZFRocmVhZCAmJiBzdGF0ZS5tZS5kYXRhICYmCiAgICAgICAgICAgIG93blByb3BzLnNoYXJlZFRocmVhZC51c2VyID09PSBzdGF0ZS5tZS5kYXRhLmlkLAogICAgICAgIGNvbW1lbnRzRW5hYmxlZDogc3RhdGUuZmVhdHVyZXMuY29tbWVudHMsCiAgICAgICAgaG90a2V5QWN0aW9uczogc3RhdGUuaG90a2V5QWN0aW9ucywKICAgICAgICBzaGFyZUxpbms6IHNlbGVjdFNoYXJlTGluayhzdGF0ZSksCiAgICAgICAgYXNhbmFFbmFibGVkOiBzZWxlY3RBc2FuYUVuYWJsZWQoc3RhdGUpLAogICAgICAgIHNsYWNrRW5hYmxlZDogc2VsZWN0U2xhY2tFbmFibGVkKHN0YXRlKSwKICAgICAgICBpc0Jsb2NrZWQ6IHN0YXRlLnNlbGVjdGVkVGhyZWFkICYmCiAgICAgICAgICAgICEhc2VsZWN0QmxvY2tGaWx0ZXIoc3RhdGUsIHN0YXRlLnNlbGVjdGVkVGhyZWFkLmlkKSB8fCBmYWxzZSwKICAgIH07Cn07CnZhciBtYXBEaXNwYXRjaFRvUHJvcHMgPSBmdW5jdGlvbiAoZGlzcGF0Y2gpIHsgcmV0dXJuICh7CiAgICBjcmVhdGVTaGFyZWRUaHJlYWQ6IGZ1bmN0aW9uIChtZXRhKSB7IHJldHVybiBkaXNwYXRjaChzaGFyZWRUaHJlYWRDcmVhdGUobWV0YSkpOyB9LAogICAgdXBkYXRlU2hhcmVkVGhyZWFkOiBmdW5jdGlvbiAobWV0YSkgeyByZXR1cm4gZGlzcGF0Y2goc2hhcmVkVGhyZWFkVXBkYXRlKG1ldGEpKTsgfSwKICAgIGRlbGV0ZVNoYXJlZFRocmVhZDogZnVuY3Rpb24gKG1ldGEpIHsgcmV0dXJuIGRpc3BhdGNoKHNoYXJlZFRocmVhZERlbGV0ZShtZXRhKSk7IH0sCiAgICBzZXRTaGFyZUxpbms6IGZ1bmN0aW9uIChpZCkgeyByZXR1cm4gZGlzcGF0Y2goc2hhcmVMaW5rU2V0KGlkKSk7IH0sCn0pOyB9OwpleHBvcnQgZGVmYXVsdCBjb25uZWN0KG1hcFN0YXRlVG9Qcm9wcywgbWFwRGlzcGF0Y2hUb1Byb3BzKShUaHJlYWREZXRhaWxIZWFkZXIpOwo="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/ThreadDetail/components/ThreadDetailHeader/index.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/ThreadDetail/components/ThreadDetailHeader/index.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAY,MAAM,aAAa,CAAC;AAEhD,OAAO,kBAAwD,MAAM,sBAAsB,CAAC;AAE5F,OAAO,EAAE,gBAAgB,EAAE,cAAc,EAAE,MAAM,wBAAwB,CAAC;AAC1E,OAAO,EACL,kBAAkB,EAClB,kBAAkB,EAClB,kBAAkB,GACnB,MAAM,0BAA0B,CAAC;AAClC,OAAO,EAAE,eAAe,EAAE,YAAY,EAAE,MAAM,uBAAuB,CAAC;AACtE,OAAO,EAAE,kBAAkB,EAAE,kBAAkB,EAAE,MAAM,yBAAyB,CAAC;AACjF,OAAO,EAAE,iBAAiB,EAAE,MAAM,oBAAoB,CAAC;AAEvD,IAAM,eAAe,GAAG,UAAC,KAAiB,EAAE,QAAwB;IAClE,OAAO;QACL,gBAAgB,EAAE,QAAQ,CAAC,YAAY,IAAI,gBAAgB,CAAC,KAAK,EAAE,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC;QAC9F,oBAAoB,EAAE,QAAQ,CAAC,YAAY,IAAI,KAAK,CAAC,EAAE,CAAC,IAAI;YAC1D,cAAc,CAAC,KAAK,CAAC,WAAW,EAAE,KAAK,CAAC,EAAE,CAAC,IAAI,EAAE,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC;QAC9E,mBAAmB,EAAE,QAAQ,CAAC,YAAY,IAAI,KAAK,CAAC,EAAE,CAAC,IAAI;YACzD,QAAQ,CAAC,YAAY,CAAC,IAAI,KAAK,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;QACjD,eAAe,EAAE,KAAK,CAAC,QAAQ,CAAC,QAAQ;QACxC,aAAa,EAAE,KAAK,CAAC,aAAa;QAClC,SAAS,EAAE,eAAe,CAAC,KAAK,CAAC;QACjC,YAAY,EAAE,kBAAkB,CAAC,KAAK,CAAC;QACvC,YAAY,EAAE,kBAAkB,CAAC,KAAK,CAAC;QACvC,SAAS,EAAE,KAAK,CAAC,cAAc;YAC7B,CAAC,CAAC,iBAAiB,CAAC,KAAK,EAAE,KAAK,CAAC,cAAc,CAAC,EAAE,CAAC,IAAI,KAAK;KAC/D,CAAC;AACJ,CAAC,CAAC;AAEF,IAAM,kBAAkB,GAAG,UAAC,QAA8B,IAAoB,OAAA,CAAC;IAC7E,kBAAkB,EAAE,UAAA,IAAI,IAAI,OAAA,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,EAAlC,CAAkC;IAC9D,kBAAkB,EAAE,UAAA,IAAI,IAAI,OAAA,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,EAAlC,CAAkC;IAC9D,kBAAkB,EAAE,UAAA,IAAI,IAAI,OAAA,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,EAAlC,CAAkC;IAC9D,YAAY,EAAE,UAAA,EAAE,IAAI,OAAA,QAAQ,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,EAA1B,CAA0B;CAC/C,CAAC,EAL4E,CAK5E,CAAC;AAEH,eAAe,OAAO,CACpB,eAAe,EACf,kBAAkB,CACnB,CAAC,kBAAkB,CAAC,CAAC","sourcesContent":["import { connect, Dispatch } from 'react-redux';\n\nimport ThreadDetailHeader, { Props, StateProps, DispatchProps } from './ThreadDetailHeader';\nimport { StoreState } from '@src/types';\nimport { selectTeamMember, selectPhotoUrl } from '@src/ducks/teamMembers';\nimport {\n  sharedThreadCreate,\n  sharedThreadUpdate,\n  sharedThreadDelete,\n} from '@src/ducks/sharedThreads';\nimport { selectShareLink, shareLinkSet } from '@src/ducks/shareLinks';\nimport { selectAsanaEnabled, selectSlackEnabled } from '@src/ducks/integrations';\nimport { selectBlockFilter } from '@src/ducks/filters';\n\nconst mapStateToProps = (state: StoreState, ownProps: Partial<Props>): StateProps => {\n  return {\n    sharedTeamMember: ownProps.sharedThread && selectTeamMember(state, ownProps.sharedThread.user),\n    sharedMemberPhotoUrl: ownProps.sharedThread && state.me.data &&\n      selectPhotoUrl(state.teamMembers, state.me.data, ownProps.sharedThread.user),\n    isSharedThreadOwner: ownProps.sharedThread && state.me.data &&\n      ownProps.sharedThread.user === state.me.data.id,\n    commentsEnabled: state.features.comments,\n    hotkeyActions: state.hotkeyActions,\n    shareLink: selectShareLink(state),\n    asanaEnabled: selectAsanaEnabled(state),\n    slackEnabled: selectSlackEnabled(state),\n    isBlocked: state.selectedThread &&\n      !!selectBlockFilter(state, state.selectedThread.id) || false,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<StoreState>): DispatchProps => ({\n  createSharedThread: meta => dispatch(sharedThreadCreate(meta)),\n  updateSharedThread: meta => dispatch(sharedThreadUpdate(meta)),\n  deleteSharedThread: meta => dispatch(sharedThreadDelete(meta)),\n  setShareLink: id => dispatch(shareLinkSet(id)),\n});\n\nexport default connect<StateProps, DispatchProps, Props>(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ThreadDetailHeader);\n"]}]}