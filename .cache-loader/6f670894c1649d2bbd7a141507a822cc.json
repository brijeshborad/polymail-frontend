{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/ThreadDetail/components/Composer/Composer.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/ThreadDetail/components/Composer/Composer.tsx","mtime":1675280254040},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkgewogICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBmdW5jdGlvbiAoZCwgYikgewogICAgICAgIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwKICAgICAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fAogICAgICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChiLmhhc093blByb3BlcnR5KHApKSBkW3BdID0gYltwXTsgfTsKICAgICAgICByZXR1cm4gZXh0ZW5kU3RhdGljcyhkLCBiKTsKICAgIH07CiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHsKICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpOwogICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfQogICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTsKICAgIH07Cn0pKCk7CnZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHsKICAgIF9fYXNzaWduID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbih0KSB7CiAgICAgICAgZm9yICh2YXIgcywgaSA9IDEsIG4gPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7CiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07CiAgICAgICAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSkKICAgICAgICAgICAgICAgIHRbcF0gPSBzW3BdOwogICAgICAgIH0KICAgICAgICByZXR1cm4gdDsKICAgIH07CiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfTsKaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JzsKaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnOwppbXBvcnQgY2xhc3NuYW1lcyBmcm9tICdjbGFzc25hbWVzJzsKaW1wb3J0IHsgbGFzdCwgbWFwLCB0aHJvdHRsZSwgY29tcGFjdCwga2V5QnkgfSBmcm9tICdsb2Rhc2gnOwovLyBUT0RPKFNISU4pOiBCZXRhIC0gcmUtaW1wbGVtZW50IHdoZW4gd2UgY2FuIGF0dGFjaCBiZWZvcmUgY3JlYXRlZCBkcmFmdAovLyBpbXBvcnQgQXR0YWNobWVudCBmcm9tICdAc3JjL2NvbXBvbmVudHMvSWNvbnMvQXR0YWNobWVudC5zdmcnOwppbXBvcnQgUmVjaXBpZW50c1BhbmUsIHsgUmVjaXBpZW50RWRpdG9yVHlwZSB9IGZyb20gJy4vY29tcG9uZW50cy9SZWNpcGllbnRzUGFuZS9SZWNpcGllbnRzUGFuZSc7CmltcG9ydCBDb21tZW50UGFuZSBmcm9tICcuL2NvbXBvbmVudHMvQ29tbWVudFBhbmUnOwppbXBvcnQgQ29tcG9zZVBhbmUgZnJvbSAnQHNyYy9jb21wb25lbnRzL0NvbXBvc2UvQ29tcG9zZVBhbmUnOwppbXBvcnQgeyBGaWxlVHlwZSwgQ29tbWFuZENvbnRyb2xUeXBlLCBEcmFmdFN0YXR1cywgT25ib2FyZGluZ1R5cGUsIFRlbXBsYXRlVHlwZSwgfSBmcm9tICdAc3JjL3R5cGVzJzsKaW1wb3J0IHsgQ29uZmlndXJhdGlvbiwgcmVwbGFjZURyYWZ0U2VuZGVyLCBib2R5V2l0aG91dFNpZ25hdHVyZUFuZEhpc3RvcnksIGlzRHJhZnRTZW5kaW5nLCBhdHRhY2htZW50c1RvRGVsZXRlLCBwbGFpblRleHREcmFmdEJvZHlDb250ZW50cywgfSBmcm9tICdAc3JjL2xpYi9kcmFmdCc7CmltcG9ydCB7IGZpbGVGb3JtYXQsIGNvbnZlcnRUb09wdGltaXN0aWMgfSBmcm9tICdAc3JjL2xpYi9hdHRhY2htZW50JzsKaW1wb3J0IHsgbW9uZ29JZCB9IGZyb20gJ0BzcmMvbGliL2NyeXB0JzsKaW1wb3J0IHsgZ2V0SG90a2V5LCBIb3RrZXlBY3Rpb24sIGNoZWNrTmV4dEhvdGtleUNoYW5nZSB9IGZyb20gJ0BzcmMvbGliL2hvdGtleXMnOwppbXBvcnQgJy4vQ29tcG9zZXIuc2Nzcyc7CmltcG9ydCB7IEZha2VET00gfSBmcm9tICdAc3JjL2xpYi9odG1sJzsKaW1wb3J0IFN1YmplY3RQYW5lIGZyb20gJ0BzcmMvY29tcG9uZW50cy9Db21wb3NlL1N1YmplY3RQYW5lL1N1YmplY3RQYW5lJzsKaW1wb3J0IGJyb3dzZXJIaXN0b3J5IGZyb20gJ0BzcmMvbGliL2Jyb3dzZXJIaXN0b3J5JzsKaW1wb3J0IHsgaG90a2V5VXBkYXRlLCBob3RrZXlTdWdnZXN0IH0gZnJvbSAnQHNyYy9kdWNrcy9ob3RrZXlzJzsKaW1wb3J0IENvbmZpcm0gZnJvbSAnQHNyYy9jb21wb25lbnRzL0Jhc2UvQ29uZmlybSc7CmltcG9ydCBSZXBseSBmcm9tICdAc3JjL2NvbXBvbmVudHMvSWNvbnMvUmVwbHkuc3ZnJzsKaW1wb3J0IFJlcGx5QWxsIGZyb20gJ0BzcmMvY29tcG9uZW50cy9JY29ucy9SZXBseUFsbC5zdmcnOwppbXBvcnQgRm9yd2FyZCBmcm9tICdAc3JjL2NvbXBvbmVudHMvSWNvbnMvRm9yd2FyZC5zdmcnOwppbXBvcnQgQ29tbWVudEVkaXRvciBmcm9tICcuL2NvbXBvbmVudHMvQ29tbWVudEVkaXRvcic7CmltcG9ydCB7IFBJTkdfSU5URVJWQUwsIH0gZnJvbSAnQHNyYy9kdWNrcy9zaGFyZWRUaHJlYWRzJzsKaW1wb3J0IEF0dGFjaG1lbnQgZnJvbSAnQHNyYy9jb21wb25lbnRzL0ljb25zL0F0dGFjaG1lbnQuc3ZnJzsKaW1wb3J0IE9uYm9hcmRpbmdUaXAsIHsgQW5jaG9yUG9zaXRpb24gfSBmcm9tICdAc3JjL2NvbXBvbmVudHMvT25ib2FyZGluZy9jb21wb25lbnRzL09uYm9hcmRpbmdUaXAvT25ib2FyZGluZ1RpcCc7CmltcG9ydCB7IGRyYWZ0Q3JlYXRlQ29uZmlndXJhdGlvbiB9IGZyb20gJ0BzcmMvZHVja3MvZHJhZnRzJzsKaW1wb3J0IHsgU2hhcmVkVGhyZWFkQWN0aXZpdHlUeXBlLCBTaGFyZWRUaHJlYWRQZXJtaXNzaW9uU2NvcGUgfSBmcm9tICdAc3JjL3R5cGVzL3NoYXJlZFRocmVhZHMnOwppbXBvcnQgeyBDb25maXJtYXRpb25FcnJvciwgQ29uZmlybWF0aW9uUG9zaXRvbiB9IGZyb20gJ0BzcmMvZHVja3MvdG9hc3RzJzsKaW1wb3J0IHsgb25ib2FyZGluZ1BhdGNoIH0gZnJvbSAnQHNyYy9kdWNrcy9tZSc7CmltcG9ydCB7IGdldE9uYm9hcmRpbmdBY3Rpb25zIH0gZnJvbSAnQHNyYy9saWIvT25ib2FyZGluZ0Rpc3BhdGNoZXInOwppbXBvcnQgeyBBbXBsaXR1ZGVFdmVudHMsIGxvZ0FtcGxpdHVkZUV2ZW50IH0gZnJvbSAnQHNyYy9saWIvYW1wbGl0dWRlLWFuYWx5dGljcyc7Ci8vIElkZW50aWZ5IHdoZW4gdG8gc2hvdwp2YXIgQ29tcG9zZXIgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7CiAgICBfX2V4dGVuZHMoQ29tcG9zZXIsIF9zdXBlcik7CiAgICBmdW5jdGlvbiBDb21wb3Nlcihwcm9wcykgewogICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMpIHx8IHRoaXM7CiAgICAgICAgLy8gSEFDSyhTSElOKTogVXNlcyBnZXRXcmFwcGVkSW5zdGFuY2UgdW50aWwgd2UgY2FuIHVwZ3JhZGUgdG8gPiBSZWFjdCAxNi4zCiAgICAgICAgX3RoaXMuaGFuZGxlQ29tbWVudEVkaXRvclJlZiA9IGZ1bmN0aW9uIChyZWYpIHsKICAgICAgICAgICAgaWYgKHJlZikgewogICAgICAgICAgICAgICAgX3RoaXMuY29tbWVudEVkaXRvciA9IHJlZi5nZXRXcmFwcGVkSW5zdGFuY2UoKTsKICAgICAgICAgICAgfQogICAgICAgIH07CiAgICAgICAgX3RoaXMucmVzdG9yZUN1cnNvclBvc2l0aW9uID0gZnVuY3Rpb24gKCkgewogICAgICAgICAgICB2YXIgc2VsZWN0aW9uID0gd2luZG93LmdldFNlbGVjdGlvbigpOwogICAgICAgICAgICBpZiAoc2VsZWN0aW9uICYmIF90aGlzLnN0YXRlLm9sZENvbnRlbnRFZGl0YWJsZVBvc2l0aW9uKSB7CiAgICAgICAgICAgICAgICBzZWxlY3Rpb24ucmVtb3ZlQWxsUmFuZ2VzKCk7CiAgICAgICAgICAgICAgICBzZWxlY3Rpb24uYWRkUmFuZ2UoX3RoaXMuc3RhdGUub2xkQ29udGVudEVkaXRhYmxlUG9zaXRpb24pOwogICAgICAgICAgICB9CiAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHsgb2xkQ29udGVudEVkaXRhYmxlUG9zaXRpb246IHVuZGVmaW5lZCB9KTsKICAgICAgICB9OwogICAgICAgIF90aGlzLnNhdmVDdXJzb3JQb3NpdGlvbiA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgdmFyIHNlbGVjdGlvbiA9IHdpbmRvdy5nZXRTZWxlY3Rpb24oKTsKICAgICAgICAgICAgaWYgKCFzZWxlY3Rpb24pIHsKICAgICAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAoISFzZWxlY3Rpb24ucmFuZ2VDb3VudCkgewogICAgICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoeyBvbGRDb250ZW50RWRpdGFibGVQb3NpdGlvbjogc2VsZWN0aW9uLmdldFJhbmdlQXQoMCkgfSk7CiAgICAgICAgICAgIH0KICAgICAgICB9OwogICAgICAgIF90aGlzLm9uQ29uZmlndXJlQ2xpY2sgPSBmdW5jdGlvbiAoZSkgewogICAgICAgICAgICB2YXIgdGFyZ2V0ID0gZS5jdXJyZW50VGFyZ2V0OwogICAgICAgICAgICB2YXIgYWN0aW9uID0gdGFyZ2V0ICYmIHRhcmdldC5nZXRBdHRyaWJ1dGUoJ2RhdGEtYWN0aW9uJykgfHwKICAgICAgICAgICAgICAgIGUudGFyZ2V0LmlkIHx8IENvbmZpZ3VyYXRpb24uUmVwbHlBbGw7CiAgICAgICAgICAgIGlmIChhY3Rpb24pIHsKICAgICAgICAgICAgICAgIF90aGlzLmNvbmZpZ3VyZUNvbXBvc2VyKGFjdGlvbik7CiAgICAgICAgICAgIH0KICAgICAgICB9OwogICAgICAgIF90aGlzLmNvbmZpZ3VyZUNvbXBvc2VyID0gZnVuY3Rpb24gKGNvbmZpZ3VyYXRpb24pIHsKICAgICAgICAgICAgdmFyIF9hID0gX3RoaXMucHJvcHMsIGNyZWF0ZURyYWZ0V2l0aENvbmZpZ3VyYXRpb24gPSBfYS5jcmVhdGVEcmFmdFdpdGhDb25maWd1cmF0aW9uLCBkaXNwYXRjaEFjdGlvbiA9IF9hLmRpc3BhdGNoQWN0aW9uLCBkcmFmdCA9IF9hLmRyYWZ0OwogICAgICAgICAgICBpZiAoIWRyYWZ0KSB7CiAgICAgICAgICAgICAgICBzd2l0Y2ggKGNvbmZpZ3VyYXRpb24pIHsKICAgICAgICAgICAgICAgICAgICBjYXNlIENvbmZpZ3VyYXRpb24uUmVwbHk6CiAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BhdGNoQWN0aW9uKGhvdGtleVN1Z2dlc3QoSG90a2V5QWN0aW9uLlJlcGx5KSk7CiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgICAgIGNhc2UgQ29uZmlndXJhdGlvbi5SZXBseUFsbDoKICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGF0Y2hBY3Rpb24oaG90a2V5U3VnZ2VzdChIb3RrZXlBY3Rpb24uUmVwbHlBbGwpKTsKICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICAgICAgY2FzZSBDb25maWd1cmF0aW9uLkZvcndhcmQ6CiAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BhdGNoQWN0aW9uKGhvdGtleVN1Z2dlc3QoSG90a2V5QWN0aW9uLkZvcndhcmQpKTsKICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICAgICAgZGVmYXVsdDoKICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgc3dpdGNoIChjb25maWd1cmF0aW9uKSB7CiAgICAgICAgICAgICAgICBjYXNlIENvbmZpZ3VyYXRpb24uUmVwbHk6CiAgICAgICAgICAgICAgICBjYXNlIENvbmZpZ3VyYXRpb24uUmVwbHlBbGw6CiAgICAgICAgICAgICAgICBjYXNlIENvbmZpZ3VyYXRpb24uRm9yd2FyZDoKICAgICAgICAgICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IGV4cGFuZGVkOiB0cnVlIH0pOwogICAgICAgICAgICAgICAgICAgIGNyZWF0ZURyYWZ0V2l0aENvbmZpZ3VyYXRpb24oY29uZmlndXJhdGlvbik7CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICBjYXNlIENvbmZpZ3VyYXRpb24uQ29tbWVudDoKICAgICAgICAgICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7CiAgICAgICAgICAgICAgICAgICAgICAgIHNob3dDb21tZW50OiB0cnVlLAogICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgICAgICAgIGRlZmF1bHQ6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgICB9CiAgICAgICAgfTsKICAgICAgICBfdGhpcy5oYW5kbGVIb3RrZXlBY3Rpb25zQ2hhbmdlID0gZnVuY3Rpb24gKG9sZEFjdGlvbnMsIG5ld0FjdGlvbnMpIHsKICAgICAgICAgICAgdmFyIHJlY2lwaWVudHNFeHBhbmRlZCA9IF90aGlzLnN0YXRlLnJlY2lwaWVudHNFeHBhbmRlZDsKICAgICAgICAgICAgdmFyIF9hID0gX3RoaXMucHJvcHMsIHByZWZlcmVuY2VzID0gX2EucHJlZmVyZW5jZXMsIGRyYWZ0ID0gX2EuZHJhZnQsIHRocmVhZCA9IF9hLnRocmVhZCwgZGlzcGF0Y2hBY3Rpb24gPSBfYS5kaXNwYXRjaEFjdGlvbiwgY29tbWFuZENvbnRyb2xTaG93ID0gX2EuY29tbWFuZENvbnRyb2xTaG93OwogICAgICAgICAgICAvLyBIYW5kbGUgQ0MgdG9nZ2xlCiAgICAgICAgICAgIGlmIChjaGVja05leHRIb3RrZXlDaGFuZ2UoSG90a2V5QWN0aW9uLkNjLCBuZXdBY3Rpb25zLCBvbGRBY3Rpb25zKSkgewogICAgICAgICAgICAgICAgdmFyIGV4cGFuZENjXzEgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBfdGhpcy5yZWNpcGllbnRzUGFuZS5zZXRTdGF0ZSh7IHNob3dDYzogdHJ1ZSB9LCBmdW5jdGlvbiAoKSB7IF90aGlzLnJlY2lwaWVudHNQYW5lLmZvY3VzKFJlY2lwaWVudEVkaXRvclR5cGUuQ2MpOyB9KTsgfTsKICAgICAgICAgICAgICAgIC8vIEhhbmRsZSBleHBhbnNpb24gYW5kIGZvY3VzCiAgICAgICAgICAgICAgICBpZiAoIXJlY2lwaWVudHNFeHBhbmRlZCkgewogICAgICAgICAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHsgcmVjaXBpZW50c0V4cGFuZGVkOiB0cnVlIH0sIGZ1bmN0aW9uICgpIHsgcmV0dXJuIGV4cGFuZENjXzEoKTsgfSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgICAgICBleHBhbmRDY18xKCk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLy8gSGFuZGxlIEJDQyB0b2dnbGUKICAgICAgICAgICAgaWYgKGNoZWNrTmV4dEhvdGtleUNoYW5nZShIb3RrZXlBY3Rpb24uQmNjLCBuZXdBY3Rpb25zLCBvbGRBY3Rpb25zKSkgewogICAgICAgICAgICAgICAgLy8gQ2FsbCByZWNpcGllbnRzIHBhbmUgYmNjCiAgICAgICAgICAgICAgICB2YXIgZXhwYW5kQmNjXzEgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBfdGhpcy5yZWNpcGllbnRzUGFuZS5zZXRTdGF0ZSh7IHNob3dCY2M6IHRydWUgfSwgZnVuY3Rpb24gKCkgeyBfdGhpcy5yZWNpcGllbnRzUGFuZS5mb2N1cyhSZWNpcGllbnRFZGl0b3JUeXBlLkJjYyk7IH0pOyB9OwogICAgICAgICAgICAgICAgLy8gSGFuZGxlIGV4cGFuc2lvbiBhbmQgZm9jdXMKICAgICAgICAgICAgICAgIGlmICghcmVjaXBpZW50c0V4cGFuZGVkKSB7CiAgICAgICAgICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoeyByZWNpcGllbnRzRXhwYW5kZWQ6IHRydWUgfSwgZnVuY3Rpb24gKCkgeyByZXR1cm4gZXhwYW5kQmNjXzEoKTsgfSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgICAgICBleHBhbmRCY2NfMSgpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIC8vIEhhbmRsZSBCQ0MgdG9nZ2xlCiAgICAgICAgICAgIGlmIChjaGVja05leHRIb3RrZXlDaGFuZ2UoSG90a2V5QWN0aW9uLlJlcGx5QkNDLCBuZXdBY3Rpb25zLCBvbGRBY3Rpb25zKSkgewogICAgICAgICAgICAgICAgaWYgKCF0aHJlYWQpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBkaXNwYXRjaEFjdGlvbihkcmFmdENyZWF0ZUNvbmZpZ3VyYXRpb24oQ29uZmlndXJhdGlvbi5Nb3ZlQmNjKSk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLy8gSGFuZGxlIFNlbmQgaG90a2V5CiAgICAgICAgICAgIGlmIChjaGVja05leHRIb3RrZXlDaGFuZ2UoSG90a2V5QWN0aW9uLlNlbmQsIG5ld0FjdGlvbnMsIG9sZEFjdGlvbnMpKSB7CiAgICAgICAgICAgICAgICAvLyBTZW5kIGhvdGtleSBpcyB0aGUgc2Vjb25kYXJ5IOKMmCArIOKMpSArIOKGtSB3aGVuIHByZWZlcmVuY2UgaXMgbm90IG9uCiAgICAgICAgICAgICAgICB2YXIgc2VuZFRvZ2dsZWQgPSBwcmVmZXJlbmNlcy5zZW5kQW5kQXJjaGl2ZTsKICAgICAgICAgICAgICAgIF90aGlzLmhhbmRsZVNlbmQoc2VuZFRvZ2dsZWQpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIC8vIEhhbmRsZSBTZW5kIGFuZCBBcmNoaXZlIGhvdGtleQogICAgICAgICAgICBpZiAoY2hlY2tOZXh0SG90a2V5Q2hhbmdlKEhvdGtleUFjdGlvbi5TZW5kQW5kQXJjaGl2ZSwgbmV3QWN0aW9ucywgb2xkQWN0aW9ucykpIHsKICAgICAgICAgICAgICAgIC8vIFNlbmQgYW5kIGFyY2hpdmUgaXMgdGhlIHNlY29uZGFyeSDijJggKyDijKUgKyDihrUgd2hlbiBwcmVmZXJlbmNlIGlzIG5vdCBvbgogICAgICAgICAgICAgICAgdmFyIHNlbmRBbmRBcmNoaXZlVG9nZ2xlZCA9ICFwcmVmZXJlbmNlcy5zZW5kQW5kQXJjaGl2ZTsKICAgICAgICAgICAgICAgIF90aGlzLmhhbmRsZVNlbmQoc2VuZEFuZEFyY2hpdmVUb2dnbGVkKTsKICAgICAgICAgICAgfQogICAgICAgICAgICAvLyBIYW5kbGUgU2VuZCBob3RrZXkKICAgICAgICAgICAgaWYgKGNoZWNrTmV4dEhvdGtleUNoYW5nZShIb3RrZXlBY3Rpb24uRGlzY2FyZCwgbmV3QWN0aW9ucywgb2xkQWN0aW9ucykpIHsKICAgICAgICAgICAgICAgIF90aGlzLmhhbmRsZURlbGV0ZSh0cnVlKTsKICAgICAgICAgICAgfQogICAgICAgICAgICAvLyBSZXN0b3JlIGN1cnNvciBwb3NpdGlvbiBpZiBwb3NzaWJsZQogICAgICAgICAgICBpZiAoY2hlY2tOZXh0SG90a2V5Q2hhbmdlKEhvdGtleUFjdGlvbi5Db3B5U2NoZWR1bGluZ1VybCwgbmV3QWN0aW9ucywgb2xkQWN0aW9ucykpIHsKICAgICAgICAgICAgICAgIC8vIFNob3cgU2NoZWR1bGluZyBQYWdlcwogICAgICAgICAgICAgICAgY29tbWFuZENvbnRyb2xTaG93KENvbW1hbmRDb250cm9sVHlwZS5TY2hlZHVsaW5nUGFnZXMpOwogICAgICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgICB9CiAgICAgICAgICAgIC8vIEhhbmRsZSBjb21tZW50IGhvdGtleQogICAgICAgICAgICBpZiAoY2hlY2tOZXh0SG90a2V5Q2hhbmdlKEhvdGtleUFjdGlvbi5Db21tZW50LCBuZXdBY3Rpb25zLCBvbGRBY3Rpb25zKSkgewogICAgICAgICAgICAgICAgaWYgKF90aGlzLmNvbW1lbnRFZGl0b3IpIHsKICAgICAgICAgICAgICAgICAgICBfdGhpcy5jb21tZW50RWRpdG9yLmZvY3VzKCk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLy8gSGFuZGxlIHRlbXBsYXRlIHNhdmUgaG90a2V5CiAgICAgICAgICAgIGlmIChjaGVja05leHRIb3RrZXlDaGFuZ2UoSG90a2V5QWN0aW9uLlNhdmVBc1RlbXBsYXRlLCBuZXdBY3Rpb25zLCBvbGRBY3Rpb25zKSkgewogICAgICAgICAgICAgICAgX3RoaXMuaGFuZGxlVGVtcGxhdGVTYXZlKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLy8gSGFuZGxlIHVwbG9hZCBob3RrZXkKICAgICAgICAgICAgaWYgKGNoZWNrTmV4dEhvdGtleUNoYW5nZShIb3RrZXlBY3Rpb24uQWRkQXR0YWNobWVudCwgbmV3QWN0aW9ucywgb2xkQWN0aW9ucykpIHsKICAgICAgICAgICAgICAgIHZhciB1cGxvYWRCdXR0b24gPSBfdGhpcy5jb21wb3NlUGFuZS51cGxvYWRCdXR0b247CiAgICAgICAgICAgICAgICBpZiAodXBsb2FkQnV0dG9uKSB7CiAgICAgICAgICAgICAgICAgICAgdXBsb2FkQnV0dG9uLmlucHV0LmNsaWNrKCk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLy8gSGFuZGxlIGZyb20gYWRkcmVzcyBob3RrZXkKICAgICAgICAgICAgaWYgKGNoZWNrTmV4dEhvdGtleUNoYW5nZShIb3RrZXlBY3Rpb24uQ2hhbmdlRnJvbUFkZHJlc3MsIG5ld0FjdGlvbnMsIG9sZEFjdGlvbnMpKSB7CiAgICAgICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IHJlY2lwaWVudHNFeHBhbmRlZDogdHJ1ZSB9LCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgICAgdmFyIGZyb21Ecm9wZG93biA9IF90aGlzLnJlY2lwaWVudHNQYW5lLmZyb21Ecm9wZG93bjsKICAgICAgICAgICAgICAgICAgICBpZiAoZnJvbURyb3Bkb3duKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGZyb21Ecm9wZG93bi5oYW5kbGVPcGVuKCk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLy8gSGFuZGxlIHBvcG91dCBkcmFmdAogICAgICAgICAgICBpZiAoY2hlY2tOZXh0SG90a2V5Q2hhbmdlKEhvdGtleUFjdGlvbi5Qb3BvdXREcmFmdCwgbmV3QWN0aW9ucywgb2xkQWN0aW9ucykpIHsKICAgICAgICAgICAgICAgIGlmIChkcmFmdCkgewogICAgICAgICAgICAgICAgICAgIHdpbmRvdy5vcGVuKCIvcG9wb3V0L2RyYWZ0cy8iICsgZHJhZnQuaWQsICdfYmxhbmsnLCAnaGVpZ2h0PTUwMCx3aWR0aD04MDAnKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH07CiAgICAgICAgX3RoaXMuaGFuZGxlUmVjaXBpZW50c0NoYW5nZSA9IGZ1bmN0aW9uIChsaXN0LCByZWNpcGllbnRzKSB7CiAgICAgICAgICAgIHZhciBuZXdTdGF0ZSA9IHt9OwogICAgICAgICAgICBuZXdTdGF0ZVtsaXN0XSA9IHJlY2lwaWVudHM7CiAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKG5ld1N0YXRlKTsKICAgICAgICAgICAgaWYgKF90aGlzLnByb3BzLmRyYWZ0KSB7CiAgICAgICAgICAgICAgICAvLyBVcGRhdGUgcmVjaXBpZW50cwogICAgICAgICAgICAgICAgdmFyIGRyYWZ0ID0gX19hc3NpZ24oX19hc3NpZ24oe30sIF90aGlzLnByb3BzLmRyYWZ0KSwgbmV3U3RhdGUpOwogICAgICAgICAgICAgICAgLy8gVXBkYXRlIGRyYWZ0CiAgICAgICAgICAgICAgICBfdGhpcy5wcm9wcy51cGRhdGUoZHJhZnQpOwogICAgICAgICAgICB9CiAgICAgICAgfTsKICAgICAgICBfdGhpcy5oYW5kbGVDb250YWN0R3JvdXBBZGQgPSBmdW5jdGlvbiAobGlzdCwgY29udGFjdEdyb3VwKSB7CiAgICAgICAgICAgIHZhciBfYSA9IF90aGlzLnByb3BzLCBhZGRDb250YWN0R3JvdXAgPSBfYS5hZGRDb250YWN0R3JvdXAsIGRyYWZ0ID0gX2EuZHJhZnQ7CiAgICAgICAgICAgIGlmIChkcmFmdCkgewogICAgICAgICAgICAgICAgYWRkQ29udGFjdEdyb3VwKGRyYWZ0LCBsaXN0LCBjb250YWN0R3JvdXAuaWQpOwogICAgICAgICAgICB9CiAgICAgICAgfTsKICAgICAgICBfdGhpcy5oYW5kbGVTZW5kZXJTZWxlY3QgPSBmdW5jdGlvbiAoZW1haWwpIHsKICAgICAgICAgICAgdmFyIF9hID0gX3RoaXMucHJvcHMsIGRyYWZ0ID0gX2EuZHJhZnQsIHVwZGF0ZSA9IF9hLnVwZGF0ZSwgYWNjb3VudHMgPSBfYS5hY2NvdW50czsKICAgICAgICAgICAgLy8gVXBkYXRlIGRyYWZ0IGZyb20gYWRkcmVzcwogICAgICAgICAgICBpZiAoZHJhZnQpIHsKICAgICAgICAgICAgICAgIC8vIFVwZGF0ZSBkcmFmdCB3aXRoIG5ldyBzZW5kZXIvcmVjaXBpZW50IGluZm9ybWF0aW9uCiAgICAgICAgICAgICAgICB2YXIgdXBkYXRlZCA9IHJlcGxhY2VEcmFmdFNlbmRlcihkcmFmdCwgYWNjb3VudHMsIGVtYWlsKTsKICAgICAgICAgICAgICAgIHVwZGF0ZSh1cGRhdGVkKTsKICAgICAgICAgICAgICAgIC8vIEhhbmRsZSByZXN0b3JpbmcgY29udGVudGVkaXRhYmxlIHBvc2l0aW9uIGlmIHRyaWdnZXJlZCBmcm9tIGhvdGtleQogICAgICAgICAgICAgICAgaWYgKF90aGlzLnN0YXRlLm9sZENvbnRlbnRFZGl0YWJsZVBvc2l0aW9uKSB7CiAgICAgICAgICAgICAgICAgICAgX3RoaXMucmVzdG9yZUN1cnNvclBvc2l0aW9uKCk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9OwogICAgICAgIF90aGlzLmhhbmRsZVN1YmplY3RDaGFuZ2UgPSBmdW5jdGlvbiAoc3ViamVjdCkgewogICAgICAgICAgICBpZiAoX3RoaXMucHJvcHMuZHJhZnQgJiYgX3RoaXMucHJvcHMuZHJhZnQuc3ViamVjdCAhPT0gc3ViamVjdCkgewogICAgICAgICAgICAgICAgdmFyIGRyYWZ0ID0gX19hc3NpZ24oX19hc3NpZ24oe30sIF90aGlzLnByb3BzLmRyYWZ0KSwgeyBzdWJqZWN0OiBzdWJqZWN0IH0pOwogICAgICAgICAgICAgICAgX3RoaXMucHJvcHMudXBkYXRlKGRyYWZ0KTsKICAgICAgICAgICAgfQogICAgICAgIH07CiAgICAgICAgLy8gVXBkYXRlcyBkcmFmdCBpbW1lZGlhdGVseQogICAgICAgIF90aGlzLmhhbmRsZUJvZHlDaGFuZ2UgPSBmdW5jdGlvbiAoaHRtbCkgewogICAgICAgICAgICBpZiAoX3RoaXMucHJvcHMuZHJhZnQpIHsKICAgICAgICAgICAgICAgIF90aGlzLnJlY29yZFR5cGluZygpOwogICAgICAgICAgICAgICAgdmFyIGRyYWZ0ID0gX19hc3NpZ24oX19hc3NpZ24oe30sIF90aGlzLnByb3BzLmRyYWZ0KSwgeyBib2R5OiBodG1sIH0pOwogICAgICAgICAgICAgICAgLy8gUmVtb3ZlcyBjYWxlbmRhciBpbnZpdGUgd2hlbiBkZWxldGVkIGZyb20gdGhlIGRyYWZ0CiAgICAgICAgICAgICAgICAvLyBUT0RPKFNISU4pOiBGaWd1cmUgb3V0IGhvdyB0byBkZWxldGUgY2FsZW5kYXJJbnZpdGUuIFNlbmQgbnVsbD8KICAgICAgICAgICAgICAgIC8vIEFic3RyYWN0IHRvIGxpYiBsZXZlbAogICAgICAgICAgICAgICAgaWYgKF90aGlzLnJlZiAmJiAhX3RoaXMucmVmLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ3BtLWNhbGVuZGFyLWludml0ZScpLmxlbmd0aCAmJgogICAgICAgICAgICAgICAgICAgIGRyYWZ0LmNhbGVuZGFySW52aXRlKSB7CiAgICAgICAgICAgICAgICAgICAgZHJhZnQuY2FsZW5kYXJJbnZpdGUgPSBudWxsOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgX3RoaXMucHJvcHMudXBkYXRlKGRyYWZ0KTsKICAgICAgICAgICAgfQogICAgICAgIH07CiAgICAgICAgLy8gRmlndXJlIG91dCB3aGljaCBzZW5kIGNsaWNraW5nIHRoZSBzZW5kIGJ1dHRvbiB0cmlnZ2VycwogICAgICAgIF90aGlzLmhhbmRsZVByaW1hcnlTZW5kQ2xpY2sgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHZhciBfYSA9IF90aGlzLnByb3BzLCBwcmVmZXJlbmNlcyA9IF9hLnByZWZlcmVuY2VzLCB1cGRhdGVIb3RrZXkgPSBfYS51cGRhdGVIb3RrZXksIGRpc3BhdGNoQWN0aW9uID0gX2EuZGlzcGF0Y2hBY3Rpb247CiAgICAgICAgICAgIGRpc3BhdGNoQWN0aW9uKGhvdGtleVN1Z2dlc3QoSG90a2V5QWN0aW9uLlNlbmQpKTsKICAgICAgICAgICAgaWYgKHByZWZlcmVuY2VzLnNlbmRBbmRBcmNoaXZlKSB7CiAgICAgICAgICAgICAgICB1cGRhdGVIb3RrZXkoSG90a2V5QWN0aW9uLlNlbmRBbmRBcmNoaXZlKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgIHVwZGF0ZUhvdGtleShIb3RrZXlBY3Rpb24uU2VuZCk7CiAgICAgICAgICAgIH0KICAgICAgICB9OwogICAgICAgIC8vIFNlbmRzIGRyYWZ0CiAgICAgICAgLy8gVE9ETyhTSElOKTogQWJzdHJhY3QgdG8gZXBpYyBpZiBwb3NzaWJsZQogICAgICAgIF90aGlzLmhhbmRsZVNlbmQgPSBmdW5jdGlvbiAodG9nZ2xlQXJjaGl2ZSkgewogICAgICAgICAgICBpZiAodG9nZ2xlQXJjaGl2ZSA9PT0gdm9pZCAwKSB7IHRvZ2dsZUFyY2hpdmUgPSBmYWxzZTsgfQogICAgICAgICAgICB2YXIgX2E7CiAgICAgICAgICAgIHZhciBfYiA9IF90aGlzLnByb3BzLCBhdHRhY2htZW50TWV0YXMgPSBfYi5hdHRhY2htZW50TWV0YXMsIHNldFRvYXN0ID0gX2Iuc2V0VG9hc3QsIG9uU2VuZCA9IF9iLm9uU2VuZCwgcnNiT25ib2FyZGluZyA9IF9iLnJzYk9uYm9hcmRpbmc7CiAgICAgICAgICAgIHZhciBkcmFmdCA9IF90aGlzLnByb3BzLmRyYWZ0OwogICAgICAgICAgICBpZiAoIWRyYWZ0KSB7CiAgICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKHJzYk9uYm9hcmRpbmcgPT09IE9uYm9hcmRpbmdUeXBlLlNlbmRNZXNzYWdlKSB7CiAgICAgICAgICAgICAgICBsb2dBbXBsaXR1ZGVFdmVudChBbXBsaXR1ZGVFdmVudHMuVG91clN0ZXBPbmVTZW5kKTsKICAgICAgICAgICAgfQogICAgICAgICAgICAvLyBVcGRhdGUgZHJhZnQgYm9keSByaWdodCBiZWZvcmUgc2VuZGluZwogICAgICAgICAgICB2YXIgY29udGVudEVkaXRhYmxlID0gX3RoaXMuY29tcG9zZVBhbmUgJiYgX3RoaXMuY29tcG9zZVBhbmUuY29udGVudEVkaXRhYmxlOwogICAgICAgICAgICBpZiAoY29udGVudEVkaXRhYmxlKSB7CiAgICAgICAgICAgICAgICBjb250ZW50RWRpdGFibGUucmVzZXRPbkNoYW5nZURlYm91bmNlKCk7CiAgICAgICAgICAgICAgICBkcmFmdC5ib2R5ID0gY29udGVudEVkaXRhYmxlLmdldEJvZHkoKTsKICAgICAgICAgICAgfQogICAgICAgICAgICAvLyBTaG93IHdhcm5pbmcgYW5kIHByZXZlbnQgc2VuZCBpZiBtZXNzYWdlIHRlbXBsYXRlIHBsYWNlaG9sZGVycyBleGlzdAogICAgICAgICAgICB2YXIgdGVtcGxhdGVWYXJpYWJsZXMgPSBfdGhpcy5yZWYgJiYgX3RoaXMucmVmLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ2RhdGEtcG0tdmFyJyk7CiAgICAgICAgICAgIGlmIChfdGhpcy5yZWYgJiYgdGVtcGxhdGVWYXJpYWJsZXMubGVuZ3RoID4gMCkgewogICAgICAgICAgICAgICAgdmFyIHBsYWNlaG9sZGVyc0NvcHkgPSAncGxhY2Vob2xkZXInICsgKHRlbXBsYXRlVmFyaWFibGVzLmxlbmd0aCA+IDEgPyAncycgOiAnJyk7CiAgICAgICAgICAgICAgICB2YXIgbWVzc2FnZSA9ICJZb3VyIGRyYWZ0IGNvbnRhaW5zICIgKyB0ZW1wbGF0ZVZhcmlhYmxlcy5sZW5ndGggKyAiIHVuZmlsbGVkICIgKwogICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyc0NvcHkgKwogICAgICAgICAgICAgICAgICAgICcgbGVmdCBpbiB5b3VyIG1lc3NhZ2UuJyArCiAgICAgICAgICAgICAgICAgICAgKCIgUGxlYXNlIHJlcGxhY2Ugb3IgcmVtb3ZlIHRoZSAiICsgcGxhY2Vob2xkZXJzQ29weSArICIgYmVmb3JlIHNlbmRpbmcuIik7CiAgICAgICAgICAgICAgICBzZXRUb2FzdChuZXcgRXJyb3IobWVzc2FnZSkpOwogICAgICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgICB9CiAgICAgICAgICAgIC8vIEFkZCBjaGVjayBmb3Igc2VuZCBsYXRlcgogICAgICAgICAgICBpZiAoZHJhZnQuc3RhdHVzID09PSBEcmFmdFN0YXR1cy5TY2hlZHVsZWQgJiYgZHJhZnQuc2NoZWR1bGVkKSB7CiAgICAgICAgICAgICAgICB2YXIgc2NoZWR1bGVkRGF0ZSA9IG1vbWVudChkcmFmdC5zY2hlZHVsZWQpLmNhbGVuZGFyKG5ldyBEYXRlKCksIHsKICAgICAgICAgICAgICAgICAgICBzYW1lRGF5OiAnW3RvZGF5XSBbYXRdIGg6bW0gQScsCiAgICAgICAgICAgICAgICAgICAgbmV4dERheTogJ1t0b21vcnJvd10gW2F0XSBoOm1tIEEnLAogICAgICAgICAgICAgICAgICAgIG5leHRXZWVrOiAnZGRkZCBbYXRdIGg6bW0gQScsCiAgICAgICAgICAgICAgICAgICAgc2FtZUVsc2U6ICdtbW0sIGRkZCBbYXRdIGg6bW0gQScsCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIHZhciBtZXNzYWdlID0gJ1RoaXMgZHJhZnQgaXMgc2NoZWR1bGVkIHRvIHNlbmQgJyArCiAgICAgICAgICAgICAgICAgICAgc2NoZWR1bGVkRGF0ZSArCiAgICAgICAgICAgICAgICAgICAgJy5cblxuV291bGQgeW91IGxpa2UgdG8gc2VuZCB0aGlzIGRyYWZ0IG5vdz8nOwogICAgICAgICAgICAgICAgdmFyIGNvbmZpcm1Qcm9wcyA9IHsKICAgICAgICAgICAgICAgICAgICB0aXRsZTogJ1NjaGVkdWxlZCBEcmFmdCcsCiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogbWVzc2FnZSwKICAgICAgICAgICAgICAgICAgICBjb25maXJtQ29weTogJ1NlbmQgTm93JywKICAgICAgICAgICAgICAgICAgICBvbkNvbmZpcm06IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoeyBjb25maXJtUHJvcHM6IHVuZGVmaW5lZCB9KTsKICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMucHJvcHMuc2VuZCh7IGRyYWZ0OiBfX2Fzc2lnbihfX2Fzc2lnbih7fSwgZHJhZnQpLCB7IHNjaGVkdWxlZDogbnVsbCB9KSwgdG9nZ2xlQXJjaGl2ZTogZmFsc2UgfSk7CiAgICAgICAgICAgICAgICAgICAgICAgIC8vIEhhbmRsZSBzZW5kIHRvIGRpc21pc3MgcG9wb3V0IHdpbmRvdwogICAgICAgICAgICAgICAgICAgICAgICBpZiAob25TZW5kKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvblNlbmQoKTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgb25DYW5jZWw6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIF90aGlzLnNldFN0YXRlKHsgY29uZmlybVByb3BzOiB1bmRlZmluZWQgfSk7IH0sCiAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoeyBjb25maXJtUHJvcHM6IGNvbmZpcm1Qcm9wcyB9KTsKICAgICAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgICAgfQogICAgICAgICAgICAvLyBUT0RPKFNISU46IEhhbmRsaW5nIGNsb3VkIGF0dGFjaG1lbnRzCiAgICAgICAgICAgIHZhciBhdHRhY2htZW50RXJyb3JzID0gYXR0YWNobWVudE1ldGFzICYmCiAgICAgICAgICAgICAgICBhdHRhY2htZW50TWV0YXMuZmlsdGVyKGZ1bmN0aW9uIChyZXNvdXJjZSkgeyByZXR1cm4gISFyZXNvdXJjZS5lcnJvcjsgfSk7CiAgICAgICAgICAgIC8vIEhhbmRsZSBhbnkgYXR0YWNobWVudCBlcnJvcnMgYmVmb3JlIHNlbmRpbmcKICAgICAgICAgICAgaWYgKGF0dGFjaG1lbnRFcnJvcnMgJiYgYXR0YWNobWVudEVycm9ycy5sZW5ndGgpIHsKICAgICAgICAgICAgICAgIC8vIFRoaXMgaWRlbnRpZmllcyBhdHRhY2htZW50IG1ldGFzIHRoYXQgd2lsbCBiZSBkZWxldGVkIGRvd25zdHJlYW0gc28gd2UgZG9udCBoYW5kbGUgZXJyb3JzCiAgICAgICAgICAgICAgICB2YXIgb3B0aW1pc3RpY01ldGFzID0gY29tcGFjdChhdHRhY2htZW50RXJyb3JzLm1hcChmdW5jdGlvbiAoYSkgeyByZXR1cm4gYS5kYXRhOyB9KSkKICAgICAgICAgICAgICAgICAgICAubWFwKGZ1bmN0aW9uIChhKSB7IHJldHVybiBjb252ZXJ0VG9PcHRpbWlzdGljKGEsIGRyYWZ0LmlkKTsgfSk7CiAgICAgICAgICAgICAgICB2YXIgdG9EZWxldGUgPSBhdHRhY2htZW50c1RvRGVsZXRlKF9fYXNzaWduKF9fYXNzaWduKHt9LCBkcmFmdCksIHsgYXR0YWNobWVudHM6IGRyYWZ0LmF0dGFjaG1lbnRzLmNvbmNhdChvcHRpbWlzdGljTWV0YXMpIH0pKTsKICAgICAgICAgICAgICAgIHZhciBkZWxldGVNYXBfMSA9IGtleUJ5KHRvRGVsZXRlLCAnYXR0YWNobWVudCcpOwogICAgICAgICAgICAgICAgdmFyIGZpbHRlcmVkRXJyb3JzID0gYXR0YWNobWVudEVycm9ycy5maWx0ZXIoZnVuY3Rpb24gKGEpIHsgcmV0dXJuIGEuZGF0YSAmJiAhZGVsZXRlTWFwXzFbYS5kYXRhLmF0dGFjaG1lbnRdOyB9KTsKICAgICAgICAgICAgICAgIC8vIEdyYWIgZmlyc3QgRXJyb3IgdGhhdCB3YXNuJ3QgcmVtb3ZlZCBmcm9tIGRyYWZ0IHRvIGJsb2NrIFVJCiAgICAgICAgICAgICAgICB2YXIgZmlyc3QgPSBmaWx0ZXJlZEVycm9yc1swXTsKICAgICAgICAgICAgICAgIGlmIChmaXJzdCkgewogICAgICAgICAgICAgICAgICAgIHZhciBhdHRhY2htZW50TmFtZSA9IGZpcnN0LmRhdGEgJiYgZmlyc3QuZGF0YS5maWxlbmFtZSB8fCAnJzsKICAgICAgICAgICAgICAgICAgICB2YXIgbWVzc2FnZSA9ICJZb3VyIGF0dGFjaG1lbnQgXCIiICsgYXR0YWNobWVudE5hbWUgKyAiXCIgZmFpbGVkIHRvIGF0dGFjaCB0byB0aGlzIG1lc3NhZ2UuICIgKwogICAgICAgICAgICAgICAgICAgICAgICAnUGxlYXNlIHJlbW92ZSBvciB0cnkgdG8gYXR0YWNoIHRoaXMgZmlsZSBiZWZvcmUgc2VuZGluZyEnOwogICAgICAgICAgICAgICAgICAgIHZhciBmaXJzdEVycm9yID0gZmlyc3QgJiYgZmlyc3QuZXJyb3I7CiAgICAgICAgICAgICAgICAgICAgdmFyIG1haW5FcnJvclByZWZpeCA9IG1lc3NhZ2UgKyAnXG5FcnJvcjogJzsKICAgICAgICAgICAgICAgICAgICAvLyBIYW5kbGUgYWRkaXRpb25hbCBjb250ZW50IHRvIGRpc3BsYXkgZm9yIHRoZSBlcnJvcgogICAgICAgICAgICAgICAgICAgIGlmIChmaXJzdEVycm9yKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChmaXJzdEVycm9yLmVycm9ycykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHN1ZmZpeCA9IG1hcChmaXJzdEVycm9yLmVycm9ycywgZnVuY3Rpb24gKGUpIHsgcmV0dXJuIGU7IH0pLmpvaW4oJyAnKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldFRvYXN0KG5ldyBFcnJvcihtYWluRXJyb3JQcmVmaXggKyBzdWZmaXgpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB2YXIgZXJyb3IgPSBuZXcgRXJyb3IobWFpbkVycm9yUHJlZml4ICsgZmlyc3RFcnJvci5tZXNzYWdlKTsKICAgICAgICAgICAgICAgICAgICAgICAgc2V0VG9hc3QoZXJyb3IpOwogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIC8vIE1ha2Ugc3VyZSB0aGF0IHRoZXJlIGlzIGF0IGxlYXN0IG9uIHJlY2lwaWVudAogICAgICAgICAgICB2YXIgcmVjaXBpZW50cyA9IGRyYWZ0LnRvLmNvbmNhdChkcmFmdC5jYykuY29uY2F0KGRyYWZ0LmJjYyk7CiAgICAgICAgICAgIGlmICghcmVjaXBpZW50cy5sZW5ndGgpIHsKICAgICAgICAgICAgICAgIHZhciBlcnJvciA9ICdZb3UgbXVzdCBhZGQgYSByZWNpcGllbnQgYmVmb3JlIHNlbmRpbmcgYSBtZXNzYWdlLic7CiAgICAgICAgICAgICAgICBzZXRUb2FzdChuZXcgRXJyb3IoZXJyb3IpKTsKICAgICAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgICAgfQogICAgICAgICAgICAvLyBSZWNpcGllbnRzIGxlbmd0aCBjaGVjayBibG9ja3Mgb3ZlciAxMDAgcmVjaXBpZW50cwogICAgICAgICAgICBpZiAocmVjaXBpZW50cy5sZW5ndGggPiAxMDApIHsKICAgICAgICAgICAgICAgIHZhciBlcnJvciA9ICdZb3UgY2Fubm90IGhhdmUgbW9yZSB0aGFuIDEwMCByZWNpcGllbnRzIGluIGEgbWVzc2FnZS4nOwogICAgICAgICAgICAgICAgc2V0VG9hc3QobmV3IEVycm9yKGVycm9yKSk7CiAgICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLy8gVmFsaWRhdG9yIHRvIGNoZWNrIGF0dGFjaG1lbnQgc2l6ZSBmb3IgZHJhZnQKICAgICAgICAgICAgdmFyIHRvdGFsQXR0YWNobWVudFNpemUgPSAwOwogICAgICAgICAgICBkcmFmdC5hdHRhY2htZW50cy5mb3JFYWNoKGZ1bmN0aW9uIChhKSB7CiAgICAgICAgICAgICAgICB0b3RhbEF0dGFjaG1lbnRTaXplICs9IGEubGVuZ3RoOwogICAgICAgICAgICB9KTsKICAgICAgICAgICAgaWYgKGF0dGFjaG1lbnRNZXRhcykgewogICAgICAgICAgICAgICAgYXR0YWNobWVudE1ldGFzLmZvckVhY2goZnVuY3Rpb24gKGEpIHsKICAgICAgICAgICAgICAgICAgICB2YXIgc2l6ZSA9IGEuZGF0YSAmJiBhLmRhdGEuZmlsZSAmJiBhLmRhdGEuZmlsZS5zaXplOwogICAgICAgICAgICAgICAgICAgIGlmIChzaXplKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHRvdGFsQXR0YWNobWVudFNpemUgKz0gc2l6ZTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAodG90YWxBdHRhY2htZW50U2l6ZSA+IDI1MDAwMDAwKSB7CiAgICAgICAgICAgICAgICB2YXIgZXJyb3IgPSAnWW91IGNhbm5vdCBzZW5kIGEgZHJhZnQgd2l0aCBtb3JlIHRoYW4gMjVNQi4nOwogICAgICAgICAgICAgICAgc2V0VG9hc3QobmV3IEVycm9yKGVycm9yKSk7CiAgICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLy8gU2hvdyB3YXJuaW5nIGlmIG5vIGF0dGFjaGVkCiAgICAgICAgICAgIHZhciBib2R5U3RyaW5nID0gX3RoaXMuY29tcG9zZVBhbmUuY29udGVudEVkaXRhYmxlLmdldEJvZHkoKTsKICAgICAgICAgICAgdmFyIG1haW5Cb2R5U3RyaW5nID0gcGxhaW5UZXh0RHJhZnRCb2R5Q29udGVudHMoYm9keVN0cmluZywgZHJhZnQuaWQpOwogICAgICAgICAgICB2YXIgcmVnZXggPSAvKGF0dGFjaGVkfGF0dGFjaG1lbnR8YXR0YWNoKS87CiAgICAgICAgICAgIHZhciBtZXRhTGVuZ3RoID0gKChfYSA9IF90aGlzLnByb3BzLmF0dGFjaG1lbnRNZXRhcykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmxlbmd0aCkgfHwgMDsKICAgICAgICAgICAgdmFyIGF0dGFjaG1lbnRzTGVuZ3RoID0gZHJhZnQuYXR0YWNobWVudHMubGVuZ3RoOwogICAgICAgICAgICB2YXIgYWxsQXR0YWNobWVudExlbmd0aCA9IG1ldGFMZW5ndGggKyBhdHRhY2htZW50c0xlbmd0aDsKICAgICAgICAgICAgdmFyIG1hdGNoZXMgPSBtYWluQm9keVN0cmluZyA9PT0gbnVsbCB8fCBtYWluQm9keVN0cmluZyA9PT0gdm9pZCAwID8gdm9pZCAwIDogbWFpbkJvZHlTdHJpbmcubWF0Y2gocmVnZXgpOwogICAgICAgICAgICBpZiAoYWxsQXR0YWNobWVudExlbmd0aCA9PT0gMCAmJiAhIShtYXRjaGVzID09PSBudWxsIHx8IG1hdGNoZXMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG1hdGNoZXMubGVuZ3RoKSkgewogICAgICAgICAgICAgICAgdmFyIGNvbmZpcm1Qcm9wcyA9IHsKICAgICAgICAgICAgICAgICAgICB0aXRsZTogJ05vIGF0dGFjaG1lbnRzJywKICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiAiWW91IHdyb3RlIHRoZSB3b3JkIFwiIiArIG1hdGNoZXNbMF0gKyAiXCIgYnV0IHlvdSBkaWQgbm90IGF0dGFjaCBhbnkgZmlsZXMgb24gdGhpcyBtZXNzYWdlLiBXb3VsZCB5b3UgbGlrZSB0byBzZW5kIGFueXdheT8iLAogICAgICAgICAgICAgICAgICAgIGNvbmZpcm1Db3B5OiAnT2snLAogICAgICAgICAgICAgICAgICAgIGNhbmNlbENvcHk6ICdDYW5jZWwnLAogICAgICAgICAgICAgICAgICAgIG9uQ29uZmlybTogZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IGNvbmZpcm1Qcm9wczogdW5kZWZpbmVkIH0pOwogICAgICAgICAgICAgICAgICAgICAgICBfdGhpcy5wcm9wcy5zZW5kKHsgZHJhZnQ6IF9fYXNzaWduKF9fYXNzaWduKHt9LCBkcmFmdCksIHsgc2NoZWR1bGVkOiBudWxsIH0pLCB0b2dnbGVBcmNoaXZlOiBmYWxzZSB9KTsKICAgICAgICAgICAgICAgICAgICAgICAgLy8gSGFuZGxlIHNlbmQgdG8gZGlzbWlzcyBwb3BvdXQgd2luZG93CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChvblNlbmQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uU2VuZCgpOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBvbkNhbmNlbDogZnVuY3Rpb24gKCkgeyByZXR1cm4gX3RoaXMuc2V0U3RhdGUoeyBjb25maXJtUHJvcHM6IHVuZGVmaW5lZCB9KTsgfSwKICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IGNvbmZpcm1Qcm9wczogY29uZmlybVByb3BzIH0pOwogICAgICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgICB9CiAgICAgICAgICAgIC8vIFNob3cgd2FybmluZyBpZiBubyBzdWJqZWN0CiAgICAgICAgICAgIGlmIChkcmFmdC5zdWJqZWN0ID09PSAnJykgewogICAgICAgICAgICAgICAgdmFyIGNvbmZpcm1Qcm9wcyA9IHsKICAgICAgICAgICAgICAgICAgICB0aXRsZTogJ05vIFN1YmplY3QnLAogICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICdZb3UgZGlkIG5vdCBpbmNsdWRlIGEgc3ViamVjdCBpbiB0aGlzIG1lc3NhZ2UuIFdvdWxkIHlvdSBsaWtlIHRvIHNlbmQgYW55d2F5PycsCiAgICAgICAgICAgICAgICAgICAgY29uZmlybUNvcHk6ICdPaycsCiAgICAgICAgICAgICAgICAgICAgY2FuY2VsQ29weTogJ0NhbmNlbCcsCiAgICAgICAgICAgICAgICAgICAgb25Db25maXJtOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHsgY29uZmlybVByb3BzOiB1bmRlZmluZWQgfSk7CiAgICAgICAgICAgICAgICAgICAgICAgIF90aGlzLnByb3BzLnNlbmQoeyBkcmFmdDogX19hc3NpZ24oX19hc3NpZ24oe30sIGRyYWZ0KSwgeyBzY2hlZHVsZWQ6IG51bGwgfSksIHRvZ2dsZUFyY2hpdmU6IGZhbHNlIH0pOwogICAgICAgICAgICAgICAgICAgICAgICAvLyBIYW5kbGUgc2VuZCB0byBkaXNtaXNzIHBvcG91dCB3aW5kb3cKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG9uU2VuZCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgb25TZW5kKCk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIG9uQ2FuY2VsOiBmdW5jdGlvbiAoKSB7IHJldHVybiBfdGhpcy5zZXRTdGF0ZSh7IGNvbmZpcm1Qcm9wczogdW5kZWZpbmVkIH0pOyB9LAogICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHsgY29uZmlybVByb3BzOiBjb25maXJtUHJvcHMgfSk7CiAgICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLy8gU2VuZCBpZiBhbGwgY2hlY2tzIHBhc3MgYW5kIG5vdGlmeSBwYXJlbnQKICAgICAgICAgICAgaWYgKGRyYWZ0CiAgICAgICAgICAgICAgICAmJiBkcmFmdC5jYWxlbmRhckludml0ZQogICAgICAgICAgICAgICAgJiYgZHJhZnQuY2FsZW5kYXJJbnZpdGUucmVjaXBpZW50cwogICAgICAgICAgICAgICAgJiYgZHJhZnQuY2FsZW5kYXJJbnZpdGUucmVjaXBpZW50cy5sZW5ndGgpIHsKICAgICAgICAgICAgICAgIGxvZ0FtcGxpdHVkZUV2ZW50KEFtcGxpdHVkZUV2ZW50cy5TZW5kQ2FsZW5kYXJJbnZpdGUpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIF90aGlzLnByb3BzLnNlbmQoeyBkcmFmdDogZHJhZnQsIHRvZ2dsZUFyY2hpdmU6IHRvZ2dsZUFyY2hpdmUgfSk7CiAgICAgICAgfTsKICAgICAgICBfdGhpcy5oYW5kbGVUZW1wbGF0ZVNhdmUgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHZhciBfYSA9IF90aGlzLnByb3BzLCBkcmFmdCA9IF9hLmRyYWZ0LCBzYXZlQXNUZW1wbGF0ZSA9IF9hLnNhdmVBc1RlbXBsYXRlOwogICAgICAgICAgICBpZiAoIWRyYWZ0KSB7CiAgICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLy8gRXh0cmFjdCBCb2R5IGZyb20gZHJhZnQKICAgICAgICAgICAgdmFyIGJvZHlTdHJpbmcgPSBfdGhpcy5jb21wb3NlUGFuZS5jb250ZW50RWRpdGFibGUuZ2V0Qm9keSgpOwogICAgICAgICAgICB2YXIgbWFpbkJvZHlTdHJpbmcgPSBib2R5V2l0aG91dFNpZ25hdHVyZUFuZEhpc3RvcnkoYm9keVN0cmluZywgZHJhZnQuaWQpOwogICAgICAgICAgICAvLyBTYXZlIGFzIE5ldyBUZW1wbGF0ZQogICAgICAgICAgICB2YXIgbmV3VGVtcGxhdGUgPSB7CiAgICAgICAgICAgICAgICBpZDogJycsCiAgICAgICAgICAgICAgICBuYW1lOiBkcmFmdC5zdWJqZWN0LAogICAgICAgICAgICAgICAgc3ViamVjdDogZHJhZnQuc3ViamVjdCwKICAgICAgICAgICAgICAgIGJvZHk6IG1haW5Cb2R5U3RyaW5nLAogICAgICAgICAgICAgICAgdXNlcjogJycsCiAgICAgICAgICAgICAgICBhdHRhY2htZW50czogZHJhZnQuYXR0YWNobWVudHMsCiAgICAgICAgICAgICAgICBjcmVhdGVkOiBuZXcgRGF0ZSgpLAogICAgICAgICAgICAgICAgdXBkYXRlZDogbmV3IERhdGUoKSwKICAgICAgICAgICAgICAgIHR5cGU6IFRlbXBsYXRlVHlwZS5NZXNzYWdlLAogICAgICAgICAgICB9OwogICAgICAgICAgICBzYXZlQXNUZW1wbGF0ZShuZXdUZW1wbGF0ZSk7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB9OwogICAgICAgIF90aGlzLmhhbmRsZVNlbmRMYXRlciA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgdmFyIHJzYk9uYm9hcmRpbmcgPSBfdGhpcy5wcm9wcy5yc2JPbmJvYXJkaW5nOwogICAgICAgICAgICBfdGhpcy5wcm9wcy5jb21tYW5kQ29udHJvbFNob3coQ29tbWFuZENvbnRyb2xUeXBlLlNlbmRMYXRlcik7CiAgICAgICAgICAgIF90aGlzLnByb3BzLmRpc3BhdGNoQWN0aW9uKGhvdGtleVN1Z2dlc3QoSG90a2V5QWN0aW9uLlNlbmRMYXRlcikpOwogICAgICAgICAgICBpZiAocnNiT25ib2FyZGluZyA9PT0gT25ib2FyZGluZ1R5cGUuU2VuZExhdGVyKSB7CiAgICAgICAgICAgICAgICBsb2dBbXBsaXR1ZGVFdmVudChBbXBsaXR1ZGVFdmVudHMuVG91clN0ZXBUd28sIHsgc2tpcHBlZDogZmFsc2UgfSk7CiAgICAgICAgICAgIH0KICAgICAgICB9OwogICAgICAgIF90aGlzLmhhbmRsZUZvbGxvd1VwID0gZnVuY3Rpb24gKCkgewogICAgICAgICAgICBfdGhpcy5wcm9wcy5kaXNwYXRjaEFjdGlvbihob3RrZXlTdWdnZXN0KEhvdGtleUFjdGlvbi5Gb2xsb3dVcFJlbWluZGVyKSk7CiAgICAgICAgICAgIF90aGlzLnByb3BzLmNvbW1hbmRDb250cm9sU2hvdyhDb21tYW5kQ29udHJvbFR5cGUuRm9sbG93VXApOwogICAgICAgIH07CiAgICAgICAgX3RoaXMuaGFuZGxlUmVwbHlDbGljayA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgX3RoaXMuY29uZmlndXJlQ29tcG9zZXIoQ29uZmlndXJhdGlvbi5SZXBseUFsbCk7CiAgICAgICAgfTsKICAgICAgICBfdGhpcy5oYW5kbGVDb21tZW50Q2xpY2sgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIF90aGlzLmNvbmZpZ3VyZUNvbXBvc2VyKENvbmZpZ3VyYXRpb24uQ29tbWVudCk7CiAgICAgICAgfTsKICAgICAgICAvLyBUT0RPKFNISU4pOiBGaWd1cmUgb3V0IHdoZXJlIHRvIGlkZW50aWZ5IGNsb3VkIGF0dGFjaG1lbnQKICAgICAgICBfdGhpcy5oYW5kbGVVcGxvYWQgPSBmdW5jdGlvbiAoZmlsZXMsIG9wdGlvbnMpIHsKICAgICAgICAgICAgdmFyIF9hID0gX3RoaXMucHJvcHMsIGRyYWZ0ID0gX2EuZHJhZnQsIHVwbG9hZCA9IF9hLnVwbG9hZDsKICAgICAgICAgICAgLy8gQmxvY2sgYWJpbGl0eSB0byBhdHRhY2ggZmlsZXMgbGFyZ2VyIHRoYW4gMjUgTUIuCiAgICAgICAgICAgIGlmIChmaWxlcy5maWx0ZXIoZnVuY3Rpb24gKGZpbGUpIHsgcmV0dXJuIGZpbGUuc2l6ZSA+IDI1MDAwMDAwOyB9KS5sZW5ndGgpIHsKICAgICAgICAgICAgICAgIHZhciBjb25maXJtUHJvcHMgPSB7CiAgICAgICAgICAgICAgICAgICAgdGl0bGU6ICdFcnJvciBVcGxvYWRpbmcgQXR0YWNobWVudCcsCiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ1lvdSBjYW5ub3QgdXBsb2FkIGFuIGF0dGFjaG1lbnQgZ3JlYXRlciB0aGFuIDI1IE1CLicsCiAgICAgICAgICAgICAgICAgICAgY29uZmlybUNvcHk6ICdPaycsCiAgICAgICAgICAgICAgICAgICAgb25Db25maXJtOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHsgY29uZmlybVByb3BzOiB1bmRlZmluZWQgfSk7CiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IGNvbmZpcm1Qcm9wczogY29uZmlybVByb3BzIH0pOwogICAgICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIChkcmFmdCkgewogICAgICAgICAgICAgICAgZmlsZXMuZm9yRWFjaChmdW5jdGlvbiAoZmlsZSkgewogICAgICAgICAgICAgICAgICAgIC8vIENyZWF0ZSBtZXRhCiAgICAgICAgICAgICAgICAgICAgdmFyIGlubGluZSA9IGZpbGVGb3JtYXQoZmlsZS50eXBlKSA9PT0gRmlsZVR5cGUuSW1hZ2U7CiAgICAgICAgICAgICAgICAgICAgdmFyIGF0dGFjaG1lbnQgPSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGZpbGU6IGZpbGUsCiAgICAgICAgICAgICAgICAgICAgICAgIHJlc291cmNlSWQ6IGRyYWZ0LmlkLAogICAgICAgICAgICAgICAgICAgICAgICBhdHRhY2htZW50OiBtb25nb0lkKCksCiAgICAgICAgICAgICAgICAgICAgICAgIGlubGluZTogIW9wdGlvbnMuc2hpZnRLZXkgJiYgIW9wdGlvbnMuaWdub3JlSW5saW5lICYmIGlubGluZSwKICAgICAgICAgICAgICAgICAgICAgICAgY2xvdWQ6ICFvcHRpb25zLnNoaWZ0S2V5ICYmIGRyYWZ0LnRyYWNrICYmIGRyYWZ0LnRyYWNrTGlua3MKICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gIWlubGluZSAmJiBfdGhpcy5wcm9wcy5jbG91ZEF0dGFjaG1lbnRzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IGZhbHNlLAogICAgICAgICAgICAgICAgICAgICAgICBjbG91ZFVybDogVVJMLmNyZWF0ZU9iamVjdFVSTChmaWxlKSwKICAgICAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgICAgIHVwbG9hZChhdHRhY2htZW50KTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9CiAgICAgICAgfTsKICAgICAgICBfdGhpcy5oYW5kbGVBdHRhY2htZW50UmVtb3ZlID0gZnVuY3Rpb24gKGlkKSB7CiAgICAgICAgICAgIGlmIChfdGhpcy5wcm9wcy5kcmFmdCkgewogICAgICAgICAgICAgICAgdmFyIGF0dGFjaG1lbnQgPSB7CiAgICAgICAgICAgICAgICAgICAgcmVzb3VyY2VJZDogX3RoaXMucHJvcHMuZHJhZnQuaWQsCiAgICAgICAgICAgICAgICAgICAgYXR0YWNobWVudDogaWQsCiAgICAgICAgICAgICAgICAgICAgZmlsZTogdW5kZWZpbmVkLAogICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgIF90aGlzLnByb3BzLnJlbW92ZUF0dGFjaG1lbnQoYXR0YWNobWVudCk7CiAgICAgICAgICAgIH0KICAgICAgICB9OwogICAgICAgIF90aGlzLmhhbmRsZVJlY2lwaWVudHNQYW5lUmVmID0gZnVuY3Rpb24gKHJlZikgewogICAgICAgICAgICBfdGhpcy5yZWNpcGllbnRzUGFuZSA9IHJlZjsKICAgICAgICB9OwogICAgICAgIF90aGlzLmhhbmRsZVJlZiA9IGZ1bmN0aW9uIChyZWYpIHsKICAgICAgICAgICAgX3RoaXMucmVmID0gcmVmOwogICAgICAgIH07CiAgICAgICAgX3RoaXMuaGFuZGxlRGVsZXRlID0gZnVuY3Rpb24gKHNob3J0Y3V0KSB7CiAgICAgICAgICAgIC8vIFNob3cgc3VnZ2VzdGlvbiBpZiBkZWxldGVkIHdpdGhvdXQgaG90a2V5CiAgICAgICAgICAgIGlmIChzaG9ydGN1dCAhPT0gdHJ1ZSkgewogICAgICAgICAgICAgICAgX3RoaXMucHJvcHMuZGlzcGF0Y2hBY3Rpb24oaG90a2V5U3VnZ2VzdChIb3RrZXlBY3Rpb24uRGlzY2FyZCkpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIChfdGhpcy5wcm9wcy5kcmFmdCkgewogICAgICAgICAgICAgICAgdmFyIGNvbmZpcm1Qcm9wcyA9IHsKICAgICAgICAgICAgICAgICAgICB0aXRsZTogJ0RlbGV0aW5nIERyYWZ0JywKICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiAnQXJlIHlvdSBzdXJlIHlvdSB3YW50IHRvIGRlbGV0ZSB0aGlzIGRyYWZ0PycsCiAgICAgICAgICAgICAgICAgICAgY29uZmlybUNvcHk6ICdEZWxldGUnLAogICAgICAgICAgICAgICAgICAgIG9uQ29uZmlybTogZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IGNvbmZpcm1Qcm9wczogdW5kZWZpbmVkIH0pOwogICAgICAgICAgICAgICAgICAgICAgICBpZiAoX3RoaXMucHJvcHMuZHJhZnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF90aGlzLnByb3BzLmRlbGV0ZShfdGhpcy5wcm9wcy5kcmFmdCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoX3RoaXMucHJvcHMub25EZWxldGUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdGhpcy5wcm9wcy5vbkRlbGV0ZSgpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoeyBleHBhbmRlZDogZmFsc2UgfSk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIG9uQ2FuY2VsOiBmdW5jdGlvbiAoKSB7IHJldHVybiBfdGhpcy5zZXRTdGF0ZSh7IGNvbmZpcm1Qcm9wczogdW5kZWZpbmVkIH0pOyB9LAogICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHsgY29uZmlybVByb3BzOiBjb25maXJtUHJvcHMgfSk7CiAgICAgICAgICAgIH0KICAgICAgICB9OwogICAgICAgIC8vIFRPRE8oU0hJTjogU2VlIGlmIHdlIGNhbiByZW1lbWJlciBjdXJzb3IgcG9zaXRpb24gdXNpbmcgQ29tbWFuZENvbnRyb2wgY29tcG9uZW50CiAgICAgICAgX3RoaXMuaGFuZGxlS2V5RG93biA9IGZ1bmN0aW9uIChldmVudCkgewogICAgICAgICAgICB2YXIgX2EgPSBfdGhpcy5wcm9wcywgY29tbWFuZENvbnRyb2xTaG93ID0gX2EuY29tbWFuZENvbnRyb2xTaG93LCBkaXNwYXRjaEFjdGlvbiA9IF9hLmRpc3BhdGNoQWN0aW9uLCBmZWF0dXJlcyA9IF9hLmZlYXR1cmVzLCB1cGRhdGVIb3RrZXkgPSBfYS51cGRhdGVIb3RrZXksIGRyYWZ0ID0gX2EuZHJhZnQsIHNldFRvYXN0ID0gX2Euc2V0VG9hc3QsIHVwZGF0ZSA9IF9hLnVwZGF0ZTsKICAgICAgICAgICAgdmFyIGhhbmRsZWQgPSBmYWxzZTsKICAgICAgICAgICAgLy8gTk9URShTSElOKTogV2Ugc3RvcCBwcm9wYWdhdGlvbiBzaW5jZSBhbnkga2V5c3Ryb2tlIGNvdWxkCiAgICAgICAgICAgIC8vIHJlc3VsdCBpbiBhIGJ1bmNoIG9mIHVuaW50ZW5kZWQgaG90a2V5c3MgZ2V0dGluZyB0cmlnZ2VyZWQgKE5ldyBEcmFmdCwgRGVsZXRlLCBBcmNoaXZlKQogICAgICAgICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTsKICAgICAgICAgICAgdmFyIGhvdGtleSA9IGdldEhvdGtleShldmVudCk7CiAgICAgICAgICAgIHN3aXRjaCAoKGhvdGtleSAmJiBob3RrZXkubmFtZSkgfHwgZXZlbnQua2V5Q29kZSkgewogICAgICAgICAgICAgICAgY2FzZSBIb3RrZXlBY3Rpb24uRGlzY2FyZDoKICAgICAgICAgICAgICAgICAgICBoYW5kbGVkID0gdHJ1ZTsKICAgICAgICAgICAgICAgICAgICBfdGhpcy5oYW5kbGVEZWxldGUodHJ1ZSk7CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICBjYXNlIEhvdGtleUFjdGlvbi5TZW5kTGF0ZXI6CiAgICAgICAgICAgICAgICAgICAgaWYgKGhvdGtleSAmJiBob3RrZXkuYWN0aW9uICYmIGZlYXR1cmVzLnNlbmRMYXRlcikgewogICAgICAgICAgICAgICAgICAgICAgICBfdGhpcy5zYXZlQ3Vyc29yUG9zaXRpb24oKTsKICAgICAgICAgICAgICAgICAgICAgICAgaGFuZGxlZCA9IHRydWU7CiAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BhdGNoQWN0aW9uKGhvdGtleS5hY3Rpb24pOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIGNhc2UgSG90a2V5QWN0aW9uLkNhbmNlbEZvbGxvd3VwOiAvLyBDYW5jZWxzIEZvbGxvd3VwIHJlbWluZGVyCiAgICAgICAgICAgICAgICAgICAgaWYgKGRyYWZ0ICYmIGRyYWZ0LndhaXRpbmcpIHsKICAgICAgICAgICAgICAgICAgICAgICAgdXBkYXRlKF9fYXNzaWduKF9fYXNzaWduKHt9LCBkcmFmdCksIHsgd2FpdGluZzogbnVsbCB9KSk7CiAgICAgICAgICAgICAgICAgICAgICAgIHNldFRvYXN0KG5ldyBDb25maXJtYXRpb25FcnJvcignWW91ciBmb2xsb3d1cCBoYXMgYmVlbiBjYW5jZWxlZCEnLCB0cnVlLCBDb25maXJtYXRpb25Qb3NpdG9uLlRvcENlbnRlcikpOwogICAgICAgICAgICAgICAgICAgICAgICBoYW5kbGVkID0gdHJ1ZTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICBjYXNlIEhvdGtleUFjdGlvbi5Gb2xsb3dVcFJlbWluZGVyOgogICAgICAgICAgICAgICAgICAgIGlmIChob3RrZXkgJiYgaG90a2V5LmFjdGlvbiAmJiBmZWF0dXJlcy5mb2xsb3dVcCkgewogICAgICAgICAgICAgICAgICAgICAgICBfdGhpcy5zYXZlQ3Vyc29yUG9zaXRpb24oKTsKICAgICAgICAgICAgICAgICAgICAgICAgaGFuZGxlZCA9IHRydWU7CiAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BhdGNoQWN0aW9uKGhvdGtleS5hY3Rpb24pOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIGNhc2UgSG90a2V5QWN0aW9uLkNhbGVuZGFySW52aXRlOgogICAgICAgICAgICAgICAgICAgIGlmIChob3RrZXkgJiYgaG90a2V5LmFjdGlvbikgewogICAgICAgICAgICAgICAgICAgICAgICBfdGhpcy5zYXZlQ3Vyc29yUG9zaXRpb24oKTsKICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGF0Y2hBY3Rpb24oaG90a2V5LmFjdGlvbik7CiAgICAgICAgICAgICAgICAgICAgICAgIGhhbmRsZWQgPSB0cnVlOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIGNhc2UgSG90a2V5QWN0aW9uLlNlbmQ6CiAgICAgICAgICAgICAgICAgICAgaWYgKGhvdGtleSAmJiBob3RrZXkubmFtZSkgewogICAgICAgICAgICAgICAgICAgICAgICB1cGRhdGVIb3RrZXkoSG90a2V5QWN0aW9uLlNlbmQpOwogICAgICAgICAgICAgICAgICAgICAgICBoYW5kbGVkID0gdHJ1ZTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICBjYXNlIEhvdGtleUFjdGlvbi5TZW5kQW5kQXJjaGl2ZToKICAgICAgICAgICAgICAgICAgICBpZiAoaG90a2V5ICYmIGhvdGtleS5uYW1lKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHVwZGF0ZUhvdGtleShIb3RrZXlBY3Rpb24uU2VuZEFuZEFyY2hpdmUpOwogICAgICAgICAgICAgICAgICAgICAgICBoYW5kbGVkID0gdHJ1ZTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICBjYXNlIEhvdGtleUFjdGlvbi5NZXNzYWdlVGVtcGxhdGVzOgogICAgICAgICAgICAgICAgICAgIGlmIChmZWF0dXJlcy5tZXNzYWdlVGVtcGxhdGVzKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIF90aGlzLnNhdmVDdXJzb3JQb3NpdGlvbigpOwogICAgICAgICAgICAgICAgICAgICAgICBoYW5kbGVkID0gdHJ1ZTsKICAgICAgICAgICAgICAgICAgICAgICAgY29tbWFuZENvbnRyb2xTaG93KENvbW1hbmRDb250cm9sVHlwZS5UZW1wbGF0ZXMpOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIGNhc2UgSG90a2V5QWN0aW9uLlRvZ2dsZUNvbW1hbmRDb250cm9sOgogICAgICAgICAgICAgICAgICAgIGNvbW1hbmRDb250cm9sU2hvdyhDb21tYW5kQ29udHJvbFR5cGUuRHJhZnQpOwogICAgICAgICAgICAgICAgICAgIF90aGlzLnNhdmVDdXJzb3JQb3NpdGlvbigpOwogICAgICAgICAgICAgICAgICAgIGhhbmRsZWQgPSB0cnVlOwogICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgY2FzZSBIb3RrZXlBY3Rpb24uUmVwbHlCQ0M6CiAgICAgICAgICAgICAgICAgICAgaWYgKGhvdGtleSAmJiBob3RrZXkubmFtZSkgewogICAgICAgICAgICAgICAgICAgICAgICB1cGRhdGVIb3RrZXkoSG90a2V5QWN0aW9uLlJlcGx5QkNDKTsKICAgICAgICAgICAgICAgICAgICAgICAgaGFuZGxlZCA9IHRydWU7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgY2FzZSBIb3RrZXlBY3Rpb24uQ2M6CiAgICAgICAgICAgICAgICAgICAgaWYgKGhvdGtleSAmJiBob3RrZXkubmFtZSkgewogICAgICAgICAgICAgICAgICAgICAgICB1cGRhdGVIb3RrZXkoSG90a2V5QWN0aW9uLkNjKTsKICAgICAgICAgICAgICAgICAgICAgICAgaGFuZGxlZCA9IHRydWU7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgY2FzZSBIb3RrZXlBY3Rpb24uQmNjOgogICAgICAgICAgICAgICAgICAgIGlmIChob3RrZXkgJiYgaG90a2V5Lm5hbWUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgdXBkYXRlSG90a2V5KEhvdGtleUFjdGlvbi5CY2MpOwogICAgICAgICAgICAgICAgICAgICAgICBoYW5kbGVkID0gdHJ1ZTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICBjYXNlIEhvdGtleUFjdGlvbi5Db3B5U2NoZWR1bGluZ1VybDoKICAgICAgICAgICAgICAgICAgICBfdGhpcy5zYXZlQ3Vyc29yUG9zaXRpb24oKTsKICAgICAgICAgICAgICAgICAgICBjb21tYW5kQ29udHJvbFNob3coQ29tbWFuZENvbnRyb2xUeXBlLlNjaGVkdWxpbmdQYWdlcyk7CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICBkZWZhdWx0OgogICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CiAgICAgICAgICAgIC8vIERvIG5vdCBoYW5kbGUga2V5IGlmIGhhbmRsZWQgYnkgaG90a2V5CiAgICAgICAgICAgIGlmIChoYW5kbGVkKSB7CiAgICAgICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpOwogICAgICAgICAgICB9CiAgICAgICAgfTsKICAgICAgICBfdGhpcy5oYW5kbGVQcmV2aWV3Q2xpY2sgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHsgcmVjaXBpZW50c0V4cGFuZGVkOiB0cnVlIH0pOwogICAgICAgIH07CiAgICAgICAgLy8gT25seSB0b2dnbGVzIHJlY2lwaWVudHNFeHBhbmRlZCB3aGVuIG5vdCBleHBhbmRlZCB0byBwcmV2ZW50IHJlLXJlbmRlcnMgb2YgQ29udGVudEVkaXRhYmxlCiAgICAgICAgX3RoaXMuaGFuZGxlQ29tcG9zZVNlbGVjdCA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgdmFyIHNob3dGdWxsSGVpZ2h0ID0gX3RoaXMucHJvcHMuc2hvd0Z1bGxIZWlnaHQ7CiAgICAgICAgICAgIGlmIChfdGhpcy5zdGF0ZS5yZWNpcGllbnRzRXhwYW5kZWQgJiYgIXNob3dGdWxsSGVpZ2h0KSB7CiAgICAgICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IHJlY2lwaWVudHNFeHBhbmRlZDogZmFsc2UgfSk7CiAgICAgICAgICAgIH0KICAgICAgICB9OwogICAgICAgIF90aGlzLmhhbmRsZVNob3dIaXN0b3J5ID0gZnVuY3Rpb24gKCkgewogICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IHNob3dIaXN0b3J5OiB0cnVlIH0pOwogICAgICAgIH07CiAgICAgICAgX3RoaXMuaGFuZGxlQ29tcG9zZVBhbmVSZWYgPSBmdW5jdGlvbiAocmVmKSB7CiAgICAgICAgICAgIF90aGlzLmNvbXBvc2VQYW5lID0gcmVmOwogICAgICAgIH07CiAgICAgICAgX3RoaXMuaGFuZGxlU3ViamVjdFBhbmVSZWYgPSBmdW5jdGlvbiAocmVmKSB7CiAgICAgICAgICAgIF90aGlzLnN1YmplY3RQYW5lID0gcmVmOwogICAgICAgIH07CiAgICAgICAgX3RoaXMuZm9jdXNDb250ZW50RWRpdGFibGUgPSBmdW5jdGlvbiAoc2VsZWN0Rmlyc3RQbGFjZWhvbGRlciwgc2VsZWN0TGFzdFBsYWNlaG9sZGVyKSB7CiAgICAgICAgICAgIGlmIChfdGhpcy5jb21wb3NlUGFuZSkgewogICAgICAgICAgICAgICAgX3RoaXMuY29tcG9zZVBhbmUuZm9jdXNDb250ZW50RWRpdGFibGUoc2VsZWN0Rmlyc3RQbGFjZWhvbGRlciwgc2VsZWN0TGFzdFBsYWNlaG9sZGVyKTsKICAgICAgICAgICAgfQogICAgICAgIH07CiAgICAgICAgX3RoaXMuZm9jdXNTdWJqZWN0UGFuZSA9IGZ1bmN0aW9uIChzZWxlY3RGaXJzdFBsYWNlaG9sZGVyLCBzZWxlY3RMYXN0UGxhY2Vob2xkZXIpIHsKICAgICAgICAgICAgaWYgKF90aGlzLnN1YmplY3RQYW5lKSB7CiAgICAgICAgICAgICAgICBfdGhpcy5zdWJqZWN0UGFuZS5mb2N1cyhzZWxlY3RGaXJzdFBsYWNlaG9sZGVyLCBzZWxlY3RMYXN0UGxhY2Vob2xkZXIpOwogICAgICAgICAgICB9CiAgICAgICAgfTsKICAgICAgICBfdGhpcy5oYW5kbGVSZWNpcGllbnRzUGFuZVRhYlByZXNzID0gZnVuY3Rpb24gKCkgewogICAgICAgICAgICB2YXIgZHJhZnQgPSBfdGhpcy5wcm9wcy5kcmFmdDsKICAgICAgICAgICAgdmFyIF9hID0gX3RoaXMuc3RhdGUsIHNob3dDb21tZW50ID0gX2Euc2hvd0NvbW1lbnQsIHJlY2lwaWVudHNFeHBhbmRlZCA9IF9hLnJlY2lwaWVudHNFeHBhbmRlZDsKICAgICAgICAgICAgdmFyIG5ld0RyYWZ0ID0gIWRyYWZ0IHx8ICFkcmFmdC50aHJlYWQ7CiAgICAgICAgICAgIHZhciBzdWJqZWN0ID0gX3RoaXMucHJvcHMuZHJhZnQgJiYgX3RoaXMucHJvcHMuZHJhZnQuc3ViamVjdDsKICAgICAgICAgICAgdmFyIHNob3dTdWJqZWN0ID0gIXNob3dDb21tZW50ICYmICghbmV3RHJhZnQgJiYgcmVjaXBpZW50c0V4cGFuZGVkIHx8IG5ld0RyYWZ0KTsKICAgICAgICAgICAgdmFyIHZhcmlhYmxlcyA9IHN1YmplY3QgJiYgc3ViamVjdC5tYXRjaCgve3tbXnt9XSt9fS9nKTsKICAgICAgICAgICAgaWYgKHNob3dTdWJqZWN0KSB7CiAgICAgICAgICAgICAgICBpZiAodmFyaWFibGVzKSB7CiAgICAgICAgICAgICAgICAgICAgX3RoaXMuZm9jdXNTdWJqZWN0UGFuZSh0cnVlLCBmYWxzZSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgICAgICBfdGhpcy5mb2N1c1N1YmplY3RQYW5lKCk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgIH0KICAgICAgICAgICAgX3RoaXMuZm9jdXNDb250ZW50RWRpdGFibGUoKTsKICAgICAgICB9OwogICAgICAgIF90aGlzLmZvY3VzUmVjaXBpZW50RWRpdG9yID0gZnVuY3Rpb24gKCkgewogICAgICAgICAgICBpZiAoX3RoaXMucmVjaXBpZW50c1BhbmUpIHsKICAgICAgICAgICAgICAgIF90aGlzLnJlY2lwaWVudHNQYW5lLmZvY3VzKCk7CiAgICAgICAgICAgIH0KICAgICAgICB9OwogICAgICAgIF90aGlzLmhhbmRsZUNvbnRlbnRFZGl0YWJsZVRhYlByZXNzID0gZnVuY3Rpb24gKGV2ZW50KSB7CiAgICAgICAgICAgIHZhciBzdWJqZWN0ID0gX3RoaXMucHJvcHMuZHJhZnQgJiYgX3RoaXMucHJvcHMuZHJhZnQuc3ViamVjdDsKICAgICAgICAgICAgdmFyIHZhcmlhYmxlcyA9IHN1YmplY3QgJiYgc3ViamVjdC5tYXRjaCgve3tbXnt9XSt9fS9nKTsKICAgICAgICAgICAgaWYgKGV2ZW50LnNoaWZ0S2V5ICYmIHZhcmlhYmxlcykgewogICAgICAgICAgICAgICAgX3RoaXMuZm9jdXNTdWJqZWN0UGFuZShmYWxzZSwgdHJ1ZSk7CiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAodmFyaWFibGVzKSB7CiAgICAgICAgICAgICAgICBfdGhpcy5mb2N1c1N1YmplY3RQYW5lKHRydWUsIGZhbHNlKTsKICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIChldmVudC5zaGlmdEtleSkgewogICAgICAgICAgICAgICAgLy8gT3ZlcnJpZGUgaGFuZGxlciB0byBzdWJqZWN0IHBhbmUgaWYgaW4gaW5kZW50ZWQgYmxvY2sKICAgICAgICAgICAgICAgIGlmIChfdGhpcy5jb21wb3NlUGFuZSAmJiBfdGhpcy5jb21wb3NlUGFuZS5jb250ZW50RWRpdGFibGUgJiYKICAgICAgICAgICAgICAgICAgICBfdGhpcy5jb21wb3NlUGFuZS5jb250ZW50RWRpdGFibGUuaXNTZWxlY3Rpb25JbmRlbnRlZCgpKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgX3RoaXMuZm9jdXNTdWJqZWN0UGFuZSgpOwogICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH07CiAgICAgICAgX3RoaXMuaGFuZGxlU3ViamVjdFRhYlByZXNzID0gZnVuY3Rpb24gKGUpIHsKICAgICAgICAgICAgdmFyIHJlY2lwaWVudHNFeHBhbmRlZCA9IF90aGlzLnN0YXRlLnJlY2lwaWVudHNFeHBhbmRlZDsKICAgICAgICAgICAgdmFyIGJvZHkgPSBfdGhpcy5wcm9wcy5kcmFmdCAmJiBfdGhpcy5wcm9wcy5kcmFmdC5ib2R5OwogICAgICAgICAgICB2YXIgZG9jID0gRmFrZURPTSgpLmNyZWF0ZUVsZW1lbnQoJ2RpdicpOwogICAgICAgICAgICBkb2MuaW5uZXJIVE1MID0gYm9keSB8fCAnJzsKICAgICAgICAgICAgdmFyIHZhcmlhYmxlcyA9IGRvYy5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdkYXRhLXBtLXZhcicpOwogICAgICAgICAgICBpZiAoZS5zaGlmdEtleSAmJiB2YXJpYWJsZXMubGVuZ3RoKSB7CiAgICAgICAgICAgICAgICBfdGhpcy5mb2N1c0NvbnRlbnRFZGl0YWJsZShmYWxzZSwgdHJ1ZSk7CiAgICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKHZhcmlhYmxlcy5sZW5ndGgpIHsKICAgICAgICAgICAgICAgIF90aGlzLmZvY3VzQ29udGVudEVkaXRhYmxlKHRydWUpOwogICAgICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIChlLnNoaWZ0S2V5KSB7CiAgICAgICAgICAgICAgICBpZiAocmVjaXBpZW50c0V4cGFuZGVkKSB7CiAgICAgICAgICAgICAgICAgICAgX3RoaXMuZm9jdXNSZWNpcGllbnRFZGl0b3IoKTsKICAgICAgICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IHJlY2lwaWVudHNFeHBhbmRlZDogdHJ1ZSB9LCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgICAgX3RoaXMuZm9jdXNSZWNpcGllbnRFZGl0b3IoKTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgICB9CiAgICAgICAgICAgIF90aGlzLmZvY3VzQ29udGVudEVkaXRhYmxlKCk7CiAgICAgICAgfTsKICAgICAgICBfdGhpcy5oYW5kbGVTY2hlZHVsaW5nVXJsID0gZnVuY3Rpb24gKCkgewogICAgICAgICAgICB2YXIgc2NoZWR1bGluZ1VybCA9IF90aGlzLnByb3BzLnNjaGVkdWxpbmdVcmw7CiAgICAgICAgICAgIGlmIChzY2hlZHVsaW5nVXJsKSB7CiAgICAgICAgICAgICAgICBfdGhpcy5wcm9wcy5kaXNwYXRjaEFjdGlvbihob3RrZXlVcGRhdGUoSG90a2V5QWN0aW9uLkNvcHlTY2hlZHVsaW5nVXJsKSk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICBicm93c2VySGlzdG9yeS5wdXNoKCcvc2V0dGluZ3MvY2FsZW5kYXInKTsKICAgICAgICAgICAgfQogICAgICAgIH07CiAgICAgICAgX3RoaXMuaGFuZGxlVHJhY2sgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHZhciBfYSA9IF90aGlzLnByb3BzLCBkcmFmdCA9IF9hLmRyYWZ0LCB1cGRhdGUgPSBfYS51cGRhdGUsIHByZWZlcmVuY2VzID0gX2EucHJlZmVyZW5jZXM7CiAgICAgICAgICAgIGlmIChkcmFmdCkgewogICAgICAgICAgICAgICAgdmFyIG5ld1RyYWNrVmFsdWUgPSAhKGRyYWZ0ID09PSBudWxsIHx8IGRyYWZ0ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBkcmFmdC50cmFjayk7CiAgICAgICAgICAgICAgICB2YXIgbmV3VHJhY2tMaW5rc1ZhbHVlID0gcHJlZmVyZW5jZXMubGlua1RyYWNraW5nICYmIG5ld1RyYWNrVmFsdWU7CiAgICAgICAgICAgICAgICB1cGRhdGUoX19hc3NpZ24oX19hc3NpZ24oe30sIGRyYWZ0KSwgeyB0cmFjazogbmV3VHJhY2tWYWx1ZSwgdHJhY2tMaW5rczogbmV3VHJhY2tMaW5rc1ZhbHVlIH0pKTsKICAgICAgICAgICAgfQogICAgICAgIH07CiAgICAgICAgLy8gVE9ETyhTSElOKTogTW92ZSBwZW5kaW5nIGNvbW1lbnRzIHRvIHJlZHV4IHN0YXRlIGxldmVsCiAgICAgICAgLy8gd2l0aCBhIHJlZmVyZW5jZSBpZCB0byBzaGFyZWR0aHJlYWQvdGhyZWFkCiAgICAgICAgX3RoaXMuaGFuZGxlQ29tbWVudCA9IGZ1bmN0aW9uIChib2R5LCBhdHRhY2htZW50cykgewogICAgICAgICAgICB2YXIgX2E7CiAgICAgICAgICAgIHZhciBfYiA9IF90aGlzLnByb3BzLCB0aHJlYWQgPSBfYi50aHJlYWQsIGNyZWF0ZUNvbW1lbnQgPSBfYi5jcmVhdGVDb21tZW50LCBzZWxlY3RlZFNoYXJlZFRocmVhZCA9IF9iLnNlbGVjdGVkU2hhcmVkVGhyZWFkLCBjcmVhdGVTaGFyZWRUaHJlYWQgPSBfYi5jcmVhdGVTaGFyZWRUaHJlYWQsIHNldFRvYXN0ID0gX2Iuc2V0VG9hc3QsIHJzYk9uYm9hcmRpbmcgPSBfYi5yc2JPbmJvYXJkaW5nLCBkaXNwYXRjaEFjdGlvbiA9IF9iLmRpc3BhdGNoQWN0aW9uLCBzaGFyZWRUaHJlYWREcmFmdCA9IF9iLnNoYXJlZFRocmVhZERyYWZ0OwogICAgICAgICAgICB2YXIgbGFzdE1lc3NhZ2UgPSB0aHJlYWQgJiYgbGFzdCh0aHJlYWQubWVzc2FnZXMpOwogICAgICAgICAgICAvLyBCbG9jayBjb21tZW50IHdoZW4gbGFzdCBtZXNzYWdlIGlzIHN0aWxsIG9wdGltaXN0aWMKICAgICAgICAgICAgaWYgKGxhc3RNZXNzYWdlICYmICEhbGFzdE1lc3NhZ2Uub3B0aW1pc3RpYykgewogICAgICAgICAgICAgICAgc2V0VG9hc3QobmV3IEVycm9yKCdQbGVhc2Ugd2FpdCBmb3IgeW91ciBsYXN0IG1lc3NzYWdlIHRvIGZpbmlzaCBzZW5kaW5nJyArCiAgICAgICAgICAgICAgICAgICAgJyBiZWZvcmUgY29tbWVudGluZyBvbiB0aGlzIGNvbnZlcnNhdGlvbi4nKSk7CiAgICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLy8gU3RvcCBjb21tZW50IHVwbG9hZCB3aGVuIHN0aWxsIHVwbG9hZGluZyBhdHRhY2htZW50cwogICAgICAgICAgICBpZiAoYXR0YWNobWVudHMuZmlsdGVyKGZ1bmN0aW9uIChhdHRhY2htZW50KSB7IHJldHVybiBhdHRhY2htZW50LnByb2dyZXNzIDwgMTsgfSkubGVuZ3RoID4gMCkgewogICAgICAgICAgICAgICAgc2V0VG9hc3QobmV3IEVycm9yKCdQbGVhc2Ugd2FpdCBmb3IgeW91ciBhdHRhY2htZW50cyAnCiAgICAgICAgICAgICAgICAgICAgKyAndG8gZmluaXNoIHVwbG9hZGluZyBiZWZvcmUgcG9zdGluZyB5b3VyIGNvbW1lbnQuJykpOwogICAgICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgICB9CiAgICAgICAgICAgIC8vIFVwZGF0ZSBvbmJvYXJkaW5nIGZvciBjb21tZW50CiAgICAgICAgICAgIGlmIChyc2JPbmJvYXJkaW5nICYmIHJzYk9uYm9hcmRpbmcgPT09IE9uYm9hcmRpbmdUeXBlLkNvbW1lbnQpIHsKICAgICAgICAgICAgICAgIGRpc3BhdGNoQWN0aW9uKG9uYm9hcmRpbmdQYXRjaCh7CiAgICAgICAgICAgICAgICAgICAgc2tpcHBlZDogZmFsc2UsCiAgICAgICAgICAgICAgICAgICAgdHlwZTogeyBzdGVwczogKF9hID0ge30sIF9hW09uYm9hcmRpbmdUeXBlLkNvbW1lbnRdID0gdHJ1ZSwgX2EpIH0sCiAgICAgICAgICAgICAgICB9KSk7CiAgICAgICAgICAgICAgICBsb2dBbXBsaXR1ZGVFdmVudChBbXBsaXR1ZGVFdmVudHMuVG91clN0ZXBFbGV2ZW4sIHsgc2tpcHBlZDogZmFsc2UgfSk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZ2V0T25ib2FyZGluZ0FjdGlvbnMoKS5uZXh0KE9uYm9hcmRpbmdUeXBlLkNvbW1lbnQpOwogICAgICAgICAgICBpZiAobGFzdE1lc3NhZ2UgJiYgc2VsZWN0ZWRTaGFyZWRUaHJlYWQpIHsKICAgICAgICAgICAgICAgIHZhciBsYXN0TWVzc2FnZVJmY0lkID0gbGFzdE1lc3NhZ2UucmZjSWQgfHwgbGFzdE1lc3NhZ2UuaWQ7CiAgICAgICAgICAgICAgICB2YXIgY29tcHV0ZWRSZmNJZCA9IHNoYXJlZFRocmVhZERyYWZ0ICYmICI8IiArIHNoYXJlZFRocmVhZERyYWZ0ICsgIkBwb2x5bWFpbC5pbz4iIHx8CiAgICAgICAgICAgICAgICAgICAgbGFzdE1lc3NhZ2VSZmNJZDsKICAgICAgICAgICAgICAgIGNyZWF0ZUNvbW1lbnQoewogICAgICAgICAgICAgICAgICAgIHRocmVhZDogc2VsZWN0ZWRTaGFyZWRUaHJlYWQsCiAgICAgICAgICAgICAgICAgICAgcmZjSWQ6IGNvbXB1dGVkUmZjSWQsCiAgICAgICAgICAgICAgICAgICAgZHJhZnQ6IHNoYXJlZFRocmVhZERyYWZ0LAogICAgICAgICAgICAgICAgICAgIGJvZHk6IGJvZHksCiAgICAgICAgICAgICAgICAgICAgYXR0YWNobWVudHM6IGF0dGFjaG1lbnRzLAogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZWxzZSBpZiAobGFzdE1lc3NhZ2UgJiYgdGhyZWFkKSB7CiAgICAgICAgICAgICAgICB2YXIgY29tcHV0ZWRSZmNJZCA9IGxhc3RNZXNzYWdlLnJmY0lkIHx8IGxhc3RNZXNzYWdlLmlkOwogICAgICAgICAgICAgICAgY3JlYXRlU2hhcmVkVGhyZWFkKHsKICAgICAgICAgICAgICAgICAgICB0aHJlYWQ6IHRocmVhZC5pZCwKICAgICAgICAgICAgICAgICAgICBwZXJtaXNzaW9uczogewogICAgICAgICAgICAgICAgICAgICAgICBzY29wZTogU2hhcmVkVGhyZWFkUGVybWlzc2lvblNjb3BlLlRlYW0sCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBjb21tZW50czogW3sKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJmY0lkOiBjb21wdXRlZFJmY0lkLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgYm9keTogYm9keSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dGFjaG1lbnRzOiBhdHRhY2htZW50cywKICAgICAgICAgICAgICAgICAgICAgICAgfV0sCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfQogICAgICAgIH07CiAgICAgICAgX3RoaXMuaGFuZGxlQ29tbWVudEZvY3VzZWQgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIF90aGlzLnByb3BzLnVwZGF0ZU9uYm9hcmRpbmcoT25ib2FyZGluZ1R5cGUuQ3JlYXRlQ29tbWVudCk7CiAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHsgY29tbWVudEZvY3VzZWQ6IHRydWUgfSk7CiAgICAgICAgfTsKICAgICAgICBfdGhpcy5oYW5kbGVDb21tZW50Rm9jdXMgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIGlmIChfdGhpcy5jb21tZW50RWRpdG9yKSB7CiAgICAgICAgICAgICAgICBfdGhpcy5jb21tZW50RWRpdG9yLmZvY3VzKCk7CiAgICAgICAgICAgIH0KICAgICAgICB9OwogICAgICAgIF90aGlzLmhhbmRsZUVycm9yRGlzbWlzcyA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgLy8gRXh0cmFjdCBwcm9wZXRpZXMKICAgICAgICAgICAgdmFyIF9hID0gX3RoaXMucHJvcHMsIGRyYWZ0ID0gX2EuZHJhZnQsIHVwZGF0ZSA9IF9hLnVwZGF0ZTsKICAgICAgICAgICAgaWYgKCFkcmFmdCkgewogICAgICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgICB9CiAgICAgICAgICAgIC8vIFJlbW92ZSBlcnJvciBmcm9tIGRyYWZ0IGFuZCByZXNldCBzdGF0dXMgdG8gZHJhZnQKICAgICAgICAgICAgdmFyIHVwZGF0ZWQgPSBfX2Fzc2lnbihfX2Fzc2lnbih7fSwgZHJhZnQpLCB7IGVycm9yOiB1bmRlZmluZWQgfSk7CiAgICAgICAgICAgIHVwZGF0ZSh1cGRhdGVkKTsKICAgICAgICB9OwogICAgICAgIHZhciBuZXdEcmFmdCA9IChwcm9wcy5kcmFmdCAmJiAhcHJvcHMuZHJhZnQudGhyZWFkVjIpIHx8IGZhbHNlOwogICAgICAgIF90aGlzLnJlY29yZFR5cGluZyA9IHRocm90dGxlKGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgdmFyIF9hID0gX3RoaXMucHJvcHMsIHNlbGVjdGVkU2hhcmVkVGhyZWFkID0gX2Euc2VsZWN0ZWRTaGFyZWRUaHJlYWQsIGNyZWF0ZVNoYXJlZFRocmVhZEFjdGl2aXR5ID0gX2EuY3JlYXRlU2hhcmVkVGhyZWFkQWN0aXZpdHk7CiAgICAgICAgICAgIGlmIChzZWxlY3RlZFNoYXJlZFRocmVhZCkgewogICAgICAgICAgICAgICAgY3JlYXRlU2hhcmVkVGhyZWFkQWN0aXZpdHkoewogICAgICAgICAgICAgICAgICAgIHR5cGU6IFNoYXJlZFRocmVhZEFjdGl2aXR5VHlwZS5SZXBseSwKICAgICAgICAgICAgICAgICAgICBzaGFyZWRUaHJlYWQ6IHNlbGVjdGVkU2hhcmVkVGhyZWFkLAogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0KICAgICAgICB9LCBQSU5HX0lOVEVSVkFMKTsKICAgICAgICBfdGhpcy5zdGF0ZSA9IHsKICAgICAgICAgICAgc2hvd0hpc3Rvcnk6IGZhbHNlLAogICAgICAgICAgICBleHBhbmRlZDogcHJvcHMuZHJhZnQgIT09IHVuZGVmaW5lZCwKICAgICAgICAgICAgc2hvd0NvbW1lbnQ6IGZhbHNlLAogICAgICAgICAgICByZWNpcGllbnRzRXhwYW5kZWQ6IG5ld0RyYWZ0LAogICAgICAgICAgICBmb2N1c2VkOiBmYWxzZSwKICAgICAgICAgICAgY29tbWVudEZvY3VzZWQ6IGZhbHNlLAogICAgICAgIH07CiAgICAgICAgcmV0dXJuIF90aGlzOwogICAgfQogICAgQ29tcG9zZXIucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gKCkgewogICAgICAgIHZhciBuZXdEcmFmdCA9IHRoaXMucHJvcHMuZHJhZnQ7CiAgICAgICAgaWYgKG5ld0RyYWZ0ICYmIG5ld0RyYWZ0LmNyZWF0ZWQgPT09IG5ld0RyYWZ0LnVwZGF0ZWQpIHsKICAgICAgICAgICAgaWYgKG5ld0RyYWZ0LnRvLmxlbmd0aCA9PT0gMCkgewogICAgICAgICAgICAgICAgdGhpcy5mb2N1c1JlY2lwaWVudEVkaXRvcigpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgdGhpcy5jb21wb3NlUGFuZS5jb250ZW50RWRpdGFibGUuZm9jdXMoKTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH07CiAgICBDb21wb3Nlci5wcm90b3R5cGUuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMgPSBmdW5jdGlvbiAobmV4dFByb3BzKSB7CiAgICAgICAgdmFyIF9hID0gdGhpcy5wcm9wcywgZHJhZnQgPSBfYS5kcmFmdCwgb25FeHBhbmQgPSBfYS5vbkV4cGFuZCwgb25TZW5kID0gX2Eub25TZW5kOwogICAgICAgIGlmICghbmV4dFByb3BzLmRyYWZ0KSB7CiAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoeyBleHBhbmRlZDogZmFsc2UgfSk7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB9CiAgICAgICAgLy8gSEFDSyhTSElOKTogVGhpcyBpcyBoZXJlIHRvIGNsb3NlIHBvcHBlZCBvdXQgd2luZG93IGFuZCBndWFyYW50ZWUgdGhhdAogICAgICAgIC8vIGFjdGlvbiBoYXMgcnVuIGFuZCBiZWVuIGJyb2FkY2FzdAogICAgICAgIGlmIChvblNlbmQgJiYgZHJhZnQgJiYgaXNEcmFmdFNlbmRpbmcoZHJhZnQpKSB7CiAgICAgICAgICAgIG9uU2VuZCgpOwogICAgICAgIH0KICAgICAgICBpZiAobmV4dFByb3BzLmRyYWZ0ICYmICghZHJhZnQgfHwgZHJhZnQuaWQgIT09IG5leHRQcm9wcy5kcmFmdC5pZCkpIHsKICAgICAgICAgICAgLy8gRXhwYW5kcwogICAgICAgICAgICB0aGlzLnNldFN0YXRlKHsKICAgICAgICAgICAgICAgIGV4cGFuZGVkOiB0cnVlLAogICAgICAgICAgICAgICAgc2hvd0hpc3Rvcnk6IGZhbHNlLAogICAgICAgICAgICAgICAgcmVjaXBpZW50c0V4cGFuZGVkOiAhbmV4dFByb3BzLmRyYWZ0LnRocmVhZCwKICAgICAgICAgICAgfSwgZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgaWYgKG9uRXhwYW5kICYmIG5leHRQcm9wcy5kcmFmdCkgewogICAgICAgICAgICAgICAgICAgIG9uRXhwYW5kKG5leHRQcm9wcy5kcmFmdC5tZXNzYWdlKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSk7CiAgICAgICAgfQogICAgfTsKICAgIENvbXBvc2VyLnByb3RvdHlwZS5jb21wb25lbnREaWRVcGRhdGUgPSBmdW5jdGlvbiAob2xkUHJvcHMsIG9sZFN0YXRlKSB7CiAgICAgICAgdmFyIF9hOwogICAgICAgIGlmICghIW9sZFByb3BzLmNvbW1hbmRDb250cm9sVHlwZSAmJiAhdGhpcy5wcm9wcy5jb21tYW5kQ29udHJvbFR5cGUgJiYKICAgICAgICAgICAgIXRoaXMucmVmLmNvbnRhaW5zKGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQpKSB7CiAgICAgICAgICAgIC8vIFJlc3RvcmUgY3Vyc29yIHBvc2l0aW9uIGlmIGZvY3VzIGlzIG5vdCBvbiBzaGFyZWQgdGhyZWFkIGlucHV0CiAgICAgICAgICAgIGlmICgoKF9hID0gZG9jdW1lbnQuYWN0aXZlRWxlbWVudCkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmNsYXNzTmFtZSkgIT09ICd1cmwtaW5wdXQnKSB7CiAgICAgICAgICAgICAgICB0aGlzLnJlc3RvcmVDdXJzb3JQb3NpdGlvbigpOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIC8vIEhhbmRsZSBob3RrZXlzIGZvciBjYyBhbmQgYmNjCiAgICAgICAgdmFyIG5ld0FjdGlvbnMgPSB0aGlzLnByb3BzLmhvdGtleUFjdGlvbnM7CiAgICAgICAgdmFyIG9sZEFjdGlvbnMgPSBvbGRQcm9wcy5ob3RrZXlBY3Rpb25zOwogICAgICAgIGlmIChvbGRBY3Rpb25zICE9PSBuZXdBY3Rpb25zKSB7CiAgICAgICAgICAgIHRoaXMuaGFuZGxlSG90a2V5QWN0aW9uc0NoYW5nZShvbGRBY3Rpb25zLCBuZXdBY3Rpb25zKTsKICAgICAgICB9CiAgICAgICAgaWYgKG9sZFN0YXRlLmV4cGFuZGVkICYmICF0aGlzLnN0YXRlLmV4cGFuZGVkKSB7CiAgICAgICAgICAgIGRvY3VtZW50LmJvZHkuZm9jdXMoKTsKICAgICAgICB9CiAgICAgICAgLy8gSGFuZGxlIGluaXRpYWwgZm9jdXMgZXZlbnRzCiAgICAgICAgdmFyIG9sZERyYWZ0ID0gb2xkUHJvcHMuZHJhZnQ7CiAgICAgICAgdmFyIG5ld0RyYWZ0ID0gdGhpcy5wcm9wcy5kcmFmdDsKICAgICAgICB2YXIgZHJhZnRDaGFuZ2VkID0gISFuZXdEcmFmdCAmJiAoIW9sZERyYWZ0IHx8IG9sZERyYWZ0ICYmIG9sZERyYWZ0LmlkICE9PSBuZXdEcmFmdC5pZCk7CiAgICAgICAgaWYgKG5ld0RyYWZ0ICYmIG5ld0RyYWZ0LmNyZWF0ZWQgPT09IG5ld0RyYWZ0LnVwZGF0ZWQgJiYgZHJhZnRDaGFuZ2VkKSB7CiAgICAgICAgICAgIGlmIChuZXdEcmFmdC50by5sZW5ndGggPT09IDApIHsKICAgICAgICAgICAgICAgIHRoaXMuZm9jdXNSZWNpcGllbnRFZGl0b3IoKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgIHRoaXMuY29tcG9zZVBhbmUuY29udGVudEVkaXRhYmxlLmZvY3VzKCk7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgLy8gU3RvcCBwcmV2aW91cyBvbiBjaGFuZ2UKICAgICAgICAvLyBUT09EKFNISU4pOiBJbnZlc3RpZ2F0ZSBpc3N1ZSBmb3IgZHJhZnQgc2VuZGluZyBhcyBlbXB0eSBjdWxwcml0PwogICAgICAgIGlmIChkcmFmdENoYW5nZWQgJiYgdGhpcy5jb21wb3NlUGFuZSAmJiB0aGlzLmNvbXBvc2VQYW5lLmNvbnRlbnRFZGl0YWJsZSkgewogICAgICAgICAgICB0aGlzLmNvbXBvc2VQYW5lLmNvbnRlbnRFZGl0YWJsZS5jYW5jZWxPbkNoYW5nZSgpOwogICAgICAgIH0KICAgIH07CiAgICBDb21wb3Nlci5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24gKCkgewogICAgICAgIHZhciBfYSA9IHRoaXMuc3RhdGUsIGV4cGFuZGVkID0gX2EuZXhwYW5kZWQsIHNob3dDb21tZW50ID0gX2Euc2hvd0NvbW1lbnQsIHJlY2lwaWVudHNFeHBhbmRlZCA9IF9hLnJlY2lwaWVudHNFeHBhbmRlZCwgc2hvd0hpc3RvcnkgPSBfYS5zaG93SGlzdG9yeSwgY29uZmlybVByb3BzID0gX2EuY29uZmlybVByb3BzLCBjb21tZW50Rm9jdXNlZCA9IF9hLmNvbW1lbnRGb2N1c2VkOwogICAgICAgIHZhciBfYiA9IHRoaXMucHJvcHMsIGFjY291bnRzID0gX2IuYWNjb3VudHMsIGRyYWZ0ID0gX2IuZHJhZnQsIHRocmVhZCA9IF9iLnRocmVhZCwgc2hvd0Z1bGxIZWlnaHQgPSBfYi5zaG93RnVsbEhlaWdodCwgZGlzcGF0Y2hBY3Rpb24gPSBfYi5kaXNwYXRjaEFjdGlvbiwgbm9CcmFuZGluZyA9IF9iLm5vQnJhbmRpbmcsIGdldENvbnRhY3QgPSBfYi5nZXRDb250YWN0LCBmZWF0dXJlcyA9IF9iLmZlYXR1cmVzLCBzaG93U2VuZE9uYm9hcmRpbmcgPSBfYi5zaG93U2VuZE9uYm9hcmRpbmcsIHByZWZlcmVuY2VzID0gX2IucHJlZmVyZW5jZXMsIGhpZGVQb3BvdXQgPSBfYi5oaWRlUG9wb3V0LCBoaWRlQWN0aW9ucyA9IF9iLmhpZGVBY3Rpb25zLCBzaG93Q29tbWVudE9uYm9hcmRpbmcgPSBfYi5zaG93Q29tbWVudE9uYm9hcmRpbmcsIGhpZGVDb21tZW50RWRpdG9yID0gX2IuaGlkZUNvbW1lbnRFZGl0b3IsIGF1dG9mb2N1cyA9IF9iLmF1dG9mb2N1cywgZHJhZnRBY2NvdW50ID0gX2IuZHJhZnRBY2NvdW50LCBkcmFmdFBhcmVudEFjY291bnQgPSBfYi5kcmFmdFBhcmVudEFjY291bnQsIGNsYXNzTmFtZSA9IF9iLmNsYXNzTmFtZTsKICAgICAgICB2YXIgdXNlTGlua1ByZXZpZXcgPSAhcHJlZmVyZW5jZXMuZGlzYWJsZUxpbmtQcmV2aWV3czsKICAgICAgICB2YXIgc2hvd0hpc3RvcnlCdXR0b24gPSBkcmFmdCAmJiAhc2hvd0hpc3RvcnkgJiYgZHJhZnQuYm9keQogICAgICAgICAgICAmJiBkcmFmdC5ib2R5LmluY2x1ZGVzKCdnbWFpbF9xdW90ZScpOwogICAgICAgIHZhciB0byA9IChkcmFmdCAmJiBkcmFmdC50bykgfHwgW107CiAgICAgICAgdmFyIGNjID0gKGRyYWZ0ICYmIGRyYWZ0LmNjKSB8fCBbXTsKICAgICAgICB2YXIgYmNjID0gKGRyYWZ0ICYmIGRyYWZ0LmJjYykgfHwgW107CiAgICAgICAgdmFyIHN1YmplY3QgPSAoZHJhZnQgJiYgZHJhZnQuc3ViamVjdCkgfHwgJyc7CiAgICAgICAgdmFyIHNlbmRlciA9IChkcmFmdEFjY291bnQgJiYgZHJhZnRBY2NvdW50LmVtYWlsKSB8fCAnJzsKICAgICAgICB2YXIgbGFzdE1lc3NhZ2UgPSB0aHJlYWQgJiYgbGFzdCh0aHJlYWQubWVzc2FnZXMuZmlsdGVyKGZ1bmN0aW9uIChtZXNzYWdlKSB7IHJldHVybiAhbWVzc2FnZS5zZW50OyB9KSk7CiAgICAgICAgdmFyIHNob3dSZXBseUFsbCA9IGxhc3RNZXNzYWdlICYmIGxhc3RNZXNzYWdlLnRvLmNvbmNhdChsYXN0TWVzc2FnZS5jYy5jb25jYXQobGFzdE1lc3NhZ2UuYmNjKSkubGVuZ3RoID4gMTsKICAgICAgICB2YXIgbmV3RHJhZnQgPSAhZHJhZnQgfHwgIWRyYWZ0LnRocmVhZDsKICAgICAgICB2YXIgc2hvd1N1YmplY3QgPSAhc2hvd0NvbW1lbnQgJiYgKCFuZXdEcmFmdCAmJiByZWNpcGllbnRzRXhwYW5kZWQgfHwgbmV3RHJhZnQpOwogICAgICAgIHZhciBwb3BvdXRMaW5rOwogICAgICAgIHZhciBvbmJvYXJkaW5nTWVudGlvbkNvcHkgPSAoUmVhY3QuY3JlYXRlRWxlbWVudCgic3BhbiIsIG51bGwsCiAgICAgICAgICAgICJHaXZlIGNvbnRleHQgZm9yIHRoZSBmdXR1cmUgYnkgbGVhdmluZyBjb21tZW50cyBvbiBhIGNvbnZlcnNhdGlvbi4gWW91IGNhbiBhbHNvIHN0YXJ0IGludGVybmFsIGRpc2N1c3Npb25zIGJ5IEBtZW50aW9uaW5nIHRlYW1tYXRlcyBpbiBhIGNvbW1lbnQuIiwKICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudCgiYnIiLCBudWxsKSwKICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudCgiYnIiLCBudWxsKSwKICAgICAgICAgICAgIlRyeSBwb3N0aW5nIGEgY29tbWVudCBmb3IgeW91cnNlbGYgYmVsb3ciKSk7CiAgICAgICAgaWYgKGRyYWZ0KSB7CiAgICAgICAgICAgIHBvcG91dExpbmsgPSAiL3BvcG91dC9kcmFmdHMvIiArIGRyYWZ0LmlkOwogICAgICAgIH0KICAgICAgICAvLyBUT0RPKFNISU4pOiBEaXNhYmxlIGhpZGUgYWRkLW9ucyBmb3IgUmVjaXBpZW50c1BhbmUgZm9yIGJldGEKICAgICAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIHsgY2xhc3NOYW1lOiBjbGFzc25hbWVzKCdjb21wb3NlcicsIHsKICAgICAgICAgICAgICAgIGV4cGFuZGVkOiBleHBhbmRlZCwKICAgICAgICAgICAgICAgICdoaWRlLWhpc3RvcnknOiAhc2hvd0hpc3RvcnkgJiYgISFzaG93SGlzdG9yeUJ1dHRvbiwKICAgICAgICAgICAgICAgIC8vIG1ha2Ugc2lnbmF0dXJlIGFsd2F5cyB2aXNpYmxlCiAgICAgICAgICAgICAgICAvLyBodHRwczovL3BvbHltYWlsLmF0bGFzc2lhbi5uZXQvYnJvd3NlL1BNLTI0NAogICAgICAgICAgICAgICAgJ2hpZGUtc2lnbmF0dXJlJzogZmFsc2UsCiAgICAgICAgICAgICAgICAnZnVsbC1oZWlnaHQnOiBzaG93RnVsbEhlaWdodCwKICAgICAgICAgICAgfSwgY2xhc3NOYW1lKSwgb25LZXlEb3duOiB0aGlzLmhhbmRsZUtleURvd24sIHJlZjogdGhpcy5oYW5kbGVSZWYgfSwKICAgICAgICAgICAgY29uZmlybVByb3BzICYmIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ29uZmlybSwgX19hc3NpZ24oe30sIGNvbmZpcm1Qcm9wcykpLAogICAgICAgICAgICAhZXhwYW5kZWQgJiYgIWZlYXR1cmVzLmNvbW1lbnRzICYmIFJlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIHsgY2xhc3NOYW1lOiAicHJldmlldy1hY3Rpb25zIiB9LAogICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudCgiYnV0dG9uIiwgeyBjbGFzc05hbWU6ICJvcHRpb25zIiwgb25DbGljazogdGhpcy5vbkNvbmZpZ3VyZUNsaWNrIH0sCiAgICAgICAgICAgICAgICAgICAgIkNsaWNrIEhlcmUgdG8iLAogICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoInNwYW4iLCB7IGlkOiBDb25maWd1cmF0aW9uLlJlcGx5IH0sICJSZXBseSIpLAogICAgICAgICAgICAgICAgICAgICIsIiwKICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KCJzcGFuIiwgeyBpZDogQ29uZmlndXJhdGlvbi5SZXBseUFsbCB9LCAiUmVwbHkgQWxsIiksCiAgICAgICAgICAgICAgICAgICAgIiwgb3IiLAogICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoInNwYW4iLCB7IGlkOiBDb25maWd1cmF0aW9uLkZvcndhcmQgfSwgIkZvcndhcmQiKSksCiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KEF0dGFjaG1lbnQsIG51bGwpKSwKICAgICAgICAgICAgIWhpZGVBY3Rpb25zICYmIGZlYXR1cmVzLmNvbW1lbnRzICYmIFJlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIHsgY2xhc3NOYW1lOiAiYWN0aW9ucyIgfSwKICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIHsgY2xhc3NOYW1lOiAiYnV0dG9ucyIgfSwKICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KCJidXR0b24iLCB7ICJkYXRhLWFjdGlvbiI6IENvbmZpZ3VyYXRpb24uUmVwbHksIG9uQ2xpY2s6IHRoaXMub25Db25maWd1cmVDbGljayB9LAogICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFJlcGx5LCBudWxsKSksCiAgICAgICAgICAgICAgICAgICAgc2hvd1JlcGx5QWxsICYmIFJlYWN0LmNyZWF0ZUVsZW1lbnQoImJ1dHRvbiIsIHsgImRhdGEtYWN0aW9uIjogQ29uZmlndXJhdGlvbi5SZXBseUFsbCwgb25DbGljazogdGhpcy5vbkNvbmZpZ3VyZUNsaWNrIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUmVwbHlBbGwsIG51bGwpKSwKICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KCJidXR0b24iLCB7ICJkYXRhLWFjdGlvbiI6IENvbmZpZ3VyYXRpb24uRm9yd2FyZCwgb25DbGljazogdGhpcy5vbkNvbmZpZ3VyZUNsaWNrIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoRm9yd2FyZCwgbnVsbCkpKSksCiAgICAgICAgICAgICFleHBhbmRlZCAmJiBmZWF0dXJlcy5jb21tZW50cyAmJiAhaGlkZUNvbW1lbnRFZGl0b3IgJiYgKFJlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIHsgY2xhc3NOYW1lOiAicHJldmlldyIgfSwKICAgICAgICAgICAgICAgIHNob3dDb21tZW50T25ib2FyZGluZyAmJiBjb21tZW50Rm9jdXNlZCAmJgogICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoT25ib2FyZGluZ1RpcCwgeyB0aXRsZTogIkNvbW1lbnRzICYgTWVudGlvbnMiLCBtZXNzYWdlOiBvbmJvYXJkaW5nTWVudGlvbkNvcHksIHRvcDogIi0xNjRweCIsIGFuY2hvclBvc2l0aW9uOiBBbmNob3JQb3NpdGlvbi5Cb3R0b20gfSksCiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KENvbW1lbnRFZGl0b3IsIHsgcmVmOiB0aGlzLmhhbmRsZUNvbW1lbnRFZGl0b3JSZWYsIGNvbW1lbnQ6IHRoaXMuaGFuZGxlQ29tbWVudCwgb25Gb2N1czogdGhpcy5oYW5kbGVDb21tZW50Rm9jdXNlZCB9KSkpLAogICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLCB7IGNsYXNzTmFtZTogIm1haW4iIH0sCiAgICAgICAgICAgICAgICBzaG93Q29tbWVudCAmJiBmYWxzZSAmJgogICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ29tbWVudFBhbmUsIHsgb25SZXBseUNsaWNrOiB0aGlzLmhhbmRsZVJlcGx5Q2xpY2sgfSksCiAgICAgICAgICAgICAgICAhc2hvd0NvbW1lbnQgJiYKICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFJlY2lwaWVudHNQYW5lLCB7IHJlZjogdGhpcy5oYW5kbGVSZWNpcGllbnRzUGFuZVJlZiwgb25SZWNpcGllbnRzQ2hhbmdlOiB0aGlzLmhhbmRsZVJlY2lwaWVudHNDaGFuZ2UsIGRyYWZ0S2V5OiBkcmFmdCAmJiBkcmFmdC5pZCwgdG86IHRvLCBiY2M6IGJjYywgY2M6IGNjLCBzZW5kZXI6IHNlbmRlciwgc2VuZGVyRW1haWxzOiBhY2NvdW50cy5tYXAoZnVuY3Rpb24gKGFjY291bnQpIHsgcmV0dXJuIGFjY291bnQuZW1haWw7IH0pLCBvblNlbmRlclNlbGVjdDogdGhpcy5oYW5kbGVTZW5kZXJTZWxlY3QsIGhpZGVBZGRvbnM6IHRydWUsIG9uQ29tbWVudENsaWNrOiB0aGlzLmhhbmRsZUNvbW1lbnRDbGljaywgZXhwYW5kZWQ6IHJlY2lwaWVudHNFeHBhbmRlZCwgb25QcmV2aWV3Q2xpY2s6IHRoaXMuaGFuZGxlUHJldmlld0NsaWNrLCBvbkNvbnRhY3RHcm91cEFkZDogdGhpcy5oYW5kbGVDb250YWN0R3JvdXBBZGQsIG9uVGFiUHJlc3M6IHRoaXMuaGFuZGxlUmVjaXBpZW50c1BhbmVUYWJQcmVzcywgc2hvd1BvcG91dDogIXNob3dTdWJqZWN0ICYmICFoaWRlUG9wb3V0LCBuZXdEcmFmdDogbmV3RHJhZnQgPyBuZXdEcmFmdCA6IHVuZGVmaW5lZCwgcG9wb3V0TGluazogcG9wb3V0TGluaywgYXV0b2ZvY3VzOiBhdXRvZm9jdXMgfSksCiAgICAgICAgICAgICAgICBzaG93U3ViamVjdCAmJiBSZWFjdC5jcmVhdGVFbGVtZW50KFN1YmplY3RQYW5lLCB7IG9uQ2hhbmdlOiB0aGlzLmhhbmRsZVN1YmplY3RDaGFuZ2UsIHN1YmplY3Q6IHN1YmplY3QsIG9uVGFiUHJlc3M6IHRoaXMuaGFuZGxlU3ViamVjdFRhYlByZXNzLCByZWY6IHRoaXMuaGFuZGxlU3ViamVjdFBhbmVSZWYsIG9uRGVsZXRlUHJlc3M6IHRoaXMuaGFuZGxlRGVsZXRlLCBzaG93UG9wb3V0OiAhaGlkZVBvcG91dCwgcG9wb3V0TGluazogcG9wb3V0TGluayB9KSwKICAgICAgICAgICAgICAgIGV4cGFuZGVkICYmCiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChDb21wb3NlUGFuZSwgeyByZWY6IHRoaXMuaGFuZGxlQ29tcG9zZVBhbmVSZWYsIG9uU2VuZDogdGhpcy5oYW5kbGVQcmltYXJ5U2VuZENsaWNrLCBvblNlbmRMYXRlcjogdGhpcy5oYW5kbGVTZW5kTGF0ZXIsIG9uRm9sbG93VXA6IHRoaXMuaGFuZGxlRm9sbG93VXAsIG9uQ2hhbmdlOiB0aGlzLmhhbmRsZUJvZHlDaGFuZ2UsIG9uVXBsb2FkOiB0aGlzLmhhbmRsZVVwbG9hZCwgb25SZW1vdmVBdHRhY2htZW50OiB0aGlzLmhhbmRsZUF0dGFjaG1lbnRSZW1vdmUsIG9uVGFiUHJlc3M6IHRoaXMuaGFuZGxlQ29udGVudEVkaXRhYmxlVGFiUHJlc3MsIGRyYWZ0OiBkcmFmdCwgYWNjb3VudHM6IGFjY291bnRzLCBodG1sOiBkcmFmdCAmJiBkcmFmdC5ib2R5LCBvblNlbGVjdDogdGhpcy5oYW5kbGVDb21wb3NlU2VsZWN0LCBvblNob3dIaXN0b3J5OiBzaG93SGlzdG9yeUJ1dHRvbiA/IHRoaXMuaGFuZGxlU2hvd0hpc3RvcnkgOiB1bmRlZmluZWQsIGF1dG9mb2N1czogZmFsc2UsIGF0dGFjaG1lbnRzOiBkcmFmdCAmJiBkcmFmdC5hdHRhY2htZW50cywgYXR0YWNobWVudE1ldGFzOiB0aGlzLnByb3BzLmF0dGFjaG1lbnRNZXRhcyB8fCBbXSwgZGlzcGF0Y2hBY3Rpb246IGRpc3BhdGNoQWN0aW9uLCBub0JyYW5kaW5nOiBub0JyYW5kaW5nLCBnZXRDb250YWN0OiBnZXRDb250YWN0LCBkcmFmdEFjY291bnQ6IGRyYWZ0QWNjb3VudCwgZHJhZnRQYXJlbnRBY2NvdW50OiBkcmFmdFBhcmVudEFjY291bnQsIGZlYXR1cmVzOiBmZWF0dXJlcywgb25TY2hlZHVsaW5nVXJsU2VsZWN0OiB0aGlzLmhhbmRsZVNjaGVkdWxpbmdVcmwsIHVzZUxpbmtQcmV2aWV3OiB1c2VMaW5rUHJldmlldywgc2hvd1NlbmRPbmJvYXJkaW5nOiBzaG93U2VuZE9uYm9hcmRpbmcsIG9uRGVsZXRlOiB0aGlzLmhhbmRsZURlbGV0ZSwgb25UcmFjazogdGhpcy5oYW5kbGVUcmFjaywgc2hvd1NlbnRGcm9tUG9seW1haWw6ICFmZWF0dXJlcy5kaXNhYmxlU2VudEZyb21Qb2x5bWFpbCB8fCAhIXByZWZlcmVuY2VzLnNlbnRGcm9tUG9seW1haWwsIG9uRXJyb3JEaXNtaXNzOiB0aGlzLmhhbmRsZUVycm9yRGlzbWlzcyB9KSkpKTsKICAgIH07CiAgICByZXR1cm4gQ29tcG9zZXI7Cn0oUmVhY3QuUHVyZUNvbXBvbmVudCkpOwovLyBUT0RPKFNISU4pOiBCZXRhIC0gcGxhY2UgYXQgZW5kIG9mIHByZXZpZXcgZGl2IHdoZW4gYWxsb3dpbmcgYXR0YWNobWVudHMgYmVmb3JlIGRyYWZ0IGNyZWF0ZWQKLy8gPEF0dGFjaG1lbnQgLz4KZXhwb3J0IGRlZmF1bHQgQ29tcG9zZXI7Cg=="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/ThreadDetail/components/Composer/Composer.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/ThreadDetail/components/Composer/Composer.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport moment from 'moment';\nimport classnames from 'classnames';\nimport { last, map, throttle, compact, keyBy } from 'lodash';\n\n// TODO(SHIN): Beta - re-implement when we can attach before created draft\n// import Attachment from '@src/components/Icons/Attachment.svg';\nimport RecipientsPane, { RecipientEditorType } from './components/RecipientsPane/RecipientsPane';\nimport CommentPane from './components/CommentPane';\nimport ComposePane from '@src/components/Compose/ComposePane';\n\nimport {\n  Me,\n  Account,\n  Draft,\n  Thread,\n  AttachmentMeta,\n  FileType,\n  CommandControlType,\n  Action,\n  ContactGroup,\n  Contact,\n  DraftStatus,\n  Features,\n  ThreadCommitMeta,\n  Resource,\n  Preferences,\n  OnboardingType,\n  Attachment as AttachmentType,\n  Template,\n  TemplateType,\n} from '@src/types';\n\nimport { Configuration, replaceDraftSender, bodyWithoutSignatureAndHistory,\n  isDraftSending,\n  attachmentsToDelete,\n  plainTextDraftBodyContents,\n} from '@src/lib/draft';\nimport { fileFormat, AttachmentUploadOptions, convertToOptimistic } from '@src/lib/attachment';\nimport { mongoId } from '@src/lib/crypt';\n\nimport { getHotkey, HotkeyAction, checkNextHotkeyChange } from '@src/lib/hotkeys';\nimport './Composer.scss';\nimport { FakeDOM } from '@src/lib/html';\nimport SubjectPane from '@src/components/Compose/SubjectPane/SubjectPane';\nimport browserHistory from '@src/lib/browserHistory';\nimport { hotkeyUpdate, hotkeySuggest } from '@src/ducks/hotkeys';\nimport Confirm, { Props as ConfirmProps } from '@src/components/Base/Confirm';\nimport { ApiError } from '@src/api/base';\nimport Reply from '@src/components/Icons/Reply.svg';\nimport ReplyAll from '@src/components/Icons/ReplyAll.svg';\nimport Forward from '@src/components/Icons/Forward.svg';\nimport CommentEditor from './components/CommentEditor';\nimport {\n  SharedThreadCreateMeta, PING_INTERVAL, SharedThreadActivityCreateMeta,\n} from '@src/ducks/sharedThreads';\nimport { CommentCreateMeta } from '@src/ducks/comments';\nimport Attachment from '@src/components/Icons/Attachment.svg';\nimport OnboardingTip, { AnchorPosition } from '@src/components/Onboarding/components/OnboardingTip/OnboardingTip';\nimport { DraftSendMeta, draftCreateConfiguration } from '@src/ducks/drafts';\nimport { SharedThreadActivityType, SharedThreadPermissionScope } from '@src/types/sharedThreads';\nimport { ConfirmationError, ConfirmationPositon } from '@src/ducks/toasts';\nimport { onboardingPatch } from '@src/ducks/me';\nimport { getOnboardingActions } from '@src/lib/OnboardingDispatcher';\nimport { AmplitudeEvents, logAmplitudeEvent } from '@src/lib/amplitude-analytics';\n\nexport interface Props {\n  me: Me;\n  accounts: Account[];\n\n  className?: string;\n  draft?: Draft;\n  thread?: Thread;\n  onExpand?: (message?: string) => void;\n  showFullHeight?: boolean;\n  hidePopout?: boolean;\n  onDelete?: () => void;\n  onSend?: () => void;\n  hideActions?: boolean;\n  hideCommentEditor?: boolean;\n  rsbOnboarding?: OnboardingType;\n}\n\nexport interface StateProps {\n  cloudAttachments: boolean;\n  noBranding: boolean;\n  getContact: (email: string) => Contact;\n  features: Features;\n  hotkeyActions: { [action: string]: number };\n  schedulingUrl?: string;\n  commandControlType?: CommandControlType;\n  attachmentMetas?: Array<Resource<AttachmentMeta>>;\n  showSendOnboarding?: boolean;\n  preferences: Preferences;\n  selectedSharedThread?: string;\n  rsbOnboarding?: OnboardingType;\n  showCommentOnboarding?: boolean;\n  autofocus?: boolean;\n  draftAccount?: Account;\n  draftParentAccount?: Account;\n\n  // Used for comment creation identification\n  sharedThreadDraft?: string;\n}\n\nexport interface DispatchProps {\n  update: (draft: Draft) => void;\n  send: (draft: DraftSendMeta) => void;\n  upload: (attachment: AttachmentMeta) => void;\n  delete: (draft: Draft) => void;\n  removeAttachment: (attachment: AttachmentMeta) => void;\n  createDraftWithConfiguration: (configuration: Configuration) => void;\n  commandControlShow: (type: CommandControlType) => void;\n  dispatchAction: (action: Action<any, any>) => void;\n  addContactGroup: (draft: Draft, list: string, contactGroup: string) => void;\n  updateHotkey: (hotkeyAction: HotkeyAction) => void;\n  submitCommit: (meta: ThreadCommitMeta) => void;\n  setToast: (error: Error) => void;\n  createSharedThread: (meta: SharedThreadCreateMeta) => void;\n  createComment: (meta: CommentCreateMeta) => void;\n  updateOnboarding: (meta: OnboardingType) => void;\n  createSharedThreadActivity: (meta: SharedThreadActivityCreateMeta) => void;\n  saveAsTemplate: (meta: Template) => void;\n}\n\ninterface State {\n  expanded: boolean;\n  showHistory: boolean;\n  showComment: boolean;\n  recipientsExpanded: boolean;\n\n  oldContentEditablePosition?: Range;\n  confirmProps?: ConfirmProps;\n  focused: boolean;\n\n  // Used to show onboarding tip\n  commentFocused?: boolean;\n}\n\n// Identify when to show\nclass Composer extends React.PureComponent<Props & StateProps & DispatchProps, State>  {\n  private recipientsPane: RecipientsPane;\n  private composePane: ComposePane;\n  private subjectPane: SubjectPane;\n  private ref: HTMLDivElement;\n  private commentEditor: any;\n  private recordTyping: any;\n\n  constructor(props: Props & StateProps & DispatchProps) {\n    super();\n\n    const newDraft = (props.draft && !props.draft.threadV2) || false;\n    this.recordTyping = throttle(\n      () => {\n        const { selectedSharedThread, createSharedThreadActivity } = this.props;\n\n        if (selectedSharedThread) {\n          createSharedThreadActivity({\n            type: SharedThreadActivityType.Reply,\n            sharedThread: selectedSharedThread,\n          });\n        }\n      },\n      PING_INTERVAL,\n    );\n\n    this.state = {\n      showHistory: false,\n      expanded: props.draft !== undefined,\n      showComment: false,\n      recipientsExpanded: newDraft,\n      focused: false,\n      commentFocused: false,\n    };\n  }\n\n  componentDidMount() {\n    const newDraft = this.props.draft;\n    if (newDraft && newDraft.created === newDraft.updated) {\n      if (newDraft.to.length === 0) {\n        this.focusRecipientEditor();\n      } else {\n        this.composePane.contentEditable.focus();\n      }\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props & StateProps & DispatchProps) {\n    const { draft, onExpand, onSend } = this.props;\n\n    if (!nextProps.draft) {\n      this.setState({ expanded: false });\n      return;\n    }\n\n    // HACK(SHIN): This is here to close popped out window and guarantee that\n    // action has run and been broadcast\n    if (onSend && draft && isDraftSending(draft)) {\n      onSend();\n    }\n\n    if (nextProps.draft && (!draft || draft.id !== nextProps.draft.id)) {\n      // Expands\n      this.setState(\n        {\n          expanded: true,\n          showHistory: false,\n          recipientsExpanded: !nextProps.draft.thread,\n        },\n        () => {\n          if (onExpand && nextProps.draft) {\n            onExpand(nextProps.draft.message);\n          }\n        },\n      );\n    }\n  }\n\n  componentDidUpdate(oldProps: StateProps & Props, oldState: State) {\n    if (!!oldProps.commandControlType && !this.props.commandControlType &&\n      !this.ref.contains(document.activeElement)\n    ) {\n\n      // Restore cursor position if focus is not on shared thread input\n      if (document.activeElement?.className !== 'url-input') {\n        this.restoreCursorPosition();\n      }\n    }\n\n    // Handle hotkeys for cc and bcc\n    const newActions = this.props.hotkeyActions;\n    const oldActions = oldProps.hotkeyActions;\n    if (oldActions !== newActions) {\n      this.handleHotkeyActionsChange(oldActions, newActions);\n    }\n\n    if (oldState.expanded && !this.state.expanded) {\n      document.body.focus();\n    }\n\n    // Handle initial focus events\n    const oldDraft = oldProps.draft;\n    const newDraft = this.props.draft;\n    const draftChanged = !!newDraft && (!oldDraft || oldDraft && oldDraft.id !== newDraft.id);\n    if (newDraft && newDraft.created === newDraft.updated && draftChanged) {\n      if (newDraft.to.length === 0)  {\n        this.focusRecipientEditor();\n      } else {\n        this.composePane.contentEditable.focus();\n      }\n    }\n\n    // Stop previous on change\n    // TOOD(SHIN): Investigate issue for draft sending as empty culprit?\n    if (draftChanged && this.composePane && this.composePane.contentEditable) {\n      this.composePane.contentEditable.cancelOnChange();\n    }\n  }\n\n  // HACK(SHIN): Uses getWrappedInstance until we can upgrade to > React 16.3\n  handleCommentEditorRef = (ref: any) => {\n    if (ref) {\n      this.commentEditor = ref.getWrappedInstance();\n    }\n  }\n\n  restoreCursorPosition = () => {\n    const selection = window.getSelection();\n    if (selection && this.state.oldContentEditablePosition) {\n      selection.removeAllRanges();\n      selection.addRange(this.state.oldContentEditablePosition);\n    }\n\n    this.setState({ oldContentEditablePosition: undefined });\n  }\n\n  saveCursorPosition = () => {\n    const selection = window.getSelection();\n    if (!selection) {\n      return;\n    }\n    if (!!selection.rangeCount) {\n      this.setState({ oldContentEditablePosition: selection.getRangeAt(0) });\n    }\n  }\n\n  onConfigureClick = (e: React.MouseEvent<HTMLElement>) => {\n    const target = e.currentTarget;\n    const action = target && target.getAttribute('data-action') ||\n      (e.target as HTMLElement).id || Configuration.ReplyAll;\n\n    if (action) {\n      this.configureComposer(action as Configuration);\n    }\n  }\n\n  configureComposer = (configuration: Configuration) => {\n    const { createDraftWithConfiguration, dispatchAction, draft } = this.props;\n    if (!draft) {\n      switch (configuration) {\n        case Configuration.Reply:\n          dispatchAction(hotkeySuggest(HotkeyAction.Reply));\n          break;\n        case Configuration.ReplyAll:\n          dispatchAction(hotkeySuggest(HotkeyAction.ReplyAll));\n          break;\n        case Configuration.Forward:\n          dispatchAction(hotkeySuggest(HotkeyAction.Forward));\n          break;\n        default:\n          break;\n      }\n    }\n\n    switch (configuration) {\n      case Configuration.Reply:\n      case Configuration.ReplyAll:\n      case Configuration.Forward:\n        this.setState({ expanded: true });\n        createDraftWithConfiguration(configuration);\n        break;\n      case Configuration.Comment:\n        this.setState({\n          showComment: true,\n        });\n        return;\n      default:\n        return;\n    }\n  }\n\n  handleHotkeyActionsChange = (\n    oldActions: {[action: string]: number},\n    newActions: {[action: string]: number},\n  ) => {\n    const { recipientsExpanded } = this.state;\n    const { preferences, draft, thread, dispatchAction, commandControlShow } = this.props;\n\n    // Handle CC toggle\n    if (checkNextHotkeyChange(HotkeyAction.Cc, newActions, oldActions)) {\n      const expandCc = () => this.recipientsPane.setState(\n        { showCc: true },\n        () => { this.recipientsPane.focus(RecipientEditorType.Cc); },\n      );\n\n      // Handle expansion and focus\n      if (!recipientsExpanded) {\n        this.setState({ recipientsExpanded: true }, () => expandCc());\n      } else {\n        expandCc();\n      }\n    }\n\n    // Handle BCC toggle\n    if (checkNextHotkeyChange(HotkeyAction.Bcc, newActions, oldActions)) {\n      // Call recipients pane bcc\n      const expandBcc = () => this.recipientsPane.setState(\n        { showBcc: true },\n        () => { this.recipientsPane.focus(RecipientEditorType.Bcc); },\n      );\n\n      // Handle expansion and focus\n      if (!recipientsExpanded) {\n        this.setState({ recipientsExpanded: true }, () => expandBcc());\n      } else {\n        expandBcc();\n      }\n    }\n\n    // Handle BCC toggle\n    if (checkNextHotkeyChange(HotkeyAction.ReplyBCC, newActions, oldActions)) {\n      if (!thread) {\n        return;\n      }\n\n      dispatchAction(draftCreateConfiguration(Configuration.MoveBcc));\n    }\n\n    // Handle Send hotkey\n    if (checkNextHotkeyChange(HotkeyAction.Send, newActions, oldActions)) {\n      // Send hotkey is the secondary ⌘ + ⌥ + ↵ when preference is not on\n      const sendToggled = preferences.sendAndArchive;\n\n      this.handleSend(sendToggled);\n    }\n\n    // Handle Send and Archive hotkey\n    if (checkNextHotkeyChange(HotkeyAction.SendAndArchive, newActions, oldActions)) {\n      // Send and archive is the secondary ⌘ + ⌥ + ↵ when preference is not on\n      const sendAndArchiveToggled = !preferences.sendAndArchive;\n\n      this.handleSend(sendAndArchiveToggled);\n    }\n\n    // Handle Send hotkey\n    if (checkNextHotkeyChange(HotkeyAction.Discard, newActions, oldActions)) {\n      this.handleDelete(true);\n    }\n\n    // Restore cursor position if possible\n    if (checkNextHotkeyChange(HotkeyAction.CopySchedulingUrl, newActions, oldActions)) {\n      // Show Scheduling Pages\n      commandControlShow(CommandControlType.SchedulingPages);\n      return;\n    }\n\n    // Handle comment hotkey\n    if (checkNextHotkeyChange(HotkeyAction.Comment, newActions, oldActions)) {\n      if (this.commentEditor) {\n        this.commentEditor.focus();\n      }\n    }\n\n    // Handle template save hotkey\n    if (checkNextHotkeyChange(HotkeyAction.SaveAsTemplate, newActions, oldActions)) {\n      this.handleTemplateSave();\n    }\n\n    // Handle upload hotkey\n    if (checkNextHotkeyChange(HotkeyAction.AddAttachment, newActions, oldActions)) {\n      const uploadButton = this.composePane.uploadButton;\n      if (uploadButton) {\n        uploadButton.input.click();\n      }\n    }\n\n    // Handle from address hotkey\n    if (checkNextHotkeyChange(HotkeyAction.ChangeFromAddress, newActions, oldActions)) {\n      this.setState(\n        { recipientsExpanded: true },\n        () => {\n          const fromDropdown = this.recipientsPane.fromDropdown;\n          if (fromDropdown) {\n            fromDropdown.handleOpen();\n          }\n        },\n      );\n    }\n\n    // Handle popout draft\n    if (checkNextHotkeyChange(HotkeyAction.PopoutDraft, newActions, oldActions)) {\n      if (draft) {\n        window.open(`/popout/drafts/${draft.id}`, '_blank', 'height=500,width=800');\n      }\n    }\n  }\n\n  handleRecipientsChange = (list: string, recipients: string[]) => {\n    const newState = {};\n    newState[list] = recipients;\n    this.setState(newState);\n\n    if (this.props.draft) {\n      // Update recipients\n      const draft = {\n        ...this.props.draft,\n        ...newState,\n      };\n\n      // Update draft\n      this.props.update(draft);\n    }\n  }\n\n  handleContactGroupAdd = (list: string, contactGroup: ContactGroup) => {\n    const { addContactGroup, draft } = this.props;\n    if (draft) {\n      addContactGroup(draft, list, contactGroup.id);\n    }\n  }\n\n  handleSenderSelect = (email: string) => {\n    const { draft, update, accounts } = this.props;\n    // Update draft from address\n\n    if (draft) {\n      // Update draft with new sender/recipient information\n      const updated = replaceDraftSender(draft, accounts, email);\n      update(updated);\n\n      // Handle restoring contenteditable position if triggered from hotkey\n      if (this.state.oldContentEditablePosition) {\n        this.restoreCursorPosition();\n      }\n    }\n  }\n\n  handleSubjectChange = (subject: string) => {\n    if (this.props.draft && this.props.draft.subject !== subject) {\n      const draft = {\n        ...this.props.draft,\n        subject,\n      };\n      this.props.update(draft);\n    }\n  }\n\n  // Updates draft immediately\n  handleBodyChange = (html: string) => {\n    if (this.props.draft) {\n      this.recordTyping();\n\n      const draft = {\n        ...this.props.draft,\n        body: html,\n      };\n\n      // Removes calendar invite when deleted from the draft\n      // TODO(SHIN): Figure out how to delete calendarInvite. Send null?\n      // Abstract to lib level\n      if (this.ref && !this.ref.getElementsByClassName('pm-calendar-invite').length &&\n        draft.calendarInvite) {\n        draft.calendarInvite = null;\n      }\n\n      this.props.update(draft);\n    }\n  }\n\n  // Figure out which send clicking the send button triggers\n  handlePrimarySendClick = () => {\n    const { preferences, updateHotkey, dispatchAction } = this.props;\n    dispatchAction(hotkeySuggest(HotkeyAction.Send));\n\n    if (preferences.sendAndArchive) {\n      updateHotkey(HotkeyAction.SendAndArchive);\n    } else {\n      updateHotkey(HotkeyAction.Send);\n    }\n  }\n\n  // Sends draft\n  // TODO(SHIN): Abstract to epic if possible\n  handleSend = (toggleArchive: boolean = false) => {\n    const { attachmentMetas, setToast, onSend, rsbOnboarding } = this.props;\n    const draft = this.props.draft;\n    if (!draft) {\n      return;\n    }\n\n    if (rsbOnboarding === OnboardingType.SendMessage) {\n      logAmplitudeEvent(AmplitudeEvents.TourStepOneSend);\n    }\n\n    // Update draft body right before sending\n    const contentEditable = this.composePane && this.composePane.contentEditable;\n    if (contentEditable) {\n      contentEditable.resetOnChangeDebounce();\n      draft.body = contentEditable.getBody();\n    }\n\n    // Show warning and prevent send if message template placeholders exist\n    const templateVariables = this.ref && this.ref.getElementsByClassName('data-pm-var');\n    if (this.ref && templateVariables.length > 0) {\n      const placeholdersCopy = 'placeholder' + (templateVariables.length > 1 ? 's' : '');\n      const message = `Your draft contains ${templateVariables.length} unfilled ` +\n        placeholdersCopy +\n        ' left in your message.' +\n        ` Please replace or remove the ${placeholdersCopy} before sending.`;\n      setToast(new Error(message));\n      return;\n    }\n\n    // Add check for send later\n    if (draft.status === DraftStatus.Scheduled && draft.scheduled) {\n      const scheduledDate = moment(draft.scheduled).calendar(new Date(), {\n        sameDay: '[today] [at] h:mm A',\n        nextDay: '[tomorrow] [at] h:mm A',\n        nextWeek: 'dddd [at] h:mm A',\n        sameElse: 'mmm, ddd [at] h:mm A',\n      });\n      const message = 'This draft is scheduled to send ' +\n        scheduledDate +\n        '.\\n\\nWould you like to send this draft now?';\n      const confirmProps: ConfirmProps = {\n        title: 'Scheduled Draft',\n        message,\n        confirmCopy: 'Send Now',\n        onConfirm: () => {\n          this.setState({ confirmProps: undefined });\n          this.props.send({ draft: { ...draft, scheduled: null }, toggleArchive: false });\n\n          // Handle send to dismiss popout window\n          if (onSend) {\n            onSend();\n          }\n        },\n        onCancel: () => this.setState({ confirmProps: undefined }),\n      };\n\n      this.setState({ confirmProps });\n      return;\n    }\n\n    // TODO(SHIN: Handling cloud attachments\n    const attachmentErrors = attachmentMetas &&\n      attachmentMetas.filter(resource => !!resource.error);\n    // Handle any attachment errors before sending\n    if (attachmentErrors && attachmentErrors.length) {\n      // This identifies attachment metas that will be deleted downstream so we dont handle errors\n      const optimisticMetas = compact(attachmentErrors.map(a => a.data))\n        .map(a => convertToOptimistic(a, draft.id));\n      const toDelete = attachmentsToDelete({\n        ...draft,\n        attachments: draft.attachments.concat(optimisticMetas),\n      });\n      const deleteMap = keyBy(toDelete, 'attachment');\n      const filteredErrors = attachmentErrors.filter(a => a.data && !deleteMap[a.data.attachment]);\n\n      // Grab first Error that wasn't removed from draft to block UI\n      const first = filteredErrors[0];\n      if (first) {\n        const attachmentName = first.data && first.data.filename || '';\n        const message = `Your attachment \"${attachmentName}\" failed to attach to this message. ` +\n          'Please remove or try to attach this file before sending!';\n        const firstError = first && first.error;\n        const mainErrorPrefix = message + '\\nError: ';\n\n        // Handle additional content to display for the error\n        if (firstError) {\n          if ((firstError as ApiError).errors) {\n            const suffix = map((firstError as ApiError).errors, e => e).join(' ');\n            setToast(new Error(mainErrorPrefix + suffix));\n            return;\n          }\n\n          const error = new Error(mainErrorPrefix + firstError.message);\n          setToast(error);\n\n          return;\n        }\n      }\n    }\n\n    // Make sure that there is at least on recipient\n    const recipients = draft.to.concat(draft.cc).concat(draft.bcc);\n    if (!recipients.length) {\n      const error = 'You must add a recipient before sending a message.';\n      setToast(new Error(error));\n      return;\n    }\n\n    // Recipients length check blocks over 100 recipients\n    if (recipients.length > 100) {\n      const error = 'You cannot have more than 100 recipients in a message.';\n      setToast(new Error(error));\n      return;\n    }\n\n    // Validator to check attachment size for draft\n    let totalAttachmentSize = 0;\n    draft.attachments.forEach((a) => {\n      totalAttachmentSize += a.length;\n    });\n    if (attachmentMetas) {\n      attachmentMetas.forEach((a) => {\n        const size = a.data && a.data.file && a.data.file.size;\n        if (size) {\n          totalAttachmentSize += size;\n        }\n      });\n    }\n    if (totalAttachmentSize > 25000000) {\n      const error = 'You cannot send a draft with more than 25MB.';\n      setToast(new Error(error));\n      return;\n    }\n\n    // Show warning if no attached\n    const bodyString = this.composePane.contentEditable.getBody();\n    const mainBodyString = plainTextDraftBodyContents(bodyString, draft.id);\n    const regex = /(attached|attachment|attach)/;\n    const metaLength = this.props.attachmentMetas?.length || 0;\n    const attachmentsLength = draft.attachments.length;\n    const allAttachmentLength = metaLength + attachmentsLength;\n    const matches = mainBodyString?.match(regex);\n    if (allAttachmentLength === 0 && !!matches?.length) {\n      const confirmProps: ConfirmProps = {\n        title: 'No attachments',\n        message: `You wrote the word \"${matches[0]}\" but you did not attach any files on this message. Would you like to send anyway?`,\n        confirmCopy: 'Ok',\n        cancelCopy: 'Cancel',\n        onConfirm: () => {\n          this.setState({ confirmProps: undefined });\n          this.props.send({ draft: { ...draft, scheduled: null }, toggleArchive: false });\n\n          // Handle send to dismiss popout window\n          if (onSend) {\n            onSend();\n          }\n        },\n        onCancel: () => this.setState({ confirmProps: undefined }),\n      };\n\n      this.setState({ confirmProps });\n      return;\n    }\n\n    // Show warning if no subject\n    if (draft.subject === '') {\n      const confirmProps: ConfirmProps = {\n        title: 'No Subject',\n        message: 'You did not include a subject in this message. Would you like to send anyway?',\n        confirmCopy: 'Ok',\n        cancelCopy: 'Cancel',\n        onConfirm: () => {\n          this.setState({ confirmProps: undefined });\n          this.props.send({ draft: { ...draft, scheduled: null }, toggleArchive: false });\n\n          // Handle send to dismiss popout window\n          if (onSend) {\n            onSend();\n          }\n        },\n        onCancel: () => this.setState({ confirmProps: undefined }),\n      };\n\n      this.setState({ confirmProps });\n      return;\n    }\n\n    // Send if all checks pass and notify parent\n    if (draft\n        && draft.calendarInvite\n        && draft.calendarInvite.recipients\n        && draft.calendarInvite.recipients.length) {\n      logAmplitudeEvent(AmplitudeEvents.SendCalendarInvite);\n    }\n    this.props.send({ draft, toggleArchive });\n  }\n\n  handleTemplateSave = () => {\n    const { draft, saveAsTemplate } = this.props;\n    if (!draft) {\n      return;\n    }\n\n    // Extract Body from draft\n    const bodyString = this.composePane.contentEditable.getBody();\n    const mainBodyString = bodyWithoutSignatureAndHistory(bodyString, draft.id);\n\n    // Save as New Template\n    const newTemplate: Template = {\n      id: '',\n      name: draft.subject,\n      subject: draft.subject,\n      body: mainBodyString,\n      user: '',\n      attachments: draft.attachments,\n      created: new Date(),\n      updated: new Date(),\n      type: TemplateType.Message,\n    };\n\n    saveAsTemplate(newTemplate);\n\n    return;\n  }\n\n  handleSendLater = () => {\n    const { rsbOnboarding } = this.props;\n\n    this.props.commandControlShow(CommandControlType.SendLater);\n    this.props.dispatchAction(hotkeySuggest(HotkeyAction.SendLater));\n\n    if (rsbOnboarding === OnboardingType.SendLater) {\n      logAmplitudeEvent(AmplitudeEvents.TourStepTwo, { skipped: false });\n    }\n  }\n\n  handleFollowUp = () => {\n    this.props.dispatchAction(hotkeySuggest(HotkeyAction.FollowUpReminder));\n    this.props.commandControlShow(CommandControlType.FollowUp);\n  }\n\n  handleReplyClick = () => {\n    this.configureComposer(Configuration.ReplyAll);\n  }\n\n  handleCommentClick = () => {\n    this.configureComposer(Configuration.Comment);\n  }\n\n  // TODO(SHIN): Figure out where to identify cloud attachment\n  handleUpload = (files: File[], options: AttachmentUploadOptions) => {\n    const { draft, upload } = this.props;\n\n    // Block ability to attach files larger than 25 MB.\n    if (files.filter(file => file.size > 25000000).length) {\n      const confirmProps: ConfirmProps = {\n        title: 'Error Uploading Attachment',\n        message: 'You cannot upload an attachment greater than 25 MB.',\n        confirmCopy: 'Ok',\n        onConfirm: () => {\n          this.setState({ confirmProps: undefined });\n        },\n      };\n\n      this.setState({ confirmProps });\n      return;\n    }\n\n    if (draft) {\n      files.forEach((file) => {\n        // Create meta\n        const inline = fileFormat(file.type) === FileType.Image;\n        const attachment = {\n          file,\n          resourceId: draft.id,\n          attachment: mongoId(),\n          inline: !options.shiftKey && !options.ignoreInline && inline,\n          cloud: !options.shiftKey && draft.track && draft.trackLinks\n            ? !inline && this.props.cloudAttachments\n            : false,\n          cloudUrl: URL.createObjectURL(file),\n        };\n\n        upload(attachment);\n      });\n    }\n  }\n\n  handleAttachmentRemove = (id: string) => {\n    if (this.props.draft) {\n      const attachment = {\n        resourceId: this.props.draft.id,\n        attachment: id,\n        file: undefined,\n      };\n\n      this.props.removeAttachment(attachment);\n    }\n  }\n\n  handleRecipientsPaneRef = (ref: RecipientsPane) => {\n    this.recipientsPane = ref;\n  }\n\n  handleRef = (ref: HTMLDivElement) => {\n    this.ref = ref;\n  }\n\n  handleDelete = (shortcut?: any) => {\n    // Show suggestion if deleted without hotkey\n    if (shortcut !== true) {\n      this.props.dispatchAction(hotkeySuggest(HotkeyAction.Discard));\n    }\n\n    if (this.props.draft) {\n      const confirmProps: ConfirmProps = {\n        title: 'Deleting Draft',\n        message: 'Are you sure you want to delete this draft?',\n        confirmCopy: 'Delete',\n        onConfirm: () => {\n          this.setState({ confirmProps: undefined });\n          if (this.props.draft) {\n            this.props.delete(this.props.draft);\n            if (this.props.onDelete) {\n              this.props.onDelete();\n            }\n            this.setState({ expanded: false });\n          }\n        },\n        onCancel: () => this.setState({ confirmProps: undefined }),\n      };\n\n      this.setState({ confirmProps });\n    }\n  }\n\n  // TODO(SHIN: See if we can remember cursor position using CommandControl component\n  handleKeyDown = (event: React.KeyboardEvent<HTMLElement>) => {\n    const { commandControlShow, dispatchAction,\n      features, updateHotkey, draft, setToast, update } = this.props;\n    let handled = false;\n\n    // NOTE(SHIN): We stop propagation since any keystroke could\n    // result in a bunch of unintended hotkeyss getting triggered (New Draft, Delete, Archive)\n    event.stopPropagation();\n\n    const hotkey = getHotkey(event);\n    switch ((hotkey && hotkey.name) || event.keyCode) {\n      case HotkeyAction.Discard:\n        handled = true;\n        this.handleDelete(true);\n        break;\n      case HotkeyAction.SendLater:\n        if (hotkey && hotkey.action && features.sendLater) {\n          this.saveCursorPosition();\n          handled = true;\n          dispatchAction(hotkey.action);\n        }\n        break;\n      case HotkeyAction.CancelFollowup: // Cancels Followup reminder\n        if (draft && draft.waiting) {\n          update({\n            ...draft,\n            waiting: null,\n          });\n          setToast(new ConfirmationError(\n            'Your followup has been canceled!',\n            true,\n            ConfirmationPositon.TopCenter,\n          ));\n          handled = true;\n        }\n        break;\n      case HotkeyAction.FollowUpReminder:\n        if (hotkey && hotkey.action && features.followUp) {\n          this.saveCursorPosition();\n          handled = true;\n          dispatchAction(hotkey.action);\n        }\n        break;\n      case HotkeyAction.CalendarInvite:\n        if (hotkey && hotkey.action) {\n          this.saveCursorPosition();\n          dispatchAction(hotkey.action);\n          handled = true;\n        }\n        break;\n      case HotkeyAction.Send:\n        if (hotkey && hotkey.name) {\n          updateHotkey(HotkeyAction.Send);\n          handled = true;\n        }\n        break;\n      case HotkeyAction.SendAndArchive:\n        if (hotkey && hotkey.name) {\n          updateHotkey(HotkeyAction.SendAndArchive);\n          handled = true;\n        }\n        break;\n      case HotkeyAction.MessageTemplates:\n        if (features.messageTemplates) {\n          this.saveCursorPosition();\n          handled = true;\n          commandControlShow(CommandControlType.Templates);\n        }\n        break;\n      case HotkeyAction.ToggleCommandControl:\n        commandControlShow(CommandControlType.Draft);\n        this.saveCursorPosition();\n        handled = true;\n        break;\n      case HotkeyAction.ReplyBCC:\n        if (hotkey && hotkey.name) {\n          updateHotkey(HotkeyAction.ReplyBCC);\n          handled = true;\n        }\n        break;\n      case HotkeyAction.Cc:\n        if (hotkey && hotkey.name) {\n          updateHotkey(HotkeyAction.Cc);\n          handled = true;\n        }\n        break;\n      case HotkeyAction.Bcc:\n        if (hotkey && hotkey.name) {\n          updateHotkey(HotkeyAction.Bcc);\n          handled = true;\n        }\n        break;\n      case HotkeyAction.CopySchedulingUrl:\n        this.saveCursorPosition();\n        commandControlShow(CommandControlType.SchedulingPages);\n        break;\n      default:\n        break;\n    }\n\n    // Do not handle key if handled by hotkey\n    if (handled) {\n      event.preventDefault();\n    }\n  }\n\n  handlePreviewClick = () => {\n    this.setState({ recipientsExpanded: true });\n  }\n\n  // Only toggles recipientsExpanded when not expanded to prevent re-renders of ContentEditable\n  handleComposeSelect = () => {\n    const { showFullHeight } = this.props;\n    if (this.state.recipientsExpanded && !showFullHeight) {\n      this.setState({ recipientsExpanded: false });\n    }\n  }\n\n  handleShowHistory = () => {\n    this.setState({ showHistory: true });\n  }\n\n  handleComposePaneRef = (ref: ComposePane) => {\n    this.composePane = ref;\n  }\n\n  handleSubjectPaneRef = (ref: SubjectPane) => {\n    this.subjectPane = ref;\n  }\n\n  focusContentEditable = (selectFirstPlaceholder?: boolean, selectLastPlaceholder?: boolean) => {\n    if (this.composePane) {\n      this.composePane.focusContentEditable(selectFirstPlaceholder, selectLastPlaceholder);\n    }\n  }\n\n  focusSubjectPane = (selectFirstPlaceholder?: boolean, selectLastPlaceholder?: boolean) => {\n    if (this.subjectPane) {\n      this.subjectPane.focus(selectFirstPlaceholder, selectLastPlaceholder);\n    }\n  }\n\n  handleRecipientsPaneTabPress = () => {\n    const { draft } = this.props;\n    const {\n      showComment, recipientsExpanded,\n    } = this.state;\n\n    const newDraft = !draft || !draft.thread;\n    const subject = this.props.draft && this.props.draft.subject;\n    const showSubject = !showComment && (!newDraft && recipientsExpanded || newDraft);\n    const variables = subject && subject.match(/{{[^{}]+}}/g);\n\n    if (showSubject) {\n      if (variables) {\n        this.focusSubjectPane(true, false);\n      } else {\n        this.focusSubjectPane();\n      }\n\n      return;\n    }\n\n    this.focusContentEditable();\n  }\n\n  focusRecipientEditor = () => {\n    if (this.recipientsPane) {\n      this.recipientsPane.focus();\n    }\n  }\n\n  handleContentEditableTabPress = (event: React.KeyboardEvent<HTMLDivElement> | KeyboardEvent) => {\n    const subject = this.props.draft && this.props.draft.subject;\n    const variables = subject && subject.match(/{{[^{}]+}}/g);\n\n    if (event.shiftKey && variables) {\n      this.focusSubjectPane(false, true);\n      return true;\n    }\n\n    if (variables) {\n      this.focusSubjectPane(true, false);\n      return true;\n    }\n\n    if (event.shiftKey) {\n      // Override handler to subject pane if in indented block\n      if (this.composePane && this.composePane.contentEditable &&\n        this.composePane.contentEditable.isSelectionIndented()) {\n        return false;\n      }\n\n      this.focusSubjectPane();\n      return true;\n    }\n\n    return false;\n  }\n\n  handleSubjectTabPress = (e: React.KeyboardEvent<HTMLElement>) => {\n    const { recipientsExpanded } = this.state;\n    const body = this.props.draft && this.props.draft.body;\n    const doc = FakeDOM().createElement('div');\n    doc.innerHTML = body || '';\n    const variables = doc.getElementsByClassName('data-pm-var');\n\n    if (e.shiftKey && variables.length) {\n      this.focusContentEditable(false, true);\n      return;\n    }\n\n    if (variables.length) {\n      this.focusContentEditable(true);\n      return;\n    }\n\n    if (e.shiftKey) {\n      if (recipientsExpanded) {\n        this.focusRecipientEditor();\n        return;\n      }\n\n      this.setState({ recipientsExpanded: true }, () => {\n        this.focusRecipientEditor();\n      });\n\n      return;\n    }\n\n    this.focusContentEditable();\n  }\n\n  handleSchedulingUrl = () => {\n    const { schedulingUrl } = this.props;\n    if (schedulingUrl) {\n      this.props.dispatchAction(hotkeyUpdate(HotkeyAction.CopySchedulingUrl));\n    } else {\n      browserHistory.push('/settings/calendar');\n    }\n  }\n\n  handleTrack = () => {\n    const { draft, update, preferences } = this.props;\n    if (draft) {\n      const newTrackValue = !draft?.track;\n      const newTrackLinksValue = preferences.linkTracking && newTrackValue;\n\n      update({\n        ...draft,\n        track: newTrackValue,\n        trackLinks: newTrackLinksValue,\n      });\n    }\n  }\n\n  // TODO(SHIN): Move pending comments to redux state level\n    // with a reference id to sharedthread/thread\n  handleComment = (body: string, attachments: AttachmentType[]) => {\n    const {\n      thread,\n      createComment,\n      selectedSharedThread,\n      createSharedThread,\n      setToast,\n      rsbOnboarding,\n      dispatchAction,\n      sharedThreadDraft,\n    } = this.props;\n    const lastMessage = thread && last(thread.messages);\n\n    // Block comment when last message is still optimistic\n    if (lastMessage && !!lastMessage.optimistic) {\n      setToast(\n        new Error('Please wait for your last messsage to finish sending' +\n        ' before commenting on this conversation.'),\n      );\n      return;\n    }\n\n    // Stop comment upload when still uploading attachments\n    if (attachments.filter(attachment => attachment.progress < 1).length  > 0) {\n      setToast(new Error('Please wait for your attachments '\n      + 'to finish uploading before posting your comment.'));\n      return;\n    }\n\n    // Update onboarding for comment\n    if (rsbOnboarding && rsbOnboarding === OnboardingType.Comment) {\n      dispatchAction(onboardingPatch({\n        skipped: false,\n        type: { steps: { [OnboardingType.Comment]: true } },\n      }));\n      logAmplitudeEvent(AmplitudeEvents.TourStepEleven, { skipped: false });\n    }\n\n    getOnboardingActions().next(OnboardingType.Comment);\n\n    if (lastMessage && selectedSharedThread) {\n      const lastMessageRfcId = lastMessage.rfcId || lastMessage.id;\n      const computedRfcId = sharedThreadDraft && `<${sharedThreadDraft}@polymail.io>` ||\n        lastMessageRfcId;\n      createComment({\n        thread: selectedSharedThread,\n        rfcId: computedRfcId,\n        draft: sharedThreadDraft,\n        body,\n        attachments,\n      });\n    } else if (lastMessage && thread) {\n      const computedRfcId = lastMessage.rfcId || lastMessage.id;\n      createSharedThread({\n        thread: thread.id,\n        permissions: {\n          scope: SharedThreadPermissionScope.Team,\n        },\n        comments: [{\n          rfcId: computedRfcId,\n          body,\n          attachments,\n        }],\n      });\n    }\n  }\n\n  handleCommentFocused = () => {\n    this.props.updateOnboarding(OnboardingType.CreateComment);\n    this.setState({ commentFocused: true });\n  }\n\n  handleCommentFocus = () => {\n    if (this.commentEditor) {\n      this.commentEditor.focus();\n    }\n  }\n\n  handleErrorDismiss = () => {\n    // Extract propeties\n    const { draft, update } = this.props;\n    if (!draft) {\n      return;\n    }\n\n    // Remove error from draft and reset status to draft\n    const updated = {\n      ...draft,\n      error: undefined,\n    };\n\n    update(updated);\n  }\n\n  render() {\n    const {\n      expanded, showComment,\n      recipientsExpanded, showHistory, confirmProps,\n      commentFocused,\n    } = this.state;\n    const {\n      accounts,\n      draft,\n      thread,\n      showFullHeight,\n      dispatchAction,\n      noBranding,\n      getContact,\n      features,\n      showSendOnboarding,\n      preferences,\n      hidePopout,\n      hideActions,\n      showCommentOnboarding,\n      hideCommentEditor,\n      autofocus,\n      draftAccount,\n      draftParentAccount,\n      className,\n    } = this.props;\n\n    const useLinkPreview = !preferences.disableLinkPreviews;\n    const showHistoryButton = draft && !showHistory && draft.body\n      && draft.body.includes('gmail_quote');\n    const to = (draft && draft.to) || [];\n    const cc = (draft && draft.cc) || [];\n    const bcc = (draft && draft.bcc) || [];\n    const subject = (draft && draft.subject) || '';\n    const sender = (draftAccount && draftAccount.email) || '';\n    const lastMessage = thread && last(thread.messages.filter(message => !message.sent));\n    const showReplyAll =\n      lastMessage && lastMessage.to.concat(lastMessage.cc.concat(lastMessage.bcc)).length > 1;\n\n    const newDraft = !draft || !draft.thread;\n    const showSubject = !showComment && (!newDraft && recipientsExpanded || newDraft);\n    let popoutLink;\n    const onboardingMentionCopy = (\n      <span>\n        Give context for the future by leaving comments on a conversation.\n        You can also start internal discussions by @mentioning teammates in a comment.\n        <br/>\n        <br />\n        Try posting a comment for yourself below\n      </span>\n    );\n\n    if (draft) {\n      popoutLink = `/popout/drafts/${draft.id}`;\n    }\n\n    // TODO(SHIN): Disable hide add-ons for RecipientsPane for beta\n    return (\n      <div\n        className={classnames('composer', {\n          expanded,\n          'hide-history': !showHistory && !!showHistoryButton,\n          // make signature always visible\n          // https://polymail.atlassian.net/browse/PM-244\n          'hide-signature': false,\n          'full-height': showFullHeight,\n        },                    className)}\n        onKeyDown={this.handleKeyDown}\n        ref={this.handleRef}\n      >\n        {confirmProps && <Confirm {...confirmProps} />}\n        {!expanded && !features.comments && <div className=\"preview-actions\">\n          <button className=\"options\" onClick={this.onConfigureClick}>\n            Click Here to\n            <span id={Configuration.Reply}>Reply</span>,\n            <span id={Configuration.ReplyAll}>Reply All</span>, or\n            <span id={Configuration.Forward}>Forward</span>\n          </button>\n          <Attachment />\n        </div>}\n        {!hideActions && features.comments && <div className=\"actions\">\n          <div className=\"buttons\">\n            <button data-action={Configuration.Reply} onClick={this.onConfigureClick}>\n              <Reply />\n            </button>\n            {showReplyAll && <button\n              data-action={Configuration.ReplyAll}\n              onClick={this.onConfigureClick}\n            >\n              <ReplyAll />\n            </button>}\n            <button  data-action={Configuration.Forward} onClick={this.onConfigureClick}>\n              <Forward />\n            </button>\n          </div>\n        </div>}\n        {!expanded && features.comments && !hideCommentEditor && (\n          <div className=\"preview\">\n            {showCommentOnboarding && commentFocused &&\n              <OnboardingTip\n                title=\"Comments & Mentions\"\n                message={onboardingMentionCopy}\n                top=\"-164px\"\n                anchorPosition={AnchorPosition.Bottom}\n              />\n            }\n            <CommentEditor\n              ref={this.handleCommentEditorRef}\n              comment={this.handleComment}\n              onFocus={this.handleCommentFocused}\n            />\n          </div>\n        )}\n        <div className=\"main\">\n          {showComment && false &&\n            <CommentPane\n              onReplyClick={this.handleReplyClick}\n            />\n          }\n          {!showComment &&\n            <RecipientsPane\n              ref={this.handleRecipientsPaneRef}\n              onRecipientsChange={this.handleRecipientsChange}\n              draftKey={draft && draft.id}\n              to={to}\n              bcc={bcc}\n              cc={cc}\n              sender={sender}\n              senderEmails={accounts.map(account => account.email)}\n              onSenderSelect={this.handleSenderSelect}\n              hideAddons={true}\n              onCommentClick={this.handleCommentClick}\n              expanded={recipientsExpanded}\n              onPreviewClick={this.handlePreviewClick}\n              onContactGroupAdd={this.handleContactGroupAdd}\n              onTabPress={this.handleRecipientsPaneTabPress}\n              showPopout={!showSubject && !hidePopout}\n              newDraft={newDraft ? newDraft : undefined}\n              popoutLink={popoutLink}\n              autofocus={autofocus}\n            />\n          }\n          {showSubject && <SubjectPane\n            onChange={this.handleSubjectChange}\n            subject={subject}\n            onTabPress={this.handleSubjectTabPress}\n            ref={this.handleSubjectPaneRef}\n            onDeletePress={this.handleDelete}\n            showPopout={!hidePopout}\n            popoutLink={popoutLink}\n          />}\n          {expanded &&\n            <ComposePane\n              ref={this.handleComposePaneRef}\n              onSend={this.handlePrimarySendClick}\n              onSendLater={this.handleSendLater}\n              onFollowUp={this.handleFollowUp}\n              onChange={this.handleBodyChange}\n              onUpload={this.handleUpload}\n              onRemoveAttachment={this.handleAttachmentRemove}\n              onTabPress={this.handleContentEditableTabPress}\n              draft={draft}\n              accounts={accounts}\n              html={draft && draft.body}\n              onSelect={this.handleComposeSelect}\n              onShowHistory={showHistoryButton ? this.handleShowHistory : undefined}\n              autofocus={false}\n              attachments={draft && draft.attachments}\n              attachmentMetas={this.props.attachmentMetas || []}\n              dispatchAction={dispatchAction}\n              noBranding={noBranding}\n              getContact={getContact}\n              draftAccount={draftAccount}\n              draftParentAccount={draftParentAccount}\n              features={features}\n              onSchedulingUrlSelect={this.handleSchedulingUrl}\n              useLinkPreview={useLinkPreview}\n              showSendOnboarding={showSendOnboarding}\n              onDelete={this.handleDelete}\n              onTrack={this.handleTrack}\n              showSentFromPolymail={\n                !features.disableSentFromPolymail || !!preferences.sentFromPolymail\n              }\n              onErrorDismiss={this.handleErrorDismiss}\n            />\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\n// TODO(SHIN): Beta - place at end of preview div when allowing attachments before draft created\n// <Attachment />\n\nexport default Composer;\n"]}]}