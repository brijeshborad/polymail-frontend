{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Sequences/routes/SequenceDetail/UploadRecipientsConfirmation/UploadRecipientsConfirmation.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Sequences/routes/SequenceDetail/UploadRecipientsConfirmation/UploadRecipientsConfirmation.tsx","mtime":1675280254089},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JzsKaW1wb3J0IGNsYXNzbmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7CmltcG9ydCBSb3VuZENoZWNrbWFyayBmcm9tICdAc3JjL2NvbXBvbmVudHMvSWNvbnMvUm91bmRDaGVja21hcmsuc3ZnJzsKaW1wb3J0ICcuL1VwbG9hZFJlY2lwaWVudHNDb25maXJtYXRpb24uc2Nzcyc7CnZhciBVcGxvYWRSZWNpcGllbnRzQ29uZmlybWF0aW9uID0gZnVuY3Rpb24gKF9hKSB7CiAgICB2YXIgc3VjY2Vzc0NvdW50ID0gX2Euc3VjY2Vzc0NvdW50LCByZWNpcGllbnRzID0gX2EucmVjaXBpZW50cywgb25Eb25lID0gX2Eub25Eb25lLCBzZXF1ZW5jZU5hbWUgPSBfYS5zZXF1ZW5jZU5hbWUsIG9uSW52YWxpZENsaWNrID0gX2Eub25JbnZhbGlkQ2xpY2s7CiAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIHsgY2xhc3NOYW1lOiBjbGFzc25hbWVzKCd1cGxvYWQtcmVjaXBpZW50cy1jb25maXJtYXRpb24nLCB7CiAgICAgICAgICAgIGZhaWxlZDogZmFsc2UsCiAgICAgICAgfSkgfSwKICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLCB7IGNsYXNzTmFtZTogImNvcHkiIH0sCiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91bmRDaGVja21hcmssIHsgY2xhc3NOYW1lOiAiaWNvbiIgfSksCiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoImgxIiwgbnVsbCwKICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoInNwYW4iLCB7IGNsYXNzTmFtZTogImJvbGQiIH0sIHN1Y2Nlc3NDb3VudCArICIgcmVjaXBpZW50cyIpLAogICAgICAgICAgICAgICAgIndlcmUgc3VjY2Vzc2Z1bGx5IGFkZGVkIHRvIiwKICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoInNwYW4iLCB7IGNsYXNzTmFtZTogImJvbGQiIH0sIHNlcXVlbmNlTmFtZSkpKSwKICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KCJidXR0b24iLCB7IGNsYXNzTmFtZTogImRvbmUtYnV0dG9uIiwgb25DbGljazogb25Eb25lIH0sICJEb25lIiksCiAgICAgICAgISFyZWNpcGllbnRzLmxlbmd0aCAmJiBSZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLCB7IGNsYXNzTmFtZTogImZhaWxlZC1yZWNpcGllbnRzIiB9LAogICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KCJzcGFuIiwgeyBjbGFzc05hbWU6ICJtZXNzYWdlIiB9LAogICAgICAgICAgICAgICAgIlx1MjZBMFx1RkUwRiAiLAogICAgICAgICAgICAgICAgcmVjaXBpZW50cy5sZW5ndGgsCiAgICAgICAgICAgICAgICAiIHJlY2lwaWVudHMgZmFpbGVkIHRvIHVwbG9hZCIpLAogICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KCJidXR0b24iLCB7IGNsYXNzTmFtZTogImRvd25sb2FkLWZhaWxlZCIsIG9uQ2xpY2s6IG9uSW52YWxpZENsaWNrIH0sICJWaWV3IGZhaWxlZCByZWNpcGllbnRzIikpKSk7Cn07CmV4cG9ydCBkZWZhdWx0IFVwbG9hZFJlY2lwaWVudHNDb25maXJtYXRpb247Cg=="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Sequences/routes/SequenceDetail/UploadRecipientsConfirmation/UploadRecipientsConfirmation.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Sequences/routes/SequenceDetail/UploadRecipientsConfirmation/UploadRecipientsConfirmation.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,UAAU,MAAM,YAAY,CAAC;AACpC,OAAO,cAAc,MAAM,0CAA0C,CAAC;AAEtE,OAAO,qCAAqC,CAAC;AAY7C,IAAM,4BAA4B,GAAqB,UAAC,EAMvD;QALC,8BAAY,EACZ,0BAAU,EACV,kBAAM,EACN,8BAAY,EACZ,kCAAc;IAEd,OAAO,CACL,6BACE,SAAS,EAAE,UAAU,CAAC,gCAAgC,EAAE;YACtD,MAAM,EAAE,KAAK;SACd,CAAC;QAEF,6BAAK,SAAS,EAAC,MAAM;YACnB,oBAAC,cAAc,IAAC,SAAS,EAAC,MAAM,GAAG;YACnC;gBACE,8BAAM,SAAS,EAAC,MAAM,IAAK,YAAY,gBAAa,CAAQ;;gBAE5D,8BAAM,SAAS,EAAC,MAAM,IAAE,YAAY,CAAQ,CACzC,CACD;QACN,gCAAQ,SAAS,EAAC,aAAa,EAAC,OAAO,EAAE,MAAM,WAEtC;QACR,CAAC,CAAC,UAAU,CAAC,MAAM,IAAI,6BAAK,SAAS,EAAC,mBAAmB;YACxD,8BAAM,SAAS,EAAC,SAAS;;gBACnB,UAAU,CAAC,MAAM;+CACd;YACT,gCAAQ,SAAS,EAAC,iBAAiB,EAAC,OAAO,EAAE,cAAc,6BAElD,CACL,CACF,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,4BAA4B,CAAC","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport RoundCheckmark from '@src/components/Icons/RoundCheckmark.svg';\n\nimport './UploadRecipientsConfirmation.scss';\nimport { SequenceRecipientCreateRecipient } from '@src/ducks/sequenceRecipients';\nimport { Resource } from '@src/types';\n\nexport interface Props {\n  successCount: number;\n  recipients: Array<Resource<SequenceRecipientCreateRecipient>>;\n  onDone: () => void;\n  sequenceName: string;\n  onInvalidClick: () => void;\n}\n\nconst UploadRecipientsConfirmation: React.SFC<Props> = ({\n  successCount,\n  recipients,\n  onDone,\n  sequenceName,\n  onInvalidClick,\n}) => {\n  return (\n    <div\n      className={classnames('upload-recipients-confirmation', {\n        failed: false,\n      })}\n    >\n      <div className=\"copy\">\n        <RoundCheckmark className=\"icon\" />\n        <h1>\n          <span className=\"bold\">{`${successCount} recipients`}</span>\n          were successfully added to\n          <span className=\"bold\">{sequenceName}</span>\n        </h1>\n      </div>\n      <button className=\"done-button\" onClick={onDone}>\n        Done\n      </button>\n      {!!recipients.length && <div className=\"failed-recipients\">\n        <span className=\"message\">\n          ⚠️ {recipients.length} recipients failed to upload\n          </span>\n        <button className=\"download-failed\" onClick={onInvalidClick}>\n          View failed recipients\n        </button>\n      </div>}\n    </div>\n  );\n};\n\nexport default UploadRecipientsConfirmation;\n"]}]}