{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/api/me.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/api/me.ts","mtime":1675280253980},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnOwppbXBvcnQgeyBqc29uUmVxdWVzdCwgYmxhbmtSZXF1ZXN0IH0gZnJvbSAnLi9iYXNlJzsKaW1wb3J0IHsgY3JlYXRlTWUsIGNyZWF0ZVByZWZlcmVuY2VzLCBjcmVhdGVPbmJvYXJkaW5nLCBjcmVhdGVUd29GYWN0b3JBdXRoZW50aWNhdGlvbiwgfSBmcm9tICdAc3JjL21vY2tzL21lJzsKaW1wb3J0IHsgY3JlYXRlTGlzdHMgfSBmcm9tICdAc3JjL21vY2tzL2xpc3RzJzsKaW1wb3J0IHsgY3JlYXRlQWNjb3VudCB9IGZyb20gJ0BzcmMvbW9ja3MvYWNjb3VudHMnOwppbXBvcnQgeyBjcmVhdGVEZXZpY2UgfSBmcm9tICdAc3JjL21vY2tzL2RldmljZXMnOwppbXBvcnQgeyBhcHBseURlZmF1bHRBY2NvdW50IH0gZnJvbSAnQHNyYy9saWIvYWNjb3VudCc7CmV4cG9ydCB2YXIgbWVDbGllbnQgPSB7CiAgICBjcmVhdGU6IGZ1bmN0aW9uIChtZXRhKSB7CiAgICAgICAgcmV0dXJuIGpzb25SZXF1ZXN0KHsKICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsCiAgICAgICAgICAgIHJvdXRlOiAnL3YxL21lJywKICAgICAgICAgICAgYm9keTogbWV0YSwKICAgICAgICAgICAgZGlzYWJsZUNvcnNPcHRpbWl6YXRpb246IHRydWUsCiAgICAgICAgfSkKICAgICAgICAgICAgLm1hcChmdW5jdGlvbiAoanNvbikgeyByZXR1cm4gKHsKICAgICAgICAgICAgbWU6IGpzb24sCiAgICAgICAgICAgIGFjY291bnRzOiBqc29uLmFjY291bnRzICYmCiAgICAgICAgICAgICAgICBqc29uLmFjY291bnRzLm1hcChmdW5jdGlvbiAoYWNjb3VudCkgeyByZXR1cm4gYXBwbHlEZWZhdWx0QWNjb3VudChhY2NvdW50KTsgfSkgfHwgW10sCiAgICAgICAgICAgIGRldmljZXM6IGpzb24uZGV2aWNlcyB8fCBbXSwKICAgICAgICAgICAgbGlzdHM6IGpzb24ubGlzdHMgfHwgW10sCiAgICAgICAgICAgIHByZWZlcmVuY2VzOiBqc29uLnByZWZlcmVuY2VzLAogICAgICAgIH0pOyB9KTsKICAgIH0sCiAgICBnZXQ6IGZ1bmN0aW9uICgpIHsKICAgICAgICByZXR1cm4ganNvblJlcXVlc3QoewogICAgICAgICAgICBtZXRob2Q6ICdHRVQnLAogICAgICAgICAgICByb3V0ZTogIi92MS9tZSIsCiAgICAgICAgfSkKICAgICAgICAgICAgLm1hcChmdW5jdGlvbiAoanNvbikgeyByZXR1cm4gKHsKICAgICAgICAgICAgbWU6IGpzb24sCiAgICAgICAgICAgIGFjY291bnRzOiBqc29uLmFjY291bnRzICYmCiAgICAgICAgICAgICAgICBqc29uLmFjY291bnRzLm1hcChmdW5jdGlvbiAoYWNjb3VudCkgeyByZXR1cm4gYXBwbHlEZWZhdWx0QWNjb3VudChhY2NvdW50KTsgfSkgfHwgW10sCiAgICAgICAgICAgIGRldmljZXM6IGpzb24uZGV2aWNlcyB8fCBbXSwKICAgICAgICAgICAgbGlzdHM6IGpzb24ubGlzdHMgfHwgW10sCiAgICAgICAgICAgIHByZWZlcmVuY2VzOiBqc29uLnByZWZlcmVuY2VzLAogICAgICAgIH0pOyB9KTsKICAgIH0sCiAgICBnZXRPbmJvYXJkaW5nOiBmdW5jdGlvbiAoKSB7IHJldHVybiBqc29uUmVxdWVzdCh7CiAgICAgICAgbWV0aG9kOiAnR0VUJywKICAgICAgICByb3V0ZTogJy92MS9tZS9vbmJvYXJkaW5nJywKICAgIH0pOyB9LAogICAgc2V0T25ib2FyZGluZzogZnVuY3Rpb24gKG9uYm9hcmRpbmcpIHsgcmV0dXJuIGpzb25SZXF1ZXN0KHsKICAgICAgICBtZXRob2Q6ICdQQVRDSCcsCiAgICAgICAgcm91dGU6ICcvdjEvbWUvb25ib2FyZGluZycsCiAgICAgICAgYm9keTogb25ib2FyZGluZywKICAgIH0pOyB9LAogICAgY2xhaW1DcmVkaXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGpzb25SZXF1ZXN0KHsKICAgICAgICBtZXRob2Q6ICdQT1NUJywKICAgICAgICByb3V0ZTogJy92MS9tZS9vbmJvYXJkaW5nL2NsYWltQ3JlZGl0JywKICAgIH0pOyB9LAogICAgZGVsZXRlOiBmdW5jdGlvbiAoKSB7IHJldHVybiBibGFua1JlcXVlc3QoewogICAgICAgIG1ldGhvZDogJ0RFTEVURScsCiAgICAgICAgcm91dGU6ICcvdjEvbWUnLAogICAgfSk7IH0sCiAgICB1cGRhdGVQcmVmZXJlbmNlczogZnVuY3Rpb24gKHByZWZlcmVuY2VzKSB7CiAgICAgICAgcmV0dXJuIGpzb25SZXF1ZXN0KHsKICAgICAgICAgICAgbWV0aG9kOiAnUEFUQ0gnLAogICAgICAgICAgICByb3V0ZTogIi92MS9tZSIsCiAgICAgICAgICAgIGJvZHk6IHsgcHJlZmVyZW5jZXM6IHByZWZlcmVuY2VzIH0sCiAgICAgICAgfSkKICAgICAgICAgICAgLm1hcChmdW5jdGlvbiAoanNvbikgeyByZXR1cm4gKHsKICAgICAgICAgICAgbWU6IGpzb24sCiAgICAgICAgICAgIGFjY291bnRzOiBqc29uLmFjY291bnRzIHx8IFtdLAogICAgICAgICAgICBkZXZpY2VzOiBqc29uLmRldmljZXMgfHwgW10sCiAgICAgICAgICAgIGxpc3RzOiBqc29uLmxpc3RzIHx8IFtdLAogICAgICAgICAgICBwcmVmZXJlbmNlczoganNvbi5wcmVmZXJlbmNlcywKICAgICAgICAgICAgZmVhdHVyZXM6IGpzb24uZmVhdHVyZXMsCiAgICAgICAgfSk7IH0pOwogICAgfSwKICAgIGZha2VUcmFjazogZnVuY3Rpb24gKGFjY291bnQsIGRyYWZ0LCByZWNpcGllbnQpIHsKICAgICAgICByZXR1cm4gYmxhbmtSZXF1ZXN0KHsKICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsCiAgICAgICAgICAgIHJvdXRlOiAnL3YxL21lL29uYm9hcmRpbmcvcmVhZCcsCiAgICAgICAgICAgIGJvZHk6IHsgYWNjb3VudDogYWNjb3VudCwgZHJhZnQ6IGRyYWZ0LCByZWNpcGllbnQ6IHJlY2lwaWVudCB9LAogICAgICAgIH0pOwogICAgfSwKICAgIHVwZGF0ZVNpZ25VcEluZm86IGZ1bmN0aW9uIChtZXRhKSB7CiAgICAgICAgcmV0dXJuIGJsYW5rUmVxdWVzdCh7CiAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLAogICAgICAgICAgICByb3V0ZTogJy92MS9tZS9zaWduVXBJbmZvJywKICAgICAgICAgICAgYm9keTogbWV0YSwKICAgICAgICB9KTsKICAgIH0sCiAgICBzZXRURkE6IGZ1bmN0aW9uIChwaG9uZU51bWJlciwgcGFzc3dvcmQpIHsKICAgICAgICByZXR1cm4ganNvblJlcXVlc3QoewogICAgICAgICAgICBtZXRob2Q6ICdQT1NUJywKICAgICAgICAgICAgcm91dGU6ICcvdjEvbWUvdGZhJywKICAgICAgICAgICAgYm9keTogewogICAgICAgICAgICAgICAgcGhvbmU6IHBob25lTnVtYmVyLAogICAgICAgICAgICAgICAgcGFzc3dvcmQ6IHBhc3N3b3JkLAogICAgICAgICAgICB9LAogICAgICAgIH0pOwogICAgfSwKICAgIHVuc2V0VEZBOiBmdW5jdGlvbiAocGFzc3dvcmQpIHsKICAgICAgICByZXR1cm4gYmxhbmtSZXF1ZXN0KHsKICAgICAgICAgICAgbWV0aG9kOiAnREVMRVRFJywKICAgICAgICAgICAgcm91dGU6ICcvdjEvbWUvdGZhJywKICAgICAgICAgICAgYm9keTogeyBwYXNzd29yZDogcGFzc3dvcmQgfSwKICAgICAgICB9KTsKICAgIH0sCiAgICB2ZXJpZnlURkE6IGZ1bmN0aW9uIChjb2RlKSB7CiAgICAgICAgcmV0dXJuIGpzb25SZXF1ZXN0KHsKICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsCiAgICAgICAgICAgIHJvdXRlOiAnL3YxL21lL3RmYS92ZXJpZnknLAogICAgICAgICAgICBib2R5OiB7IGNvZGU6IGNvZGUgfSwKICAgICAgICB9KTsKICAgIH0sCn07CmV4cG9ydCB2YXIgY3JlYXRlTW9ja01lQm9keSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuICh7CiAgICBtZTogY3JlYXRlTWUoKSwKICAgIGFjY291bnRzOiBbY3JlYXRlQWNjb3VudCgpXSwKICAgIGRldmljZXM6IFtjcmVhdGVEZXZpY2UoKV0sCiAgICBwcmVmZXJlbmNlczogY3JlYXRlUHJlZmVyZW5jZXMoKSwKICAgIGxpc3RzOiBjcmVhdGVMaXN0cygpLAp9KTsgfTsKZXhwb3J0IGZ1bmN0aW9uIG1vY2tNZUNsaWVudCgpIHsKICAgIHJldHVybiB7CiAgICAgICAgY3JlYXRlOiBmdW5jdGlvbiAobWV0YSkgeyByZXR1cm4gT2JzZXJ2YWJsZS5vZihjcmVhdGVNb2NrTWVCb2R5KCkpOyB9LAogICAgICAgIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gT2JzZXJ2YWJsZS5vZihjcmVhdGVNb2NrTWVCb2R5KCkpOyB9LAogICAgICAgIGdldE9uYm9hcmRpbmc6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIE9ic2VydmFibGUub2YoY3JlYXRlT25ib2FyZGluZyh0cnVlKSk7IH0sCiAgICAgICAgc2V0T25ib2FyZGluZzogZnVuY3Rpb24gKG9uYm9hcmRpbmcpIHsgcmV0dXJuIE9ic2VydmFibGUub2Yob25ib2FyZGluZyk7IH0sCiAgICAgICAgY2xhaW1DcmVkaXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIE9ic2VydmFibGUub2YoY3JlYXRlT25ib2FyZGluZyh0cnVlKSk7IH0sCiAgICAgICAgZGVsZXRlOiBmdW5jdGlvbiAoKSB7IHJldHVybiBPYnNlcnZhYmxlLm9mKG51bGwpOyB9LAogICAgICAgIHVwZGF0ZVByZWZlcmVuY2VzOiBmdW5jdGlvbiAoKSB7IHJldHVybiBPYnNlcnZhYmxlLm9mKGNyZWF0ZU1vY2tNZUJvZHkoKSk7IH0sCiAgICAgICAgZmFrZVRyYWNrOiBmdW5jdGlvbiAoKSB7IHJldHVybiBPYnNlcnZhYmxlLm9mKG51bGwpOyB9LAogICAgICAgIHVwZGF0ZVNpZ25VcEluZm86IGZ1bmN0aW9uICgpIHsgcmV0dXJuIE9ic2VydmFibGUub2YobnVsbCk7IH0sCiAgICAgICAgc2V0VEZBOiBmdW5jdGlvbiAoKSB7IHJldHVybiBPYnNlcnZhYmxlLm9mKGNyZWF0ZVR3b0ZhY3RvckF1dGhlbnRpY2F0aW9uKHt9KSk7IH0sCiAgICAgICAgdW5zZXRURkE6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIE9ic2VydmFibGUub2YobnVsbCk7IH0sCiAgICAgICAgdmVyaWZ5VEZBOiBmdW5jdGlvbiAoKSB7IHJldHVybiBPYnNlcnZhYmxlLm9mKGNyZWF0ZVR3b0ZhY3RvckF1dGhlbnRpY2F0aW9uKHt9KSk7IH0sCiAgICB9Owp9CmV4cG9ydCBmdW5jdGlvbiB1cGRhdGVNZShtZSkgewogICAgcmV0dXJuIGpzb25SZXF1ZXN0KHsKICAgICAgICBtZXRob2Q6ICdQQVRDSCcsCiAgICAgICAgcm91dGU6ICIvdjEvbWUiLAogICAgICAgIGJvZHk6IG1lLAogICAgfSkKICAgICAgICAubWFwKGZ1bmN0aW9uIChqc29uKSB7IHJldHVybiAoewogICAgICAgIG1lOiBqc29uLAogICAgICAgIGFjY291bnRzOiBqc29uLmFjY291bnRzICYmCiAgICAgICAgICAgIGpzb24uYWNjb3VudHMubWFwKGZ1bmN0aW9uIChhY2NvdW50KSB7IHJldHVybiBhcHBseURlZmF1bHRBY2NvdW50KGFjY291bnQpOyB9KSB8fCBbXSwKICAgICAgICBkZXZpY2VzOiBqc29uLmRldmljZXMgfHwgW10sCiAgICAgICAgbGlzdHM6IGpzb24ubGlzdHMgfHwgW10sCiAgICAgICAgcHJlZmVyZW5jZXM6IGpzb24ucHJlZmVyZW5jZXMsCiAgICAgICAgZmVhdHVyZXM6IGpzb24uZmVhdHVyZXMsCiAgICB9KTsgfSk7Cn0K"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/api/me.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/api/me.ts"],"names":[],"mappings":"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","sourcesContent":["import { Observable } from 'rxjs';\n\nimport { jsonRequest, blankRequest } from './base';\n\nimport {\n  Me, Account,\n  List, Preferences,\n  Device, Onboarding,\n  TwoFactorAuthentication,\n} from '@src/types';\n\nimport {\n  createMe, createPreferences,\n  createOnboarding, createTwoFactorAuthentication,\n} from '@src/mocks/me';\nimport { createLists } from '@src/mocks/lists';\nimport { createAccount } from '@src/mocks/accounts';\nimport { createDevice } from '@src/mocks/devices';\nimport { applyDefaultAccount } from '@src/lib/account';\nimport { MeCreateMeta, MeSignUpInfoMeta } from '@src/ducks/me';\n\nexport interface MeBody {\n  me: Me;\n  accounts: Account[];\n  devices: Device[];\n  lists: List[];\n  preferences: Preferences;\n}\n\nexport interface MeAPI {\n  create(meta: MeCreateMeta): Observable<MeBody>;\n  get(): Observable<MeBody>;\n  getOnboarding(): Observable<Onboarding>;\n  setOnboarding(onboarding: Onboarding): Observable<Onboarding>;\n  claimCredit(): Observable<Onboarding>;\n  fakeTrack(account: string, draft: string, recipient: string): Observable<null>;\n  delete(): Observable<null>;\n  updatePreferences(prefs: Preferences): Observable<MeBody>;\n  updateSignUpInfo(meta: MeSignUpInfoMeta): Observable<null>;\n  setTFA(phone: string, password: string): Observable<TwoFactorAuthentication>;\n  unsetTFA(password: string): Observable<null>;\n  verifyTFA(code: string): Observable<TwoFactorAuthentication>;\n}\n\nexport const meClient: MeAPI = {\n  create: meta =>\n    jsonRequest({\n      method: 'POST',\n      route: '/v1/me',\n      body: meta,\n      disableCorsOptimization: true,\n    })\n    .map((json): MeBody => ({\n      me: json,\n      accounts: json.accounts &&\n        json.accounts.map((account: Account) => applyDefaultAccount(account)) || [],\n      devices: json.devices || [],\n      lists: json.lists || [],\n      preferences: json.preferences,\n    })),\n\n  get: () =>\n    jsonRequest({\n      method: 'GET',\n      route: `/v1/me`,\n    })\n    .map((json): MeBody => ({\n      me: json,\n      accounts: json.accounts &&\n        json.accounts.map((account: Account) => applyDefaultAccount(account)) || [],\n      devices: json.devices || [],\n      lists: json.lists || [],\n      preferences: json.preferences,\n    })),\n\n  getOnboarding: () => jsonRequest({\n    method: 'GET',\n    route: '/v1/me/onboarding',\n  }),\n\n  setOnboarding: onboarding => jsonRequest({\n    method: 'PATCH',\n    route: '/v1/me/onboarding',\n    body: onboarding,\n  }),\n\n  claimCredit: () => jsonRequest({\n    method: 'POST',\n    route: '/v1/me/onboarding/claimCredit',\n  }),\n\n  delete: () => blankRequest({\n    method: 'DELETE',\n    route: '/v1/me',\n  }),\n\n  updatePreferences: (preferences: Preferences): Observable<MeBody> =>\n    jsonRequest({\n      method: 'PATCH',\n      route: `/v1/me`,\n      body: { preferences },\n    })\n    .map(json => ({\n      me: json,\n      accounts: json.accounts || [],\n      devices: json.devices || [],\n      lists: json.lists || [],\n      preferences: json.preferences,\n      features: json.features,\n    })),\n\n  fakeTrack: (account: string, draft: string, recipient: string): Observable<null> =>\n    blankRequest({\n      method: 'POST',\n      route: '/v1/me/onboarding/read',\n      body: { account, draft, recipient },\n    }),\n\n  updateSignUpInfo: (meta: MeSignUpInfoMeta): Observable<null> =>\n    blankRequest({\n      method: 'POST',\n      route: '/v1/me/signUpInfo',\n      body: meta,\n    }),\n\n  setTFA: (phoneNumber: string, password: string): Observable<TwoFactorAuthentication> =>\n    jsonRequest({\n      method: 'POST',\n      route: '/v1/me/tfa',\n      body: {\n        phone: phoneNumber,\n        password,\n      },\n    }),\n\n  unsetTFA: (password: string): Observable<null> =>\n    blankRequest({\n      method: 'DELETE',\n      route: '/v1/me/tfa',\n      body: { password },\n    }),\n\n  verifyTFA: (code: string): Observable<TwoFactorAuthentication> =>\n    jsonRequest({\n      method: 'POST',\n      route: '/v1/me/tfa/verify',\n      body: { code },\n    }),\n};\n\nexport const createMockMeBody = (): MeBody => ({\n  me: createMe(),\n  accounts: [createAccount()],\n  devices: [createDevice()],\n  preferences: createPreferences(),\n  lists: createLists(),\n});\n\nexport function mockMeClient(): MeAPI {\n  return {\n    create: (meta: MeCreateMeta) => Observable.of(createMockMeBody()),\n    get: () => Observable.of(createMockMeBody()),\n    getOnboarding: () => Observable.of(createOnboarding(true)),\n    setOnboarding: onboarding => Observable.of(onboarding),\n    claimCredit: () => Observable.of(createOnboarding(true)),\n    delete: () => Observable.of(null),\n    updatePreferences: () => Observable.of(createMockMeBody()),\n    fakeTrack: () => Observable.of(null),\n    updateSignUpInfo: () => Observable.of(null),\n    setTFA: () => Observable.of(createTwoFactorAuthentication({})),\n    unsetTFA: () => Observable.of(null),\n    verifyTFA:() => Observable.of(createTwoFactorAuthentication({})),\n  };\n}\n\nexport function updateMe(me: Me): Observable<MeBody> {\n  return jsonRequest({\n    method: 'PATCH',\n    route: `/v1/me`,\n    body: me,\n  })\n  .map(json => ({\n    me: json,\n    accounts: json.accounts &&\n      json.accounts.map((account: Account) => applyDefaultAccount(account)) || [],\n    devices: json.devices || [],\n    lists: json.lists || [],\n    preferences: json.preferences,\n    features: json.features,\n  }));\n}\n"]}]}