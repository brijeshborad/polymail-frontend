{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/LeftSidebar/components/MailTab/components/Section/CollapsedNavigationSection/index.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/LeftSidebar/components/MailTab/components/Section/CollapsedNavigationSection/index.ts","mtime":1675280254018},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IENvbGxhcHNlZE5hdmlnYXRpb25TZWN0aW9uIGZyb20gJy4vQ29sbGFwc2VkTmF2aWdhdGlvblNlY3Rpb24nOwppbXBvcnQgeyBjb25uZWN0IH0gZnJvbSAncmVhY3QtcmVkdXgnOwppbXBvcnQgeyBDb21tYW5kQ29udHJvbFR5cGUgfSBmcm9tICdAc3JjL3R5cGVzJzsKaW1wb3J0IHsgbGlzdFVwZGF0ZSwgbGlzdENyZWF0ZSwgbGlzdERlbGV0ZSB9IGZyb20gJ0BzcmMvZHVja3MvbGlzdHMnOwppbXBvcnQgeyB0b2FzdFNldCB9IGZyb20gJ0BzcmMvZHVja3MvdG9hc3RzJzsKaW1wb3J0IHsgbGVmdFNpZGViYXJMaXN0c0NvbGxhcHNlIH0gZnJvbSAnQHNyYy9kdWNrcy9sZWZ0U2lkZWJhcic7CmltcG9ydCB7IGNvbW1hbmRDb250cm9sU2hvdyB9IGZyb20gJ0BzcmMvZHVja3MvY29tbWFuZENvbnRyb2wnOwp2YXIgbWFwU3RhdGVUb1Byb3BzID0gZnVuY3Rpb24gKHN0YXRlKSB7IHJldHVybiAoewogICAgY29sbGFwc2VkOiBzdGF0ZS5sZWZ0U2lkZWJhci5saXN0c0NvbGxhcHNlZCwKfSk7IH07CnZhciBtYXBEaXNwYXRjaFRvUHJvcHMgPSBmdW5jdGlvbiAoZGlzcGF0Y2gpIHsgcmV0dXJuICh7CiAgICB1cGRhdGVMaXN0OiBmdW5jdGlvbiAobGlzdCkgeyByZXR1cm4gZGlzcGF0Y2gobGlzdFVwZGF0ZShsaXN0KSk7IH0sCiAgICBjcmVhdGVMaXN0OiBmdW5jdGlvbiAobGlzdCkgeyByZXR1cm4gZGlzcGF0Y2gobGlzdENyZWF0ZShsaXN0KSk7IH0sCiAgICBkZWxldGVMaXN0OiBmdW5jdGlvbiAobGlzdCkgeyByZXR1cm4gZGlzcGF0Y2gobGlzdERlbGV0ZShsaXN0KSk7IH0sCiAgICBjb2xsYXBzZUxpc3RzOiBmdW5jdGlvbiAoY29sbGFwc2UpIHsgcmV0dXJuIGRpc3BhdGNoKGxlZnRTaWRlYmFyTGlzdHNDb2xsYXBzZShjb2xsYXBzZSkpOyB9LAogICAgc2V0VG9hc3Q6IGZ1bmN0aW9uIChtZXNzYWdlKSB7IHJldHVybiBkaXNwYXRjaCh0b2FzdFNldChtZXNzYWdlKSk7IH0sCiAgICBzaG93TmF2aWdhdGlvbkNlbnRlcjogZnVuY3Rpb24gKCkgeyByZXR1cm4gZGlzcGF0Y2goY29tbWFuZENvbnRyb2xTaG93KENvbW1hbmRDb250cm9sVHlwZS5OYXZpZ2F0aW9uKSk7IH0sCn0pOyB9OwpleHBvcnQgZGVmYXVsdCBjb25uZWN0KG1hcFN0YXRlVG9Qcm9wcywgbWFwRGlzcGF0Y2hUb1Byb3BzKShDb2xsYXBzZWROYXZpZ2F0aW9uU2VjdGlvbik7Cg=="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/LeftSidebar/components/MailTab/components/Section/CollapsedNavigationSection/index.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/LeftSidebar/components/MailTab/components/Section/CollapsedNavigationSection/index.ts"],"names":[],"mappings":"AAAA,OAAO,0BAEN,MAAM,8BAA8B,CAAC;AACtC,OAAO,EAAE,OAAO,EAAY,MAAM,aAAa,CAAC;AAChD,OAAO,EAAc,kBAAkB,EAAE,MAAM,YAAY,CAAC;AAC5D,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,MAAM,kBAAkB,CAAC;AACtE,OAAO,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAC7C,OAAO,EAAE,wBAAwB,EAAE,MAAM,wBAAwB,CAAC;AAClE,OAAO,EAAE,kBAAkB,EAAE,MAAM,2BAA2B,CAAC;AAE/D,IAAM,eAAe,GAAG,UAAC,KAAiB,IAAiB,OAAA,CAAC;IAC1D,SAAS,EAAE,KAAK,CAAC,WAAW,CAAC,cAAc;CAC5C,CAAC,EAFyD,CAEzD,CAAC;AAEH,IAAM,kBAAkB,GAAG,UAAC,QAA8B,IAAoB,OAAA,CAAC;IAC7E,UAAU,EAAE,UAAA,IAAI,IAAI,OAAA,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,EAA1B,CAA0B;IAC9C,UAAU,EAAE,UAAA,IAAI,IAAI,OAAA,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,EAA1B,CAA0B;IAC9C,UAAU,EAAE,UAAA,IAAI,IAAI,OAAA,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,EAA1B,CAA0B;IAC9C,aAAa,EAAE,UAAA,QAAQ,IAAI,OAAA,QAAQ,CAAC,wBAAwB,CAAC,QAAQ,CAAC,CAAC,EAA5C,CAA4C;IACvE,QAAQ,EAAE,UAAA,OAAO,IAAI,OAAA,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,EAA3B,CAA2B;IAChD,oBAAoB,EAAE,cAAM,OAAA,QAAQ,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC,EAA3D,CAA2D;CACxF,CAAC,EAP4E,CAO5E,CAAC;AAEH,eAAe,OAAO,CAAC,eAAe,EAAE,kBAAkB,CAAC,CAAC,0BAA0B,CAAC,CAAC","sourcesContent":["import CollapsedNavigationSection, {\n  DispatchProps, StateProps,\n} from './CollapsedNavigationSection';\nimport { connect, Dispatch } from 'react-redux';\nimport { StoreState, CommandControlType } from '@src/types';\nimport { listUpdate, listCreate, listDelete } from '@src/ducks/lists';\nimport { toastSet } from '@src/ducks/toasts';\nimport { leftSidebarListsCollapse } from '@src/ducks/leftSidebar';\nimport { commandControlShow } from '@src/ducks/commandControl';\n\nconst mapStateToProps = (state: StoreState): StateProps => ({\n  collapsed: state.leftSidebar.listsCollapsed,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<StoreState>): DispatchProps => ({\n  updateList: list => dispatch(listUpdate(list)),\n  createList: list => dispatch(listCreate(list)),\n  deleteList: list => dispatch(listDelete(list)),\n  collapseLists: collapse => dispatch(leftSidebarListsCollapse(collapse)),\n  setToast: message => dispatch(toastSet(message)),\n  showNavigationCenter: () => dispatch(commandControlShow(CommandControlType.Navigation)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CollapsedNavigationSection);\n"]}]}