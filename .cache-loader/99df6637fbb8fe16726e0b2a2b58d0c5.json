{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/worker/sync/ContactSync.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/worker/sync/ContactSync.ts","mtime":1675280254125},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkgewogICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBmdW5jdGlvbiAoZCwgYikgewogICAgICAgIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwKICAgICAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fAogICAgICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChiLmhhc093blByb3BlcnR5KHApKSBkW3BdID0gYltwXTsgfTsKICAgICAgICByZXR1cm4gZXh0ZW5kU3RhdGljcyhkLCBiKTsKICAgIH07CiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHsKICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpOwogICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfQogICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTsKICAgIH07Cn0pKCk7CmltcG9ydCB7IFN0b3JlcyB9IGZyb20gJ0BzcmMvbGliL2RiJzsKaW1wb3J0IHsgQ29udGFjdENsaWVudCB9IGZyb20gJ0BzcmMvYXBpL2NvbnRhY3RzJzsKaW1wb3J0IHsgQVBJU3luYyB9IGZyb20gJy4vQVBJU3luYyc7CnZhciBDb250YWN0U3luYyA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHsKICAgIF9fZXh0ZW5kcyhDb250YWN0U3luYywgX3N1cGVyKTsKICAgIC8vIC0gYXBwIGJyaWRnZSBpbnRlcmZhY2UKICAgIGZ1bmN0aW9uIENvbnRhY3RTeW5jKHRlYW0sIGFwaSkgewogICAgICAgIGlmIChhcGkgPT09IHZvaWQgMCkgeyBhcGkgPSBuZXcgQ29udGFjdENsaWVudCgpOyB9CiAgICAgICAgdmFyIF90aGlzID0gdGhpczsKICAgICAgICBpZiAodGVhbSAmJiB0ZWFtICE9PSAnJykgewogICAgICAgICAgICBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMsICdDb250YWN0U3luYy0nICsgdGVhbSwgU3RvcmVzLkNvbnRhY3RzLCBmYWxzZSkgfHwgdGhpczsKICAgICAgICAgICAgX3RoaXMudGVhbSA9IHRlYW07CiAgICAgICAgfQogICAgICAgIGVsc2UgewogICAgICAgICAgICBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMsICdDb250YWN0U3luYycsIFN0b3Jlcy5Db250YWN0cywgZmFsc2UpIHx8IHRoaXM7CiAgICAgICAgfQogICAgICAgIF90aGlzLmFwaSA9IGFwaTsKICAgICAgICByZXR1cm4gX3RoaXM7CiAgICB9CiAgICBDb250YWN0U3luYy5wcm90b3R5cGUuZmV0Y2hOZXh0UGFnZSA9IGZ1bmN0aW9uICgpIHsKICAgICAgICBpZiAodGhpcy50ZWFtKSB7CiAgICAgICAgICAgIHJldHVybiB0aGlzLmFwaS5saXN0QnlUZWFtKHRoaXMudGVhbSwgdGhpcy5vZmZzZXQpOwogICAgICAgIH0KICAgICAgICByZXR1cm4gdGhpcy5hcGkubGlzdCh0aGlzLm9mZnNldCk7CiAgICB9OwogICAgQ29udGFjdFN5bmMucHJvdG90eXBlLm5leHRQYWdlT2Zmc2V0ID0gZnVuY3Rpb24gKG1vZGVscykgewogICAgICAgIHJldHVybiBtb2RlbHNbbW9kZWxzLmxlbmd0aCAtIDFdLmlkOwogICAgfTsKICAgIHJldHVybiBDb250YWN0U3luYzsKfShBUElTeW5jKSk7CmV4cG9ydCB7IENvbnRhY3RTeW5jIH07CmV4cG9ydCBkZWZhdWx0IENvbnRhY3RTeW5jOwo="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/worker/sync/ContactSync.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/worker/sync/ContactSync.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,aAAa,CAAC;AAErC,OAAO,EAAc,aAAa,EAAE,MAAM,mBAAmB,CAAC;AAE9D,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AAEpC;IAAiC,+BAAgB;IAM/C,yBAAyB;IAEzB,qBACE,IAAa,EACb,GAAqC;QAArC,oBAAA,EAAA,UAAsB,aAAa,EAAE;QAFvC,iBAWC;QAPC,IAAI,IAAI,IAAI,IAAI,KAAK,EAAE,EAAE;YACvB,QAAA,kBAAM,cAAc,GAAG,IAAI,EAAE,MAAM,CAAC,QAAQ,EAAE,KAAK,CAAC,SAAC;YACrD,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SAClB;aAAM;YACL,QAAA,kBAAM,aAAa,EAAE,MAAM,CAAC,QAAQ,EAAE,KAAK,CAAC,SAAC;SAC9C;QACD,KAAI,CAAC,GAAG,GAAG,GAAG,CAAC;;IACjB,CAAC;IAES,mCAAa,GAAvB;QACE,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,OAAO,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;SACpD;QACD,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACpC,CAAC;IAES,oCAAc,GAAxB,UAAyB,MAAiB;QACxC,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;IACtC,CAAC;IACH,kBAAC;AAAD,CAAC,AA/BD,CAAiC,OAAO,GA+BvC;;AAED,eAAe,WAAW,CAAC","sourcesContent":["import { Stores } from '@src/lib/db';\nimport { Contact } from '@src/types';\nimport { ContactAPI, ContactClient } from '@src/api/contacts';\nimport { Observable } from 'rxjs';\nimport { APISync } from './APISync';\n\nexport class ContactSync extends APISync<Contact> {\n\n  // State\n\n  // Dependencies\n  private api: ContactAPI;\n  // - app bridge interface\n\n  constructor(\n    team?: string,\n    api: ContactAPI = new ContactClient(),\n  ) {\n    if (team && team !== '') {\n      super('ContactSync-' + team, Stores.Contacts, false);\n      this.team = team;\n    } else {\n      super('ContactSync', Stores.Contacts, false);\n    }\n    this.api = api;\n  }\n\n  protected fetchNextPage(): Observable<Contact[]> {\n    if (this.team) {\n      return this.api.listByTeam(this.team, this.offset);\n    }\n    return this.api.list(this.offset);\n  }\n\n  protected nextPageOffset(models: Contact[]): string {\n    return models[models.length - 1].id;\n  }\n}\n\nexport default ContactSync;\n"]}]}