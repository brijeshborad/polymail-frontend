{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/ThreadDetail/components/Cell/CollapsedCell/index.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/ThreadDetail/components/Cell/CollapsedCell/index.tsx","mtime":1675280254037},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4JzsKaW1wb3J0IHsgc2VsZWN0Q29udGFjdCwgY29udGFjdEdldCB9IGZyb20gJ0BzcmMvZHVja3MvY29udGFjdHMnOwppbXBvcnQgQ29sbGFwc2VkQ2VsbCBmcm9tICcuL0NvbGxhcHNlZENlbGwnOwp2YXIgbWFwU3RhdGVUb1Byb3BzID0gZnVuY3Rpb24gKHN0YXRlLCBvd25Qcm9wcykgewogICAgcmV0dXJuIHsKICAgICAgICBzZW5kZXI6IHNlbGVjdENvbnRhY3Qoc3RhdGUsIG93blByb3BzLm1lc3NhZ2UuZnJvbSksCiAgICAgICAgbWU6IHN0YXRlLm1lLmRhdGEsCiAgICB9Owp9Owp2YXIgbWFwRGlzcGF0Y2hUb1Byb3BzID0gZnVuY3Rpb24gKGRpc3BhdGNoKSB7IHJldHVybiAoewogICAgZ2V0Q29udGFjdDogZnVuY3Rpb24gKGVtYWlsKSB7IHJldHVybiBkaXNwYXRjaChjb250YWN0R2V0KGVtYWlsKSk7IH0sCn0pOyB9OwpleHBvcnQgZGVmYXVsdCBjb25uZWN0KG1hcFN0YXRlVG9Qcm9wcywgbWFwRGlzcGF0Y2hUb1Byb3BzKShDb2xsYXBzZWRDZWxsKTsK"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/ThreadDetail/components/Cell/CollapsedCell/index.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/ThreadDetail/components/Cell/CollapsedCell/index.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAY,MAAM,aAAa,CAAC;AAEhD,OAAO,EAAE,aAAa,EAAE,UAAU,EAAE,MAAM,qBAAqB,CAAC;AAEhE,OAAO,aAAuC,MAAM,iBAAiB,CAAC;AAEtE,IAAM,eAAe,GAAG,UAAC,KAAiB,EAAE,QAAe;IACzD,OAAO;QACL,MAAM,EAAE,aAAa,CAAC,KAAK,EAAE,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC;QACnD,EAAE,EAAE,KAAK,CAAC,EAAE,CAAC,IAAI;KAClB,CAAC;AACJ,CAAC,CAAC;AAEF,IAAM,kBAAkB,GAAG,UAAC,QAA8B,IAAoB,OAAA,CAAC;IAC7E,UAAU,EAAE,UAAC,KAAa,IAAK,OAAA,QAAQ,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,EAA3B,CAA2B;CAC3D,CAAC,EAF4E,CAE5E,CAAC;AAEH,eAAe,OAAO,CAAC,eAAe,EAAE,kBAAkB,CAAC,CAAC,aAAa,CAAC,CAAC","sourcesContent":["import { connect, Dispatch } from 'react-redux';\n\nimport { selectContact, contactGet } from '@src/ducks/contacts';\nimport { StoreState } from '@src/types';\nimport CollapsedCell, { Props, DispatchProps } from './CollapsedCell';\n\nconst mapStateToProps = (state: StoreState, ownProps: Props): any => {\n  return {\n    sender: selectContact(state, ownProps.message.from),\n    me: state.me.data,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<StoreState>): DispatchProps => ({\n  getContact: (email: string) => dispatch(contactGet(email)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CollapsedCell);\n"]}]}