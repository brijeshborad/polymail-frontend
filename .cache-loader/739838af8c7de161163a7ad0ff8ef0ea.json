{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Billing/components/PaymentForm.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Billing/components/PaymentForm.tsx","mtime":1675280254099},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Billing/components/PaymentForm.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Billing/components/PaymentForm.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { FormEvent } from 'react';\nimport classnames from 'classnames';\nimport TextInput from '@src/components/Form/TextInput';\nimport { loadStripe, Stripe, StripeElements, StripeError } from '@stripe/stripe-js';\nimport { Elements, ElementsConsumer, CardElement } from '@stripe/react-stripe-js';\n\nimport { DEFAULT_FONT } from '@src/lib/typography';\nimport Loader from '@src/components/Loader/Loader';\n\nimport './PaymentForm.scss';\n\nexport interface Props {\n  loading: boolean;\n  buttonName: string;\n  showCancel?: boolean;\n  error?: Error;\n  onSubmit(token: string): void;\n  onCancel?(): void;\n  onContinue?(): void;\n}\n\ninterface StripeProps {\n  stripe: Stripe;\n  elements: StripeElements;\n}\n\ninterface State {\n  name: string;\n  loading: boolean;\n  error?: string;\n  hasAddedCard: boolean;\n}\n\nclass PaymentForm extends React.PureComponent<\n  Props & StripeProps, State\n> {\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      loading: false,\n      hasAddedCard: false,\n    };\n  }\n\n  handleNameUpdate = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ name: e.currentTarget.value });\n  }\n\n  handleCardUpdate = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.currentTarget.value.length > 0) {\n      this.setState({ hasAddedCard: true });\n    } else {\n      this.setState({ hasAddedCard: false });\n    }\n  }\n\n  handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    const { stripe, elements } = this.props;\n\n    if (elements === null) {\n      return;\n    }\n\n    const cardElement = elements.getElement(CardElement);\n\n    // require card name\n    if (this.state.name.trim() === '') {\n      if (this.props.onContinue && !this.state.hasAddedCard) {\n        this.props.onContinue();\n        return;\n      }\n      this.setState({ error: 'Cardholder\\'s name is required.' });\n      return;\n    }\n\n    // handle stripe not available\n    if (!this.props.stripe) {\n      this.setState({ error: 'An unknown error occurred.' });\n      return;\n    }\n\n    // perform stripe createToken\n    this.setState({ loading: true });\n    // hack: stripe types are wrong\n    stripe.createToken(cardElement as typeof CardElement, { name: this.state.name })\n      .then((data) => {\n        this.setState({ loading: false });\n\n        if (data.token) {\n          this.props.onSubmit(data.token.id);\n        }\n\n        if (data.error) {\n          this.setState({ error:\n            (data.error as StripeError).message || 'An unknown error occurred.',\n          });\n        }\n      }).catch((err) => {\n        this.setState({ loading: false, error: err });\n      });\n  }\n\n  handleCancel = () => {\n    if (this.props.onCancel) {\n      this.props.onCancel();\n    }\n  }\n\n  render() {\n    const loading = this.state.loading || this.props.loading;\n    const error = (this.props.error && this.props.error.toString()) || this.state.error;\n\n    return (\n      <form className=\"payment-form\" onSubmit={this.handleSubmit}>\n        {error && <div className=\"error\">{error}</div>}\n        <TextInput\n          onChange={this.handleNameUpdate}\n          placeholder=\"Cardholder's name\"\n          description=\"Cardholder's name\"\n          value={this.state.name}\n          type=\"text\"\n        />\n        <div className=\"card\">\n          <div className=\"description\">\n            Card\n          </div>\n          <CardElement\n            className=\"card-element\"\n            onChange={this.handleCardUpdate}\n            style={{\n              base: {\n                color: '#444444',\n                fontSize: '14px',\n                fontFamily: DEFAULT_FONT,\n                fontWeight: '400',\n                '::placeholder': {\n                  color: '#c9d4e0',\n                },\n              } as any,\n            }}\n          />\n        </div>\n        <div\n          className={classnames('action-buttons', { 'no-cancel': !this.props.showCancel })}\n        >\n          <button disabled={loading} className=\"upgrade\">\n            {loading ? <Loader /> : this.props.buttonName}\n          </button>\n          {this.props.showCancel && !loading &&\n            <button className=\"cancel\" onClick={this.handleCancel}>\n              Cancel\n            </button>\n          }\n        </div>\n      </form>\n    );\n  }\n}\n\nconst InjectedCheckoutForm = (props: Props) => (\n  <ElementsConsumer>\n    {({ elements, stripe }: StripeProps) => (\n      <PaymentForm\n        {...props}\n        elements={elements}\n        stripe={stripe}\n      />\n    )}\n  </ElementsConsumer>\n);\n\nconst stripePromise = loadStripe(process.env.STRIPE_PUBLISHABLE_KEY as string);\n\nconst WrappedPaymentForm: React.SFC<Props> = (props: Props) => (\n  <Elements stripe={stripePromise}>\n      <InjectedCheckoutForm {...props} />\n  </Elements>\n);\n\nexport default WrappedPaymentForm;\n"]}]}