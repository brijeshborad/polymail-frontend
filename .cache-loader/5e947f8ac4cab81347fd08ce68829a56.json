{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/api/app.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/api/app.ts","mtime":1675280253979},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnOwppbXBvcnQgeyBqc29uUmVxdWVzdCwgd2ViYXBwUmVxdWVzdCB9IGZyb20gJ0BzcmMvYXBpL2Jhc2UnOwpleHBvcnQgdmFyIFN0YXR1c1BhZ2VUeXBlOwooZnVuY3Rpb24gKFN0YXR1c1BhZ2VUeXBlKSB7CiAgICBTdGF0dXNQYWdlVHlwZVsiT3BlcmF0aW9uYWwiXSA9ICJvcGVyYXRpb25hbCI7CiAgICBTdGF0dXNQYWdlVHlwZVsiVW5kZXJNYWludGVuYW5jZSJdID0gInVuZGVyX21haW50ZW5hbmNlIjsKICAgIFN0YXR1c1BhZ2VUeXBlWyJEZWdyYWRlZFBlcmZvcm1hbmNlIl0gPSAiZGVncmFkZWRfcGVyZm9ybWFuY2UiOwogICAgU3RhdHVzUGFnZVR5cGVbIlBhcnRpYWxPdXRhZ2UiXSA9ICJwYXJ0aWFsX291dGFnZSI7CiAgICBTdGF0dXNQYWdlVHlwZVsiTWFqb3JPdXRhZ2UiXSA9ICJtYWpvcl9vdXRhZ2UiOwogICAgU3RhdHVzUGFnZVR5cGVbIlVua25vd24iXSA9ICIiOwp9KShTdGF0dXNQYWdlVHlwZSB8fCAoU3RhdHVzUGFnZVR5cGUgPSB7fSkpOwp2YXIgQXBwQ2xpZW50ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkgewogICAgZnVuY3Rpb24gQXBwQ2xpZW50KCkgewogICAgfQogICAgQXBwQ2xpZW50LnByb3RvdHlwZS5jaGVja0ZvclVwZGF0ZXMgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgcmV0dXJuIHdlYmFwcFJlcXVlc3QoJy9jdXJyZW50VmVyc2lvbicpCiAgICAgICAgICAgIC5tYXAoZnVuY3Rpb24gKHJlc3BvbnNlKSB7IHJldHVybiByZXNwb25zZS52ZXJzaW9uOyB9KTsKICAgIH07CiAgICBBcHBDbGllbnQucHJvdG90eXBlLmdldFN0YXR1cyA9IGZ1bmN0aW9uICgpIHsKICAgICAgICByZXR1cm4ganNvblJlcXVlc3QoewogICAgICAgICAgICBtZXRob2Q6ICdHRVQnLAogICAgICAgICAgICByb3V0ZTogJy92MS9zdGF0dXMnLAogICAgICAgICAgICBkaXNhYmxlQ29yc09wdGltaXphdGlvbjogdHJ1ZSwKICAgICAgICB9KTsKICAgIH07CiAgICByZXR1cm4gQXBwQ2xpZW50Owp9KCkpOwpleHBvcnQgeyBBcHBDbGllbnQgfTsKZXhwb3J0IHZhciBtb2NrQXBwQ2xpZW50ID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gKHsKICAgIGNoZWNrRm9yVXBkYXRlczogZnVuY3Rpb24gKCkgeyByZXR1cm4gT2JzZXJ2YWJsZS5vZignMC4wLjEnKTsgfSwKICAgIGdldFN0YXR1czogZnVuY3Rpb24gKCkgeyByZXR1cm4gT2JzZXJ2YWJsZS5vZih7CiAgICAgICAgc3RhdHVzOiBTdGF0dXNQYWdlVHlwZS5PcGVyYXRpb25hbCwKICAgIH0pOyB9LAp9KTsgfTsK"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/api/app.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/api/app.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,MAAM,CAAC;AAClC,OAAO,EAAE,WAAW,EAAE,aAAa,EAAE,MAAM,eAAe,CAAC;AAE3D,MAAM,CAAN,IAAY,cAOX;AAPD,WAAY,cAAc;IACxB,6CAA2B,CAAA;IAC3B,wDAAsC,CAAA;IACtC,8DAA4C,CAAA;IAC5C,kDAAgC,CAAA;IAChC,8CAA4B,CAAA;IAC5B,8BAAY,CAAA;AACd,CAAC,EAPW,cAAc,KAAd,cAAc,QAOzB;AAYD;IAAA;IAaA,CAAC;IAZC,mCAAe,GAAf;QACE,OAAO,aAAa,CAAC,iBAAiB,CAAC;aACpC,GAAG,CAAC,UAAA,QAAQ,IAAI,OAAA,QAAQ,CAAC,OAAO,EAAhB,CAAgB,CAAC,CAAC;IACvC,CAAC;IAED,6BAAS,GAAT;QACE,OAAO,WAAW,CAAC;YACjB,MAAM,EAAE,KAAK;YACb,KAAK,EAAE,YAAY;YACnB,uBAAuB,EAAE,IAAI;SAC9B,CAAC,CAAC;IACL,CAAC;IACH,gBAAC;AAAD,CAAC,AAbD,IAaC;;AAED,MAAM,CAAC,IAAM,aAAa,GAAG,cAAc,OAAA,CAAC;IAC1C,eAAe,EAAE,cAAM,OAAA,UAAU,CAAC,EAAE,CAAC,OAAO,CAAC,EAAtB,CAAsB;IAC7C,SAAS,EAAE,cAAM,OAAA,UAAU,CAAC,EAAE,CAAC;QAC7B,MAAM,EAAE,cAAc,CAAC,WAAW;KACnC,CAAC,EAFe,CAEf;CACH,CAAC,EALyC,CAKzC,CAAC","sourcesContent":["import { Observable } from 'rxjs';\nimport { jsonRequest, webappRequest } from '@src/api/base';\n\nexport enum StatusPageType {\n  Operational = 'operational',\n  UnderMaintenance = 'under_maintenance',\n  DegradedPerformance = 'degraded_performance',\n  PartialOutage = 'partial_outage',\n  MajorOutage = 'major_outage',\n  Unknown = '',\n}\n\nexport interface StatusPageResult {\n  status: StatusPageType;\n  error?: Error;\n}\n\nexport interface AppAPI {\n  checkForUpdates(): Observable<string>;\n  getStatus(): Observable<StatusPageResult>;\n}\n\nexport class AppClient implements AppAPI {\n  checkForUpdates(): Observable<string> {\n    return webappRequest('/currentVersion')\n      .map(response => response.version);\n  }\n\n  getStatus(): Observable<StatusPageResult> {\n    return jsonRequest({\n      method: 'GET',\n      route: '/v1/status',\n      disableCorsOptimization: true,\n    });\n  }\n}\n\nexport const mockAppClient = (): AppAPI => ({\n  checkForUpdates: () => Observable.of('0.0.1'),\n  getStatus: () => Observable.of({\n    status: StatusPageType.Operational,\n  }),\n});\n"]}]}