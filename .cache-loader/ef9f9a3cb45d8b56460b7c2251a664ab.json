{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Billing/MemberPlanDetail/index.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Billing/MemberPlanDetail/index.ts","mtime":1675280254097},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4JzsKaW1wb3J0IE1lbWJlclBsYW5EZXRhaWwgZnJvbSAnLi9NZW1iZXJQbGFuRGV0YWlsJzsKaW1wb3J0IHsgc2VsZWN0Rmlyc3RBZG1pblRlYW1NZW1iZXIgfSBmcm9tICdAc3JjL2R1Y2tzL3RlYW1NZW1iZXJzJzsKaW1wb3J0IHsgc2VsZWN0QmlsbGluZ0xvYWRpbmcsIHNlbGVjdEJpbGxpbmdMb2FkaW5nRXJyb3IsIHNlbGVjdEJpbGxpbmdUcmlhbEV4cGlyZXMsIH0gZnJvbSAnQHNyYy9kdWNrcy9iaWxsaW5nJzsKdmFyIG1hcFN0YXRlVG9Qcm9wcyA9IGZ1bmN0aW9uIChzdGF0ZSkgewogICAgdmFyIGJpbGxpbmcgPSBzdGF0ZS5iaWxsaW5nLnJlc291cmNlLmRhdGE7CiAgICB2YXIgdGVhbSA9IHN0YXRlLnRlYW0uZGF0YTsKICAgIHJldHVybiB7CiAgICAgICAgbG9hZGluZzogc2VsZWN0QmlsbGluZ0xvYWRpbmcoc3RhdGUpLAogICAgICAgIGxvYWRpbmdFcnJvcjogc2VsZWN0QmlsbGluZ0xvYWRpbmdFcnJvcihzdGF0ZSksCiAgICAgICAgYWRtaW46IHNlbGVjdEZpcnN0QWRtaW5UZWFtTWVtYmVyKHN0YXRlKSwKICAgICAgICBzdWJzY3JpcHRpb246IGJpbGxpbmcgJiYgYmlsbGluZy5zdWJzY3JpcHRpb24sCiAgICAgICAgdHJpYWxFeHBpcmVzOiBzZWxlY3RCaWxsaW5nVHJpYWxFeHBpcmVzKHN0YXRlKSwKICAgICAgICB0cmlhbFBsYW46IHRlYW0gJiYgdGVhbS50cmlhbFBsYW4sCiAgICB9Owp9OwpleHBvcnQgZGVmYXVsdCBjb25uZWN0KG1hcFN0YXRlVG9Qcm9wcykoTWVtYmVyUGxhbkRldGFpbCk7Cg=="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Billing/MemberPlanDetail/index.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Billing/MemberPlanDetail/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AAGtC,OAAO,gBAA2B,MAAM,oBAAoB,CAAC;AAC7D,OAAO,EAAE,0BAA0B,EAAE,MAAM,wBAAwB,CAAC;AACpE,OAAO,EACL,oBAAoB,EAAE,yBAAyB,EAAE,yBAAyB,GAC3E,MAAM,oBAAoB,CAAC;AAE5B,IAAM,eAAe,GAAG,UAAC,KAAiB;IACxC,IAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC;IAC5C,IAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;IAE7B,OAAO;QACL,OAAO,EAAE,oBAAoB,CAAC,KAAK,CAAC;QACpC,YAAY,EAAE,yBAAyB,CAAC,KAAK,CAAC;QAC9C,KAAK,EAAE,0BAA0B,CAAC,KAAK,CAAC;QACxC,YAAY,EAAE,OAAO,IAAI,OAAO,CAAC,YAAY;QAC7C,YAAY,EAAE,yBAAyB,CAAC,KAAK,CAAC;QAC9C,SAAS,EAAE,IAAI,IAAI,IAAI,CAAC,SAAS;KAClC,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,OAAO,CAAC,eAAe,CAAC,CAAC,gBAAgB,CAAC,CAAC","sourcesContent":["import { connect } from 'react-redux';\n\nimport { StoreState } from '@src/types';\nimport MemberPlanDetail, { Props } from './MemberPlanDetail';\nimport { selectFirstAdminTeamMember } from '@src/ducks/teamMembers';\nimport {\n  selectBillingLoading, selectBillingLoadingError, selectBillingTrialExpires,\n} from '@src/ducks/billing';\n\nconst mapStateToProps = (state: StoreState): Props => {\n  const billing = state.billing.resource.data;\n  const team = state.team.data;\n\n  return {\n    loading: selectBillingLoading(state),\n    loadingError: selectBillingLoadingError(state),\n    admin: selectFirstAdminTeamMember(state),\n    subscription: billing && billing.subscription,\n    trialExpires: selectBillingTrialExpires(state),\n    trialPlan: team && team.trialPlan,\n  };\n};\n\nexport default connect(mapStateToProps)(MemberPlanDetail);\n"]}]}