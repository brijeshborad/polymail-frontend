{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/draft.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/draft.ts","mtime":1675280254063},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/draft.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/draft.ts"],"names":[],"mappings":"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","sourcesContent":["import { filter, findIndex, indexOf, cloneDeep, escape, uniqBy } from 'lodash';\nimport moment from 'moment-timezone';\n\nimport { mongoId } from './crypt';\nimport { computeThread } from '@src/lib/thread';\nimport { addressToEmail, parseAddress } from '@src/lib/address';\nimport { now } from '@src/lib/datetime';\nimport {\n  Draft, Thread, Message, DraftStatus,\n  Account, MessageBody, MessageAttachment,\n  ThreadBox, Template, Preferences, Attachment,\n  AccountType, Features, Commit, AttachmentMeta,\n} from '@src/types';\nimport { accountSignature } from './account';\nimport { extractText, removeTrackingPixels, FakeDOM } from '@src/lib/html';\nimport { getDefaultWaiting } from '@src/lib/models/draft';\nimport { getQueryVariable } from '@src/lib/query';\nimport { truncate } from '@src/lib/attachment';\nimport { DraftSendMeta, DraftSendOptimisticMeta } from '@src/ducks/drafts';\n\nexport enum DraftSpecialError {\n  ScheduledCancel = 'Scheduled draft canceled due to new reply.',\n  VersionMismatch = 'draft version mismatch',\n}\n\n// patchedDraft is used when Draft is in sending/scheduled state\nexport const patchedDraft = (draft: Draft, cache: Draft): Draft => {\n  const endAttachments = cache.attachments.reduce(\n    (all, next) => {\n      if (next.optimistic && findIndex(all, { id: next.id }) === -1) {\n        return all.concat(next);\n      }\n\n      return all;\n    },\n    draft.attachments,\n  );\n\n  // NOTE(SHIN): Override body and subject since local updates\n  return {\n    ...draft,\n    body: cache.body,\n    subject: cache.subject,\n    status: cache.status,\n    cancelByTtl: cache.cancelByTtl,\n    cancelBy: cache.cancelBy,\n    attachments: endAttachments,\n  };\n};\n\n// generateOptimisticSendMeta creates a send meta with all properties set, and the corresponding\n// attachments to remove before sending\nexport const generateOptimisticSendMeta = (\n  meta: DraftSendMeta,\n  attachments: Attachment[],\n): DraftSendOptimisticMeta => {\n\n  const attachmentsAppliedDraft = attachments.reduce(\n    (d, a) => applyAttachmentToDraft(d, a),\n    meta.draft,\n  );\n\n  const sanitizedDraft = sanitizeDraft(attachmentsAppliedDraft);\n\n  // Handle setting all optimistic properties\n  // AttachmentsMetas -> Optimistic Attachments\n  // CancelBy -> 30 seconds into future\n  // CancelByTTL -> 30 seconds\n  // Scheduled properties\n  const cancelBy = now().add(30000, 'seconds');\n  const stagedDraft: Draft = {\n    ...sanitizedDraft,\n    status: !!meta.scheduled ? DraftStatus.Scheduled : DraftStatus.Staged,\n    scheduled: meta.scheduled ? meta.scheduled : null,\n    cancelBy: cancelBy.toDate(),\n    cancelByTtl: 30000,\n    attachments: sanitizedDraft.attachments.concat(attachments),\n  };\n\n  const deleted = attachmentsToDelete(stagedDraft);\n  const deletedIds = deleted.map(d => d.attachment);\n\n  // New Send Meta from optimistic draft\n  const sendMeta: DraftSendMeta = {\n    ...meta,\n    draft: {\n      ...stagedDraft,\n      attachments: stagedDraft.attachments\n        .filter(a => deletedIds.indexOf(a.id) === -1),\n    },\n    toggleArchive: meta.toggleArchive,\n    delay: meta.delay,\n  };\n  return {\n    meta: sendMeta,\n    deletedAttachments: deleted,\n  };\n};\n\n// Helper function to determine if draft is in sending state\nexport const isDraftSending = (draft: Draft): boolean => {\n  return [DraftStatus.Staged, DraftStatus.Sending].indexOf(draft.status) >= 0;\n};\n\n// Helper function for Staged/Sending/Failed drafts\nexport const isDraftOutbox = (draft: Draft): boolean => {\n  return [DraftStatus.Staged, DraftStatus.Failed].indexOf(draft.status) >= 0;\n};\n\nexport const failedDraft = (commit: Commit, draft: Draft, error: Error|undefined): Draft => {\n  // Create failed draft\n  return {\n    ...draft,\n    error: error && error.message || 'Failed to send draft',\n    status: DraftStatus.Failed,\n    attachments: draft.attachments.filter(a => !a.optimistic),\n  };\n};\n\nexport function defaultDraft(draft: Draft): Draft {\n  const newDraft = {\n    created: new Date('1970-01-01T00:00:00.000Z'),\n    updated: new Date('1970-01-01T00:00:00.000Z'),\n    subject: '',\n    body: '',\n    split: false,\n    track: false,\n    trackLinks: false,\n    to: [],\n    cc: [],\n    bcc: [],\n    attachments: [],\n    version: 0,\n    ...draft,\n  };\n\n  if (!(newDraft.created instanceof Date)) {\n    newDraft.created = new Date(newDraft.created);\n  }\n\n  if (!(newDraft.updated instanceof Date)) {\n    newDraft.updated = new Date(newDraft.updated);\n  }\n\n  if (newDraft.scheduled && !(newDraft.scheduled instanceof Date)) {\n    newDraft.scheduled = new Date(newDraft.scheduled);\n  }\n\n  if (newDraft.cancelBy && !(newDraft.cancelBy instanceof Date)) {\n    newDraft.cancelBy = new Date(newDraft.cancelBy);\n  }\n\n  // Apply cancelByTtl if provided\n  if (newDraft.cancelByTtl !== undefined) {\n    newDraft.cancelBy = moment().add(newDraft.cancelByTtl, 'ms').toDate();\n    // NOTE: Draft spec says not to save this into cache\n    newDraft.cancelByTtl = undefined;\n  }\n\n  if (newDraft.waiting && newDraft.waiting.when && !(newDraft.waiting.when instanceof Date)) {\n    newDraft.waiting.when = new Date(newDraft.waiting.when);\n  }\n\n  return newDraft;\n}\n\nexport const enum Configuration {\n  New = 'new',\n  Reply = 'reply',\n  ReplyAll = 'replyAll',\n  MoveBcc = 'moveBcc',\n  Forward = 'forward',\n  Comment = 'comment',\n  MailTo = 'mailTo',\n}\n\n// Parses mailto body by breaking newlines into string\nexport const parseMailToBody = (body: string): string => {\n  const container = FakeDOM().createElement('div');\n  const newLineSeparatedBodyComponents = body.split(/\\r?\\n/);\n  Array.from(newLineSeparatedBodyComponents).forEach((value, i) => {\n    const node = FakeDOM().createTextNode(value);\n    container.appendChild(node);\n    if (i !== newLineSeparatedBodyComponents.length - 1) {\n      container.appendChild(FakeDOM().createElement('br'));\n    }\n  });\n\n  return container.innerHTML;\n};\n\nexport const createMailToDraft = (\n  account: Account, preferences: Preferences, features: Features, params: string,\n): Draft => {\n  const index = params.indexOf('?');\n  // return new draft if no params\n  if (index === -1) {\n    return createNewDraft(account, preferences, features, [params].filter(c => !!c));\n  }\n\n  const search = params.slice(index);\n  const id = mongoId();\n  const createDate = constantDate && constantDate || new Date();\n  const bodyVariable = getQueryVariable('body', search);\n  const body = createMainDraftBody(\n    id,\n    preferences,\n    account,\n    features,\n    bodyVariable && parseMailToBody(bodyVariable) || undefined,\n  );\n  const subject = getQueryVariable('subject', search) || '';\n  const cc = (getQueryVariable('cc', search) || '').split(',').filter(c => !!c);\n  const bcc = (getQueryVariable('bcc', search) || '').split(',').filter(c => !!c);\n  const to = (params.slice(0, index) || '').split(',').filter(c => !!c)\n    .map(c => decodeURIComponent(c));\n\n  return {\n    id,\n    created: createDate,\n    updated: createDate,\n    status: DraftStatus.Draft,\n    account: account.id,\n    subject,\n    attachments: [],\n    body,\n    to,\n    cc,\n    bcc: account.autoBcc ? bcc.concat([account.autoBcc]) : bcc,\n    split: false,\n    track: !preferences.disableTrackByDefault,\n    trackLinks: preferences.linkTracking,\n    waiting: preferences.followUp ? getDefaultWaiting(preferences.followUp) : undefined,\n    version: 0,\n    cancelOnReply: false,\n  };\n};\n\n// Constructor for new draft (either new or mailto)\nexport const createNewDraft = (\n  account: Account, preferences: Preferences, features: Features, forceRecipients?: string[],\n): Draft => {\n\n  // Close body and set signature\n  const id = mongoId();\n  const body = createMainDraftBody(id, preferences, account, features);\n  const createDate = constantDate && constantDate || new Date();\n\n  return {\n    id,\n    created: createDate,\n    updated: createDate,\n    status: DraftStatus.Draft,\n    account: account.id,\n    subject: '',\n    attachments: [],\n    body,\n    to: forceRecipients && forceRecipients || [],\n    cc: [],\n    bcc: account.autoBcc && [account.autoBcc] || [],\n    split: false,\n    track: !preferences.disableTrackByDefault,\n    trackLinks: preferences.linkTracking,\n    waiting: preferences.followUp ? getDefaultWaiting(preferences.followUp) : undefined,\n    version: 0,\n    cancelOnReply: false,\n  };\n};\n\n// TODO (Cindy): Clean this up\nlet constantDate: Date | undefined;\nexport const enableConstantDate = (date: Date) => {\n  constantDate = date;\n};\n\nexport const updateDraft = (draft: Draft) => {\n  return {\n    ...draft,\n    waiting: draft.waiting && draft.waiting.whenRelative ?\n        getDefaultWaiting(draft.waiting.whenRelative) :\n        draft.waiting,\n  };\n};\n\nexport const generateSentFromPolymailHtmlDiv = (): HTMLDivElement => {\n  const sentFromPolymailDiv = FakeDOM().createElement('div');\n\n  // tslint:disable-next-line:max-line-length\n  const anchorValue = `<a href=\"https://polymail.io/?utm_source=polymail&amp;utm_medium=referral&amp;utm_campaign=signature\" target=\"_blank\">Polymail</a>`;\n  sentFromPolymailDiv.className = 'pm-sfp';\n  sentFromPolymailDiv.innerHTML = 'Sent from&nbsp;' + anchorValue;\n  sentFromPolymailDiv.style.fontSize = `10px`;\n  sentFromPolymailDiv.style.color = '#7e8f9f';\n  sentFromPolymailDiv.style.lineHeight = '1.8';\n  return sentFromPolymailDiv;\n};\n\n//\nexport const createMainDraftBody = (\n  draftId: string, preferences: Preferences,\n  account: Account, features: Features, forceBody?: string,\n): string => {\n  const bodyContainer = FakeDOM().createElement('div');\n  // Apply default preferences\n  if (preferences.composeFontFamily !== '\\\\') {\n    bodyContainer.style.fontFamily = preferences.composeFontFamily;\n  }\n  if (preferences.composeFontSize && preferences.composeFontSize !== 0) {\n    bodyContainer.style.fontSize = `${preferences.composeFontSize}px`;\n  }\n\n  if (forceBody) {\n    const innerBody = FakeDOM().createElement('div');\n    innerBody.innerHTML = forceBody;\n    bodyContainer.innerHTML = innerBody.outerHTML;\n  }\n\n  bodyContainer.appendChild(FakeDOM().createElement('br'));\n  bodyContainer.appendChild(FakeDOM().createElement('br'));\n\n  // Close body and set signature\n  const signature = accountSignature({ account, draftId, preventEdits: true });\n  let body = bodyContainer.outerHTML + signature;\n\n  // Add Sent from Polymail\n  if (!features.disableSentFromPolymail || preferences.sentFromPolymail === true) {\n\n    // Conditional showing of sent with polymail\n    const fakeNode = FakeDOM().createElement('div');\n    fakeNode.innerHTML = signature;\n    const signatureContent = fakeNode.textContent;\n    if (!signatureContent || !signatureContent.toLowerCase().includes('polymail')) {\n\n      // Append sent from Polymail\n      body = body + generateSentFromPolymailHtmlDiv().outerHTML;\n    }\n  }\n\n  return body;\n};\n\nexport const createDraft = (\n  thread: Thread,\n  configuration: Configuration,\n  messageBody: MessageBody,\n  preferences: Preferences,\n  accounts: Account[],\n  features: Features,\n  forceRecipients?: string[],\n): Draft => {\n  const messageIndex = findIndex(thread.messages, { id: messageBody.id });\n  const message = thread.messages[messageIndex];\n  const id = mongoId();\n  const createDate = constantDate && constantDate || new Date();\n\n  // Configures body\n  const prependRePrefix = !message.subject.trim().toLowerCase().startsWith('re:');\n  let body: string = '';\n  let subject: string = '';\n\n  // Set signature\n  let account = accounts.filter(each => each.id === thread.account)[0] || accounts[0];\n  const alias = checkForAlias(accounts, message);\n  if (alias) {\n    account = alias;\n  }\n  if (account) {\n    body = createMainDraftBody(id, preferences, account, features);\n  }\n\n  // Set body\n  switch (configuration) {\n    case Configuration.New:\n      body += '';\n      subject = '';\n      break;\n    case Configuration.MoveBcc:\n      const givenName = parseAddress(message.from).givenName;\n      body = `<div class=\"pm-bcc-thx\">Thanks ${givenName} (BCC)<br/><br /></div>`;\n      body += formatReply({\n        message,\n        body: messageBody.body,\n        history: messageBody.history,\n        draft: id,\n      });\n      subject = `${prependRePrefix ? 'Re: ' : ''}${message.subject}`;\n      break;\n    case Configuration.Reply:\n      body += formatReply({\n        message,\n        body: messageBody.body,\n        history: messageBody.history,\n        draft: id,\n      });\n      subject = `${prependRePrefix ? 'Re: ' : ''}${message.subject}`;\n      break;\n    case Configuration.ReplyAll:\n      body += formatReply({\n        message,\n        body: messageBody.body,\n        history: messageBody.history,\n        draft: id,\n      });\n      subject = `${prependRePrefix ? 'Re: ' : ''}${message.subject}`;\n      break;\n    case Configuration.Forward:\n      body += formatForward({\n        message,\n        body: messageBody.body,\n        history: messageBody.history,\n        draft: id,\n      });\n      subject = `Fwd: ${message.subject}`;\n      break;\n    default:\n      body += '';\n      subject = message.subject;\n      break;\n  }\n\n  // Blacklisted recipients\n  const aliases = accounts.filter(each => each.account === account.id);\n  const blacklist = aliases.concat(account);\n\n  // Recipients for draft\n  const recipients = configureRecipients(configuration, message, blacklist, forceRecipients);\n\n  const draft: Draft = {\n    id,\n    created: createDate,\n    updated: createDate,\n    status: DraftStatus.Draft,\n    account: account.id,\n    subject,\n    attachments: [],\n    thread: configuration !== Configuration.Forward ? thread.apiId : undefined,\n    threadV2: configuration !== Configuration.Forward ? thread.id : undefined,\n    message: configuration !== Configuration.Forward ? message.id : undefined,\n    body,\n    ...recipients,\n    split: false,\n    track: !preferences.disableTrackByDefault,\n    trackLinks: preferences.linkTracking,\n    bcc: !!account.autoBcc && [account.autoBcc].concat(recipients.bcc) || recipients.bcc,\n    waiting: preferences.followUp ? getDefaultWaiting(preferences.followUp) : undefined,\n    version: 0,\n    cancelOnReply: preferences.cancelOnReply,\n  };\n\n  const replyConfigurations = [\n    Configuration.Reply,\n    Configuration.ReplyAll,\n    Configuration.MoveBcc,\n  ];\n  if (replyConfigurations.indexOf(configuration) > -1) {\n    draft.smtp = message.rfcId;\n  }\n  return draft;\n};\n\ninterface DraftReplyHistoryMeta {\n  draft: string;\n  message: Message;\n  body: string;\n  history?: string;\n}\n\nexport const formatReply = (meta: DraftReplyHistoryMeta): string => {\n  let quote = '<div class=\"gmail_extra\"><br><div class=\"gmail_quote\">';\n  const messageDate = moment(meta.message.internal);\n  const sentDate = messageDate.format('ddd, MMM Do, YYYY');\n  const sentTime = messageDate.format('h:mm A');\n\n  quote += `<div dir=\"ltr\">On ${sentDate} at ${sentTime}, `\n    + `${escape(meta.message.from)} wrote:<br></div>`\n    + '<blockquote class=\"gmail_quote\"'\n    + ' style=\"margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex\">'\n    + meta.body\n    + (meta.history || '');\n\n  const html = quote + '</blockquote></div><br></div>';\n  const strippedHtml = removeTrackingPixels(html);\n  const container = FakeDOM().createElement('div');\n  const historyMarker = meta.draft + '-history-marker';\n  container.innerHTML = strippedHtml;\n  if (container.firstElementChild) {\n    container.firstElementChild.setAttribute('data-pm-history', historyMarker);\n  }\n\n  return container.innerHTML;\n};\n\n// TODO(SHIN): Handle forward case to show all to recipients\nexport const formatForward = (meta: DraftReplyHistoryMeta) => {\n  let quote = '<br><div class=\"gmail_quote\">';\n  const messageDate = moment(meta.message.internal);\n  const sentDate = messageDate.format('ddd, MMM Do, YYYY');\n  const sentTime = messageDate.format('h:mm A');\n\n  // Identify first recipient for forward\n  const firstTo = meta.message.to[0] || meta.message.cc[0] || meta.message.bcc[0] || '';\n\n  quote += '<div dir=\"ltr\">---------- Forwarded message ---------<br>' +\n    `From: ${escape(meta.message.from)}<br>` +\n    `Date: ${sentDate} at ${sentTime}<br>` +\n    `Subject: ${meta.message.subject}<br>` +\n    `To: ${escape(firstTo)}<br>` +\n    '</div><br><br><u></u>';\n\n  quote += '<blockquote class=\"gmail_quote\"'\n    + ' style=\"margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex\">'\n    + meta.body\n    + (meta.history || '');\n\n  const html = quote + '</blockquote></div>';\n  const strippedHtml = removeTrackingPixels(html);\n  const container = FakeDOM().createElement('div');\n  const historyMarker = meta.draft + '-history-marker';\n  container.innerHTML = strippedHtml;\n  if (container.firstElementChild) {\n    container.firstElementChild.setAttribute('data-pm-history', historyMarker);\n  }\n\n  return container.innerHTML;\n};\n\nexport const configureRecipients\n= (\n  configuration: Configuration,\n  message: Message,\n  accounts: Account[],\n  forceRecipients?: string[],\n) => {\n  // Lowercase map of accounts to ignore\n  const emails = accounts.map(account => addressToEmail(account.email).toLowerCase());\n  const replyTo = message.replyTo.length ? message.replyTo : [message.from];\n  switch (configuration) {\n    case Configuration.Reply: {\n      let to = replyTo;\n      to = filter(to, (address) => {\n        return indexOf(emails, addressToEmail(address).toLowerCase()) === -1;\n      });\n\n      // If no results from computed TO, then use previous message.to\n      return {\n        to: !!to.length ? to : message.to,\n        cc: [],\n        bcc: [],\n      };\n    }\n    case Configuration.ReplyAll: {\n      let to = uniqBy(replyTo.concat(message.to), addressToEmail);\n      to = filter(to, (address) => {\n        return indexOf(emails, addressToEmail(address).toLowerCase()) === -1;\n      });\n\n      const cc = filter(message.cc, (address) => {\n        return indexOf(emails, addressToEmail(address).toLowerCase()) === -1;\n      });\n\n      return {\n        to,\n        cc,\n        bcc: [],\n      };\n    }\n    case Configuration.MoveBcc: {\n      const fromSender = addressToEmail(message.from.toLowerCase());\n      let to = filter(message.to, (address) => {\n        const lowercaseAddress = addressToEmail(address.toLowerCase());\n        if (fromSender === lowercaseAddress) {\n          return false;\n        }\n        return indexOf(emails, lowercaseAddress) === -1;\n      });\n\n      let cc = filter(message.cc, (address) => {\n        const lowercaseAddress = addressToEmail(address.toLowerCase());\n        if (fromSender === lowercaseAddress) {\n          return false;\n        }\n        return indexOf(emails, addressToEmail(address)) === -1;\n      });\n\n      if (!message.sent) {\n        to = replyTo.concat(to).filter((address) => {\n          const lowercaseAddress = addressToEmail(address.toLowerCase());\n          if (fromSender === lowercaseAddress) {\n            return false;\n          }\n          return true;\n        });\n      }\n\n      // If no recipients in TO field, replace with CC\n      if (!to.length) {\n        to = cc;\n        cc = [];\n      }\n\n      return {\n        to,\n        cc,\n        bcc: [message.from],\n      };\n    }\n    case Configuration.Forward:\n      return {\n        subject: `Fwd: ${message.subject}`,\n        to: [],\n        cc: [],\n        bcc: [],\n      };\n    case Configuration.MailTo:\n      return {\n        to: forceRecipients ? forceRecipients : [],\n        cc: [],\n        bcc: [],\n      };\n    default:\n      return {\n        to: [],\n        cc: [],\n        bcc: [],\n      };\n  }\n};\n\nexport const attachmentsToDelete = (draft: Draft): AttachmentMeta[] => {\n  const deletions: AttachmentMeta[] = [];\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(draft.body, 'text/html');\n\n  if (draft.attachments) {\n    draft.attachments\n      .filter(attachment => attachment.cloud)\n      .forEach((attachment) => {\n        const found = doc.querySelectorAll(`#data-pm-attachment-id-${attachment.id}`);\n        if (found.length === 0) {\n          // Add request to remove attachment from draft\n          const meta = {\n            resourceId: draft.id,\n            attachment: attachment.id,\n            file: undefined,\n          };\n          deletions.push(meta);\n        }\n      });\n\n    draft.attachments\n      .filter(attachment => attachment.inline)\n      .forEach((attachment) => {\n        const found = doc.querySelectorAll(`#pm-inline-id-${attachment.id}`);\n        if (found.length === 0) {\n          // Add request to remove attachment from draft\n          const meta = {\n            resourceId: draft.id,\n            attachment: attachment.id,\n            file: undefined,\n          };\n          deletions.push(meta);\n        }\n      });\n  }\n  return deletions;\n};\n\n// Convert a draft to a new sent thread\nexport const toThread = (draft: Draft, accounts: Account[]): Thread => {\n  const message = toMessage(draft, accounts);\n  return computeThread({\n    id: `<${draft.id}@polymail.io>`,\n    messages: [message],\n    internal: draft.updated,\n    sort: draft.updated,\n    box: ThreadBox.Archive,\n    account: draft.account,\n    waiting: draft.waiting ? draft.waiting : undefined,\n  } as any);\n};\n\n// Append a draft as a sent message to a thread\nexport const appendThread = (thread: Thread, draft: Draft, accounts: Account[]): Thread =>\n  computeThread({\n    ...thread,\n    lastSent: draft.updated,\n    internal: draft.updated,\n    waiting: draft.waiting ? draft.waiting : undefined,\n    messages: [...thread.messages, toMessage(draft, accounts)],\n  });\n\n// Converts draft to message\nexport const toMessage = (draft: Draft, accounts: Account[]): Message => {\n  const { to = [], cc = [], bcc = [], subject = '', track = false } = draft;\n\n  // Calculate from address\n  const fromAccount = accounts.filter(account => account.id === draft.account)[0];\n  let fromAddress = 'Me';\n  if (fromAccount) {\n    fromAddress = fromAccount.name !== ''\n      ? `${fromAccount.name} <${fromAccount.email}>`\n      : fromAccount.email;\n  }\n\n  const snippet = extractText(draft.body, 100);\n  const id = `<${draft.id}@polymail.io>`;\n\n  const attachments: MessageAttachment[] = draft.attachments\n    .filter(a => !a.cloud)\n    .map(a => ({\n      id: a.id,\n      filename: a.filename,\n      type: a.type,\n      length: a.length,\n      url: a.cloudUrl,\n      inline: a.inline,\n      cid: a.inline ? a.id : undefined,\n      message: draft.id,\n      thread: draft.threadV2 || draft.thread,\n    }));\n\n  return {\n    id,\n    rfcId: `<${draft.id}@polymail.io>`,\n    to,\n    cc,\n    bcc,\n    subject,\n    snippet,\n    sent: true,\n    read: true,\n    internal: draft.updated,\n    starred: false,\n    tracks: 0,\n    tracked: track,\n    hasAttachments: attachments.filter(a => !a.inline).length > 0,\n    attachments,\n    from: fromAddress,\n    replyTo: [],\n    optimistic: draft.status,\n  };\n};\n\nexport const formatAttributeSelector = (attribute: string, value: string): string => {\n  return `[${attribute}=\"${value}\"]`;\n};\n\nexport const toMessageBody = (draft: Draft, threadId: string): MessageBody => {\n  const { body } = draft;\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(body, 'text/html');\n  const extra = doc.querySelector('.gmail_extra');\n  const historyMarker = draft.id + '-history-marker';\n  const history = extra ? extra.innerHTML : '';\n\n  if (extra) {\n    extra.innerHTML = '';\n    extra.setAttribute('data-pm-history', historyMarker);\n    extra.className = '';\n  }\n\n  return {\n    id: `<${draft.id}@polymail.io>`,\n    thread: threadId,\n    body: doc.body.innerHTML,\n    history,\n    historyMarker,\n    unsubscribeLink: '',\n    updated: now().toDate(),\n  };\n};\n\nexport const removeTemplateRecipientsFromDraft =\n  (draft: Draft, template: Template): Draft => {\n    const updated = { ...draft, template: undefined };\n\n    if (template.to) {\n      const toEmails = template.to.map(r => addressToEmail(r).toLowerCase());\n      updated.to = draft.to\n        .filter(r => toEmails.indexOf(addressToEmail(r).toLowerCase()) === -1);\n    }\n\n    if (template.cc) {\n      const ccEmails = template.cc.map(r => addressToEmail(r).toLowerCase());\n      updated.cc = draft.cc\n        .filter(r => ccEmails.indexOf(addressToEmail(r).toLowerCase()) === -1);\n    }\n\n    if (template.bcc) {\n      const bccEmails = template.bcc.map(r => addressToEmail(r).toLowerCase());\n      updated.bcc = draft.bcc\n        .filter(r => bccEmails.indexOf(addressToEmail(r).toLowerCase()) === -1);\n    }\n\n    return updated;\n  };\n\nexport const applyTemplateToDraft =\n  (draft: Draft, template: Template): Draft => {\n    const updated = { ...draft, template: template.id };\n\n    // preserve signature\n    const container = document.createElement('div');\n    container.innerHTML = draft.body;\n    const signature = container.querySelector('#psignature');\n    const history = container.querySelector(formatAttributeSelector(\n      'data-pm-history',\n      `${draft.id}-history-marker`,\n    ));\n\n    const wrapper = document.createElement('div');\n    wrapper.innerHTML = template.body;\n    if (signature) {\n      wrapper.appendChild(document.createElement('br'));\n      wrapper.appendChild(document.createElement('br'));\n      wrapper.appendChild(signature);\n    }\n\n    // Add history if found\n    if (history) {\n      wrapper.appendChild(history);\n    }\n\n    // Handle adding to field\n    if (template.to) {\n      updated.to = draft.to.concat(template.to);\n      updated.to = uniqBy(updated.to, addressToEmail);\n    }\n\n    if (template.cc) {\n      updated.cc = draft.cc.concat(template.cc);\n      updated.cc = uniqBy(updated.cc, addressToEmail);\n    }\n\n    if (template.bcc) {\n      updated.bcc = draft.bcc.concat(template.bcc);\n      updated.bcc = uniqBy(updated.bcc, addressToEmail);\n    }\n\n    updated.body = wrapper.innerHTML;\n\n    if (template.subject && !draft.threadV2) {\n      updated.subject = template.subject;\n    }\n\n    return updated;\n  };\n\nconst checkForAlias = (accounts: Account[], message: Message): Account|undefined => {\n  const match = accounts\n    .filter((account) => {\n      const isAlias = account.type === AccountType.Alias;\n      return isAlias && [message.from]\n        .concat(message.to)\n        .map(email => addressToEmail(email))\n        .join(',')\n        .toLowerCase()\n        .includes(account.email.toLowerCase());\n    })[0];\n  return match;\n};\n\n// Replaces recipient information (sender/account/bcc recipients)\nexport const replaceDraftSender = (draft: Draft, accounts: Account[], email: string): Draft => {\n  const strippedEmail = addressToEmail(email);\n  const oldAccount = accounts\n    .filter(account => draft && account.id === draft.account)[0];\n  const newAccount = accounts\n    .filter(account => addressToEmail(account.email) === strippedEmail)[0];\n\n  // Create base draft with updated account.\n  const updated: Draft = {\n    ...draft,\n    account: newAccount.id,\n  };\n\n  // Strip out old bcc from email if previously existed\n  if (oldAccount && oldAccount.autoBcc) {\n    const oldBccAddress = addressToEmail(oldAccount.autoBcc);\n    updated.bcc = updated.bcc.filter(bcc => addressToEmail(bcc) !== oldBccAddress);\n  }\n\n  // Add bcc for new email account if is not already inserted\n  if (newAccount && newAccount.autoBcc) {\n    const newBccAddressString = addressToEmail(newAccount.autoBcc);\n    if (updated.bcc.findIndex(bcc => addressToEmail(bcc) === newBccAddressString) === -1) {\n      updated.bcc = updated.bcc.concat(newAccount.autoBcc);\n    }\n  }\n\n  return updated;\n};\n\nexport const sanitizeDraft = (draft: Draft): Draft => {\n  // Removes any attachment remove buttons\n  let replace = false;\n  const updated = cloneDeep(draft);\n  const container = FakeDOM().createElement('div');\n  container.innerHTML = draft.body;\n  const removeElements = container.querySelectorAll('.attachment-remove-button');\n  Array.from(removeElements).forEach((element) => {\n    if (element && element.parentElement) {\n      element.parentElement.removeChild(element);\n      replace = true;\n    }\n  });\n\n  // If anything was removed then set to modified html body\n  // Remove all link preview elements\n  const linkPreviewRemoveElements = container.querySelectorAll('.pm-lp-close-buttons');\n  Array.from(linkPreviewRemoveElements).forEach((element) => {\n    if (element && element.parentElement) {\n      element.parentElement.removeChild(element);\n      replace = true;\n    }\n  });\n\n  // Removes calendar invite remove buttons\n  const calendarCloseElements = container.querySelectorAll('.pm-cal-invite-close-container');\n  Array.from(calendarCloseElements).forEach((element) => {\n    if (element && element.parentElement) {\n      element.parentElement.removeChild(element);\n      replace = true;\n    }\n  });\n\n  if (!replace) {\n    return draft;\n  }\n\n  // Updates body and returns sanitized draft\n  updated.body = container.innerHTML;\n  return updated;\n};\n\n// Extracts body from draft and removes history/signature\nexport const bodyWithoutSignatureAndHistory = (body: string, draftId: string): string => {\n  const fakeBody = FakeDOM().createElement('div');\n  fakeBody.innerHTML = body;\n\n  // Remove History\n  const history = fakeBody.querySelector(`[data-pm-history=\"${draftId}-history-marker\"]`);\n  if (history && history.parentElement) {\n    history.parentElement.removeChild(history);\n  }\n\n  // Remove Signature\n  const signatureElement = fakeBody.querySelector('#psignature');\n  if (signatureElement && signatureElement.parentElement) {\n    signatureElement.parentElement.removeChild(signatureElement);\n  }\n\n  return fakeBody.innerHTML;\n};\n\n// Extracts plain text from draft and removes history/signature\nexport const plainTextDraftBodyContents = (body: string, draftId: string): string|null => {\n  const fakeBody = FakeDOM().createElement('div');\n  fakeBody.innerHTML = body;\n\n  // Remove History\n  const history = fakeBody.querySelector(`[data-pm-history=\"${draftId}-history-marker\"]`);\n  if (history && history.parentElement) {\n    history.parentElement.removeChild(history);\n  }\n\n  // Remove Signature\n  const signatureElement = fakeBody.querySelector('#psignature');\n  if (signatureElement && signatureElement.parentElement) {\n    signatureElement.parentElement.removeChild(signatureElement);\n  }\n\n  return fakeBody.textContent;\n};\n\n// Handles replacing attachment stuff\nexport const applyAttachmentToDraft = (draft: Draft, attachment: Attachment): Draft => {\n  if (!attachment.cloud && !attachment.inline) {\n    return draft;\n  }\n\n  // Create draft to update and Document container for the body\n  const updatedDraft = cloneDeep(draft);\n  const container = FakeDOM().createElement('div');\n  container.innerHTML = draft.body;\n\n  // Makes necessary replacements for cloud attachments\n  if (attachment.cloud) {\n    const id = `data-pm-attachment-id-${attachment.id}`;\n    const foundCloud = container.querySelector(`#${id}`);\n    if (foundCloud) {\n\n      // Remove attachment progress element\n      const progressElement = foundCloud.querySelector('.attachment-progress');\n      if (progressElement && progressElement.parentElement) {\n        progressElement.parentElement.removeChild(progressElement);\n      }\n\n      // Set new filesize\n      const filesizeElement = foundCloud.querySelector('.attachment-filesize');\n      if (filesizeElement) {\n        filesizeElement.setAttribute('data-pm-complete', '1');\n        filesizeElement.innerHTML = truncate(attachment.length);\n      }\n\n      // Set new href tags\n      const hrefTags = foundCloud.querySelectorAll('[href]');\n      if (hrefTags.length) {\n        Array.from(hrefTags).forEach((hrefTag) => {\n          hrefTag.setAttribute('href', attachment.cloudUrl);\n        });\n      }\n    }\n    updatedDraft.body = container.innerHTML || draft.body;\n  }\n\n  // Makes necessary replacements for inline images\n  if (attachment.inline) {\n    const id = `pm-inline-id-${attachment.id}`;\n    const foundInline = container.querySelector(`#${id}`);\n    if (foundInline) {\n      foundInline.removeAttribute('class');\n      foundInline.setAttribute('src', attachment.cloudUrl);\n    }\n    updatedDraft.body = container.innerHTML || draft.body;\n  }\n\n  return updatedDraft;\n};\n"]}]}