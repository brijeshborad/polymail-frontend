{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/api/account.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/api/account.ts","mtime":1675280253978},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkgewogICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHsKICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHsKICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTsKICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKQogICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07CiAgICAgICAgfQogICAgICAgIHJldHVybiB0OwogICAgfTsKICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9OwppbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7CmltcG9ydCB7IGFwcGx5RGVmYXVsdEFjY291bnQgfSBmcm9tICdAc3JjL2xpYi9hY2NvdW50JzsKaW1wb3J0IHsganNvblJlcXVlc3QsIGJsYW5rUmVxdWVzdCB9IGZyb20gJy4vYmFzZSc7CmltcG9ydCB7IGNyZWF0ZUF0dGFjaG1lbnQgfSBmcm9tICdAc3JjL21vY2tzL2F0dGFjaG1lbnRzJzsKaW1wb3J0IHsgY3JlYXRlQWNjb3VudCB9IGZyb20gJ0BzcmMvbW9ja3MvYWNjb3VudHMnOwppbXBvcnQgeyBDbG91ZEZpbGVDbGllbnQgfSBmcm9tICdAc3JjL2FwaS9jbG91ZEZpbGUnOwp2YXIgQWNjb3VudENsaWVudCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHsKICAgIGZ1bmN0aW9uIEFjY291bnRDbGllbnQoKSB7CiAgICB9CiAgICBBY2NvdW50Q2xpZW50LnByb3RvdHlwZS5jcmVhdGUgPSBmdW5jdGlvbiAoYWNjb3VudCkgewogICAgICAgIHJldHVybiBqc29uUmVxdWVzdCh7CiAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLAogICAgICAgICAgICByb3V0ZTogJy92MS9tZS9hY2NvdW50cycsCiAgICAgICAgICAgIGJvZHk6IGFjY291bnQsCiAgICAgICAgfSkubWFwKGZ1bmN0aW9uIChqc29uKSB7IHJldHVybiBhcHBseURlZmF1bHRBY2NvdW50KGpzb24pOyB9KTsKICAgIH07CiAgICBBY2NvdW50Q2xpZW50LnByb3RvdHlwZS5vYXV0aFVybCA9IGZ1bmN0aW9uIChwcm92aWRlciwgcmVkaXJlY3RVcmwsIHNob3dQYWdlKSB7CiAgICAgICAgcmV0dXJuIGpzb25SZXF1ZXN0KHsKICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsCiAgICAgICAgICAgIHJvdXRlOiAiL3YzL21lL2FjY291bnRzL2xvZ2luIiwKICAgICAgICAgICAgYm9keTogKHsKICAgICAgICAgICAgICAgIHR5cGU6IHByb3ZpZGVyLAogICAgICAgICAgICAgICAgcmVkaXJlY3RVcmw6IHJlZGlyZWN0VXJsLAogICAgICAgICAgICAgICAgc2hvd1BhZ2U6IHNob3dQYWdlLAogICAgICAgICAgICB9KSwKICAgICAgICB9KS5tYXAoZnVuY3Rpb24gKGpzb24pIHsgcmV0dXJuIGpzb24udXJsOyB9KTsKICAgIH07CiAgICBBY2NvdW50Q2xpZW50LnByb3RvdHlwZS5yZWF1dGhvcml6ZU9hdXRoVXJsID0gZnVuY3Rpb24gKGFjY291bnQsIHJlZGlyZWN0VXJsLCBzaG93UGFnZSkgewogICAgICAgIHJldHVybiBqc29uUmVxdWVzdCh7CiAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLAogICAgICAgICAgICByb3V0ZTogIi92MS9tZS9hY2NvdW50cy8iICsgYWNjb3VudCArICIvcmVhdXRob3JpemUiLAogICAgICAgICAgICBib2R5OiB7IHJlZGlyZWN0VXJsOiByZWRpcmVjdFVybCwgc2hvd1BhZ2U6IHNob3dQYWdlIH0sCiAgICAgICAgfSkubWFwKGZ1bmN0aW9uIChqc29uKSB7IHJldHVybiBqc29uLnVybDsgfSk7CiAgICB9OwogICAgQWNjb3VudENsaWVudC5wcm90b3R5cGUudXBkYXRlID0gZnVuY3Rpb24gKGFjY291bnQpIHsKICAgICAgICByZXR1cm4ganNvblJlcXVlc3QoewogICAgICAgICAgICBtZXRob2Q6ICdQQVRDSCcsCiAgICAgICAgICAgIHJvdXRlOiAiL3YxL21lL2FjY291bnRzLyIgKyBhY2NvdW50LmlkLAogICAgICAgICAgICBib2R5OiBhY2NvdW50LAogICAgICAgIH0pLm1hcChmdW5jdGlvbiAoanNvbikgeyByZXR1cm4gYXBwbHlEZWZhdWx0QWNjb3VudChqc29uKTsgfSk7CiAgICB9OwogICAgQWNjb3VudENsaWVudC5wcm90b3R5cGUuY3JlYXRlU2lnbmF0dXJlSW1hZ2UgPSBmdW5jdGlvbiAobWV0YSkgewogICAgICAgIHJldHVybiBuZXcgQ2xvdWRGaWxlQ2xpZW50KCkudXBsb2FkKG1ldGEuZmlsZSkKICAgICAgICAgICAgLmZsYXRNYXAoZnVuY3Rpb24gKGZpbGUpIHsgcmV0dXJuIGpzb25SZXF1ZXN0KHsKICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsCiAgICAgICAgICAgIHJvdXRlOiAiL3YyL21lL2FjY291bnRzLyIgKyBtZXRhLnJlc291cmNlSWQgKyAiL3NpZ25hdHVyZUltYWdlcyIsCiAgICAgICAgICAgIGJvZHk6IF9fYXNzaWduKF9fYXNzaWduKHsgZmlsZW5hbWU6IGZpbGUuZmlsZU5hbWUsIGlkOiBtZXRhLmF0dGFjaG1lbnQgfSwgZmlsZSksIHsgaW5saW5lOiB0cnVlIH0pLAogICAgICAgIH0pOyB9KTsKICAgIH07CiAgICBBY2NvdW50Q2xpZW50LnByb3RvdHlwZS5yZW1vdmVTaWduYXR1cmVJbWFnZSA9IGZ1bmN0aW9uIChtZXRhKSB7CiAgICAgICAgcmV0dXJuIGpzb25SZXF1ZXN0KHsKICAgICAgICAgICAgbWV0aG9kOiAnREVMRVRFJywKICAgICAgICAgICAgcm91dGU6ICIvdjIvbWUvYWNjb3VudHMvIiArIG1ldGEucmVzb3VyY2VJZCArICIvc2lnbmF0dXJlSW1hZ2VzLyIgKyBtZXRhLmF0dGFjaG1lbnQsCiAgICAgICAgfSk7CiAgICB9OwogICAgQWNjb3VudENsaWVudC5wcm90b3R5cGUuZGVsZXRlID0gZnVuY3Rpb24gKGFjY291bnQpIHsKICAgICAgICByZXR1cm4gYmxhbmtSZXF1ZXN0KHsKICAgICAgICAgICAgbWV0aG9kOiAnREVMRVRFJywKICAgICAgICAgICAgcm91dGU6ICIvdjEvbWUvYWNjb3VudHMvIiArIGFjY291bnQsCiAgICAgICAgfSk7CiAgICB9OwogICAgLy8gbmV3ZXIgZW5kcG9pbnQgaW4gYWNjb3JkYW5jZSBvZiBBcHBsZSByZXF1aXJlbWVudHMKICAgIEFjY291bnRDbGllbnQucHJvdG90eXBlLmRlbGV0ZU1lID0gZnVuY3Rpb24gKCkgewogICAgICAgIHJldHVybiBibGFua1JlcXVlc3QoewogICAgICAgICAgICBtZXRob2Q6ICdERUxFVEUnLAogICAgICAgICAgICByb3V0ZTogJy92Mi9tZScsCiAgICAgICAgfSk7CiAgICB9OwogICAgcmV0dXJuIEFjY291bnRDbGllbnQ7Cn0oKSk7CmV4cG9ydCB7IEFjY291bnRDbGllbnQgfTsKZXhwb3J0IGZ1bmN0aW9uIG1vY2tBY2NvdW50Q2xpZW50KCkgewogICAgcmV0dXJuIHsKICAgICAgICBvYXV0aFVybDogZnVuY3Rpb24gKHByb3ZpZGVyLCByZWRpcmVjdFVybCwgc2hvd1BhZ2UpIHsKICAgICAgICAgICAgcmV0dXJuIE9ic2VydmFibGUub2YoImh0dHBzOi8vIiArIHByb3ZpZGVyICsgIi5jb20vIiArIHJlZGlyZWN0VXJsICsgIi8iICsgc2hvd1BhZ2UpOwogICAgICAgIH0sCiAgICAgICAgcmVhdXRob3JpemVPYXV0aFVybDogZnVuY3Rpb24gKGFjY291bnQsIHJlZGlyZWN0VXJsLCBzaG93UGFnZSkgewogICAgICAgICAgICByZXR1cm4gT2JzZXJ2YWJsZS5vZigiaHR0cHM6Ly9yZWF1dGhlbnRpY2F0ZS8iICsgZW5jb2RlVVJJQ29tcG9uZW50KHJlZGlyZWN0VXJsKSArICIvIiArIGFjY291bnQgKyAiLyIgKyBzaG93UGFnZSk7CiAgICAgICAgfSwKICAgICAgICB1cGRhdGU6IGZ1bmN0aW9uIChhY2NvdW50KSB7IHJldHVybiBPYnNlcnZhYmxlLm9mKGFjY291bnQpOyB9LAogICAgICAgIGNyZWF0ZVNpZ25hdHVyZUltYWdlOiBmdW5jdGlvbiAobWV0YSkgeyByZXR1cm4gT2JzZXJ2YWJsZS5vZihjcmVhdGVBdHRhY2htZW50KCkpOyB9LAogICAgICAgIHJlbW92ZVNpZ25hdHVyZUltYWdlOiBmdW5jdGlvbiAobWV0YSkgeyByZXR1cm4gT2JzZXJ2YWJsZS5vZihudWxsKTsgfSwKICAgICAgICBkZWxldGU6IGZ1bmN0aW9uIChhY2NvdW50KSB7IHJldHVybiBPYnNlcnZhYmxlLm9mKG51bGwpOyB9LAogICAgICAgIGRlbGV0ZU1lOiBmdW5jdGlvbiAoKSB7IHJldHVybiBPYnNlcnZhYmxlLm9mKG51bGwpOyB9LAogICAgICAgIGNyZWF0ZTogZnVuY3Rpb24gKGFjY291bnQpIHsgcmV0dXJuIE9ic2VydmFibGUub2YoY3JlYXRlQWNjb3VudCgpKTsgfSwKICAgIH07Cn0K"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/api/account.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/api/account.ts"],"names":[],"mappings":"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","sourcesContent":["import { Observable } from 'rxjs';\n\nimport { Account, AttachmentMeta, Attachment, AccountType } from '@src/types';\nimport { applyDefaultAccount } from '@src/lib/account';\nimport { jsonRequest, blankRequest } from './base';\nimport { createAttachment } from '@src/mocks/attachments';\nimport { createAccount } from '@src/mocks/accounts';\nimport { CloudFileClient } from '@src/api/cloudFile';\n\nexport interface AccountAPI {\n  create(partial: Partial<Account>): Observable<Account>;\n  update(account: Account): Observable<Account>;\n  delete(account: string): Observable<null>;\n  deleteMe(): Observable<null>;\n  createSignatureImage(meta: AttachmentMeta): Observable<Attachment>;\n  removeSignatureImage(meta: AttachmentMeta): Observable<null>;\n  oauthUrl(provider: AccountType, redirectUrl: string, showPage: boolean): Observable<string>;\n  reauthorizeOauthUrl(account: string, redirectUrl: string, showPage: boolean): Observable<string>;\n}\n\nexport class AccountClient implements AccountAPI {\n  create(account: Partial<Account>): Observable<Account> {\n    return jsonRequest({\n      method: 'POST',\n      route: '/v1/me/accounts',\n      body: account,\n    }).map(json => applyDefaultAccount(json));\n  }\n\n  oauthUrl(provider: AccountType, redirectUrl: string, showPage: boolean): Observable<string> {\n    return jsonRequest({\n      method: 'POST',\n      route: `/v3/me/accounts/login`,\n      body: ({\n        type: provider,\n        redirectUrl,\n        showPage,\n      }),\n    }).map(json => json.url);\n  }\n\n  reauthorizeOauthUrl(account: string, redirectUrl: string, showPage: boolean): Observable<string> {\n    return jsonRequest({\n      method: 'POST',\n      route: `/v1/me/accounts/${account}/reauthorize`,\n      body: { redirectUrl, showPage },\n    }).map(json => json.url);\n  }\n\n  update(account: Account): Observable<Account> {\n    return jsonRequest({\n      method: 'PATCH',\n      route: `/v1/me/accounts/${account.id}`,\n      body: account,\n    }).map(json => applyDefaultAccount(json));\n  }\n\n  createSignatureImage(meta: AttachmentMeta) {\n    return new CloudFileClient().upload(meta.file!)\n      .flatMap(file => jsonRequest({\n        method: 'POST',\n        route: `/v2/me/accounts/${meta.resourceId}/signatureImages`,\n        body: {\n          filename: file.fileName,\n          id: meta.attachment,\n          ...file,\n          inline: true,\n        },\n      }),\n    );\n  }\n\n  removeSignatureImage(meta: AttachmentMeta) {\n    return jsonRequest({\n      method: 'DELETE',\n      route: `/v2/me/accounts/${meta.resourceId}/signatureImages/${meta.attachment}`,\n    });\n  }\n\n  delete(account: string) {\n    return blankRequest({\n      method: 'DELETE',\n      route: `/v1/me/accounts/${account}`,\n    });\n  }\n\n  // newer endpoint in accordance of Apple requirements\n  deleteMe() {\n    return blankRequest({\n      method: 'DELETE',\n      route: '/v2/me',\n    });\n  }\n}\n\nexport function mockAccountClient(): AccountAPI {\n  return {\n    oauthUrl: (provider, redirectUrl, showPage) =>\n      Observable.of(`https://${provider}.com/${redirectUrl}/${showPage}`),\n    reauthorizeOauthUrl: (account: string, redirectUrl, showPage) =>\n      Observable.of(\n        `https://reauthenticate/${encodeURIComponent(redirectUrl)}/${account}/${showPage}`,\n      ),\n    update: (account: Account) => Observable.of(account),\n    createSignatureImage: (meta: AttachmentMeta) => Observable.of(createAttachment()),\n    removeSignatureImage: (meta: AttachmentMeta) => Observable.of(null),\n    delete: (account: string) => Observable.of(null),\n    deleteMe: () => Observable.of(null),\n    create: (account: Partial<Account>) => Observable.of(createAccount()),\n  };\n}\n"]}]}