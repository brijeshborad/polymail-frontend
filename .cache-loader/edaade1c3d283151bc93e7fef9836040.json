{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/asana.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/asana.ts","mtime":1675280254046},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9hLCBfYiwgX2M7CmltcG9ydCB1cGRhdGUgZnJvbSAnaW1tdXRhYmlsaXR5LWhlbHBlcic7CmltcG9ydCB7IGNyZWF0ZSB9IGZyb20gJ0BzcmMvbGliL3JlZHV4JzsKaW1wb3J0IHsgUmVzb3VyY2VTdGF0dXMgfSBmcm9tICdAc3JjL3R5cGVzJzsKaW1wb3J0IHsgcmVzb3VyY2VMb2FkaW5nLCByZXNvdXJjZU9rIH0gZnJvbSAnQHNyYy9saWIvcmVzb3VyY2UnOwppbXBvcnQgeyBrZXlCeSwgdmFsdWVzIH0gZnJvbSAnbG9kYXNoJzsKaW1wb3J0IHsgY3JlYXRlU2VsZWN0b3IgfSBmcm9tICdAc3JjL2xpYi9zZWxlY3Rvcic7CmV4cG9ydCB2YXIgQVNBTkFfVVNFUl9MSVNUID0gKF9hID0gY3JlYXRlKCdBU0FOQV9VU0VSX0xJU1QnLCB7CiAgICBzZXR1cDogZnVuY3Rpb24gKHN0YXRlLCBtZXRhKSB7CiAgICAgICAgaWYgKHN0YXRlLmFzYW5hICYmIHN0YXRlLmFzYW5hLnVzZXJzKSB7CiAgICAgICAgICAgIHJldHVybiBzdGF0ZTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHVwZGF0ZShzdGF0ZSwgewogICAgICAgICAgICBhc2FuYTogewogICAgICAgICAgICAgICAgdXNlcnM6IHsgJHNldDogcmVzb3VyY2VMb2FkaW5nKCkgfSwKICAgICAgICAgICAgfSwKICAgICAgICB9KTsKICAgIH0sCiAgICBzdGFydDogZnVuY3Rpb24gKHN0YXRlLCBtZXRhKSB7CiAgICAgICAgcmV0dXJuIHVwZGF0ZShzdGF0ZSwgewogICAgICAgICAgICBhc2FuYTogewogICAgICAgICAgICAgICAgdXNlcnM6IHsKICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IHsgJHNldDogUmVzb3VyY2VTdGF0dXMuTG9hZGluZyB9LAogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgfSwKICAgICAgICB9KTsKICAgIH0sCiAgICBzdWNjZXNzOiBmdW5jdGlvbiAoc3RhdGUsIG1ldGEsIHBheWxvYWQpIHsKICAgICAgICByZXR1cm4gdXBkYXRlKHN0YXRlLCB7CiAgICAgICAgICAgIGFzYW5hOiB7CiAgICAgICAgICAgICAgICB1c2VyczogeyAkc2V0OiByZXNvdXJjZU9rKGtleUJ5KHBheWxvYWQsICdpZCcpKSB9LAogICAgICAgICAgICB9LAogICAgICAgIH0pOwogICAgfSwKfSksIF9hLnR5cGUpLCBhc2FuYVVzZXJMaXN0ID0gX2EuYWN0aW9uLCBhc2FuYVVzZXJMaXN0UmVkdWNlciA9IF9hLnJlZHVjZXI7CmV4cG9ydCB2YXIgQVNBTkFfUFJPSkVDVF9MSVNUID0gKF9iID0gY3JlYXRlKCdBU0FOQV9QUk9KRUNUX0xJU1QnLCB7CiAgICBzZXR1cDogZnVuY3Rpb24gKHN0YXRlLCBtZXRhKSB7CiAgICAgICAgaWYgKHN0YXRlLmFzYW5hICYmIHN0YXRlLmFzYW5hLnByb2plY3RzKSB7CiAgICAgICAgICAgIHJldHVybiBzdGF0ZTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHVwZGF0ZShzdGF0ZSwgewogICAgICAgICAgICBhc2FuYTogewogICAgICAgICAgICAgICAgcHJvamVjdHM6IHsgJHNldDogcmVzb3VyY2VMb2FkaW5nKCkgfSwKICAgICAgICAgICAgfSwKICAgICAgICB9KTsKICAgIH0sCiAgICBzdGFydDogZnVuY3Rpb24gKHN0YXRlLCBtZXRhKSB7CiAgICAgICAgcmV0dXJuIHVwZGF0ZShzdGF0ZSwgewogICAgICAgICAgICBhc2FuYTogewogICAgICAgICAgICAgICAgcHJvamVjdHM6IHsgJHNldDogcmVzb3VyY2VMb2FkaW5nKCkgfSwKICAgICAgICAgICAgfSwKICAgICAgICB9KTsKICAgIH0sCiAgICBzdWNjZXNzOiBmdW5jdGlvbiAoc3RhdGUsIG1ldGEsIHBheWxvYWQpIHsKICAgICAgICByZXR1cm4gdXBkYXRlKHN0YXRlLCB7CiAgICAgICAgICAgIGFzYW5hOiB7CiAgICAgICAgICAgICAgICBwcm9qZWN0czogeyAkc2V0OiByZXNvdXJjZU9rKHBheWxvYWQpIH0sCiAgICAgICAgICAgIH0sCiAgICAgICAgfSk7CiAgICB9LAp9KSwgX2IudHlwZSksIGFzYW5hUHJvamVjdExpc3QgPSBfYi5hY3Rpb24sIGFzYW5hUHJvamVjdExpc3RSZWR1Y2VyID0gX2IucmVkdWNlcjsKZXhwb3J0IHZhciBBU0FOQV9XT1JLU1BBQ0VfTElTVCA9IChfYyA9IGNyZWF0ZSgnQVNBTkFfV09SS1NQQUNFX0xJU1QnLCB7CiAgICBzZXR1cDogZnVuY3Rpb24gKHN0YXRlLCBtZXRhKSB7CiAgICAgICAgaWYgKHN0YXRlLmFzYW5hICYmIHN0YXRlLmFzYW5hLndvcmtzcGFjZXMpIHsKICAgICAgICAgICAgcmV0dXJuIHN0YXRlOwogICAgICAgIH0KICAgICAgICByZXR1cm4gdXBkYXRlKHN0YXRlLCB7CiAgICAgICAgICAgIGFzYW5hOiB7CiAgICAgICAgICAgICAgICB3b3Jrc3BhY2VzOiB7ICRzZXQ6IHJlc291cmNlTG9hZGluZygpIH0sCiAgICAgICAgICAgIH0sCiAgICAgICAgfSk7CiAgICB9LAogICAgc3RhcnQ6IGZ1bmN0aW9uIChzdGF0ZSwgbWV0YSkgewogICAgICAgIHJldHVybiB1cGRhdGUoc3RhdGUsIHsKICAgICAgICAgICAgYXNhbmE6IHsKICAgICAgICAgICAgICAgIHdvcmtzcGFjZXM6IHsgJHNldDogcmVzb3VyY2VMb2FkaW5nKCkgfSwKICAgICAgICAgICAgfSwKICAgICAgICB9KTsKICAgIH0sCiAgICBzdWNjZXNzOiBmdW5jdGlvbiAoc3RhdGUsIG1ldGEsIHBheWxvYWQpIHsKICAgICAgICByZXR1cm4gdXBkYXRlKHN0YXRlLCB7CiAgICAgICAgICAgIGFzYW5hOiB7CiAgICAgICAgICAgICAgICB3b3Jrc3BhY2VzOiB7ICRzZXQ6IHJlc291cmNlT2socGF5bG9hZCkgfSwKICAgICAgICAgICAgfSwKICAgICAgICB9KTsKICAgIH0sCn0pLCBfYy50eXBlKSwgYXNhbmFXb3Jrc3BhY2VMaXN0ID0gX2MuYWN0aW9uLCBhc2FuYVdvcmtzcGFjZUxpc3RSZWR1Y2VyID0gX2MucmVkdWNlcjsKZXhwb3J0IHZhciBzZWxlY3RNZUFzYW5hVXNlciA9IGNyZWF0ZVNlbGVjdG9yKFsKICAgIGZ1bmN0aW9uIChzdGF0ZSkgeyByZXR1cm4gc3RhdGUuYWNjb3VudHMubWFwKGZ1bmN0aW9uIChhKSB7IHJldHVybiBhLmVtYWlsOyB9KTsgfSwKICAgIGZ1bmN0aW9uIChzdGF0ZSkgeyByZXR1cm4gc3RhdGUuYXNhbmEudXNlcnMuZGF0YSA/IHZhbHVlcyhzdGF0ZS5hc2FuYS51c2Vycy5kYXRhKSA6IFtdOyB9LApdLCBmdW5jdGlvbiAoZW1haWxzLCB1c2VycykgeyByZXR1cm4gdXNlcnMKICAgIC5maW5kKGZ1bmN0aW9uICh1KSB7IHJldHVybiBlbWFpbHMuaW5kZXhPZih1LmVtYWlsKSAhPT0gLTE7IH0pOyB9LCBmdW5jdGlvbiAoZW1haWxzLCB1c2VycykgewogICAgcmV0dXJuICJlbWFpbHMtIiArIGVtYWlscy5qb2luKCcnKSArICIsdXNlcnMtIiArIHVzZXJzLm1hcChmdW5jdGlvbiAodSkgeyByZXR1cm4gdS5pZDsgfSkuam9pbignJyk7Cn0sIFsnYWNjb3VudHMnLCAnYXNhbmEnXSk7CmV4cG9ydCBkZWZhdWx0IFsKICAgIGFzYW5hVXNlckxpc3RSZWR1Y2VyLAogICAgYXNhbmFQcm9qZWN0TGlzdFJlZHVjZXIsCiAgICBhc2FuYVdvcmtzcGFjZUxpc3RSZWR1Y2VyLApdOwo="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/asana.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/asana.ts"],"names":[],"mappings":";AAAA,OAAO,MAAM,MAAM,qBAAqB,CAAC;AACzC,OAAO,EAAE,MAAM,EAAE,MAAM,gBAAgB,CAAC;AAExC,OAAO,EAAE,cAAc,EAAE,MAAM,YAAY,CAAC;AAC5C,OAAO,EAAE,eAAe,EAAE,UAAU,EAAE,MAAM,mBAAmB,CAAC;AAChE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,QAAQ,CAAC;AACvC,OAAO,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAC;AAEnD,MAAM,CACJ,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;YAAqB,EACrB,yBAAqB,EACrB,iCAA6B,CA2B5B;AAEH,MAAM,CACJ,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;YAAwB,EACxB,4BAAwB,EACxB,oCAAgC,CAyB/B;AAEH,MAAM,CACJ,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;YAA0B,EAC1B,8BAA0B,EAC1B,sCAAkC,CAyBjC;AAEH,MAAM,CAAC,IAAM,iBAAiB,GAAG,cAAc,CAG7C;IACE,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,KAAK,EAAP,CAAO,CAAC,EAAhC,CAAgC;IACzC,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAE,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,EAA7D,CAA6D;CACvE,EACD,UAAC,MAAgB,EAAE,KAAkB,IAAK,OAAA,KAAK;KAC5C,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAA9B,CAA8B,CAAC,EADF,CACE,EAC5C,UAAC,MAAgB,EAAE,KAAkB;IACnC,OAAA,YAAU,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,eAAU,KAAK,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,EAAE,EAAJ,CAAI,CAAC,CAAC,IAAI,CAAC,EAAE,CAAG;AAAlE,CAAkE,EACpE,CAAC,UAAU,EAAE,OAAO,CAAC,CACtB,CAAC;AAEF,eAAe;IACb,oBAAoB;IACpB,uBAAuB;IACvB,yBAAyB;CAC1B,CAAC","sourcesContent":["import update from 'immutability-helper';\nimport { create } from '@src/lib/redux';\nimport { AsanaUser, AsanaProject, AsanaWorkspace } from '@src/types/asana';\nimport { ResourceStatus } from '@src/types';\nimport { resourceLoading, resourceOk } from '@src/lib/resource';\nimport { keyBy, values } from 'lodash';\nimport { createSelector } from '@src/lib/selector';\n\nexport const {\n  type: ASANA_USER_LIST,\n  action: asanaUserList,\n  reducer: asanaUserListReducer,\n} = create<string, AsanaUser[]>('ASANA_USER_LIST', {\n  setup: (state, meta) => {\n    if (state.asana && state.asana.users) {\n      return state;\n    }\n\n    return update(state, {\n      asana: {\n        users: { $set: resourceLoading() },\n      },\n    });\n  },\n  start: (state, meta) =>\n    update(state, {\n      asana: {\n        users: {\n          status: { $set: ResourceStatus.Loading },\n        },\n      },\n    }),\n  success: (state, meta, payload) =>\n    update(state, {\n      asana: {\n        users: { $set: resourceOk(keyBy(payload, 'id')) },\n      },\n    }),\n});\n\nexport const {\n  type: ASANA_PROJECT_LIST,\n  action: asanaProjectList,\n  reducer: asanaProjectListReducer,\n} = create<string, AsanaProject[]>('ASANA_PROJECT_LIST', {\n  setup: (state, meta) => {\n    if (state.asana && state.asana.projects) {\n      return state;\n    }\n\n    return update(state, {\n      asana: {\n        projects: { $set: resourceLoading() },\n      },\n    });\n  },\n  start: (state, meta) =>\n    update(state, {\n      asana: {\n        projects: { $set: resourceLoading() },\n      },\n    }),\n  success: (state, meta, payload) =>\n    update(state, {\n      asana: {\n        projects: { $set: resourceOk(payload) },\n      },\n    }),\n});\n\nexport const {\n  type: ASANA_WORKSPACE_LIST,\n  action: asanaWorkspaceList,\n  reducer: asanaWorkspaceListReducer,\n} = create<null, AsanaWorkspace[]>('ASANA_WORKSPACE_LIST', {\n  setup: (state, meta) => {\n    if (state.asana && state.asana.workspaces) {\n      return state;\n    }\n\n    return update(state, {\n      asana: {\n        workspaces: { $set: resourceLoading() },\n      },\n    });\n  },\n  start: (state, meta) =>\n    update(state, {\n      asana: {\n        workspaces: { $set: resourceLoading() },\n      },\n    }),\n  success: (state, meta, payload) =>\n    update(state, {\n      asana: {\n        workspaces: { $set: resourceOk(payload) },\n      },\n    }),\n});\n\nexport const selectMeAsanaUser = createSelector<\n  undefined, string[] | AsanaUser[], AsanaUser | undefined\n>(\n  [\n    state => state.accounts.map(a => a.email),\n    state => state.asana.users.data ?  values(state.asana.users.data) : [],\n  ],\n  (emails: string[], users: AsanaUser[]) => users\n    .find(u => emails.indexOf(u.email) !== -1),\n  (emails: string[], users: AsanaUser[]) =>\n    `emails-${emails.join('')},users-${users.map(u => u.id).join('')}`,\n  ['accounts', 'asana'],\n);\n\nexport default [\n  asanaUserListReducer,\n  asanaProjectListReducer,\n  asanaWorkspaceListReducer,\n];\n"]}]}