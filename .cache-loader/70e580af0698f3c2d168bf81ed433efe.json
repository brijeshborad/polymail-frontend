{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Login/components/TeamSignupPane/index.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Login/components/TeamSignupPane/index.ts","mtime":1675280254080},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IFRlYW1TaWdudXBQYW5lIGZyb20gJy4vVGVhbVNpZ251cFBhbmUnOwppbXBvcnQgeyBjb25uZWN0IH0gZnJvbSAncmVhY3QtcmVkdXgnOwppbXBvcnQgeyBtZUNyZWF0ZSB9IGZyb20gJ0BzcmMvZHVja3MvbWUnOwppbXBvcnQgeyB0b2FzdFNldCB9IGZyb20gJ0BzcmMvZHVja3MvdG9hc3RzJzsKaW1wb3J0IHsgd2l0aFJvdXRlciB9IGZyb20gJ3JlYWN0LXJvdXRlcic7CmltcG9ydCB7IHNlbGVjdFRlYW1JbnZpdGVzVmFsaWRhdGlvbiwgdGVhbUludml0ZVZhbGlkYXRlLCB9IGZyb20gJ0BzcmMvZHVja3MvdGVhbU1lbWJlcnMnOwppbXBvcnQgeyBhdXRoT0F1dGhMb2dpbiB9IGZyb20gJ0BzcmMvZHVja3MvYXV0aCc7CnZhciBtYXBTdGF0ZVRvUHJvcHMgPSBmdW5jdGlvbiAoc3RhdGUsIG93blByb3BzKSB7IHJldHVybiAoewogICAgaW52aXRlOiBzZWxlY3RUZWFtSW52aXRlc1ZhbGlkYXRpb24oc3RhdGUsIHsKICAgICAgICBub25jZTogb3duUHJvcHMubWF0Y2gucGFyYW1zLm5vbmNlLAogICAgICAgIHBheWxvYWQ6IG93blByb3BzLm1hdGNoLnBhcmFtcy5wYXlsb2FkLAogICAgfSksCiAgICBsb2FkaW5nOiBzdGF0ZS5zaWduVXBQZW5kaW5nLAp9KTsgfTsKdmFyIG1hcERpc3BhdGNoVG9Qcm9wcyA9IGZ1bmN0aW9uIChkaXNwYXRjaCkgeyByZXR1cm4gKHsKICAgIHNpZ251cDogZnVuY3Rpb24gKG1lKSB7IHJldHVybiBkaXNwYXRjaChtZUNyZWF0ZShtZSkpOyB9LAogICAgc2V0VG9hc3Q6IGZ1bmN0aW9uIChlKSB7IHJldHVybiBkaXNwYXRjaCh0b2FzdFNldChlKSk7IH0sCiAgICB2YWxpZGF0ZUludml0ZTogZnVuY3Rpb24gKGludml0ZSkgeyByZXR1cm4gZGlzcGF0Y2godGVhbUludml0ZVZhbGlkYXRlKGludml0ZSkpOyB9LAogICAgbG9naW5PQXV0aDogZnVuY3Rpb24gKG1ldGEpIHsgcmV0dXJuIGRpc3BhdGNoKGF1dGhPQXV0aExvZ2luKG1ldGEpKTsgfSwKfSk7IH07CmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QobWFwU3RhdGVUb1Byb3BzLCBtYXBEaXNwYXRjaFRvUHJvcHMpKHdpdGhSb3V0ZXIoVGVhbVNpZ251cFBhbmUpKTsK"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Login/components/TeamSignupPane/index.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Login/components/TeamSignupPane/index.ts"],"names":[],"mappings":"AAAA,OAAO,cAAyD,MAAM,kBAAkB,CAAC;AACzF,OAAO,EAAE,OAAO,EAAY,MAAM,aAAa,CAAC;AAEhD,OAAO,EAAE,QAAQ,EAAgB,MAAM,eAAe,CAAC;AACvD,OAAO,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAE7C,OAAO,EAAE,UAAU,EAAuB,MAAM,cAAc,CAAC;AAE/D,OAAO,EACL,2BAA2B,EAA0B,kBAAkB,GACxE,MAAM,wBAAwB,CAAC;AAChC,OAAO,EAAE,cAAc,EAAsB,MAAM,iBAAiB,CAAC;AAErE,IAAM,eAAe,GAAG,UACtB,KAAiB,EAAE,QAAyC,IAC7C,OAAA,CAAC;IAChB,MAAM,EAAE,2BAA2B,CAAC,KAAK,EAAE;QACzC,KAAK,EAAE,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK;QAClC,OAAO,EAAE,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO;KACvC,CAAC;IACF,OAAO,EAAE,KAAK,CAAC,aAAa;CAC7B,CAAC,EANe,CAMf,CAAC;AAEH,IAAM,kBAAkB,GAAG,UAAC,QAAuB,IAAoB,OAAA,CAAC;IACtE,MAAM,EAAE,UAAC,EAAgB,IAAK,OAAA,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,EAAtB,CAAsB;IACpD,QAAQ,EAAE,UAAC,CAAQ,IAAK,OAAA,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAArB,CAAqB;IAC7C,cAAc,EAAE,UAAC,MAA8B,IAAK,OAAA,QAAQ,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC,EAApC,CAAoC;IACxF,UAAU,EAAE,UAAC,IAAwB,IAAK,OAAA,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAA9B,CAA8B;CACzE,CAAC,EALqE,CAKrE,CAAC;AAEH,eAAe,OAAO,CAAC,eAAe,EAAE,kBAAkB,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC","sourcesContent":["import TeamSignupPane, { StateProps, DispatchProps, RouteProps } from './TeamSignupPane';\nimport { connect, Dispatch } from 'react-redux';\n\nimport { meCreate, MeCreateMeta } from '@src/ducks/me';\nimport { toastSet } from '@src/ducks/toasts';\n\nimport { withRouter, RouteComponentProps } from 'react-router';\nimport { StoreState } from '@src/types';\nimport {\n  selectTeamInvitesValidation, TeamInviteValidateMeta, teamInviteValidate,\n} from '@src/ducks/teamMembers';\nimport { authOAuthLogin, AuthOAuthLoginMeta } from '@src/ducks/auth';\n\nconst mapStateToProps = (\n  state: StoreState, ownProps: RouteComponentProps<RouteProps>,\n): StateProps => ({\n  invite: selectTeamInvitesValidation(state, {\n    nonce: ownProps.match.params.nonce,\n    payload: ownProps.match.params.payload,\n  }),\n  loading: state.signUpPending,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>): DispatchProps => ({\n  signup: (me: MeCreateMeta) => dispatch(meCreate(me)),\n  setToast: (e: Error) => dispatch(toastSet(e)),\n  validateInvite: (invite: TeamInviteValidateMeta) => dispatch(teamInviteValidate(invite)),\n  loginOAuth: (meta: AuthOAuthLoginMeta) => dispatch(authOAuthLogin(meta)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(TeamSignupPane));\n"]}]}