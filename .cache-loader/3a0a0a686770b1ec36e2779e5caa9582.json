{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/sequenceStageRecipients.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/sequenceStageRecipients.ts","mtime":1675280254051},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9hLCBfYiwgX2M7CmltcG9ydCB1cGRhdGUgZnJvbSAnaW1tdXRhYmlsaXR5LWhlbHBlcic7CmltcG9ydCB7IGNyZWF0ZSB9IGZyb20gJ0BzcmMvbGliL3JlZHV4JzsKaW1wb3J0IHsgUmVzb3VyY2VTdGF0dXMgfSBmcm9tICdAc3JjL3R5cGVzJzsKaW1wb3J0IHsgcmVzb3VyY2VPayB9IGZyb20gJ0BzcmMvbGliL3Jlc291cmNlJzsKaW1wb3J0IHsgY2xvbmUgfSBmcm9tICdsb2Rhc2gnOwpleHBvcnQgdmFyIFNFUVVFTkNFX1NUQUdFX1JFQ0lQSUVOVF9MSVNUID0gKF9hID0gY3JlYXRlKCdTRVFVRU5DRV9TVEFHRV9SRUNJUElFTlRfTElTVCcsIHsKICAgIHNldHVwOiBmdW5jdGlvbiAoc3RhdGUsIG1ldGEpIHsKICAgICAgICB2YXIgX2E7CiAgICAgICAgaWYgKHN0YXRlLnNlcXVlbmNlU3RhZ2VSZWNpcGllbnRzW21ldGEuc2VxdWVuY2UgKyBtZXRhLnN0YWdlXSkgewogICAgICAgICAgICByZXR1cm4gc3RhdGU7CiAgICAgICAgfQogICAgICAgIHJldHVybiB1cGRhdGUoc3RhdGUsIHsKICAgICAgICAgICAgc2VxdWVuY2VTdGFnZVJlY2lwaWVudHM6IChfYSA9IHt9LAogICAgICAgICAgICAgICAgX2FbbWV0YS5zZXF1ZW5jZSArIG1ldGEuc3RhZ2VdID0geyAkc2V0OiByZXNvdXJjZU9rKFtdKSB9LAogICAgICAgICAgICAgICAgX2EpLAogICAgICAgIH0pOwogICAgfSwKICAgIHN0YXJ0OiBmdW5jdGlvbiAoc3RhdGUsIG1ldGEpIHsKICAgICAgICB2YXIgX2E7CiAgICAgICAgcmV0dXJuIHVwZGF0ZShzdGF0ZSwgewogICAgICAgICAgICBzZXF1ZW5jZVN0YWdlUmVjaXBpZW50czogKF9hID0ge30sCiAgICAgICAgICAgICAgICBfYVttZXRhLnNlcXVlbmNlICsgbWV0YS5zdGFnZV0gPSB7CiAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiB7ICRzZXQ6IFJlc291cmNlU3RhdHVzLlJlZnJlc2hpbmcgfSwKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBfYSksCiAgICAgICAgfSk7CiAgICB9LAogICAgc3VjY2VzczogZnVuY3Rpb24gKHN0YXRlLCBtZXRhLCBwYXlsb2FkKSB7CiAgICAgICAgdmFyIF9hLCBfYjsKICAgICAgICBpZiAobWV0YS5vZmZzZXQpIHsKICAgICAgICAgICAgcmV0dXJuIHVwZGF0ZShzdGF0ZSwgewogICAgICAgICAgICAgICAgc2VxdWVuY2VSZWNpcGllbnRzU3RhdGU6IHsKICAgICAgICAgICAgICAgICAgICAkc2V0OiB7CiAgICAgICAgICAgICAgICAgICAgICAgIGZpbHRlcjogbWV0YS5maWx0ZXIsCiAgICAgICAgICAgICAgICAgICAgICAgIHNvcnQ6IG1ldGEuc29ydCwKICAgICAgICAgICAgICAgICAgICAgICAgcXVlcnk6IG1ldGEucXVlcnksCiAgICAgICAgICAgICAgICAgICAgICAgIG9mZnNldDogbWV0YS5vZmZzZXQsCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBzZXF1ZW5jZVN0YWdlUmVjaXBpZW50czogKF9hID0ge30sCiAgICAgICAgICAgICAgICAgICAgX2FbbWV0YS5zZXF1ZW5jZSArIG1ldGEuc3RhZ2VdID0gewogICAgICAgICAgICAgICAgICAgICAgICAkc2V0OiByZXNvdXJjZU9rKHN0YXRlLnNlcXVlbmNlU3RhZ2VSZWNpcGllbnRzW21ldGEuc2VxdWVuY2UgKyBtZXRhLnN0YWdlXS5kYXRhLmNvbmNhdChwYXlsb2FkKSksCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBfYSksCiAgICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgICByZXR1cm4gdXBkYXRlKHN0YXRlLCB7CiAgICAgICAgICAgIHNlcXVlbmNlUmVjaXBpZW50c1N0YXRlOiB7CiAgICAgICAgICAgICAgICAkc2V0OiB7CiAgICAgICAgICAgICAgICAgICAgZmlsdGVyOiBtZXRhLmZpbHRlciwKICAgICAgICAgICAgICAgICAgICBzb3J0OiBtZXRhLnNvcnQsCiAgICAgICAgICAgICAgICAgICAgcXVlcnk6IG1ldGEucXVlcnksCiAgICAgICAgICAgICAgICAgICAgb2Zmc2V0OiBtZXRhLm9mZnNldCwKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHNlcXVlbmNlU3RhZ2VSZWNpcGllbnRzOiAoX2IgPSB7fSwKICAgICAgICAgICAgICAgIF9iW21ldGEuc2VxdWVuY2UgKyBtZXRhLnN0YWdlXSA9IHsgJHNldDogcmVzb3VyY2VPayhwYXlsb2FkKSB9LAogICAgICAgICAgICAgICAgX2IpLAogICAgICAgIH0pOwogICAgfSwKICAgIGZhaWx1cmU6IGZ1bmN0aW9uIChzdGF0ZSwgbWV0YSwgZXJyb3IpIHsKICAgICAgICB2YXIgX2E7CiAgICAgICAgcmV0dXJuIHVwZGF0ZShzdGF0ZSwgewogICAgICAgICAgICBzZXF1ZW5jZVN0YWdlUmVjaXBpZW50czogKF9hID0ge30sCiAgICAgICAgICAgICAgICBfYVttZXRhLnNlcXVlbmNlICsgbWV0YS5zdGFnZV0gPSB7CiAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiB7ICRzZXQ6IFJlc291cmNlU3RhdHVzLkZhaWx1cmUgfSwKICAgICAgICAgICAgICAgICAgICBlcnJvcjogeyAkc2V0OiBlcnJvciB9LAogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIF9hKSwKICAgICAgICB9KTsKICAgIH0sCn0pLCBfYS50eXBlKSwgc2VxdWVuY2VTdGFnZVJlY2lwaWVudExpc3QgPSBfYS5hY3Rpb24sIHNlcXVlbmNlU3RhZ2VSZWNpcGllbnRMaXN0UmVkdWNlciA9IF9hLnJlZHVjZXI7CmV4cG9ydCB2YXIgU0VRVUVOQ0VfU1RBR0VfUkVDSVBJRU5UX1VQREFURSA9IChfYiA9IGNyZWF0ZSgnU0VRVUVOQ0VfU1RBR0VfUkVDSVBJRU5UX1VQREFURScsIHsKICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChzdGF0ZSwgbWV0YSwgcGF5bG9hZCkgewogICAgICAgIHZhciBfYTsKICAgICAgICB2YXIgcmVjaXBpZW50cyA9IGNsb25lKHN0YXRlLnNlcXVlbmNlU3RhZ2VSZWNpcGllbnRzW3BheWxvYWQuc2VxdWVuY2UgKyBwYXlsb2FkLnN0YWdlXSk7CiAgICAgICAgdmFyIGluZGV4ID0gcmVjaXBpZW50cy5kYXRhICYmIHJlY2lwaWVudHMuZGF0YS5maW5kSW5kZXgoZnVuY3Rpb24gKHIpIHsgcmV0dXJuIHIuaWQgPT09IHBheWxvYWQuaWQ7IH0pOwogICAgICAgIGlmIChpbmRleCAhPT0gdW5kZWZpbmVkICYmIHJlY2lwaWVudHMuZGF0YSkgewogICAgICAgICAgICByZWNpcGllbnRzLmRhdGEuc3BsaWNlKGluZGV4LCAxLCBwYXlsb2FkKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHVwZGF0ZShzdGF0ZSwgewogICAgICAgICAgICBzZXF1ZW5jZVN0YWdlUmVjaXBpZW50czogKF9hID0ge30sCiAgICAgICAgICAgICAgICBfYVtwYXlsb2FkLnNlcXVlbmNlICsgcGF5bG9hZC5zdGFnZV0gPSB7CiAgICAgICAgICAgICAgICAgICAgJHNldDogcmVjaXBpZW50cywKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBfYSksCiAgICAgICAgfSk7CiAgICB9LAp9KSwgX2IudHlwZSksIHNlcXVlbmNlU3RhZ2VSZWNpcGllbnRVcGRhdGUgPSBfYi5hY3Rpb24sIHNlcXVlbmNlU3RhZ2VSZWNpcGllbnRVcGRhdGVSZWR1Y2VyID0gX2IucmVkdWNlcjsKZXhwb3J0IHZhciBTRVFVRU5DRV9TVEFHRV9SRUNJUElFTlRfREVMRVRFID0gKF9jID0gY3JlYXRlKCdTRVFVRU5DRV9TVEFHRV9SRUNJUElFTlRfREVMRVRFJywgewogICAgc3VjY2VzczogZnVuY3Rpb24gKHN0YXRlLCBtZXRhLCBwYXlsb2FkKSB7CiAgICAgICAgdmFyIF9hOwogICAgICAgIHZhciBzdGFnZSA9IHN0YXRlLnNlbGVjdGVkU2VxdWVuY2VTdGFnZTsKICAgICAgICBpZiAoIXN0YWdlKSB7CiAgICAgICAgICAgIHJldHVybiBzdGF0ZTsKICAgICAgICB9CiAgICAgICAgdmFyIHJlY2lwaWVudHMgPSBjbG9uZShzdGF0ZS5zZXF1ZW5jZVN0YWdlUmVjaXBpZW50c1ttZXRhLnNlcXVlbmNlICsgc3RhZ2VdKTsKICAgICAgICB2YXIgaW5kZXggPSByZWNpcGllbnRzLmRhdGEgJiYgcmVjaXBpZW50cy5kYXRhLmZpbmRJbmRleChmdW5jdGlvbiAocikgeyByZXR1cm4gci5pZCA9PT0gbWV0YS5pZDsgfSk7CiAgICAgICAgaWYgKGluZGV4ICE9PSB1bmRlZmluZWQgJiYgcmVjaXBpZW50cy5kYXRhKSB7CiAgICAgICAgICAgIHJlY2lwaWVudHMuZGF0YS5zcGxpY2UoaW5kZXgsIDEpOwogICAgICAgIH0KICAgICAgICByZXR1cm4gdXBkYXRlKHN0YXRlLCB7CiAgICAgICAgICAgIHNlcXVlbmNlU3RhZ2VSZWNpcGllbnRzOiAoX2EgPSB7fSwKICAgICAgICAgICAgICAgIF9hW21ldGEuc2VxdWVuY2UgKyBzdGFnZV0gPSB7CiAgICAgICAgICAgICAgICAgICAgJHNldDogcmVjaXBpZW50cywKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBfYSksCiAgICAgICAgfSk7CiAgICB9LAp9KSwgX2MudHlwZSksIHNlcXVlbmNlU3RhZ2VSZWNpcGllbnREZWxldGUgPSBfYy5hY3Rpb24sIHNlcXVlbmNlU3RhZ2VSZWNpcGllbnREZWxldGVSZWR1Y2VyID0gX2MucmVkdWNlcjsKZXhwb3J0IGRlZmF1bHQgWwogICAgc2VxdWVuY2VTdGFnZVJlY2lwaWVudExpc3RSZWR1Y2VyLAogICAgc2VxdWVuY2VTdGFnZVJlY2lwaWVudFVwZGF0ZVJlZHVjZXIsCiAgICBzZXF1ZW5jZVN0YWdlUmVjaXBpZW50RGVsZXRlUmVkdWNlciwKXTsK"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/sequenceStageRecipients.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/sequenceStageRecipients.ts"],"names":[],"mappings":";AAAA,OAAO,MAAM,MAAM,qBAAqB,CAAC;AACzC,OAAO,EAAE,MAAM,EAAE,MAAM,gBAAgB,CAAC;AACxC,OAAO,EAAE,cAAc,EAAE,MAAM,YAAY,CAAC;AAI5C,OAAO,EAAE,UAAU,EAAE,MAAM,mBAAmB,CAAC;AAC/C,OAAO,EAAE,KAAK,EAAE,MAAM,QAAQ,CAAC;AAa/B,MAAM,CACJ,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAAmC,EACnC,sCAAkC,EAClC,8CAA0C,CAoEzC;AAEH,MAAM,CACJ,IAAA;;;;;;;;;;;;;;;;YAAqC,EACrC,wCAAoC,EACpC,gDAA4C,CAkB3C;AAEH,MAAM,CACJ,IAAA;;;;;;;;;;;;;;;;;;;;YAAqC,EACrC,wCAAoC,EACpC,gDAA4C,CAuB3C;AAEH,eAAe;IACb,iCAAiC;IACjC,mCAAmC;IACnC,mCAAmC;CACpC,CAAC","sourcesContent":["import update from 'immutability-helper';\nimport { create } from '@src/lib/redux';\nimport { ResourceStatus } from '@src/types';\nimport {\n  SequenceStageRecipient, SequenceStageRecipientFilter, SequenceStageRecipientSort,\n} from '@src/types/sequences';\nimport { resourceOk } from '@src/lib/resource';\nimport { clone } from 'lodash';\nimport { SequenceRecipientDeleteMeta } from '@src/ducks/sequenceRecipients';\n\nexport interface SequenceStageRecipientMeta {\n  sequence: string;\n  stage: string;\n  offset?: number;\n  query?: string;\n  filter: SequenceStageRecipientFilter;\n  sort?: SequenceStageRecipientSort;\n  desc?: boolean;\n}\n\nexport const {\n  type: SEQUENCE_STAGE_RECIPIENT_LIST,\n  action: sequenceStageRecipientList,\n  reducer: sequenceStageRecipientListReducer,\n} = create<SequenceStageRecipientMeta, SequenceStageRecipient[]>('SEQUENCE_STAGE_RECIPIENT_LIST', {\n  setup: (state, meta) => {\n    if (state.sequenceStageRecipients[meta.sequence + meta.stage]) {\n      return state;\n    }\n\n    return update(state, {\n      sequenceStageRecipients: {\n        [meta.sequence + meta.stage]: { $set: resourceOk([]) },\n      },\n    });\n  },\n\n  start: (state, meta) =>\n    update(state, {\n      sequenceStageRecipients: {\n        [meta.sequence + meta.stage]: {\n          status: { $set: ResourceStatus.Refreshing },\n        },\n      },\n    }),\n\n  success: (state, meta, payload) => {\n    if (meta.offset) {\n      return update(state, {\n        sequenceRecipientsState: {\n          $set: {\n            filter: meta.filter,\n            sort: meta.sort,\n            query: meta.query,\n            offset: meta.offset,\n          },\n        },\n        sequenceStageRecipients: {\n          [meta.sequence + meta.stage]: {\n            $set: resourceOk(\n              state.sequenceStageRecipients[meta.sequence + meta.stage].data!.concat(payload),\n            ),\n          },\n        },\n      });\n    }\n\n    return update(state, {\n      sequenceRecipientsState: {\n        $set: {\n          filter: meta.filter,\n          sort: meta.sort,\n          query: meta.query,\n          offset: meta.offset,\n        },\n      },\n      sequenceStageRecipients: {\n        [meta.sequence + meta.stage]: { $set: resourceOk(payload) },\n      },\n    });\n  },\n\n  failure: (state, meta, error) =>\n    update(state, {\n      sequenceStageRecipients: {\n        [meta.sequence + meta.stage]: {\n          status: { $set: ResourceStatus.Failure },\n          error: { $set: error },\n        },\n      },\n    }),\n});\n\nexport const {\n  type: SEQUENCE_STAGE_RECIPIENT_UPDATE,\n  action: sequenceStageRecipientUpdate,\n  reducer: sequenceStageRecipientUpdateReducer,\n} = create<SequenceStageRecipient, SequenceStageRecipient>('SEQUENCE_STAGE_RECIPIENT_UPDATE', {\n  success: (state, meta, payload) => {\n    const recipients = clone(state.sequenceStageRecipients[payload.sequence + payload.stage]);\n    const index = recipients.data && recipients.data.findIndex(r => r.id === payload.id);\n\n    if (index !== undefined && recipients.data) {\n      recipients.data.splice(index, 1, payload);\n    }\n\n    return update(state, {\n      sequenceStageRecipients: {\n        [payload.sequence + payload.stage]: {\n          $set: recipients,\n        },\n      },\n    });\n  },\n});\n\nexport const {\n  type: SEQUENCE_STAGE_RECIPIENT_DELETE,\n  action: sequenceStageRecipientDelete,\n  reducer: sequenceStageRecipientDeleteReducer,\n} = create<SequenceRecipientDeleteMeta, null>('SEQUENCE_STAGE_RECIPIENT_DELETE', {\n  success: (state, meta, payload) => {\n    const stage = state.selectedSequenceStage;\n    if (!stage) {\n      return state;\n    }\n\n    const recipients = clone(state.sequenceStageRecipients[meta.sequence + stage]);\n    const index = recipients.data && recipients.data.findIndex(r => r.id === meta.id);\n\n    if (index !== undefined && recipients.data) {\n      recipients.data.splice(index, 1);\n    }\n\n    return update(state, {\n      sequenceStageRecipients: {\n        [meta.sequence + stage]: {\n          $set: recipients,\n        },\n      },\n    });\n  },\n});\n\nexport default [\n  sequenceStageRecipientListReducer,\n  sequenceStageRecipientUpdateReducer,\n  sequenceStageRecipientDeleteReducer,\n];\n"]}]}