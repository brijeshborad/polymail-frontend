{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/LeftSidebar/components/MailTab/components/Section/ListsSection/ListsSection.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/LeftSidebar/components/MailTab/components/Section/ListsSection/ListsSection.tsx","mtime":1675280254018},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkgewogICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBmdW5jdGlvbiAoZCwgYikgewogICAgICAgIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwKICAgICAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fAogICAgICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChiLmhhc093blByb3BlcnR5KHApKSBkW3BdID0gYltwXTsgfTsKICAgICAgICByZXR1cm4gZXh0ZW5kU3RhdGljcyhkLCBiKTsKICAgIH07CiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHsKICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpOwogICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfQogICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTsKICAgIH07Cn0pKCk7CnZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHsKICAgIF9fYXNzaWduID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbih0KSB7CiAgICAgICAgZm9yICh2YXIgcywgaSA9IDEsIG4gPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7CiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07CiAgICAgICAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSkKICAgICAgICAgICAgICAgIHRbcF0gPSBzW3BdOwogICAgICAgIH0KICAgICAgICByZXR1cm4gdDsKICAgIH07CiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfTsKdmFyIF9fc3ByZWFkQXJyYXlzID0gKHRoaXMgJiYgdGhpcy5fX3NwcmVhZEFycmF5cykgfHwgZnVuY3Rpb24gKCkgewogICAgZm9yICh2YXIgcyA9IDAsIGkgPSAwLCBpbCA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBpbDsgaSsrKSBzICs9IGFyZ3VtZW50c1tpXS5sZW5ndGg7CiAgICBmb3IgKHZhciByID0gQXJyYXkocyksIGsgPSAwLCBpID0gMDsgaSA8IGlsOyBpKyspCiAgICAgICAgZm9yICh2YXIgYSA9IGFyZ3VtZW50c1tpXSwgaiA9IDAsIGpsID0gYS5sZW5ndGg7IGogPCBqbDsgaisrLCBrKyspCiAgICAgICAgICAgIHJba10gPSBhW2pdOwogICAgcmV0dXJuIHI7Cn07CmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7CmltcG9ydCBjbGFzc25hbWVzIGZyb20gJ2NsYXNzbmFtZXMnOwppbXBvcnQgeyBzb3J0QnksIGNvbXBhY3QsIGNsb25lRGVlcCB9IGZyb20gJ2xvZGFzaCc7CmltcG9ydCB7IExpc3RJdGVtIH0gZnJvbSAnLi4vSXRlbS9MaXN0SXRlbSc7CmltcG9ydCBMaXN0TWVudSwgeyBMaXN0QWN0aW9uIH0gZnJvbSAnLi4vSXRlbS9MaXN0TWVudSc7CmltcG9ydCB7IExpc3RTdGF0dXMgfSBmcm9tICdAc3JjL3R5cGVzJzsKaW1wb3J0IERpc2Nsb3N1cmUgZnJvbSAnQHNyYy9jb21wb25lbnRzL0ljb25zL0Rpc2Nsb3N1cmUuc3ZnJzsKaW1wb3J0IFBsdXMgZnJvbSAnQHNyYy9jb21wb25lbnRzL0ljb25zL1BsdXMuc3ZnJzsKaW1wb3J0IHsgZGVzY2VuZGFudHMsIHJlY3Vyc2l2ZWx5UmVuYW1lZExpc3RzIH0gZnJvbSAnQHNyYy9saWIvbWFpbGJveCc7CmltcG9ydCBDb25maXJtIGZyb20gJ0BzcmMvY29tcG9uZW50cy9CYXNlL0NvbmZpcm0nOwppbXBvcnQgJy4vTGlzdFNlY3Rpb24uc2Nzcyc7Ci8vIExlZnRTaWRlYmFyIFNlY3Rpb24KdmFyIExpc3RzU2VjdGlvbiA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHsKICAgIF9fZXh0ZW5kcyhMaXN0c1NlY3Rpb24sIF9zdXBlcik7CiAgICBmdW5jdGlvbiBMaXN0c1NlY3Rpb24oKSB7CiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcykgfHwgdGhpczsKICAgICAgICBfdGhpcy5oYW5kbGVSZWYgPSBmdW5jdGlvbiAobWVudSkgewogICAgICAgICAgICBfdGhpcy5tZW51ID0gbWVudTsKICAgICAgICB9OwogICAgICAgIC8vIElkZW50aWZ5IHdoaWNoIHRhYnMgdG8gZGlzcGxheQogICAgICAgIF90aGlzLmRpc3BsYXllZFRhYnMgPSBmdW5jdGlvbiAodGFicykgewogICAgICAgICAgICB2YXIgZXhwYW5kZWRLZXlzID0gX3RoaXMuc3RhdGUuZXhwYW5kZWRLZXlzOwogICAgICAgICAgICByZXR1cm4gdGFicy5maWx0ZXIoZnVuY3Rpb24gKHRhYikgewogICAgICAgICAgICAgICAgaWYgKHRhYi5saXN0TGV2ZWwgPT09IDApIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGlmICh0YWIucGFyZW50TGlzdCAmJiBleHBhbmRlZEtleXNbdGFiLnBhcmVudExpc3RdKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgICAgIH0pOwogICAgICAgIH07CiAgICAgICAgX3RoaXMudG9nZ2xlSXRlbUV4cGFuc2lvbiA9IGZ1bmN0aW9uIChrZXkpIHsKICAgICAgICAgICAgdmFyIHRhYnMgPSBfdGhpcy5wcm9wcy50YWJzOwogICAgICAgICAgICB2YXIgZXhwYW5kZWRLZXlzID0gY2xvbmVEZWVwKF90aGlzLnN0YXRlLmV4cGFuZGVkS2V5cyk7CiAgICAgICAgICAgIHZhciBleHBhbmRlZCA9ICFleHBhbmRlZEtleXNba2V5XTsKICAgICAgICAgICAgLy8gV2hlbiBjbG9zaW5nLCBjbG9zZSBhbGwgZXhwYW5kZWQgbGlzdHMKICAgICAgICAgICAgaWYgKCFleHBhbmRlZCkgewogICAgICAgICAgICAgICAgdmFyIGxpc3RzID0gY29tcGFjdCh0YWJzLm1hcChmdW5jdGlvbiAodGFiKSB7IHJldHVybiB0YWIubGlzdDsgfSkpOwogICAgICAgICAgICAgICAgdmFyIG1hdGNoZWRUYWIgPSB0YWJzLmZpbHRlcihmdW5jdGlvbiAodGFiKSB7IHJldHVybiB0YWIubGlzdCAmJiB0YWIubGlzdC5pZCA9PT0ga2V5OyB9KVswXTsKICAgICAgICAgICAgICAgIHZhciBkZXNjZW5kYW50TGlzdHMgPSBtYXRjaGVkVGFiICYmIG1hdGNoZWRUYWIubGlzdCAmJiBkZXNjZW5kYW50cyhtYXRjaGVkVGFiLmxpc3QsIGxpc3RzKTsKICAgICAgICAgICAgICAgIGlmIChkZXNjZW5kYW50TGlzdHMgJiYgZGVzY2VuZGFudExpc3RzLmxlbmd0aCkgewogICAgICAgICAgICAgICAgICAgIGRlc2NlbmRhbnRMaXN0cy5mb3JFYWNoKGZ1bmN0aW9uIChsaXN0KSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChleHBhbmRlZEtleXNbbGlzdC5pZF0pIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4cGFuZGVkS2V5c1tsaXN0LmlkXSA9IGZhbHNlOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZXhwYW5kZWRLZXlzW2tleV0gPSAhZXhwYW5kZWRLZXlzW2tleV07CiAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHsgZXhwYW5kZWRLZXlzOiBleHBhbmRlZEtleXMgfSk7CiAgICAgICAgfTsKICAgICAgICBfdGhpcy5oYW5kbGVDb2xsYXBzZSA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgdmFyIF9hID0gX3RoaXMucHJvcHMsIGNvbGxhcHNlTGlzdHMgPSBfYS5jb2xsYXBzZUxpc3RzLCBjb2xsYXBzZWQgPSBfYS5jb2xsYXBzZWQ7CiAgICAgICAgICAgIGNvbGxhcHNlTGlzdHMoIWNvbGxhcHNlZCk7CiAgICAgICAgfTsKICAgICAgICAvLyBIYW5kbGVzIHVwZGF0aW5nIGxpc3QgYW5kIGFsbCBkZXNjZW5kYW50IGxpc3RzCiAgICAgICAgLy8gSGFuZGxlIGdyYW5kc29uIG5hbWUgdXBkYXRlcwogICAgICAgIF90aGlzLmhhbmRsZUxpc3RVcGRhdGUgPSBmdW5jdGlvbiAob2xkTGlzdCwgbmV3TmFtZSkgewogICAgICAgICAgICB2YXIgX2EgPSBfdGhpcy5wcm9wcywgdXBkYXRlTGlzdCA9IF9hLnVwZGF0ZUxpc3QsIHNldFRvYXN0ID0gX2Euc2V0VG9hc3Q7CiAgICAgICAgICAgIC8vIERvIG5vdCBhbGxvdyBpZiBsaXN0IHN0YXR1cyBpcyBub3Qgb2sKICAgICAgICAgICAgaWYgKG9sZExpc3Quc3RhdHVzICE9PSBMaXN0U3RhdHVzLk9rKSB7CiAgICAgICAgICAgICAgICBzZXRUb2FzdChuZXcgRXJyb3IoJ1RoaXMgbGFiZWwgaXMgY3VycmVudGx5IHVwZGF0aW5nLCBwbGVhc2Ugd2FpdCBhbmQgdHJ5IGFnYWluIGxhdGVyIScpKTsKICAgICAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgICAgfQogICAgICAgICAgICAvLyBHcmFiIG1hdGNoZWQgdGFicwogICAgICAgICAgICB2YXIgdGFicyA9IGNsb25lRGVlcChfdGhpcy5wcm9wcy50YWJzKTsKICAgICAgICAgICAgdmFyIHVwZGF0ZWRMaXN0cyA9IHJlY3Vyc2l2ZWx5UmVuYW1lZExpc3RzKG9sZExpc3QsIG5ld05hbWUsIHRhYnMpOwogICAgICAgICAgICAvLyBEbyBub3QgYWxsb3cgaWYgbGlzdCBzdGF0dXMgaXMgbm90IG9rCiAgICAgICAgICAgIGlmICh1cGRhdGVkTGlzdHMgJiYgdXBkYXRlZExpc3RzLmZpbHRlcihmdW5jdGlvbiAobCkgeyByZXR1cm4gbC5zdGF0dXMgIT09IExpc3RTdGF0dXMuT2s7IH0pLmxlbmd0aCkgewogICAgICAgICAgICAgICAgc2V0VG9hc3QobmV3IEVycm9yKCdUaGlzIGxhYmVsIGlzIGN1cnJlbnRseSB1cGRhdGluZywgcGxlYXNlIHdhaXQgYW5kIHRyeSBhZ2FpbiBsYXRlciEnKSk7CiAgICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKHVwZGF0ZWRMaXN0cyAmJiB1cGRhdGVkTGlzdHMubGVuZ3RoKSB7CiAgICAgICAgICAgICAgICB1cGRhdGVkTGlzdHMuZm9yRWFjaChmdW5jdGlvbiAobCkgeyByZXR1cm4gdXBkYXRlTGlzdChsKTsgfSk7CiAgICAgICAgICAgIH0KICAgICAgICB9OwogICAgICAgIF90aGlzLmhhbmRsZUxpc3RDcmVhdGUgPSBmdW5jdGlvbiAobmFtZSkgewogICAgICAgICAgICB2YXIgY3JlYXRlTGlzdCA9IF90aGlzLnByb3BzLmNyZWF0ZUxpc3Q7CiAgICAgICAgICAgIGlmIChjcmVhdGVMaXN0KSB7CiAgICAgICAgICAgICAgICBjcmVhdGVMaXN0KG5hbWUpOwogICAgICAgICAgICB9CiAgICAgICAgfTsKICAgICAgICBfdGhpcy5oYW5kbGVMaXN0RGVsZXRlID0gZnVuY3Rpb24gKGxpc3QpIHsKICAgICAgICAgICAgdmFyIF9hID0gX3RoaXMucHJvcHMsIGRlbGV0ZUxpc3QgPSBfYS5kZWxldGVMaXN0LCBzZXRUb2FzdCA9IF9hLnNldFRvYXN0OwogICAgICAgICAgICB2YXIgY29uZmlybVByb3BzID0gewogICAgICAgICAgICAgICAgdGl0bGU6ICdBcmUgeW91IHN1cmUgeW91IHdhbnQgdG8gZGVsZXRlIHRoaXMgTGFiZWw/JywKICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICdUaGlzIGxhYmVsIGFuZCBhbGwgaXRzIHN1YmxhYmVscyB3aWxsIGJlIHJlbW92ZWQuIEFueSAnCiAgICAgICAgICAgICAgICAgICAgKyAnZW1haWxzIGNvbnRhaW5lZCBpbiB0aGVzZSBsYWJlbHMgd2lsbCBiZSBtb3ZlZCBpbnRvIEFyY2hpdmUuICcKICAgICAgICAgICAgICAgICAgICArICdUaGlzIGNhbm5vdCBiZSB1bmRvbmUnLAogICAgICAgICAgICAgICAgY29uZmlybUNvcHk6ICdEZWxldGUnLAogICAgICAgICAgICAgICAgb25Db25maXJtOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoeyBjb25maXJtUHJvcHM6IHVuZGVmaW5lZCB9KTsKICAgICAgICAgICAgICAgICAgICAvLyBHcmFiIG1hdGNoZWQgdGFicwogICAgICAgICAgICAgICAgICAgIHZhciB0YWJzID0gY2xvbmVEZWVwKF90aGlzLnByb3BzLnRhYnMpOwogICAgICAgICAgICAgICAgICAgIHZhciBtYXRjaGVkVGFiID0gdGFicy5maWx0ZXIoZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHQubGlzdCAmJiB0Lmxpc3QuaWQgPT09IGxpc3QuaWQ7IH0pWzBdOwogICAgICAgICAgICAgICAgICAgIGlmICghbWF0Y2hlZFRhYikgewogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIC8vIEdyYWIgYW55IGRlc2NlbmRhbnQgbGlzdHMKICAgICAgICAgICAgICAgICAgICB2YXIgbGlzdExldmVsID0gbWF0Y2hlZFRhYi5saXN0TGV2ZWwgfHwgMDsKICAgICAgICAgICAgICAgICAgICB2YXIgbGlzdHMgPSBjb21wYWN0KHRhYnMKICAgICAgICAgICAgICAgICAgICAgICAgLmZpbHRlcihmdW5jdGlvbiAodCkgeyByZXR1cm4gdCAmJiB0Lmxpc3RMZXZlbCAmJiB0Lmxpc3RMZXZlbCA+IGxpc3RMZXZlbCB8fCBmYWxzZTsgfSkKICAgICAgICAgICAgICAgICAgICAgICAgLm1hcChmdW5jdGlvbiAodCkgeyByZXR1cm4gdCAmJiB0Lmxpc3Q7IH0pKTsKICAgICAgICAgICAgICAgICAgICAvLyBHcmFiIG1hdGNoZWQgbGlzdAogICAgICAgICAgICAgICAgICAgIHZhciBtYXRjaGVkID0gdGFicy5tYXAoZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHQubGlzdDsgfSkuZmlsdGVyKGZ1bmN0aW9uIChsKSB7IHJldHVybiBsICYmIGwuaWQgPT09IGxpc3QuaWQ7IH0pWzBdOwogICAgICAgICAgICAgICAgICAgIGlmICghbWF0Y2hlZCkgewogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIC8vIEdhdGhlciBkZXNjZW5kYW50cyBhbmQgY2FsbCBkZWxldGVzIGZvciBhbGwgbGlzdHMKICAgICAgICAgICAgICAgICAgICB2YXIgZGVzY2VuZGFudExpc3RzID0gZGVzY2VuZGFudHMobWF0Y2hlZCwgbGlzdHMpOwogICAgICAgICAgICAgICAgICAgIHZhciBkZWxldGVMaXN0cyA9IF9fc3ByZWFkQXJyYXlzKGRlc2NlbmRhbnRMaXN0cywgW2xpc3RdKTsKICAgICAgICAgICAgICAgICAgICAvLyBEbyBub3QgYWxsb3cgaWYgbGlzdCBzdGF0dXMgaXMgbm90IG9rCiAgICAgICAgICAgICAgICAgICAgaWYgKGRlbGV0ZUxpc3RzLmZpbHRlcihmdW5jdGlvbiAobCkgeyByZXR1cm4gbC5zdGF0dXMgIT09IExpc3RTdGF0dXMuT2s7IH0pLmxlbmd0aCkgewogICAgICAgICAgICAgICAgICAgICAgICBzZXRUb2FzdChuZXcgRXJyb3IoJ1RoaXMgbGFiZWwgaXMgY3VycmVudGx5IHVwZGF0aW5nLCBwbGVhc2Ugd2FpdCBhbmQgdHJ5IGFnYWluIGxhdGVyIScpKTsKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBpZiAoZGVsZXRlTGlzdCkgewogICAgICAgICAgICAgICAgICAgICAgICBkZWxldGVMaXN0cy5mb3JFYWNoKGZ1bmN0aW9uIChsKSB7IHJldHVybiBkZWxldGVMaXN0KGwpOyB9KTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgb25DYW5jZWw6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIF90aGlzLnNldFN0YXRlKHsgY29uZmlybVByb3BzOiB1bmRlZmluZWQgfSk7IH0sCiAgICAgICAgICAgIH07CiAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHsgY29uZmlybVByb3BzOiBjb25maXJtUHJvcHMgfSk7CiAgICAgICAgfTsKICAgICAgICBfdGhpcy5oYW5kbGVMaXN0TWVudSA9IGZ1bmN0aW9uIChlKSB7CiAgICAgICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7CiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTsKICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoeyBzaG93TWVudTogdHJ1ZSB9LCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICBfdGhpcy5tZW51LnRvZ2dsZSgpOwogICAgICAgICAgICB9KTsKICAgICAgICB9OwogICAgICAgIF90aGlzLmhhbmRsZU1lbnVIaWRlID0gZnVuY3Rpb24gKCkgewogICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IHNob3dNZW51OiBmYWxzZSB9KTsKICAgICAgICB9OwogICAgICAgIF90aGlzLnN0YXRlID0geyBleHBhbmRlZEtleXM6IHt9IH07CiAgICAgICAgcmV0dXJuIF90aGlzOwogICAgfQogICAgTGlzdHNTZWN0aW9uLnByb3RvdHlwZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50ID0gZnVuY3Rpb24gKCkgewogICAgICAgIHZhciB0YWJzID0gdGhpcy5wcm9wcy50YWJzOwogICAgICAgIHZhciBleHBhbmRlZEtleXMgPSB7fTsKICAgICAgICB0YWJzLmZvckVhY2goZnVuY3Rpb24gKHRhYikgewogICAgICAgICAgICAvLyBTZXQgZXhwYW5kYWJsZSBrZXlzCiAgICAgICAgICAgIGlmICh0YWIubGlzdCAmJiB0YWIubGlzdExldmVsID09PSAwKSB7CiAgICAgICAgICAgICAgICBleHBhbmRlZEtleXNbdGFiLmxpc3QuaWRdID0gZmFsc2U7CiAgICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgICB0aGlzLnNldFN0YXRlKHsKICAgICAgICAgICAgZXhwYW5kZWRLZXlzOiBleHBhbmRlZEtleXMsCiAgICAgICAgfSk7CiAgICB9OwogICAgTGlzdHNTZWN0aW9uLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgdmFyIF90aGlzID0gdGhpczsKICAgICAgICB2YXIgX2EgPSB0aGlzLnN0YXRlLCBleHBhbmRlZEtleXMgPSBfYS5leHBhbmRlZEtleXMsIGNvbmZpcm1Qcm9wcyA9IF9hLmNvbmZpcm1Qcm9wcywgc2hvd01lbnUgPSBfYS5zaG93TWVudTsKICAgICAgICB2YXIgX2IgPSB0aGlzLnByb3BzLCBzZWxlY3RlZFRhYiA9IF9iLnNlbGVjdGVkVGFiLCBzZWxlY3RlZEFjY291bnQgPSBfYi5zZWxlY3RlZEFjY291bnQsIGNvbGxhcHNlZCA9IF9iLmNvbGxhcHNlZDsKICAgICAgICB2YXIgZGlzcGxheWVkVGFicyA9IHRoaXMuZGlzcGxheWVkVGFicyh0aGlzLnByb3BzLnRhYnMpOwogICAgICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2IiwgeyBjbGFzc05hbWU6IGNsYXNzbmFtZXMoJ2xlZnQtc2lkZWJhci1zZWN0aW9uJywgeyBjb2xsYXBzZWQ6IGNvbGxhcHNlZCB9KSB9LAogICAgICAgICAgICBjb25maXJtUHJvcHMgJiYgUmVhY3QuY3JlYXRlRWxlbWVudChDb25maXJtLCBfX2Fzc2lnbih7fSwgY29uZmlybVByb3BzKSksCiAgICAgICAgICAgIHNob3dNZW51ICYmCiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KExpc3RNZW51LCB7IG5hbWU6IG5hbWUsIHJlZjogdGhpcy5oYW5kbGVSZWYsIG9uQ3JlYXRlTGlzdDogdGhpcy5oYW5kbGVMaXN0Q3JlYXRlLCBvbkhpZGU6IHRoaXMuaGFuZGxlTWVudUhpZGUsIGZvcmNlQWN0aW9uOiBMaXN0QWN0aW9uLkNyZWF0ZSB9KSwKICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudCgiYnV0dG9uIiwgeyBvbkNsaWNrOiB0aGlzLmhhbmRsZUNvbGxhcHNlLCBjbGFzc05hbWU6ICJtaWRkbGUiIH0sCiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KCJzcGFuIiwgbnVsbCwKICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KERpc2Nsb3N1cmUsIG51bGwpKSwKICAgICAgICAgICAgICAgICJMQUJFTFMiLAogICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2IiwgeyBjbGFzc05hbWU6ICJjcmVhdGUtbGlzdCIsIG9uQ2xpY2s6IHRoaXMuaGFuZGxlTGlzdE1lbnUgfSwKICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFBsdXMsIG51bGwpKSksCiAgICAgICAgICAgIGNvbGxhcHNlZCAmJiBzb3J0QnkoZGlzcGxheWVkVGFicywgZnVuY3Rpb24gKHRhYikgeyByZXR1cm4gdGFiLnNvcnRJZGVudGlmaWVyOyB9KS5tYXAoZnVuY3Rpb24gKGl0ZW1Qcm9wcykgewogICAgICAgICAgICAgICAgLy8gSWRlbnRpZnkgbmFtZSBhbmQgcG9zc2libGUgc3RhdGVzIG9mIExTQiBpdGVtCiAgICAgICAgICAgICAgICB2YXIga2V5ID0gaXRlbVByb3BzLmtleTsKICAgICAgICAgICAgICAgIHZhciBleHBhbmRlZCA9IGl0ZW1Qcm9wcy5saXN0ICYmIGV4cGFuZGVkS2V5c1tpdGVtUHJvcHMubGlzdC5pZF0gfHwgZmFsc2U7CiAgICAgICAgICAgICAgICB2YXIgZXhwYW5kYWJsZSA9IGl0ZW1Qcm9wcy5kZXNjZW5kYW50cyB8fCBmYWxzZTsKICAgICAgICAgICAgICAgIHZhciBpbmRlbnQgPSBpdGVtUHJvcHMubGlzdExldmVsIHx8IDA7CiAgICAgICAgICAgICAgICAvLyBNYXBzIGVhY2ggdGFiIGludG8gSFRNTAogICAgICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTGlzdEl0ZW0sIF9fYXNzaWduKHt9LCBpdGVtUHJvcHMsIHsgbGlzdDogaXRlbVByb3BzLmxpc3QsIGxpc3RJZDogaXRlbVByb3BzLmxpc3QgJiYgaXRlbVByb3BzLmxpc3QuaWQsIHNlbGVjdGVkOiBzZWxlY3RlZFRhYiA9PT0ga2V5LCBpbmRlbnQ6IGluZGVudCwgZXhwYW5kYWJsZTogZXhwYW5kYWJsZSwgZXhwYW5kZWQ6IGV4cGFuZGVkLCBvbkV4cGFuZDogX3RoaXMudG9nZ2xlSXRlbUV4cGFuc2lvbiwga2V5OiBpdGVtUHJvcHMua2V5LCBsaW5rOiAiL21haWwvIiArIHNlbGVjdGVkQWNjb3VudC5pZCArICIvbGlzdHMvIiArIGtleSwgb25DcmVhdGU6IF90aGlzLmhhbmRsZUxpc3RDcmVhdGUsIG9uVXBkYXRlOiBfdGhpcy5oYW5kbGVMaXN0VXBkYXRlLCBvbkRlbGV0ZTogX3RoaXMuaGFuZGxlTGlzdERlbGV0ZSwgZWRpdGFibGU6IGl0ZW1Qcm9wcy5zb3J0SWRlbnRpZmllciAmJgogICAgICAgICAgICAgICAgICAgICAgICBpdGVtUHJvcHMuc29ydElkZW50aWZpZXIuc3RhcnRzV2l0aCgnMycpIHx8IHVuZGVmaW5lZCB9KSk7CiAgICAgICAgICAgIH0pKSk7CiAgICB9OwogICAgcmV0dXJuIExpc3RzU2VjdGlvbjsKfShSZWFjdC5QdXJlQ29tcG9uZW50KSk7CmV4cG9ydCBkZWZhdWx0IExpc3RzU2VjdGlvbjsK"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/LeftSidebar/components/MailTab/components/Section/ListsSection/ListsSection.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/LeftSidebar/components/MailTab/components/Section/ListsSection/ListsSection.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport { sortBy, compact, cloneDeep } from 'lodash';\nimport { ListItem } from '../Item/ListItem';\nimport ListMenu, { ListAction } from '../Item/ListMenu';\nimport { Tab, Account, List, ListStatus } from '@src/types';\nimport Disclosure from '@src/components/Icons/Disclosure.svg';\nimport Plus from '@src/components/Icons/Plus.svg';\n\nimport { descendants, recursivelyRenamedLists } from '@src/lib/mailbox';\nimport Confirm, { Props as ConfirmProps } from '@src/components/Base/Confirm';\nimport './ListSection.scss';\n\nexport interface Props {\n  title: string;\n  selectedTab: string;\n  tabs: Tab[];\n  selectedAccount: Account;\n}\n\nexport interface StateProps {\n  collapsed: boolean;\n}\n\nexport interface DispatchProps {\n  updateList: (list: List) => void;\n  deleteList: (list: List) => void;\n  createList: (name: string) => void;\n  collapseLists: (collapse: boolean) => void;\n  setToast: (msg: Error) => void;\n}\n\n// Internal state for account/title\ninterface State {\n  expandedKeys: { [id: string]: boolean; };\n  confirmProps?: ConfirmProps;\n  showMenu?: boolean;\n}\n\n// LeftSidebar Section\nclass ListsSection extends React.PureComponent<Props & DispatchProps & StateProps, State> {\n  menu: ListMenu;\n\n  constructor() {\n    super();\n\n    this.state = { expandedKeys: {} };\n  }\n\n  UNSAFE_componentWillMount() {\n    const { tabs } = this.props;\n    const expandedKeys = {};\n\n    tabs.forEach((tab) => {\n      // Set expandable keys\n      if (tab.list && tab.listLevel === 0) {\n        expandedKeys[tab.list.id] = false;\n      }\n    });\n\n    this.setState({\n      expandedKeys,\n    });\n  }\n\n  handleRef = (menu: ListMenu) => {\n    this.menu = menu;\n  }\n\n  // Identify which tabs to display\n  displayedTabs = (tabs: Tab[]) => {\n    const { expandedKeys } = this.state;\n\n    return tabs.filter((tab) => {\n      if (tab.listLevel === 0) {\n        return true;\n      }\n\n      if (tab.parentList && expandedKeys[tab.parentList]) {\n        return true;\n      }\n\n      return false;\n\n    });\n  }\n\n  toggleItemExpansion = (key: string) => {\n    const { tabs } = this.props;\n    const expandedKeys = cloneDeep(this.state.expandedKeys);\n    const expanded = !expandedKeys[key];\n\n    // When closing, close all expanded lists\n    if (!expanded) {\n      const lists = compact(tabs.map(tab => tab.list));\n      const matchedTab = tabs.filter(tab => tab.list && tab.list.id === key)[0];\n      const descendantLists = matchedTab && matchedTab.list && descendants(matchedTab.list, lists);\n      if (descendantLists && descendantLists.length) {\n        descendantLists.forEach((list) => {\n          if (expandedKeys[list.id]) {\n            expandedKeys[list.id] = false;\n          }\n        });\n      }\n    }\n    expandedKeys[key] = !expandedKeys[key];\n    this.setState({ expandedKeys });\n  }\n\n  handleCollapse = () => {\n    const { collapseLists, collapsed } = this.props;\n\n    collapseLists(!collapsed);\n  }\n\n  // Handles updating list and all descendant lists\n  // Handle grandson name updates\n  handleListUpdate = (oldList: List, newName: string) => {\n    const { updateList, setToast } = this.props;\n\n    // Do not allow if list status is not ok\n    if (oldList.status !== ListStatus.Ok) {\n      setToast(new Error('This label is currently updating, please wait and try again later!'));\n      return;\n    }\n\n    // Grab matched tabs\n    const tabs = cloneDeep(this.props.tabs);\n\n    const updatedLists = recursivelyRenamedLists(oldList, newName, tabs);\n\n    // Do not allow if list status is not ok\n    if (updatedLists && updatedLists.filter(l => l.status !== ListStatus.Ok).length) {\n      setToast(new Error('This label is currently updating, please wait and try again later!'));\n      return;\n    }\n\n    if (updatedLists && updatedLists.length) {\n      updatedLists.forEach(l => updateList(l));\n    }\n  }\n\n  handleListCreate = (name: string) => {\n    const { createList } = this.props;\n    if (createList) {\n      createList(name);\n    }\n  }\n\n  handleListDelete = (list: List) => {\n    const { deleteList, setToast } = this.props;\n\n    const confirmProps: ConfirmProps = {\n      title: 'Are you sure you want to delete this Label?',\n      message: 'This label and all its sublabels will be removed. Any '\n        + 'emails contained in these labels will be moved into Archive. '\n        + 'This cannot be undone',\n      confirmCopy: 'Delete',\n      onConfirm: () => {\n        this.setState({ confirmProps: undefined });\n\n        // Grab matched tabs\n        const tabs = cloneDeep(this.props.tabs);\n        const matchedTab = tabs.filter(t => t.list && t.list.id === list.id)[0];\n        if (!matchedTab) {\n          return;\n        }\n\n        // Grab any descendant lists\n        const listLevel = matchedTab.listLevel || 0;\n        const lists = compact(tabs\n          .filter(t => t && t.listLevel && t.listLevel > listLevel || false)\n          .map(t => t && t.list),\n        );\n\n        // Grab matched list\n        const matched = tabs.map(t => t.list).filter(l => l && l.id === list.id)[0];\n        if (!matched) {\n          return;\n        }\n\n        // Gather descendants and call deletes for all lists\n        const descendantLists = descendants(matched, lists);\n        const deleteLists = [...descendantLists, list];\n\n        // Do not allow if list status is not ok\n        if (deleteLists.filter(l => l.status !== ListStatus.Ok).length) {\n          setToast(new Error('This label is currently updating, please wait and try again later!'));\n          return;\n        }\n\n        if (deleteList) {\n          deleteLists.forEach(l => deleteList(l));\n        }\n      },\n      onCancel: () => this.setState({ confirmProps: undefined }),\n    };\n\n    this.setState({ confirmProps });\n  }\n\n  handleListMenu = (e: React.MouseEvent<HTMLElement>) => {\n    e.stopPropagation();\n    e.preventDefault();\n    this.setState(\n      { showMenu: true },\n      () => {\n        this.menu.toggle();\n      },\n    );\n  }\n\n  handleMenuHide = () => {\n    this.setState({ showMenu: false });\n  }\n\n  render() {\n    const { expandedKeys, confirmProps, showMenu } = this.state;\n    const { selectedTab, selectedAccount, collapsed } = this.props;\n    const displayedTabs = this.displayedTabs(this.props.tabs);\n\n    return (\n      <div className={classnames('left-sidebar-section', { collapsed })}>\n        {confirmProps && <Confirm {...confirmProps} />}\n        {showMenu &&\n          <ListMenu\n            name={name}\n            ref={this.handleRef}\n            onCreateList={this.handleListCreate}\n            onHide={this.handleMenuHide}\n            forceAction={ListAction.Create}\n          />\n        }\n        <button onClick={this.handleCollapse} className=\"middle\">\n          <span><Disclosure /></span>\n          LABELS\n          <div\n            className=\"create-list\"\n            onClick={this.handleListMenu}\n          >\n            <Plus />\n          </div>\n        </button>\n        {collapsed && sortBy(displayedTabs, tab => tab.sortIdentifier).map((itemProps) => {\n          // Identify name and possible states of LSB item\n          const key = itemProps.key;\n          const expanded = itemProps.list && expandedKeys[itemProps.list.id] || false;\n          const expandable = itemProps.descendants || false;\n          const indent = itemProps.listLevel || 0;\n\n          // Maps each tab into HTML\n          return <ListItem\n            {...itemProps}\n            list={itemProps.list!}\n            listId={itemProps.list && itemProps.list.id}\n            selected={selectedTab === key}\n            indent={indent}\n            expandable={expandable}\n            expanded={expanded}\n            onExpand={this.toggleItemExpansion}\n            key={itemProps.key}\n            link={`/mail/${selectedAccount.id}/lists/${key}`}\n            onCreate={this.handleListCreate}\n            onUpdate={this.handleListUpdate}\n            onDelete={this.handleListDelete}\n            editable={itemProps.sortIdentifier &&\n              itemProps.sortIdentifier.startsWith('3') || undefined\n            }\n          />;\n        })}\n      </div>\n    );\n  }\n}\n\nexport default ListsSection;\n"]}]}