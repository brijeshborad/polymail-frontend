{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/analytics.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/analytics.ts","mtime":1675280254054},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgQWN0aW9uU3RhdHVzLCB9IGZyb20gJ0BzcmMvdHlwZXMnOwppbXBvcnQgeyBTRVFVRU5DRV9DUkVBVEUsIFNFUVVFTkNFX1VQREFURSB9IGZyb20gJ0BzcmMvZHVja3Mvc2VxdWVuY2VzJzsKaW1wb3J0IHsgcmVjb3JkRXZlbnQsIFVzZXJFdmVudHMgfSBmcm9tICdAc3JjL2xpYi9hbmFseXRpY3MnOwppbXBvcnQgeyBTRVFVRU5DRV9SRUNJUElFTlRfVVBEQVRFLCB9IGZyb20gJ0BzcmMvZHVja3Mvc2VxdWVuY2VSZWNpcGllbnRzJzsKaW1wb3J0IHsgU0VRVUVOQ0VfU1RBR0VfQ1JFQVRFIH0gZnJvbSAnQHNyYy9kdWNrcy9zZXF1ZW5jZVN0YWdlcyc7CmltcG9ydCB7IHllYXJseVN1bW1hcnlGZXRjaCwgWUVBUkxZX1NVTU1BUllfRkVUQ0gsIHllYXJseVN1bW1hcnlSZWFkLCBZRUFSTFlfU1VNTUFSWV9SRUFELCB9IGZyb20gJ0BzcmMvZHVja3MvYW5hbHl0aWNzJzsKaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnOwp2YXIgeWVhcmx5U3VtbWFyeUZldGNoRXBpYyA9IGZ1bmN0aW9uIChhY3Rpb24kLCBzdG9yZSwgZGVwcykgewogICAgcmV0dXJuIGFjdGlvbiQub2ZUeXBlKFlFQVJMWV9TVU1NQVJZX0ZFVENIKQogICAgICAgIC5maWx0ZXIoZnVuY3Rpb24gKGFjdGlvbikgeyByZXR1cm4gYWN0aW9uLnN0YXR1cyA9PT0gQWN0aW9uU3RhdHVzLlN0YXJ0OyB9KQogICAgICAgIC5mbGF0TWFwKGZ1bmN0aW9uIChhY3Rpb24pIHsKICAgICAgICByZXR1cm4gZGVwcy5hbmFseXRpY3MuZ2V0WWVhcmx5U3VtbWFyeSgyMDIwKQogICAgICAgICAgICAubWFwKGZ1bmN0aW9uIChzdGF0cykgeyByZXR1cm4geWVhcmx5U3VtbWFyeUZldGNoKGFjdGlvbi5tZXRhLCBzdGF0cyk7IH0pCiAgICAgICAgICAgIC5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsgcmV0dXJuIE9ic2VydmFibGUub2YoeWVhcmx5U3VtbWFyeUZldGNoKGFjdGlvbi5tZXRhLCBlcnJvcikpOyB9KTsKICAgIH0pOwp9Owp2YXIgeWVhcmx5U3VtbWFyeVJlYWRFcGljID0gZnVuY3Rpb24gKGFjdGlvbiQsIHN0b3JlLCBkZXBzKSB7CiAgICByZXR1cm4gYWN0aW9uJC5vZlR5cGUoWUVBUkxZX1NVTU1BUllfUkVBRCkKICAgICAgICAuZmlsdGVyKGZ1bmN0aW9uIChhY3Rpb24pIHsgcmV0dXJuIGFjdGlvbi5zdGF0dXMgPT09IEFjdGlvblN0YXR1cy5TdGFydDsgfSkKICAgICAgICAuZmxhdE1hcChmdW5jdGlvbiAoYWN0aW9uKSB7CiAgICAgICAgcmV0dXJuIGRlcHMuYW5hbHl0aWNzLnJlYWRZZWFybHlTdW1tYXJ5KDIwMjApCiAgICAgICAgICAgIC5tYXAoZnVuY3Rpb24gKHN0YXRzKSB7IHJldHVybiB5ZWFybHlTdW1tYXJ5UmVhZChhY3Rpb24ubWV0YSwgc3RhdHMpOyB9KTsKICAgIH0pOwp9Owp2YXIgc2VxdWVuY2VDcmVhdGVBbmFseXRpYyA9IGZ1bmN0aW9uIChhY3Rpb24kLCBzdG9yZSwgZGVwcykgewogICAgcmV0dXJuIGFjdGlvbiQub2ZUeXBlKFNFUVVFTkNFX0NSRUFURSkKICAgICAgICAuZmlsdGVyKGZ1bmN0aW9uIChhY3Rpb24pIHsgcmV0dXJuIGFjdGlvbi5zdGF0dXMgPT09IEFjdGlvblN0YXR1cy5TdWNjZXNzOyB9KQogICAgICAgIC5kbyhmdW5jdGlvbiAoYWN0aW9uKSB7CiAgICAgICAgdmFyIHBheWxvYWQgPSBhY3Rpb24ucGF5bG9hZDsKICAgICAgICByZWNvcmRFdmVudChVc2VyRXZlbnRzLlNlcXVlbmNlQ3JlYXRlZCwgewogICAgICAgICAgICB0ZWFtOiBwYXlsb2FkICYmIHBheWxvYWQudGVhbSwKICAgICAgICB9KTsKICAgIH0pCiAgICAgICAgLmZpbHRlcihmdW5jdGlvbiAoKSB7IHJldHVybiBmYWxzZTsgfSk7Cn07CnZhciBzZXF1ZW5jZVVwZGF0ZUFuYWx5dGljID0gZnVuY3Rpb24gKGFjdGlvbiQsIHN0b3JlLCBkZXBzKSB7CiAgICByZXR1cm4gYWN0aW9uJC5vZlR5cGUoU0VRVUVOQ0VfVVBEQVRFKQogICAgICAgIC5maWx0ZXIoZnVuY3Rpb24gKGFjdGlvbikgeyByZXR1cm4gYWN0aW9uLnN0YXR1cyA9PT0gQWN0aW9uU3RhdHVzLlN1Y2Nlc3M7IH0pCiAgICAgICAgLmRvKGZ1bmN0aW9uIChhY3Rpb24pIHsKICAgICAgICB2YXIgbWV0YSA9IGFjdGlvbi5tZXRhLCBwYXlsb2FkID0gYWN0aW9uLnBheWxvYWQ7CiAgICAgICAgdmFyIHN0YXRlID0gc3RvcmUuZ2V0U3RhdGUoKTsKICAgICAgICB2YXIgb2xkID0gc3RhdGUuc2VxdWVuY2VzW21ldGEuaWRdICYmIHN0YXRlLnNlcXVlbmNlc1ttZXRhLmlkXS5kYXRhOwogICAgICAgIGlmIChvbGQgJiYgb2xkLnBhdXNlZCAmJiAhbWV0YS5wYXVzZWQpIHsKICAgICAgICAgICAgcmVjb3JkRXZlbnQoVXNlckV2ZW50cy5TZXF1ZW5jZUFjdGl2YXRlZCwgewogICAgICAgICAgICAgICAgc2VxdWVuY2U6IG1ldGEuaWQsCiAgICAgICAgICAgICAgICB0ZWFtOiBwYXlsb2FkICYmIHBheWxvYWQudGVhbSwKICAgICAgICAgICAgfSk7CiAgICAgICAgfQogICAgfSkKICAgICAgICAuZmlsdGVyKGZ1bmN0aW9uICgpIHsgcmV0dXJuIGZhbHNlOyB9KTsKfTsKdmFyIHNlcXVlbmNlUmVjaXBpZW50VXBkYXRlQW5hbHl0aWMgPSBmdW5jdGlvbiAoYWN0aW9uJCwgc3RvcmUsIGRlcHMpIHsKICAgIHJldHVybiBhY3Rpb24kLm9mVHlwZShTRVFVRU5DRV9SRUNJUElFTlRfVVBEQVRFKQogICAgICAgIC5maWx0ZXIoZnVuY3Rpb24gKGFjdGlvbikgeyByZXR1cm4gYWN0aW9uLnN0YXR1cyA9PT0gQWN0aW9uU3RhdHVzLlN0YXJ0OyB9KQogICAgICAgIC5kbyhmdW5jdGlvbiAoYWN0aW9uKSB7CiAgICAgICAgdmFyIG1ldGEgPSBhY3Rpb24ubWV0YTsKICAgICAgICB2YXIgc3RhdGUgPSBzdG9yZS5nZXRTdGF0ZSgpOwogICAgICAgIHZhciBvbGQgPSBzdGF0ZS5zZXF1ZW5jZVJlY2lwaWVudHNbbWV0YS5zZXF1ZW5jZV1bbWV0YS5pZF0uZGF0YTsKICAgICAgICBpZiAob2xkICYmIG9sZC5wYXVzZWQgJiYgbWV0YS5wYXVzZWQgIT09IHVuZGVmaW5lZCAmJiAhbWV0YS5wYXVzZWQpIHsKICAgICAgICAgICAgcmVjb3JkRXZlbnQoVXNlckV2ZW50cy5TZXF1ZW5jZVJlY2lwaWVudEFjdGl2YXRlZCwgewogICAgICAgICAgICAgICAgc2VxdWVuY2U6IG1ldGEuaWQsCiAgICAgICAgICAgICAgICB0ZWFtOiBzdGF0ZS5zZXF1ZW5jZXNbbWV0YS5zZXF1ZW5jZV0gJiYgc3RhdGUuc2VxdWVuY2VzW21ldGEuc2VxdWVuY2VdLmRhdGEgJiYKICAgICAgICAgICAgICAgICAgICBzdGF0ZS5zZXF1ZW5jZXNbbWV0YS5zZXF1ZW5jZV0uZGF0YS50ZWFtLAogICAgICAgICAgICB9KTsKICAgICAgICB9CiAgICB9KQogICAgICAgIC5maWx0ZXIoZnVuY3Rpb24gKCkgeyByZXR1cm4gZmFsc2U7IH0pOwp9Owp2YXIgc2VxdWVuY2VTdGFnZUNyZWF0ZUFuYWx5dGljID0gZnVuY3Rpb24gKGFjdGlvbiQsIHN0b3JlLCBkZXBzKSB7CiAgICByZXR1cm4gYWN0aW9uJC5vZlR5cGUoU0VRVUVOQ0VfU1RBR0VfQ1JFQVRFKQogICAgICAgIC5maWx0ZXIoZnVuY3Rpb24gKGFjdGlvbikgeyByZXR1cm4gYWN0aW9uLnN0YXR1cyA9PT0gQWN0aW9uU3RhdHVzLlN1Y2Nlc3M7IH0pCiAgICAgICAgLmRvKGZ1bmN0aW9uIChhY3Rpb24pIHsKICAgICAgICB2YXIgcGF5bG9hZCA9IGFjdGlvbi5wYXlsb2FkOwogICAgICAgIHZhciBzdGF0ZSA9IHN0b3JlLmdldFN0YXRlKCk7CiAgICAgICAgcmVjb3JkRXZlbnQoVXNlckV2ZW50cy5TZXF1ZW5jZVN0YWdlQ3JlYXRlZCwgewogICAgICAgICAgICBzZXF1ZW5jZTogcGF5bG9hZC5zZXF1ZW5jZSwKICAgICAgICAgICAgdGVhbTogc3RhdGUuc2VxdWVuY2VzW3BheWxvYWQuc2VxdWVuY2VdICYmIHN0YXRlLnNlcXVlbmNlc1twYXlsb2FkLnNlcXVlbmNlXS5kYXRhICYmCiAgICAgICAgICAgICAgICBzdGF0ZS5zZXF1ZW5jZXNbcGF5bG9hZC5zZXF1ZW5jZV0uZGF0YS50ZWFtLAogICAgICAgIH0pOwogICAgfSkKICAgICAgICAuZmlsdGVyKGZ1bmN0aW9uICgpIHsgcmV0dXJuIGZhbHNlOyB9KTsKfTsKZXhwb3J0IGRlZmF1bHQgWwogICAgeWVhcmx5U3VtbWFyeUZldGNoRXBpYywKICAgIHNlcXVlbmNlQ3JlYXRlQW5hbHl0aWMsCiAgICBzZXF1ZW5jZVVwZGF0ZUFuYWx5dGljLAogICAgc2VxdWVuY2VSZWNpcGllbnRVcGRhdGVBbmFseXRpYywKICAgIHNlcXVlbmNlU3RhZ2VDcmVhdGVBbmFseXRpYywKICAgIHllYXJseVN1bW1hcnlSZWFkRXBpYywKXTsK"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/analytics.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/analytics.ts"],"names":[],"mappings":"AACA,OAAO,EAGL,YAAY,GACb,MAAM,YAAY,CAAC;AAGpB,OAAO,EAAE,eAAe,EAAE,eAAe,EAAE,MAAM,sBAAsB,CAAC;AACxE,OAAO,EAAE,WAAW,EAAE,UAAU,EAAE,MAAM,oBAAoB,CAAC;AAC7D,OAAO,EACL,yBAAyB,GAE1B,MAAM,+BAA+B,CAAC;AACvC,OAAO,EAA2B,qBAAqB,EAAE,MAAM,2BAA2B,CAAC;AAC3F,OAAO,EACL,kBAAkB,EAAE,oBAAoB,EACxC,iBAAiB,EAAE,mBAAmB,GACvC,MAAM,sBAAsB,CAAC;AAE9B,OAAO,EAAE,UAAU,EAAE,MAAM,MAAM,CAAC;AAElC,IAAM,sBAAsB,GACxB,UAAC,OAAO,EAAE,KAAK,EAAE,IAAI;IACrB,OAAA,OAAO,CAAC,MAAM,CAAC,oBAAoB,CAAC;SACjC,MAAM,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,MAAM,KAAK,YAAY,CAAC,KAAK,EAApC,CAAoC,CAAC;SACtD,OAAO,CAAC,UAAC,MAAM;QACd,OAAO,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC;aAC3C,GAAG,CAAC,UAAA,KAAK,IAAI,OAAA,kBAAkB,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,EAAtC,CAAsC,CAAC;aACpD,KAAK,CAAC,UAAA,KAAK,IAAI,OAAA,UAAU,CAAC,EAAE,CAAC,kBAAkB,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAArD,CAAqD,CAAC,CAAC;IACzE,CAAC,CAAC;AANJ,CAMI,CAAC;AAET,IAAM,qBAAqB,GACvB,UAAC,OAAO,EAAE,KAAK,EAAE,IAAI;IACrB,OAAA,OAAO,CAAC,MAAM,CAAC,mBAAmB,CAAC;SAChC,MAAM,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,MAAM,KAAK,YAAY,CAAC,KAAK,EAApC,CAAoC,CAAC;SACtD,OAAO,CAAC,UAAC,MAAM;QACd,OAAO,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,IAAI,CAAC;aAC5C,GAAG,CAAC,UAAA,KAAK,IAAI,OAAA,iBAAiB,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,EAArC,CAAqC,CAAC,CAAC;IACvD,CAAC,CAAC;AALJ,CAKI,CAAC;AAET,IAAM,sBAAsB,GACxB,UAAC,OAAO,EAAE,KAAK,EAAE,IAAI;IACrB,OAAA,OAAO,CAAC,MAAM,CAAC,eAAe,CAAC;SAC5B,MAAM,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,MAAM,KAAK,YAAY,CAAC,OAAO,EAAtC,CAAsC,CAAC;SACxD,EAAE,CAAC,UAAC,MAAM;QACD,IAAA,wBAAO,CAAY;QAC3B,WAAW,CAAC,UAAU,CAAC,eAAe,EAAE;YACtC,IAAI,EAAE,OAAO,IAAI,OAAO,CAAC,IAAI;SAC9B,CAAC,CAAC;IACL,CAAC,CAAC;SACD,MAAM,CAAC,cAAM,OAAA,KAAK,EAAL,CAAK,CAAC;AARtB,CAQsB,CAAC;AAE3B,IAAM,sBAAsB,GACxB,UAAC,OAAO,EAAE,KAAK,EAAE,IAAI;IACrB,OAAA,OAAO,CAAC,MAAM,CAAC,eAAe,CAAC;SAC5B,MAAM,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,MAAM,KAAK,YAAY,CAAC,OAAO,EAAtC,CAAsC,CAAC;SACxD,EAAE,CAAC,UAAC,MAAM;QACD,IAAA,kBAAI,EAAE,wBAAO,CAAY;QACjC,IAAM,KAAK,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;QAC/B,IAAM,GAAG,GAAG,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC;QACtE,IAAI,GAAG,IAAI,GAAG,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACrC,WAAW,CAAC,UAAU,CAAC,iBAAiB,EAAE;gBACxC,QAAQ,EAAE,IAAI,CAAC,EAAE;gBACjB,IAAI,EAAE,OAAO,IAAI,OAAO,CAAC,IAAI;aAC9B,CAAC,CAAC;SACJ;IACH,CAAC,CAAC;SACD,MAAM,CAAC,cAAM,OAAA,KAAK,EAAL,CAAK,CAAC;AAbtB,CAasB,CAAC;AAE3B,IAAM,+BAA+B,GAGjC,UAAC,OAAO,EAAE,KAAK,EAAE,IAAI;IACrB,OAAA,OAAO,CAAC,MAAM,CAAC,yBAAyB,CAAC;SACtC,MAAM,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,MAAM,KAAK,YAAY,CAAC,KAAK,EAApC,CAAoC,CAAC;SACtD,EAAE,CAAC,UAAC,MAAM;QACT,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QACzB,IAAM,KAAK,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;QAC/B,IAAM,GAAG,GAAG,KAAK,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC;QAClE,IAAI,GAAG,IAAI,GAAG,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YAClE,WAAW,CAAC,UAAU,CAAC,0BAA0B,EAAE;gBACjD,QAAQ,EAAE,IAAI,CAAC,EAAE;gBACjB,IAAI,EAAE,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI;oBACzE,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAK,CAAC,IAAI;aAC5C,CAAC,CAAC;SACJ;IACH,CAAC,CAAC;SACD,MAAM,CAAC,cAAM,OAAA,KAAK,EAAL,CAAK,CAAC;AAdtB,CAcsB,CAAC;AAE3B,IAAM,2BAA2B,GAG7B,UAAC,OAAO,EAAE,KAAK,EAAE,IAAI;IACrB,OAAA,OAAO,CAAC,MAAM,CAAC,qBAAqB,CAAC;SAClC,MAAM,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,MAAM,KAAK,YAAY,CAAC,OAAO,EAAtC,CAAsC,CAAC;SACxD,EAAE,CAAC,UAAC,MAAM;QACT,IAAM,OAAO,GAAG,MAAM,CAAC,OAAQ,CAAC;QAChC,IAAM,KAAK,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;QAC/B,WAAW,CAAC,UAAU,CAAC,oBAAoB,EAAE;YAC3C,QAAQ,EAAE,OAAO,CAAC,QAAQ;YAC1B,IAAI,EAAE,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI;gBAC/E,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAK,CAAC,IAAI;SAC/C,CAAC,CAAC;IACL,CAAC,CAAC;SACD,MAAM,CAAC,cAAM,OAAA,KAAK,EAAL,CAAK,CAAC;AAXtB,CAWsB,CAAC;AAE3B,eAAe;IACb,sBAAsB;IACtB,sBAAsB;IACtB,sBAAsB;IACtB,+BAA+B;IAC/B,2BAA2B;IAC3B,qBAAqB;CACtB,CAAC","sourcesContent":["import { Epic } from 'redux-observable';\nimport {\n  StoreState,\n  Action,\n  ActionStatus,\n} from '@src/types';\nimport { Deps } from '@src/lib/epic';\nimport { Sequence, SequenceRecipient, SequenceStage } from '@src/types/sequences';\nimport { SEQUENCE_CREATE, SEQUENCE_UPDATE } from '@src/ducks/sequences';\nimport { recordEvent, UserEvents } from '@src/lib/analytics';\nimport {\n  SEQUENCE_RECIPIENT_UPDATE,\n  SequenceRecipientUpdateMeta,\n} from '@src/ducks/sequenceRecipients';\nimport { SequenceStageCreateMeta, SEQUENCE_STAGE_CREATE } from '@src/ducks/sequenceStages';\nimport {\n  yearlySummaryFetch, YEARLY_SUMMARY_FETCH,\n  yearlySummaryRead, YEARLY_SUMMARY_READ,\n} from '@src/ducks/analytics';\nimport { StatYearlySummary } from '@src/api/analytics';\nimport { Observable } from 'rxjs';\n\nconst yearlySummaryFetchEpic: Epic<Action<number, StatYearlySummary>, StoreState, Deps>\n  = (action$, store, deps) =>\n    action$.ofType(YEARLY_SUMMARY_FETCH)\n      .filter(action => action.status === ActionStatus.Start)\n      .flatMap((action) => {\n        return deps.analytics.getYearlySummary(2020)\n        .map(stats => yearlySummaryFetch(action.meta, stats))\n        .catch(error => Observable.of(yearlySummaryFetch(action.meta, error)));\n      });\n\nconst yearlySummaryReadEpic: Epic<Action<number, StatYearlySummary>, StoreState, Deps>\n  = (action$, store, deps) =>\n    action$.ofType(YEARLY_SUMMARY_READ)\n      .filter(action => action.status === ActionStatus.Start)\n      .flatMap((action) => {\n        return deps.analytics.readYearlySummary(2020)\n        .map(stats => yearlySummaryRead(action.meta, stats));\n      });\n\nconst sequenceCreateAnalytic: Epic<Action<Sequence, Sequence>, StoreState, Deps>\n  = (action$, store, deps) =>\n    action$.ofType(SEQUENCE_CREATE)\n      .filter(action => action.status === ActionStatus.Success)\n      .do((action) => {\n        const { payload } = action;\n        recordEvent(UserEvents.SequenceCreated, {\n          team: payload && payload.team,\n        });\n      })\n      .filter(() => false);\n\nconst sequenceUpdateAnalytic: Epic<Action<Sequence, Sequence>, StoreState, Deps>\n  = (action$, store, deps) =>\n    action$.ofType(SEQUENCE_UPDATE)\n      .filter(action => action.status === ActionStatus.Success)\n      .do((action) => {\n        const { meta, payload } = action;\n        const state = store.getState();\n        const old = state.sequences[meta.id] && state.sequences[meta.id].data;\n        if (old && old.paused && !meta.paused) {\n          recordEvent(UserEvents.SequenceActivated, {\n            sequence: meta.id,\n            team: payload && payload.team,\n          });\n        }\n      })\n      .filter(() => false);\n\nconst sequenceRecipientUpdateAnalytic: Epic<Action<\n  SequenceRecipientUpdateMeta, SequenceRecipient\n>, StoreState, Deps>\n  = (action$, store, deps) =>\n    action$.ofType(SEQUENCE_RECIPIENT_UPDATE)\n      .filter(action => action.status === ActionStatus.Start)\n      .do((action) => {\n        const meta = action.meta;\n        const state = store.getState();\n        const old = state.sequenceRecipients[meta.sequence][meta.id].data;\n        if (old && old.paused && meta.paused !== undefined && !meta.paused) {\n          recordEvent(UserEvents.SequenceRecipientActivated, {\n            sequence: meta.id,\n            team: state.sequences[meta.sequence] && state.sequences[meta.sequence].data &&\n              state.sequences[meta.sequence].data!.team,\n          });\n        }\n      })\n      .filter(() => false);\n\nconst sequenceStageCreateAnalytic: Epic<Action<\n  SequenceStageCreateMeta, SequenceStage\n  >, StoreState, Deps>\n  = (action$, store, deps) =>\n    action$.ofType(SEQUENCE_STAGE_CREATE)\n      .filter(action => action.status === ActionStatus.Success)\n      .do((action) => {\n        const payload = action.payload!;\n        const state = store.getState();\n        recordEvent(UserEvents.SequenceStageCreated, {\n          sequence: payload.sequence,\n          team: state.sequences[payload.sequence] && state.sequences[payload.sequence].data &&\n            state.sequences[payload.sequence].data!.team,\n        });\n      })\n      .filter(() => false);\n\nexport default [\n  yearlySummaryFetchEpic,\n  sequenceCreateAnalytic,\n  sequenceUpdateAnalytic,\n  sequenceRecipientUpdateAnalytic,\n  sequenceStageCreateAnalytic,\n  yearlySummaryReadEpic,\n];\n"]}]}