{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/worker/bridge/Bridge.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/worker/bridge/Bridge.ts","mtime":1675280254123},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkgewogICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBmdW5jdGlvbiAoZCwgYikgewogICAgICAgIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwKICAgICAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fAogICAgICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChiLmhhc093blByb3BlcnR5KHApKSBkW3BdID0gYltwXTsgfTsKICAgICAgICByZXR1cm4gZXh0ZW5kU3RhdGljcyhkLCBiKTsKICAgIH07CiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHsKICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpOwogICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfQogICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTsKICAgIH07Cn0pKCk7CmltcG9ydCB7IFN1YmplY3QgfSBmcm9tICdyeGpzJzsKLy8gQnJpZGdlIGlzIHVzZWQgYnkgd29ya2VyIHRvIHJlY2VpdmUgZXZlbnRzIGZyb20gdGhlIGFwcC4KdmFyIEJyaWRnZSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHsKICAgIF9fZXh0ZW5kcyhCcmlkZ2UsIF9zdXBlcik7CiAgICBmdW5jdGlvbiBCcmlkZ2UoY29ubmVjdGlvbnMpIHsKICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzKSB8fCB0aGlzOwogICAgICAgIHZhciBtZXNzYWdlSGFuZGxlciA9IGZ1bmN0aW9uIChldmVudCkgewogICAgICAgICAgICBpZiAoIWV2ZW50LmRhdGEpIHsKICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcigncHJvZ3JhbW1lcjogYnJpZGdlIHJlY2VpdmVkIHVua25vd24gZXZlbnQgJyArIEpTT04uc3RyaW5naWZ5KGV2ZW50KSk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdmFyIGFwcEV2ZW50ID0gZXZlbnQuZGF0YTsKICAgICAgICAgICAgX3RoaXMubmV4dChhcHBFdmVudCk7CiAgICAgICAgfTsKICAgICAgICBpZiAoY29ubmVjdGlvbnMpIHsKICAgICAgICAgICAgY29ubmVjdGlvbnMuZm9yRWFjaChmdW5jdGlvbiAocG9ydCkgeyByZXR1cm4gcG9ydC5hZGRFdmVudExpc3RlbmVyKCdtZXNzYWdlJywgbWVzc2FnZUhhbmRsZXIpOyB9KTsKICAgICAgICB9CiAgICAgICAgZWxzZSB7CiAgICAgICAgICAgIG9ubWVzc2FnZSA9IG1lc3NhZ2VIYW5kbGVyOwogICAgICAgIH0KICAgICAgICByZXR1cm4gX3RoaXM7CiAgICB9CiAgICByZXR1cm4gQnJpZGdlOwp9KFN1YmplY3QpKTsKZXhwb3J0IGRlZmF1bHQgQnJpZGdlOwo="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/worker/bridge/Bridge.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/worker/bridge/Bridge.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,MAAM,CAAC;AAG/B,2DAA2D;AAC3D;IAAqB,0BAAiB;IACpC,gBAAY,WAA2B;QAAvC,YACE,iBAAO,SAcR;QAbC,IAAM,cAAc,GAAG,UAAC,KAAU;YAChC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE;gBACf,MAAM,IAAI,KAAK,CAAC,4CAA4C,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;aACvF;YACD,IAAM,QAAQ,GAAG,KAAK,CAAC,IAAgB,CAAC;YACxC,KAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACtB,CAAC,CAAC;QAEF,IAAI,WAAW,EAAE;YACf,WAAW,CAAC,OAAO,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,cAAc,CAAC,EAAhD,CAAgD,CAAC,CAAC;SAC/E;aAAM;YACL,SAAS,GAAG,cAAc,CAAC;SAC5B;;IACH,CAAC;IACH,aAAC;AAAD,CAAC,AAjBD,CAAqB,OAAO,GAiB3B;AAED,eAAe,MAAM,CAAC","sourcesContent":["import { Subject } from 'rxjs';\nimport { AppEvent } from './appEvents';\n\n// Bridge is used by worker to receive events from the app.\nclass Bridge extends Subject<AppEvent> {\n  constructor(connections?: MessagePort[]) {\n    super();\n    const messageHandler = (event: any) => {\n      if (!event.data) {\n        throw new Error('programmer: bridge received unknown event ' + JSON.stringify(event));\n      }\n      const appEvent = event.data as AppEvent;\n      this.next(appEvent);\n    };\n\n    if (connections) {\n      connections.forEach(port => port.addEventListener('message', messageHandler));\n    } else {\n      onmessage = messageHandler;\n    }\n  }\n}\n\nexport default Bridge;\n"]}]}