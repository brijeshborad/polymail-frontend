{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Mentions/components/SharedThreadList/SharedThreadCell/index.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Mentions/components/SharedThreadList/SharedThreadCell/index.tsx","mtime":1675280254082},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4JzsKaW1wb3J0IFNoYXJlZFRocmVhZENlbGwgZnJvbSAnLi9TaGFyZWRUaHJlYWRDZWxsJzsKaW1wb3J0IHsgc2VsZWN0VGVhbU1lbWJlciB9IGZyb20gJ0BzcmMvZHVja3MvdGVhbU1lbWJlcnMnOwppbXBvcnQgeyBzaGFyZWRUaHJlYWRVcGRhdGUsIHNlbGVjdFNoYXJlZFRocmVhZCB9IGZyb20gJ0BzcmMvZHVja3Mvc2hhcmVkVGhyZWFkcyc7CnZhciBtYXBTdGF0ZVRvUHJvcHMgPSBmdW5jdGlvbiAoc3RhdGUsIG93blByb3BzKSB7CiAgICB2YXIgc2hhcmVkVGhyZWFkID0gc2VsZWN0U2hhcmVkVGhyZWFkKHN0YXRlLCBvd25Qcm9wcy5zaGFyZWRUaHJlYWRJZCk7CiAgICByZXR1cm4gewogICAgICAgIG93bmVyOiBzaGFyZWRUaHJlYWQgJiYgc2VsZWN0VGVhbU1lbWJlcihzdGF0ZSwgc2hhcmVkVGhyZWFkLnVzZXIpLAogICAgICAgIHNoYXJlZFRocmVhZDogc2hhcmVkVGhyZWFkLAogICAgfTsKfTsKdmFyIG1hcERpc3BhdGNoVG9Qcm9wcyA9IGZ1bmN0aW9uIChkaXNwYXRjaCkgeyByZXR1cm4gKHsKICAgIHVwZGF0ZVNoYXJlZFRocmVhZDogZnVuY3Rpb24gKG1ldGEpIHsgcmV0dXJuIGRpc3BhdGNoKHNoYXJlZFRocmVhZFVwZGF0ZShtZXRhKSk7IH0sCn0pOyB9OwpleHBvcnQgZGVmYXVsdCBjb25uZWN0KG1hcFN0YXRlVG9Qcm9wcywgbWFwRGlzcGF0Y2hUb1Byb3BzKShTaGFyZWRUaHJlYWRDZWxsKTsK"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Mentions/components/SharedThreadList/SharedThreadCell/index.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Mentions/components/SharedThreadList/SharedThreadCell/index.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAY,MAAM,aAAa,CAAC;AAIhD,OAAO,gBAAsD,MAAM,oBAAoB,CAAC;AACxF,OAAO,EAAE,gBAAgB,EAAE,MAAM,wBAAwB,CAAC;AAC1D,OAAO,EAAE,kBAAkB,EAAE,kBAAkB,EAAE,MAAM,0BAA0B,CAAC;AAGlF,IAAM,eAAe,GAAG,UAAC,KAAiB,EAAE,QAAe;IACzD,IAAM,YAAY,GAAG,kBAAkB,CAAC,KAAK,EAAE,QAAQ,CAAC,cAAc,CAAC,CAAC;IAExE,OAAO;QACL,KAAK,EAAE,YAAY,IAAI,gBAAgB,CAAC,KAAK,EAAE,YAAY,CAAC,IAAI,CAAC;QACjE,YAAY,cAAA;KACb,CAAC;AACJ,CAAC,CAAC;AAEF,IAAM,kBAAkB,GAAG,UAAC,QAA8B,IAAoB,OAAA,CAAC;IAC7E,kBAAkB,EAAE,UAAC,IAAkB,IAAK,OAAA,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,EAAlC,CAAkC;CAC/E,CAAC,EAF4E,CAE5E,CAAC;AAEH,eAAe,OAAO,CACpB,eAAe,EAAE,kBAAkB,CACpC,CAAC,gBAAgB,CAAC,CAAC","sourcesContent":["import { connect, Dispatch } from 'react-redux';\nimport {\n  StoreState,\n} from '@src/types';\nimport SharedThreadCell, { StateProps, Props, DispatchProps } from './SharedThreadCell';\nimport { selectTeamMember } from '@src/ducks/teamMembers';\nimport { sharedThreadUpdate, selectSharedThread } from '@src/ducks/sharedThreads';\nimport { SharedThread } from '@src/types/sharedThreads';\n\nconst mapStateToProps = (state: StoreState, ownProps: Props): StateProps => {\n  const sharedThread = selectSharedThread(state, ownProps.sharedThreadId);\n\n  return {\n    owner: sharedThread && selectTeamMember(state, sharedThread.user),\n    sharedThread,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<StoreState>): DispatchProps => ({\n  updateSharedThread: (meta: SharedThread) => dispatch(sharedThreadUpdate(meta)),\n});\n\nexport default connect<StateProps, DispatchProps, Props>(\n  mapStateToProps, mapDispatchToProps,\n)(SharedThreadCell);\n"]}]}