{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/Providers/AddIMAP/index.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/Providers/AddIMAP/index.ts","mtime":1675280254025},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4JzsKaW1wb3J0IEFkZElNQVAgZnJvbSAnLi9BZGRJTUFQJzsKaW1wb3J0IHsgYWNjb3VudENyZWF0ZSB9IGZyb20gJ0BzcmMvZHVja3MvYWNjb3VudHMnOwp2YXIgbWFwU3RhdGVUb1Byb3BzID0gZnVuY3Rpb24gKHN0YXRlKSB7IHJldHVybiAoewogICAgc2hvd0hlYWRlcjogc3RhdGUuYWNjb3VudHMubGVuZ3RoID4gMCwKfSk7IH07CnZhciBtYXBEaXNwYXRjaFRvUHJvcHMgPSBmdW5jdGlvbiAoZGlzcGF0Y2gpIHsgcmV0dXJuICh7CiAgICBhZGRBY2NvdW50OiBmdW5jdGlvbiAoYWNjb3VudCkgeyByZXR1cm4gZGlzcGF0Y2goYWNjb3VudENyZWF0ZShhY2NvdW50KSk7IH0sCn0pOyB9OwpleHBvcnQgZGVmYXVsdCBjb25uZWN0KG1hcFN0YXRlVG9Qcm9wcywgbWFwRGlzcGF0Y2hUb1Byb3BzKShBZGRJTUFQKTsK"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/Providers/AddIMAP/index.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/Providers/AddIMAP/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AAGtC,OAAO,OAAiC,MAAM,WAAW,CAAC;AAE1D,OAAO,EAAE,aAAa,EAAE,MAAM,qBAAqB,CAAC;AAEpD,IAAM,eAAe,GAAG,UAAC,KAAiB,IAAY,OAAA,CAAC;IACrD,UAAU,EAAE,KAAK,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC;CACtC,CAAC,EAFoD,CAEpD,CAAC;AAEH,IAAM,kBAAkB,GAAG,UAAC,QAA8B,IAAoB,OAAA,CAAC;IAC7E,UAAU,EAAE,UAAA,OAAO,IAAI,OAAA,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,EAAhC,CAAgC;CACxD,CAAC,EAF4E,CAE5E,CAAC;AAEH,eAAe,OAAO,CAAC,eAAe,EAAE,kBAAkB,CAAC,CAAC,OAAO,CAAC,CAAC","sourcesContent":["import { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\n\nimport AddIMAP, { Props, DispatchProps } from './AddIMAP';\nimport { StoreState } from '@src/types';\nimport { accountCreate } from '@src/ducks/accounts';\n\nconst mapStateToProps = (state: StoreState): Props => ({\n  showHeader: state.accounts.length > 0,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<StoreState>): DispatchProps => ({\n  addAccount: account => dispatch(accountCreate(account)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddIMAP);\n"]}]}