{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/datetime.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/datetime.tsx","mtime":1675280254062},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/datetime.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/datetime.tsx"],"names":[],"mappings":"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","sourcesContent":["import moment, { Moment } from 'moment';\nimport chrono, { parse, ParsedResult } from 'chrono-node';\n\nimport { Preferences, TimeBlock } from '@src/types';\nimport { uniqBy } from 'lodash';\nimport { applyTimeBlockDefaults } from '@src/lib/event';\nimport { sortMatches } from '@src/lib/matcher';\nimport { typeaheadRegex } from './typeahead';\n\n// Mocks used for moment calculation\nexport const mockNow = new Date(Date.UTC(5018, 2, 1, 5, 0, 0, 0));\nlet mockNowMoment: Moment;\nexport const enableMockMoment = () => {\n  mockNowMoment = moment(mockNow);\n};\nexport const now = () => (mockNowMoment && moment(mockNowMoment)) || moment();\n\nexport const showMostRecent = (date: Date, showTime: boolean = false) => {\n  const nowDate = now();\n  const momentDate = moment(date);\n  const sameDay = nowDate.format('MM DD YYYY') === momentDate.format('MM DD YYYY');\n  const sameYear = nowDate.format('YYYY') === momentDate.format('YYYY');\n  const timeFormat = 'h:mm A';\n\n  // Same day\n  if (sameDay) {\n    return momentDate.format(timeFormat);\n  }\n\n  // Same year\n  if (sameYear) {\n    let sameYearFormat = 'MMM D';\n    if (showTime) {\n      sameYearFormat += ('[,] ' + timeFormat);\n    }\n    return momentDate.format(sameYearFormat);\n  }\n\n  // older than 1 year\n  let showYearFormat = 'MMM D YYYY';\n  if (showTime) {\n    showYearFormat += ('[,] ' + timeFormat);\n  }\n\n  return momentDate.format(showYearFormat);\n};\n\n// Format for detailed date + time tooltip\nexport const TOOLTIP_FORMAT = 'ddd, MMM D, YYYY [at] h:mm A';\n\n// Dates Typeaheads\n// TODO(SHIN): Discuss where to store last used date\nexport const TYPEAHEAD_FORMAT = 'ddd, MMM D [at] h:mm A';\nexport const TYPEAHEAD_DEFAULTS = (prefs: Preferences) => [\n  {\n    title: 'Later Today',\n    moment: now().add(prefs.laterToday, 'seconds'),\n  },\n  {\n    title: 'This Evening',\n    moment: now()\n      .hour(0)\n      .minute(0)\n      .add(prefs.laterEvening, 'seconds'),\n  },\n  {\n    title: 'Tomorrow Morning',\n    moment: now()\n      .add(1, 'day')\n      .hour(0)\n      .minute(0)\n      .add(prefs.laterMorning, 'seconds'),\n  },\n  {\n    title: 'In Two Days',\n    moment: now()\n      .add(2, 'days')\n      .hour(0)\n      .minute(0)\n      .add(prefs.laterMorning, 'seconds'),\n  },\n  {\n    title: 'In Three Days',\n    moment: now()\n      .add(3, 'days')\n      .hour(0)\n      .minute(0)\n      .add(prefs.laterMorning, 'seconds'),\n  },\n  {\n    title: 'This Weekend',\n    moment: now()\n      .day(6)\n      .hour(0)\n      .minute(0)\n      .add(prefs.laterMorning, 'seconds'),\n  },\n  {\n    title: 'Next Week',\n    moment: now()\n      .add(7, 'days')\n      .hour(0)\n      .minute(0)\n      .add(prefs.laterMorning, 'seconds'),\n  },\n  {\n    title: 'Tomorrow Evening',\n    moment: now()\n      .add(1, 'day')\n      .hour(0)\n      .minute(0)\n      .add(prefs.laterEvening, 'seconds'),\n  },\n];\n\nexport let lastScheduledTypeahead: Date | null = null;\nexport const setLastScheduledTypeahead = (date: Date|null) => {\n  lastScheduledTypeahead = date;\n};\n\n// TODO(SHIN): Figure out URI encoding for paste & space\n// TODO(SHIN): Fix issue where same date will add another year\n// Typeahead Options will give date options in the future based off of NLP + existing defaults\nexport const typeaheadOptions = (partial: string, prefs: Preferences) => {\n  const query = partial.trim().toLowerCase();\n  const regex = typeaheadRegex(query);\n\n  const filteredOptions = TYPEAHEAD_DEFAULTS(prefs)\n    .filter(option => option.title.toLowerCase().match(regex));\n  const nowMoment = now();\n  const lastScheduledMoment = lastScheduledTypeahead && moment(lastScheduledTypeahead);\n\n  // NLP date parsing\n  const nlpMatches = parse(`${partial} from now`, nowMoment.toDate(), { forwardDate: true });\n  // If date is in future\n  // TODO(SHIN): Update date to potentially move next year date\n  if (nlpMatches && nlpMatches.length > 0) {\n    const nlpMatch = nlpMatches[0].start;\n    const nlpText = nlpMatches[0].text;\n    let morningInferred = false;\n\n    // only set if not noon\n    if (!nlpText.match('noon') && !nlpMatch.isCertain('hour')) {\n      let handled = false;\n\n      if (nlpText.match('evening') || nlpText.match('night')) {\n        nlpMatch.imply('hour', prefs.laterEvening / 3600);\n        handled = true;\n      }\n\n      // Set inferred morning time & check if time is inferred\n      if (!handled && nlpMatch.get('hour') === 12) {\n        nlpMatch.imply('hour', prefs.laterMorning / 3600);\n        nlpMatch.imply('minutes', prefs.laterMorning % 60);\n        handled = true;\n        morningInferred = true;\n      }\n    }\n\n    const nlpDate = nlpMatch.date();\n    let nlpMoment = moment(nlpDate);\n\n    // See if date was completely inferred\n    const knownValues = nlpMatch.knownValues;\n    const inferredDate = knownValues && !Object.keys(knownValues).length;\n\n    // Try adding one year if date is behind\n    if (nlpMoment < nowMoment && !inferredDate) {\n      const explicitTime = nlpMatch.isCertain('hour') || nlpMatch.isCertain('minute');\n      const explicitWeekday = nlpMatch.isCertain('weekday');\n\n        // Only move one day past if explicit time and day is same day, but in the past\n      if (explicitTime && !explicitWeekday && nlpMoment.day === nowMoment.day) {\n        nlpMoment.add(1, 'day');\n      } else { // Otherwise do week/year advance based off of explicit weekday\n        nlpMoment = explicitWeekday\n          ? nlpMoment.add(1, 'week')\n          : nlpMoment.add(1, 'year');\n      }\n    }\n\n    // Set date if valid. Default time to morning otherwise\n    if (nlpMoment > nowMoment) {\n      const lastOption = {\n        title: morningInferred ? partial + ' (Morning)' : partial,\n        moment: nlpMoment,\n      };\n\n      // Identify if nlp match should be injected\n      const injectNlp = filteredOptions\n        .filter(option => option.moment.isSame(lastOption.moment, 'minute'))\n        .length === 0;\n\n      // Push NLP match if non-existent in options. Also check that it's not matching on just 'now'\n      if (lastOption && injectNlp && nlpText !== 'now') {\n        filteredOptions.push(lastOption);\n      }\n    }\n  }\n\n  // Insert Last Used Moment if after previously scheduled a date compared to now\n  if (lastScheduledMoment && lastScheduledMoment.isAfter(nowMoment)) {\n\n    // Only show when no input or when last used matches\n    if (!partial.length || 'Last Used'.match(regex)) {\n      filteredOptions.unshift({\n        title: 'Last Used',\n        moment: lastScheduledMoment,\n      });\n    }\n  }\n\n  // Sort matches at end to prioritize any partial items added by NLP\n  const sortedMatches = sortMatches(filteredOptions, query, 'title');\n  return sortedMatches.map(option => ({\n    title: option.title,\n    moment: option.moment,\n    desc: option.moment.format(TYPEAHEAD_FORMAT),\n    unschedule: false,\n  }));\n};\n\nconst ONES_PLACE = [\n  { text: 'one', number: 1 },\n  { text: 'two', number: 2 },\n  { text: 'three', number: 3 },\n  { text: 'four', number: 4 },\n  { text: 'five', number: 5 },\n  { text: 'six', number: 6 },\n  { text: 'seven', number: 7 },\n  { text: 'eight', number: 8 },\n  { text: 'nine', number: 9 },\n  { text: 'ten', number: 10 },\n  { text: 'eleven', number: 11 },\n  { text: 'twelve', number: 12 },\n  { text: 'thirteen', number: 13 },\n  { text: 'fourteen', number: 14 },\n  { text: 'fifteen', number: 15 },\n  { text: 'sixteen', number: 16 },\n  { text: 'seventeen', number: 17 },\n  { text: 'eighteen', number: 18 },\n  { text: 'nineteen', number: 19 },\n];\nconst TENS_PLACE = [\n  { text: 'twenty', number: 20 },\n  { text: 'thirty', number: 30 },\n  { text: 'forty', number: 40 },\n  { text: 'fifty', number: 50 },\n  { text: 'sixty', number: 60 },\n  { text: 'seventy', number: 70 },\n  { text: 'eighty', number: 80 },\n  { text: 'ninety', number: 90 },\n];\nconst TIME_RANGES = ['day', 'week', 'month', 'year'];\n\nconst DATE_TYPEAHEAD_DEFAULTS = [\n  {\n    title: 'Today',\n    moment: now(),\n  },\n  {\n    title: 'Yesterday',\n    moment: now().subtract(1, 'day'),\n  },\n  {\n    title: 'Last Week',\n    moment: now().subtract(1, 'week'),\n  },\n  {\n    title: 'Last Month',\n    moment: now().subtract(1, 'month'),\n  },\n];\n\nconst capitalize = (text: string) => {\n  if (typeof text !== 'string') {\n    return null;\n  }\n\n  if (text.length > 1) {\n    return text[0].toUpperCase() + text.slice(1);\n  }\n\n  return text.toUpperCase();\n};\n\nconst getDateTypeaheadOptions = (text: string, value: number) => {\n  return TIME_RANGES.map(range => ({\n    title: `${capitalize(text)} ${range + (value > 1 ? 's' : '')} ago`,\n    moment: now().subtract(value as any, range),\n  }));\n};\n\nconst ALL_DATE_OPTIONS = (() => {\n  let options: Array<{ title: string; moment: Moment }> = [];\n  ONES_PLACE.forEach(\n    obj => (options = options.concat(getDateTypeaheadOptions(obj.text, obj.number))),\n  );\n\n  TENS_PLACE.forEach((tens) => {\n    ONES_PLACE.forEach((ones) => {\n      if (ones.number < 10) {\n        options = options.concat(\n          getDateTypeaheadOptions(`${tens.text}-${ones.text}`, tens.number + ones.number),\n        );\n      }\n    });\n  });\n\n  return options;\n})();\n\nconst pastDatesOnlyRefiner = new chrono.Refiner();\npastDatesOnlyRefiner.refine = (text: string, results: ParsedResult[]) => {\n  results.forEach((result) => {\n    const refMoment = moment(result.ref);\n\n    if (refMoment.isBefore(result.start.moment())) {\n      result.start.imply('year', refMoment.get('year') - 1);\n    }\n  });\n\n  return results;\n};\n\nconst pastDateChrono = new chrono.Chrono();\npastDateChrono.refiners.push(pastDatesOnlyRefiner);\n\nexport const dateTypeaheadOptions = (partial: string) => {\n  if (partial.length === 0) {\n    return DATE_TYPEAHEAD_DEFAULTS;\n  }\n  const parsedDate = pastDateChrono.parse(partial, now().toDate(), undefined);\n  let options: Array<{ title: string, moment: Moment }> = [];\n  if (parsedDate && parsedDate.length) {\n    options = parsedDate.map((parsed: ParsedResult) => ({\n      title: capitalize(parsed.text),\n      moment: moment(parsed.start.date()),\n    }));\n  }\n\n  return uniqBy(\n    options.concat(\n      ALL_DATE_OPTIONS.filter(obj =>\n        obj.title\n          .trim()\n          .toLowerCase()\n          .match(partial.trim().toLowerCase()),\n      ),\n    ),\n    (option: { title: string, moment: Moment }) => option.moment.format('MM-DD-YYYY'),\n  );\n};\n\nexport const stringToTimeBlock = (value: string): TimeBlock => {\n  const dates = parse(value, new Date(), { forwardDate: true });\n  const eventName = value.match(/^(\\w|\\d|\\s)+(\\sat|\\son)/g);\n\n  if (dates && dates.length) {\n    return applyTimeBlockDefaults({\n      startTime: moment(dates[0].start.date()),\n      endTime: dates[0].end ? moment(dates[0].end.date()) :\n        moment(dates[0].start.date()).add(1, 'hour'),\n      event: {\n        name: eventName ? eventName[0].slice(0, eventName[0].length - 3) : 'New Event',\n        notes: '',\n        recipients: [],\n        location: '',\n      },\n    });\n  }\n\n  return applyTimeBlockDefaults({\n    event: {\n      name: eventName ? eventName[0].slice(0, eventName[0].length - 3) : 'New Event',\n      notes: '',\n      recipients: [],\n      location: '',\n    },\n  });\n};\n\nexport const getSecondsSinceMidnight = (m: moment.Moment) => {\n  return (m.hours() * 3600) + (m.minutes() * 60) + (m.seconds());\n};\n"]}]}