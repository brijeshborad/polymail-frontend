{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/css-loader/dist/cjs.js??ref--7-2!/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/sass-loader/dist/cjs.js??ref--7-3!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/ThreadDetail/components/ThreadDetailHeader/BestowButton/BestowButton.scss","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/ThreadDetail/components/ThreadDetailHeader/BestowButton/BestowButton.scss","mtime":1675280254044},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/styles/helpers.scss","mtime":1675280254121},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/styles/colors.scss","mtime":1675280254121},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/styles/typography.scss","mtime":1675280254121},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/styles/mixins.scss","mtime":1675280254121},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/css-loader/dist/cjs.js","mtime":1675365393897},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/sass-loader/dist/cjs.js","mtime":1675365391315}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgiLi4vLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIpKHRydWUpOwovLyBNb2R1bGUKZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsICIuYmVzdG93LWJ1dHRvbiB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICBib3JkZXItcmFkaXVzOiAycHg7XG4gIGhlaWdodDogMjZweDtcbn1cbi50aGVtZS1saWdodCAuYmVzdG93LWJ1dHRvbiB7XG4gIGJvcmRlcjogI2M5ZDRlMCAxcHggc29saWQ7XG59XG4udGhlbWUtZGFyayAuYmVzdG93LWJ1dHRvbiB7XG4gIGJvcmRlcjogIzJFMkUyRSAxcHggc29saWQ7XG59XG4uYmVzdG93LWJ1dHRvbiA+IC5wcmltYXJ5IHtcbiAgZm9udC1zaXplOiAxM3B4O1xuICBmb250LXdlaWdodDogNTAwO1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB0cmFuc2l0aW9uOiAwLjJzIGJhY2tncm91bmQtY29sb3IgZWFzZS1pbi1vdXQ7XG4gIHBhZGRpbmc6IDBweCA4cHg7XG4gIGhlaWdodDogMTAwJTtcbn1cbi50aGVtZS1saWdodCAuYmVzdG93LWJ1dHRvbiA+IC5wcmltYXJ5IHtcbiAgY29sb3I6ICM3ZThmOWY7XG59XG4udGhlbWUtZGFyayAuYmVzdG93LWJ1dHRvbiA+IC5wcmltYXJ5IHtcbiAgY29sb3I6ICNBQUFBQUE7XG59XG4uYmVzdG93LWJ1dHRvbiA+IC5wcmltYXJ5ID4gLmljb24ge1xuICBtYXJnaW4tcmlnaHQ6IDVweDtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cbi50aGVtZS1saWdodCAuYmVzdG93LWJ1dHRvbiA+IC5wcmltYXJ5ID4gLmljb246bm90KDpob3Zlcik6bm90KC5zZWxlY3RlZCkgPiBzdmcgcGF0aCB7XG4gIGZpbGw6ICM3ZThmOWY7XG59XG4udGhlbWUtZGFyayAuYmVzdG93LWJ1dHRvbiA+IC5wcmltYXJ5ID4gLmljb246bm90KDpob3Zlcik6bm90KC5zZWxlY3RlZCkgPiBzdmcgcGF0aCB7XG4gIGZpbGw6ICNBQUFBQUE7XG59XG4uYmVzdG93LWJ1dHRvbiA+IC5wcmltYXJ5ID4gLmljb24gPiAubG9hZGVyIHtcbiAgYW5pbWF0aW9uOiBmYWRlLWluIDAuMnMgZWFzZS1pbi1vdXQgMHMgMTtcbiAgaGVpZ2h0OiAxNHB4O1xuICB3aWR0aDogMTRweDtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cbi5iZXN0b3ctYnV0dG9uID4gLmRpdmlkZXIge1xuICB3aWR0aDogMXB4O1xuICBoZWlnaHQ6IDE2cHg7XG59XG4udGhlbWUtbGlnaHQgLmJlc3Rvdy1idXR0b24gPiAuZGl2aWRlciB7XG4gIGJhY2tncm91bmQ6ICNjOWQ0ZTA7XG59XG4udGhlbWUtZGFyayAuYmVzdG93LWJ1dHRvbiA+IC5kaXZpZGVyIHtcbiAgYmFja2dyb3VuZDogIzJFMkUyRTtcbn1cbi5iZXN0b3ctYnV0dG9uID4gLmludGVncmF0aW9uIHtcbiAgcGFkZGluZzogMHB4IDZweDtcbiAgdHJhbnNpdGlvbjogMC4ycyBiYWNrZ3JvdW5kLWNvbG9yIGVhc2UtaW4tb3V0O1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBoZWlnaHQ6IDEwMCU7XG59XG4udGhlbWUtbGlnaHQgLmJlc3Rvdy1idXR0b24gPiAuaW50ZWdyYXRpb246bm90KDpob3ZlcikgPiAuaWNvbiBwYXRoIHtcbiAgZmlsbDogIzdlOGY5Zjtcbn1cbi50aGVtZS1kYXJrIC5iZXN0b3ctYnV0dG9uID4gLmludGVncmF0aW9uOm5vdCg6aG92ZXIpID4gLmljb24gcGF0aCB7XG4gIGZpbGw6ICNBQUFBQUE7XG59XG4uYmVzdG93LWJ1dHRvbiA+IC5pbnRlZ3JhdGlvbiA+IGltZyB7XG4gIHdpZHRoOiAxM3B4O1xufVxuLnRoZW1lLWxpZ2h0IC5iZXN0b3ctYnV0dG9uID4gLnByaW1hcnk6aG92ZXIsIC50aGVtZS1saWdodCAuYmVzdG93LWJ1dHRvbiA+IC5pbnRlZ3JhdGlvbjpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlc21va2U7XG59XG4udGhlbWUtZGFyayAuYmVzdG93LWJ1dHRvbiA+IC5wcmltYXJ5OmhvdmVyLCAudGhlbWUtZGFyayAuYmVzdG93LWJ1dHRvbiA+IC5pbnRlZ3JhdGlvbjpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyOTI5Mjk7XG59IiwgIiIseyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbmRyZXdzYW1ib3kvRGVza3RvcC9HaXQvcG9seW1haWwvd2ViYXBwL3NyYy9jb21wb25lbnRzL1RocmVhZERldGFpbC9jb21wb25lbnRzL1RocmVhZERldGFpbEhlYWRlci9CZXN0b3dCdXR0b24vQmVzdG93QnV0dG9uLnNjc3MiLCJCZXN0b3dCdXR0b24uc2NzcyIsIi9Vc2Vycy9hbmRyZXdzYW1ib3kvRGVza3RvcC9HaXQvcG9seW1haWwvd2ViYXBwL3NyYy9zdHlsZXMvbWl4aW5zLnNjc3MiLCIvVXNlcnMvYW5kcmV3c2FtYm95L0Rlc2t0b3AvR2l0L3BvbHltYWlsL3dlYmFwcC9zcmMvc3R5bGVzL3R5cG9ncmFwaHkuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtFQUNBLG1CQUFBO0VBQ0EsaUJBQUE7RUFFQSxrQkFBQTtFQUNBLFlBQUE7QUNGRjtBQ1FJO0VGUjBCLHlCQUFBO0FDRzlCO0FDS0k7RUZSMEIseUJBQUE7QUNNOUI7QURGRTtFQUNFLGVBQUE7RUFDQSxnQkdOSztFSFFMLGFBQUE7RUFDQSxtQkFBQTtFQUNBLDZDQUFBO0VBQ0EsZ0JBQUE7RUFDQSxZQUFBO0FDR0o7QUNQSTtFRkQ0QixjQUFBO0FDV2hDO0FDVkk7RUZENEIsY0FBQTtBQ2NoQztBRFBJO0VBQ0UsaUJBQUE7RUFDQSxhQUFBO0VBQ0EsbUJBQUE7QUNTTjtBQ2xCSTtFRmNvQyxhQUFBO0FDT3hDO0FDckJJO0VGY29DLGFBQUE7QUNVeEM7QURMTTtFRTBISix3Q0FBQTtFRnhITSxZQUFBO0VBQ0EsV0FBQTtFQUNBLGFBQUE7RUFDQSxtQkFBQTtBQ09SO0FERkU7RUFDRSxVQUFBO0VBQ0EsWUFBQTtBQ0lKO0FDbkNJO0VGZ0M0QixtQkFBQTtBQ01oQztBQ3RDSTtFRmdDNEIsbUJBQUE7QUNTaEM7QURORTtFQUNFLGdCQUFBO0VBQ0EsNkNBQUE7RUFDQSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxZQUFBO0FDUUo7QUNoREk7RUY0Q2dDLGFBQUE7QUNPcEM7QUNuREk7RUY0Q2dDLGFBQUE7QUNVcEM7QUROSTtFQUNFLFdBQUE7QUNRTjtBQ3pESTtFRnNENEIsNEJBQUE7QUNNaEM7QUM1REk7RUZzRDRCLHlCQUFBO0FDU2hDIiwiZmlsZSI6IkJlc3Rvd0J1dHRvbi5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnaGVscGVycyc7XG5cbi5iZXN0b3ctYnV0dG9uIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIEBpbmNsdWRlIHRoZW1pZnkoJHRoZW1lcykgeyBib3JkZXI6IHRoZW1lZCgnaGlnaENvbnRyYXN0Qm9yZGVyQ29sb3InKSAxcHggc29saWQ7IH07XG4gIGJvcmRlci1yYWRpdXM6IDJweDtcbiAgaGVpZ2h0OiAyNnB4O1xuXG4gID4gLnByaW1hcnkge1xuICAgIGZvbnQtc2l6ZTogMTNweDtcbiAgICBmb250LXdlaWdodDogJG1lZGl1bTtcbiAgICBAaW5jbHVkZSB0aGVtaWZ5KCR0aGVtZXMpIHsgY29sb3I6IHRoZW1lZCgnc2Vjb25kYXJ5VGV4dENvbG9yJyk7IH07XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIHRyYW5zaXRpb246IDAuMnMgYmFja2dyb3VuZC1jb2xvciBlYXNlLWluLW91dDtcbiAgICBwYWRkaW5nOiAwcHggOHB4O1xuICAgIGhlaWdodDogMTAwJTtcblxuICAgID4gLmljb24ge1xuICAgICAgbWFyZ2luLXJpZ2h0OiA1cHg7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcblxuICAgICAgJjpub3QoOmhvdmVyKSB7XG4gICAgICAgICY6bm90KC5zZWxlY3RlZCkge1xuICAgICAgICAgID4gc3ZnIHBhdGgge1xuICAgICAgICAgICAgQGluY2x1ZGUgdGhlbWlmeSgkdGhlbWVzKSB7IGZpbGw6IHRoZW1lZCgnc2Vjb25kYXJ5VGV4dENvbG9yJyk7IH07XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgID4gLmxvYWRlciB7XG4gICAgICAgIEBpbmNsdWRlIGZhZGUtaW4oMC4ycyk7XG4gICAgICAgIGhlaWdodDogMTRweDtcbiAgICAgICAgd2lkdGg6IDE0cHg7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgPiAuZGl2aWRlciB7XG4gICAgd2lkdGg6IDFweDtcbiAgICBoZWlnaHQ6IDE2cHg7XG4gICAgQGluY2x1ZGUgdGhlbWlmeSgkdGhlbWVzKSB7IGJhY2tncm91bmQ6IHRoZW1lZCgnaGlnaENvbnRyYXN0Qm9yZGVyQ29sb3InKTsgfTtcbiAgfVxuXG4gID4gLmludGVncmF0aW9uIHtcbiAgICBwYWRkaW5nOiAwcHggNnB4O1xuICAgIHRyYW5zaXRpb246IDAuMnMgYmFja2dyb3VuZC1jb2xvciBlYXNlLWluLW91dDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgaGVpZ2h0OiAxMDAlO1xuXG4gICAgJjpub3QoOmhvdmVyKSA+IC5pY29uIHtcbiAgICAgIHBhdGgge1xuICAgICAgICBAaW5jbHVkZSB0aGVtaWZ5KCR0aGVtZXMpIHsgZmlsbDogdGhlbWVkKCdzZWNvbmRhcnlUZXh0Q29sb3InKTsgfTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICA+IGltZyB7XG4gICAgICB3aWR0aDogMTNweDtcbiAgICB9XG4gIH1cblxuICA+IC5wcmltYXJ5OmhvdmVyLCA+IC5pbnRlZ3JhdGlvbjpob3ZlciB7XG4gICAgQGluY2x1ZGUgdGhlbWlmeSgkdGhlbWVzKSB7IGJhY2tncm91bmQtY29sb3I6IHRoZW1lZCgnaGlnaENvbnRyYXN0SG92ZXInKTsgfTtcbiAgfVxufVxuIiwiLmJlc3Rvdy1idXR0b24ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBtYXJnaW4tbGVmdDogYXV0bztcbiAgYm9yZGVyLXJhZGl1czogMnB4O1xuICBoZWlnaHQ6IDI2cHg7XG59XG4udGhlbWUtbGlnaHQgLmJlc3Rvdy1idXR0b24ge1xuICBib3JkZXI6ICNjOWQ0ZTAgMXB4IHNvbGlkO1xufVxuLnRoZW1lLWRhcmsgLmJlc3Rvdy1idXR0b24ge1xuICBib3JkZXI6ICMyRTJFMkUgMXB4IHNvbGlkO1xufVxuLmJlc3Rvdy1idXR0b24gPiAucHJpbWFyeSB7XG4gIGZvbnQtc2l6ZTogMTNweDtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgdHJhbnNpdGlvbjogMC4ycyBiYWNrZ3JvdW5kLWNvbG9yIGVhc2UtaW4tb3V0O1xuICBwYWRkaW5nOiAwcHggOHB4O1xuICBoZWlnaHQ6IDEwMCU7XG59XG4udGhlbWUtbGlnaHQgLmJlc3Rvdy1idXR0b24gPiAucHJpbWFyeSB7XG4gIGNvbG9yOiAjN2U4ZjlmO1xufVxuLnRoZW1lLWRhcmsgLmJlc3Rvdy1idXR0b24gPiAucHJpbWFyeSB7XG4gIGNvbG9yOiAjQUFBQUFBO1xufVxuLmJlc3Rvdy1idXR0b24gPiAucHJpbWFyeSA+IC5pY29uIHtcbiAgbWFyZ2luLXJpZ2h0OiA1cHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG4udGhlbWUtbGlnaHQgLmJlc3Rvdy1idXR0b24gPiAucHJpbWFyeSA+IC5pY29uOm5vdCg6aG92ZXIpOm5vdCguc2VsZWN0ZWQpID4gc3ZnIHBhdGgge1xuICBmaWxsOiAjN2U4ZjlmO1xufVxuLnRoZW1lLWRhcmsgLmJlc3Rvdy1idXR0b24gPiAucHJpbWFyeSA+IC5pY29uOm5vdCg6aG92ZXIpOm5vdCguc2VsZWN0ZWQpID4gc3ZnIHBhdGgge1xuICBmaWxsOiAjQUFBQUFBO1xufVxuLmJlc3Rvdy1idXR0b24gPiAucHJpbWFyeSA+IC5pY29uID4gLmxvYWRlciB7XG4gIGFuaW1hdGlvbjogZmFkZS1pbiAwLjJzIGVhc2UtaW4tb3V0IDBzIDE7XG4gIGhlaWdodDogMTRweDtcbiAgd2lkdGg6IDE0cHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG4uYmVzdG93LWJ1dHRvbiA+IC5kaXZpZGVyIHtcbiAgd2lkdGg6IDFweDtcbiAgaGVpZ2h0OiAxNnB4O1xufVxuLnRoZW1lLWxpZ2h0IC5iZXN0b3ctYnV0dG9uID4gLmRpdmlkZXIge1xuICBiYWNrZ3JvdW5kOiAjYzlkNGUwO1xufVxuLnRoZW1lLWRhcmsgLmJlc3Rvdy1idXR0b24gPiAuZGl2aWRlciB7XG4gIGJhY2tncm91bmQ6ICMyRTJFMkU7XG59XG4uYmVzdG93LWJ1dHRvbiA+IC5pbnRlZ3JhdGlvbiB7XG4gIHBhZGRpbmc6IDBweCA2cHg7XG4gIHRyYW5zaXRpb246IDAuMnMgYmFja2dyb3VuZC1jb2xvciBlYXNlLWluLW91dDtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuLnRoZW1lLWxpZ2h0IC5iZXN0b3ctYnV0dG9uID4gLmludGVncmF0aW9uOm5vdCg6aG92ZXIpID4gLmljb24gcGF0aCB7XG4gIGZpbGw6ICM3ZThmOWY7XG59XG4udGhlbWUtZGFyayAuYmVzdG93LWJ1dHRvbiA+IC5pbnRlZ3JhdGlvbjpub3QoOmhvdmVyKSA+IC5pY29uIHBhdGgge1xuICBmaWxsOiAjQUFBQUFBO1xufVxuLmJlc3Rvdy1idXR0b24gPiAuaW50ZWdyYXRpb24gPiBpbWcge1xuICB3aWR0aDogMTNweDtcbn1cbi50aGVtZS1saWdodCAuYmVzdG93LWJ1dHRvbiA+IC5wcmltYXJ5OmhvdmVyLCAudGhlbWUtbGlnaHQgLmJlc3Rvdy1idXR0b24gPiAuaW50ZWdyYXRpb246aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZXNtb2tlO1xufVxuLnRoZW1lLWRhcmsgLmJlc3Rvdy1idXR0b24gPiAucHJpbWFyeTpob3ZlciwgLnRoZW1lLWRhcmsgLmJlc3Rvdy1idXR0b24gPiAuaW50ZWdyYXRpb246aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjkyOTI5O1xufSIsIkBmdW5jdGlvbiB0aGVtZWQoJGtleSkge1xuICBAcmV0dXJuIG1hcC1nZXQoJHRoZW1lLW1hcCwgJGtleSk7XG59XG5cbkBtaXhpbiBhcHAtZHJhZ2dhYmxlKCkge1xuICAtd2Via2l0LWFwcC1yZWdpb246IGRyYWc7XG5cbiAgLnRoZW1lLXdpbmRvd3MgJiB7XG4gICAgLXdlYmtpdC1hcHAtcmVnaW9uOiBuby1kcmFnO1xuICB9XG59XG5cbkBtaXhpbiB0aGVtaWZ5KCR0aGVtZXM6ICR0aGVtZXMpIHtcbiAgQGVhY2ggJHRoZW1lLCAkbWFwIGluICR0aGVtZXMge1xuXG4gICAgLnRoZW1lLSN7JHRoZW1lfSAmIHtcbiAgICAgICR0aGVtZS1tYXA6ICgpICFnbG9iYWw7XG4gICAgICBAZWFjaCAka2V5LCAkc3VibWFwIGluICRtYXAge1xuICAgICAgICAkdmFsdWU6IG1hcC1nZXQobWFwLWdldCgkdGhlbWVzLCAkdGhlbWUpLCAnI3ska2V5fScpO1xuICAgICAgICAkdGhlbWUtbWFwOiBtYXAtbWVyZ2UoJHRoZW1lLW1hcCwgKCRrZXk6ICR2YWx1ZSkpICFnbG9iYWw7XG4gICAgICB9XG5cbiAgICAgIEBjb250ZW50O1xuICAgICAgJHRoZW1lLW1hcDogbnVsbCAhZ2xvYmFsO1xuICAgIH1cblxuICB9XG59XG5cbkBtaXhpbiB0aGVtaWZ5Qm9keSgkdGhlbWVzOiAkdGhlbWVzKSB7XG4gIEBlYWNoICR0aGVtZSwgJG1hcCBpbiAkdGhlbWVzIHtcblxuICAgICYudGhlbWUtI3skdGhlbWV9IHtcbiAgICAgICR0aGVtZS1tYXA6ICgpICFnbG9iYWw7XG4gICAgICBAZWFjaCAka2V5LCAkc3VibWFwIGluICRtYXAge1xuICAgICAgICAkdmFsdWU6IG1hcC1nZXQobWFwLWdldCgkdGhlbWVzLCAkdGhlbWUpLCAnI3ska2V5fScpO1xuICAgICAgICAkdGhlbWUtbWFwOiBtYXAtbWVyZ2UoJHRoZW1lLW1hcCwgKCRrZXk6ICR2YWx1ZSkpICFnbG9iYWw7XG4gICAgICB9XG5cbiAgICAgIEBjb250ZW50O1xuICAgICAgJHRoZW1lLW1hcDogbnVsbCAhZ2xvYmFsO1xuICAgIH1cblxuICB9XG59XG5cbkBtaXhpbiB0aGVtaWZ5U2luZ2xlKCRtb2RlLCAkdGhlbWVzOiAkdGhlbWVzKSB7XG4gIEBlYWNoICR0aGVtZSwgJG1hcCBpbiAkdGhlbWVzIHtcbiAgICBAaWYgJG1vZGUgPT0gJHRoZW1lIHtcbiAgICAgIC50aGVtZS0jeyR0aGVtZX0gJiB7XG4gICAgICAgICR0aGVtZS1tYXA6ICgpICFnbG9iYWw7XG4gICAgICAgIEBlYWNoICRrZXksICRzdWJtYXAgaW4gJG1hcCB7XG4gICAgICAgICAgJHZhbHVlOiBtYXAtZ2V0KG1hcC1nZXQoJHRoZW1lcywgJHRoZW1lKSwgJyN7JGtleX0nKTtcbiAgICAgICAgICAkdGhlbWUtbWFwOiBtYXAtbWVyZ2UoJHRoZW1lLW1hcCwgKCRrZXk6ICR2YWx1ZSkpICFnbG9iYWw7XG4gICAgICAgIH1cblxuICAgICAgICBAY29udGVudDtcbiAgICAgICAgJHRoZW1lLW1hcDogbnVsbCAhZ2xvYmFsO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5AbWl4aW4gYm91bmNlLXBpeGVscygkcGl4ZWxzKSB7XG4gIEBrZXlmcmFtZXMgYm91bmNlLXBpeGVscyB7XG4gICAgMCUgeyB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLSRwaXhlbHMpIH1cbiAgICA1MCUgeyB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoJHBpeGVscykgfVxuICAgIDEwMCUgeyB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLSRwaXhlbHMpIH1cbiAgfVxuICBhbmltYXRpb246IGJvdW5jZS1waXhlbHMgMnMgZWFzZS1pbi1vdXQgaW5maW5pdGU7XG59XG5cbkBtaXhpbiBmb3JjZS1ncHUoKSB7XG4gIC13ZWJraXQtYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICAtbW96LWJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDEpO1xuICAtbXMtdHJhbnNmb3JtOiBzY2FsZSgxKTtcbiAgLW1vei10cmFuc2Zvcm06IHNjYWxlKDEpO1xuICBiYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG4gIHRyYW5zZm9ybTogc2NhbGUoMSk7XG59XG5cbkBtaXhpbiBibHVyKCRwaXhlbHMpIHtcbiAgLXdlYmtpdC1maWx0ZXI6IGJsdXIoJHBpeGVscyk7XG4gIC1tb3otZmlsdGVyOiBibHVyKCRwaXhlbHMpO1xuICAtby1maWx0ZXI6IGJsdXIoJHBpeGVscyk7XG4gIC1tcy1maWx0ZXI6IGJsdXIoJHBpeGVscyk7XG4gIGZpbHRlcjogYmx1cigkcGl4ZWxzKTtcbn1cblxuQG1peGluIGVuYWJsZS1zZWxlY3Rpb24oKSB7XG4gIC13ZWJraXQtdG91Y2gtY2FsbG91dDogYXV0bzsgLyogaU9TIFNhZmFyaSAqL1xuICAtd2Via2l0LXVzZXItc2VsZWN0OiB0ZXh0OyAvKiBTYWZhcmkgKi9cbiAgLWtodG1sLXVzZXItc2VsZWN0OiB0ZXh0OyAvKiBLb25xdWVyb3IgSFRNTCAqL1xuICAtbW96LXVzZXItc2VsZWN0OiB0ZXh0OyAvKiBGaXJlZm94ICovXG4gIC1tcy11c2VyLXNlbGVjdDogdGV4dDsgLyogSW50ZXJuZXQgRXhwbG9yZXIvRWRnZSAqL1xuICB1c2VyLXNlbGVjdDogdGV4dDtcbiAgLXdlYmtpdC1hcHAtcmVnaW9uOiBuby1kcmFnO1xuICBjdXJzb3I6IGF1dG87XG59XG5cbkBtaXhpbiBkaXNhYmxlLXNlbGVjdGlvbigpIHtcbiAgLXdlYmtpdC10b3VjaC1jYWxsb3V0OiBub25lOyAvKiBpT1MgU2FmYXJpICovXG4gIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7IC8qIFNhZmFyaSAqL1xuICAta2h0bWwtdXNlci1zZWxlY3Q6IG5vbmU7IC8qIEtvbnF1ZXJvciBIVE1MICovXG4gIC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7IC8qIEZpcmVmb3ggKi9cbiAgLW1zLXVzZXItc2VsZWN0OiBub25lOyAvKiBJbnRlcm5ldCBFeHBsb3Jlci9FZGdlICovXG4gIHVzZXItc2VsZWN0OiBub25lO1xuICBjdXJzb3I6IGRlZmF1bHQ7XG59XG5cbkBtaXhpbiBlbmFibGUtZm9udC1zbW9vdGhpbmcoKSB7XG4gIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xuICAtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlO1xufVxuXG5AbWl4aW4gZGlzYWJsZS1mb250LXNtb290aGluZygpIHtcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYXV0bztcbiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGF1dG87XG59XG5cbkBtaXhpbiB0cnVuY2F0ZS1hdCgkbGluZXMpIHtcbiAgLy8gZWxsaXBzaXNcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XG4gIHdvcmQtYnJlYWs6IGJyZWFrLWFsbDtcblxuICAvLyBtdWx0aWxpbmUgZWxsaXBzZXMgZm9yIHdlYmtpdCBicm93c2Vyc1xuICAvLyBhbGwgb3RoZXIgYnJvd3NlcnMgd2lsbCBsaW1pdCB0byAxIGxpbmUsXG4gIC8vICAgYnV0IG5vdCBnZXQgZWxsaXBzaXNcbiAgQGlmICRsaW5lcyA+IDEge1xuICAgIC13ZWJraXQtbGluZS1jbGFtcDogJGxpbmVzO1xuICAgIC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7XG4gICAgLy8gTk9URShTSEFIQU4pOiBUaGUgZm9sbG93aW5nIGJyZWFrcyB0aGUgLi4uIGluIG5vbi13ZWJraXQgYnJvd3NlcnNcbiAgICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICB9XG59XG5cbkBtaXhpbiBkcm9wLXJpZ2h0KCRzZWNvbmRzKSB7XG4gIGFuaW1hdGlvbjogZHJvcC1yaWdodCAkc2Vjb25kcyBlYXNlLWluLW91dCAwcyAxO1xufVxuXG5AbWl4aW4gZHJvcC1pbigkc2Vjb25kcykge1xuICBhbmltYXRpb246IGRyb3AtaW4gJHNlY29uZHMgZWFzZS1pbi1vdXQgMHMgMTtcbn1cblxuQG1peGluIGV4cGFuZC12ZXJ0aWNhbCgkc2Vjb25kcykge1xuICB0cmFuc2Zvcm0tb3JpZ2luOiB0b3A7XG4gIGFuaW1hdGlvbjogZXhwYW5kLXZlcnRpY2FsICRzZWNvbmRzIGVhc2UtaW4tb3V0IDBzIDE7XG59XG5cbkBtaXhpbiBmYWRlLWluKCRzZWNvbmRzKSB7XG4gIGFuaW1hdGlvbjogZmFkZS1pbiAkc2Vjb25kcyBlYXNlLWluLW91dCAwcyAxO1xufVxuXG5AbWl4aW4gZmFkZS1vdXQoJHNlY29uZHMpIHtcbiAgYW5pbWF0aW9uOiBmYWRlLW91dCAkc2Vjb25kcyBlYXNlLWluLW91dCAwcyAxO1xuICBhbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkcztcbn1cblxuQG1peGluIGV4cGFuZCgkc2Vjb25kcykge1xuICBhbmltYXRpb246IGV4cGFuZCAkc2Vjb25kcyBlYXNlLWluLW91dCAwcyAxO1xufVxuXG5AbWl4aW4gYnJvd3Nlci1kZWZhdWx0cygpIHtcbiAgQGluY2x1ZGUgZGlzYWJsZS1mb250LXNtb290aGluZygpO1xuICBsaW5lLWhlaWdodDogaW5pdGlhbDtcblxuICAqIHtcbiAgICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgICBsZXR0ZXItc3BhY2luZzogaW5pdGlhbDtcbiAgfVxuXG4gIGIsIHN0cm9uZyB7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIH1cblxuICBoMSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgZm9udC1zaXplOiAyZW07XG4gICAgbWFyZ2luLXRvcDogMC42N2VtO1xuICAgIG1hcmdpbi1ib3R0b206IDAuNjdlbTtcbiAgICBtYXJnaW4tbGVmdDogMDtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIH1cblxuICBoMiB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgZm9udC1zaXplOiAxLjVlbTtcbiAgICBtYXJnaW4tdG9wOiAwLjgzZW07XG4gICAgbWFyZ2luLWJvdHRvbTogMC44M2VtO1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgfVxuXG4gIGgzIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBmb250LXNpemU6IDEuMTdlbTtcbiAgICBtYXJnaW4tdG9wOiAxZW07XG4gICAgbWFyZ2luLWJvdHRvbTogMWVtO1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgfVxuXG4gIGg0IHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBmb250LXNpemU6IDFlbTtcbiAgICBtYXJnaW4tdG9wOiAxLjMzZW07XG4gICAgbWFyZ2luLWJvdHRvbTogMS4zM2VtO1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgfVxuXG4gIGg1IHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBmb250LXNpemU6IC44M2VtO1xuICAgIG1hcmdpbi10b3A6IDEuNjdlbTtcbiAgICBtYXJnaW4tYm90dG9tOiAxLjY3ZW07XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICB9XG5cbiAgaDYge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGZvbnQtc2l6ZTogLjY3ZW07XG4gICAgbWFyZ2luLXRvcDogMi4zM2VtO1xuICAgIG1hcmdpbi1ib3R0b206IDIuMzNlbTtcbiAgICBtYXJnaW4tbGVmdDogMDtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIH1cblxuICBwIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW4tdG9wOiAxZW07XG4gICAgbWFyZ2luLWJvdHRvbTogMWVtO1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgfVxufVxuIiwiLy8gaWYgdGhlIGZvbGxvd2luZyBpcyB1cGRhdGVkLCBzaG91bGQgYWxzbyB1cGRhdGUgYGxpYi90eXBvZ3JhcGh5LnRzYFxuJGRlZmF1bHRGb250OiAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsXG4gIFwiU2Vnb2UgVUlcIiwgXCJSb2JvdG9cIiwgXCJPeHlnZW5cIiwgXCJVYnVudHVcIiwgXCJDYW50YXJlbGxcIixcbiAgXCJGaXJhIFNhbnNcIiwgXCJEcm9pZCBTYW5zXCIsIFwiSGVsdmV0aWNhIE5ldWVcIixcbiAgc2Fucy1zZXJpZjtcblxuJHJlZ3VsYXI6IDQwMDtcbiRtZWRpdW06IDUwMDtcbiRzZW1pYm9sZDogNjAwO1xuJGJvbGQ6IDcwMDtcbiJdfV0pOwo="}]}