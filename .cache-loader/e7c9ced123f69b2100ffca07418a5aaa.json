{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/RightSidebar/components/ContactInfo/components/ContactInteractions/components/NotesPane/NotesPane.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/RightSidebar/components/ContactInfo/components/ContactInteractions/components/NotesPane/NotesPane.tsx","mtime":1675280254029},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JzsKaW1wb3J0IEluZmluaXRlIGZyb20gJ3JlYWN0LWluZmluaXRlJzsKaW1wb3J0IHsgdW5pcSB9IGZyb20gJ2xvZGFzaCc7CmltcG9ydCBOb3RlIGZyb20gJy4vTm90ZSc7CmltcG9ydCAnLi9Ob3Rlc1BhbmUuc2Nzcyc7CnZhciBOb3Rlc1BhbmUgPSBmdW5jdGlvbiAocHJvcHMpIHsKICAgIHZhciBpc0VtcHR5ID0gIXByb3BzLm5vdGVzIHx8ICFwcm9wcy5ub3Rlcy5sZW5ndGg7CiAgICB2YXIgaXRlbUhlaWdodHMgPSBwcm9wcy5ub3RlcyAmJiBwcm9wcy5ub3Rlcy5tYXAoZnVuY3Rpb24gKG5vdGUpIHsKICAgICAgICB2YXIgY29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7CiAgICAgICAgY29udGFpbmVyLmlubmVySFRNTCA9IG5vdGUuYm9keTsKICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGNvbnRhaW5lcik7CiAgICAgICAgdmFyIGhlaWdodCA9IGNvbnRhaW5lci5vZmZzZXRIZWlnaHQ7CiAgICAgICAgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZChjb250YWluZXIpOwogICAgICAgIHJldHVybiA0MiArIGhlaWdodDsKICAgIH0pOwogICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLCB7IGNsYXNzTmFtZTogIm5vdGVzLXBhbmUiIH0sCiAgICAgICAgaXNFbXB0eSAmJiBSZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLCB7IGNsYXNzTmFtZTogImVtcHR5IiB9LAogICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KCJidXR0b24iLCBudWxsLCAiQWRkIGEgbm90ZSIpLAogICAgICAgICAgICAiIHRvIHNoYXJlIGluZm8gYWJvdXQgdGhpcyB3aXRoIHlvdXIgdGVhbSEiKSwKICAgICAgICAhaXNFbXB0eSAmJiBpdGVtSGVpZ2h0cyAmJiBSZWFjdC5jcmVhdGVFbGVtZW50KEluZmluaXRlLCB7IGNsYXNzTmFtZTogIm1haW4iLCBlbGVtZW50SGVpZ2h0OiB1bmlxKGl0ZW1IZWlnaHRzKSwgY29udGFpbmVySGVpZ2h0OiBwcm9wcy5saXN0SGVpZ2h0IH0sIHByb3BzLm5vdGVzLm1hcChmdW5jdGlvbiAobm90ZSwgaW5kZXgpIHsKICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTm90ZSwgeyBub3RlOiBub3RlLCBrZXk6IG5vdGUuaWQsIGNsYXNzTmFtZTogaXRlbUhlaWdodHNbaW5kZXhdICsgIi1weCIgfSk7CiAgICAgICAgfSkpKSk7Cn07CmV4cG9ydCBkZWZhdWx0IE5vdGVzUGFuZTsK"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/RightSidebar/components/ContactInfo/components/ContactInteractions/components/NotesPane/NotesPane.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/RightSidebar/components/ContactInfo/components/ContactInteractions/components/NotesPane/NotesPane.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,QAAQ,MAAM,gBAAgB,CAAC;AACtC,OAAO,EAAE,IAAI,EAAE,MAAM,QAAQ,CAAC;AAG9B,OAAO,IAAI,MAAM,QAAQ,CAAC;AAE1B,OAAO,kBAAkB,CAAC;AAO1B,IAAM,SAAS,GAAG,UAAC,KAAY;IAC7B,IAAM,OAAO,GAAG,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC;IACpD,IAAM,WAAW,GAAG,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,UAAC,IAAI;QACtD,IAAM,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAChD,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC;QAChC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;QACrC,IAAM,MAAM,GAAG,SAAS,CAAC,YAAY,CAAC;QACtC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;QACrC,OAAO,EAAE,GAAG,MAAM,CAAC;IACrB,CAAC,CAAC,CAAC;IAEH,OAAO,CACL,6BAAK,SAAS,EAAC,YAAY;QACxB,OAAO,IAAI,6BAAK,SAAS,EAAC,OAAO;YAChC,iDAA2B;wDACvB;QACL,CAAC,OAAO,IAAI,WAAW,IAAI,oBAAC,QAAQ,IACnC,SAAS,EAAC,MAAM,EAChB,aAAa,EAAE,IAAI,CAAC,WAAW,CAAC,EAChC,eAAe,EAAE,KAAK,CAAC,UAAU,IAEhC,KAAK,CAAC,KAAM,CAAC,GAAG,CAAC,UAAC,IAAiB,EAAE,KAAa;YACjD,OAAO,oBAAC,IAAI,IAAC,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC,EAAE,EAAE,SAAS,EAAK,WAAW,CAAC,KAAK,CAAC,QAAK,GAAI,CAAC;QACnF,CAAC,CAAC,CACO,CACP,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,SAAS,CAAC","sourcesContent":["import React from 'react';\nimport Infinite from 'react-infinite';\nimport { uniq } from 'lodash';\n\nimport { ContactNote } from '@src/types';\nimport Note from './Note';\n\nimport './NotesPane.scss';\n\ninterface Props {\n  notes?: ContactNote[];\n  listHeight: number;\n}\n\nconst NotesPane = (props: Props) => {\n  const isEmpty = !props.notes || !props.notes.length;\n  const itemHeights = props.notes && props.notes.map((note) => {\n    const container = document.createElement('div');\n    container.innerHTML = note.body;\n    document.body.appendChild(container);\n    const height = container.offsetHeight;\n    document.body.removeChild(container);\n    return 42 + height;\n  });\n\n  return (\n    <div className=\"notes-pane\">\n      {isEmpty && <div className=\"empty\">\n        <button>Add a note</button> to share info about this with your team!\n      </div>}\n      {!isEmpty && itemHeights && <Infinite\n        className=\"main\"\n        elementHeight={uniq(itemHeights)}\n        containerHeight={props.listHeight}\n      >\n        {props.notes!.map((note: ContactNote, index: number) => {\n          return <Note note={note} key={note.id} className={`${itemHeights[index]}-px`} />;\n        })}\n      </Infinite>}\n    </div>\n  );\n};\n\nexport default NotesPane;\n"]}]}