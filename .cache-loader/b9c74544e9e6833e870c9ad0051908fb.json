{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Threads/components/ThreadList/ThreadList.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Threads/components/ThreadList/ThreadList.tsx","mtime":1675280254113},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Threads/components/ThreadList/ThreadList.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Threads/components/ThreadList/ThreadList.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport { History } from 'history';\n\nimport {\n  ThreadBox,\n  List,\n  Mailbox,\n  MailboxType,\n  Thread,\n  Commit,\n  KeyCode,\n  HotkeyActions,\n  Account,\n  BannerType,\n} from '@src/types';\nimport Resizable, { NumberSize } from 're-resizable';\nimport InfiniteThreadList from './components/InfiniteThreadList';\nimport FilterPopover from './components/FilterPopover';\nimport SearchInput from '@src/components/Form/SearchInput/SearchInput';\nimport Disclosure from '@src/components/Icons/Disclosure.svg';\n\nimport UndoPopup from '@src/components/Base/UndoPopup';\nimport AdvancedSearchPopoverConnect from './components/AdvancedSearchPopover';\nimport AdvancedSearchPopover from './components/AdvancedSearchPopover/AdvancedSearchPopover';\nimport {\n  getHotkey, HotkeyAction, checkNextHotkeyChange, Hotkey, HotkeyCode,\n} from '@src/lib/hotkeys';\n\nimport './ThreadList.scss';\nimport { debounce, Cancelable } from 'lodash';\nimport { ThreadSearchMeta } from '@src/ducks/threads';\nimport { getSearchDbConfig } from '@src/lib/device';\nimport { isFocusedOnEditableContent } from '@src/lib/utils';\n\nexport interface Props {\n  selectedMailbox?: Mailbox;\n  lists: List[];\n  query?: string;\n  threads?: Thread[];\n  selectedThread: Thread;\n  history?: History;\n  loading: boolean;\n  hotkeyActions: HotkeyActions;\n  width?: number;\n  selectedAccount?: Account;\n  banner?: BannerType;\n  lsbCollapsed?: boolean;\n  failedDraftsCount?: number;\n\n  onUndo: () => void;\n}\n\nexport interface DispatchProps {\n  searchThreads: (meta: ThreadSearchMeta) => void;\n  updateMailbox: (mailbox: Mailbox) => void;\n  updateHotkey: (action: HotkeyAction) => void;\n  setWidth: (width: number) => void;\n}\n\ninterface State {\n  loading: boolean;\n  listHeight: number;\n  title: string;\n  query?: string;\n  lastMove?: Commit;\n}\n\nconst THREAD_ACTIONS: ThreadBox[] = [\n  ThreadBox.Archive,\n  ThreadBox.Trash,\n  ThreadBox.List,\n  ThreadBox.Later,\n  ThreadBox.Inbox,\n  ThreadBox.Spam,\n];\n\nconst THREAD_FILTERS = ['All', 'Unread'];\nconst SEARCH_HEIGHT = 30;\nconst HEADER_HEIGHT = 68;\n\nclass ThreadList extends\n  React.Component<Props & DispatchProps, State> {\n  private popover: FilterPopover;\n  private searchInput: SearchInput;\n  private debounced: ((meta: ThreadSearchMeta) => void) & Cancelable;\n  private handleSearchBlurDebounced: any;\n  private searchPopover: AdvancedSearchPopover;\n  private searchInFocus: boolean;\n\n  constructor(props: Props & DispatchProps) {\n    super();\n\n    const mainApp = document.getElementsByClassName('main-app');\n    const windowHeight = mainApp[0] ? (mainApp[0] as HTMLElement).offsetHeight : window.innerHeight;\n\n    this.state = {\n      loading: false,\n      listHeight: windowHeight - SEARCH_HEIGHT - HEADER_HEIGHT,\n      title: '',\n    };\n\n    this.debounced = debounce(\n      props.searchThreads,\n      200,\n    );\n\n    this.handleSearchBlurDebounced = debounce(\n      this.handleSearchBlur,\n      200,\n    );\n  }\n\n  UNSAFE_componentWillMount() {\n    this.updateTitle();\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    this.handleResize();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n    this.debounced.cancel();\n    this.handleSearchBlurDebounced.cancel();\n  }\n\n  // Custom handling for component update\n  shouldComponentUpdate(nextProps: Props, nextState: State) {\n    const oldThread = nextProps.selectedThread && nextProps.selectedThread.id || '';\n    const newThread = this.props.selectedThread && this.props.selectedThread.id || '';\n    if (\n      oldThread !== newThread ||\n      nextProps.selectedMailbox !== this.props.selectedMailbox ||\n      nextState !== this.state ||\n      nextProps.loading !== this.props.loading ||\n      nextProps.hotkeyActions !== this.props.hotkeyActions ||\n      nextProps.query !== this.props.query\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  // Handles resetting undo commit when mailbox has changed\n  UNSAFE_componentWillUpdate(nextProps: Props) {\n    if (this.state.lastMove && nextProps.selectedMailbox !== this.props.selectedMailbox) {\n      this.setState({ lastMove: undefined });\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props) {\n    // Handle resize for threads list\n    if (nextProps.banner !== this.props.banner) {\n      // setTimeout(() => , 0);\n      this.handleResize();\n    }\n  }\n\n  // HACK(SHIN): Update focus behavior to not rely on resetting ThreadList on componentDidUpdate\n  componentDidUpdate(oldProps: Props & DispatchProps) {\n    const { selectedThread, selectedMailbox } = this.props;\n    const element = selectedThread && document.getElementById(selectedThread.id);\n    this.updateTitle();\n\n    // Handles search hotkey\n    const newActions = this.props.hotkeyActions;\n    const oldActions = oldProps.hotkeyActions;\n    if (newActions !== oldActions) {\n      if (checkNextHotkeyChange(HotkeyAction.Search, newActions, oldActions)) {\n        this.searchInput.focus(true);\n        return;\n      }\n    }\n\n    // Handle clearing out query\n    if (oldProps.selectedMailbox && selectedMailbox) {\n      if (!selectedMailbox.query && oldProps.selectedMailbox.query) {\n        this.searchInFocus = false;\n        this.setState({ query: undefined });\n      }\n    }\n\n    // HACK(SHIN): Does not remove selection if draft is present or if input already has input\n    if (isFocusedOnEditableContent()) {\n      return;\n    }\n\n    if (element) {\n      element.focus();\n    } else {\n      this.handleFocus();\n    }\n  }\n\n  handleFocus = (force: boolean = false) => {\n    if (!force && this.searchInFocus) {\n      return;\n    }\n\n    if (document.activeElement && (document.activeElement.tagName.toLowerCase() === 'input' ||\n      document.activeElement.className.toLowerCase().includes('drafteditor'))) {\n      return;\n    }\n\n    this.searchInFocus = false;\n\n    const threadList = document.getElementsByClassName('infinite-thread-list');\n    if (threadList && threadList[0]) {\n      (threadList[0] as HTMLElement).focus();\n    }\n  }\n\n  updateTitle = () => {\n    const { selectedMailbox } = this.props;\n    let newTitle = '';\n\n    switch (selectedMailbox && selectedMailbox.type) {\n      case MailboxType.Inbox:\n        newTitle = 'Inbox';\n        break;\n      case MailboxType.Archive:\n        newTitle = 'Archive';\n        break;\n      case MailboxType.Later:\n        newTitle = 'Read Later';\n        break;\n      case MailboxType.Trash:\n        newTitle = 'Trash';\n        break;\n      case MailboxType.Spam:\n        newTitle = 'Spam';\n        break;\n      case MailboxType.Outbox:\n        newTitle = 'Outbox';\n        break;\n      case MailboxType.Drafts:\n        newTitle = 'Drafts';\n        break;\n      case MailboxType.SendLater:\n        newTitle = 'Send Later';\n        break;\n      case MailboxType.Any:\n        // starred\n        if (selectedMailbox && selectedMailbox.starred === true) {\n          newTitle = 'Starred';\n          break;\n        }\n\n        if (selectedMailbox && selectedMailbox.followUp) {\n          newTitle = 'Follow Up';\n        }\n\n        if (selectedMailbox && selectedMailbox.sent) {\n          newTitle = 'Sent';\n        }\n\n        // list name\n        if (selectedMailbox && selectedMailbox.list && this.props.lists) {\n          const lists = this.props.lists.filter(\n            list => list.id === (selectedMailbox && selectedMailbox.list),\n          );\n          if (lists.length > 0) {\n            newTitle = lists[0].name;\n          }\n        }\n        break;\n      default:\n        break;\n    }\n\n    if (selectedMailbox && selectedMailbox.query) {\n      newTitle = `Search: ${selectedMailbox.query}`;\n    }\n\n    if (newTitle !== this.state.title) {\n      this.setState({\n        title: newTitle,\n      });\n    }\n  }\n\n  showPopover = () => {\n    this.popover.show();\n  }\n\n  handleResize = () => {\n    const mainApp = document.getElementsByClassName('thread-list');\n    const windowHeight = mainApp[0] ? (mainApp[0] as HTMLElement).offsetHeight : window.innerHeight;\n\n    this.setState({ listHeight: windowHeight - SEARCH_HEIGHT - HEADER_HEIGHT });\n  }\n\n  handleFilterSelect = (filter: string) => {\n    const { selectedMailbox, updateMailbox } = this.props;\n    const lowercaseFilter = filter.toLowerCase();\n\n    // Set query parameter according to filter\n    // TODO(SHIN & JENDY): Handle query + filter replace vs updating for filter vs query\n    if (selectedMailbox) {\n      if (lowercaseFilter !== 'all') {\n        updateMailbox({ ...selectedMailbox, read: false });\n      } else {\n        updateMailbox({ ...selectedMailbox, read: undefined });\n      }\n    }\n  }\n\n  handleInfiniteLoad = () => {\n    // this.setState({ loading: true });\n  }\n\n  handlePopoverRef = (ref: FilterPopover) => {\n    this.popover = ref;\n  }\n\n  handleSearch = (query: string, complete: boolean) => {\n    const { selectedMailbox } = this.props;\n\n    this.setState({ query: complete ? query + ' ' : query }, () => {\n\n      // Start query automatically if searchDb is enabled, otherwise wait for completion event\n      if (getSearchDbConfig().enabled || complete) {\n        this.debounced({ query, provider: complete });\n      }\n\n      if (complete) {\n        this.searchPopover.hide();\n      }\n\n      // Return focus if completed search with text query param\n      if (complete && selectedMailbox &&\n        selectedMailbox.queryParams && !!selectedMailbox.queryParams.text) {\n        this.searchInFocus = false;\n        this.handleFocus(true);\n      }\n\n      if (!complete) {\n        this.searchInput.focus(true);\n      }\n    });\n  }\n\n  handleMove = (commit: Commit) => {\n    if (commit.payload && commit.payload.box) {\n      this.setState({ lastMove: commit });\n    }\n  }\n\n  handleUndo = () => {\n    this.setState({ lastMove: undefined });\n    this.props.onUndo();\n  }\n\n  handleSearchInputRef = (ref: SearchInput) => {\n    this.searchInput = ref;\n  }\n\n  handleSearchPopoverRef = (ref: any) => {\n    if (ref) {\n      this.searchPopover = ref.getWrappedInstance();\n    }\n  }\n\n  handleSearchFocus = () => {\n    if (!this.searchInFocus) {\n      this.searchPopover.show();\n    }\n\n    this.searchInFocus = true;\n    this.handleSearchBlurDebounced.cancel();\n  }\n\n  handleSearchBlur = () => {\n    this.searchInFocus = false;\n    this.searchPopover.hide();\n\n    if (!this.state.query) {\n      this.handleSearchClear();\n    }\n  }\n\n  handleKeyDown = (e: React.KeyboardEvent<HTMLElement>) => {\n    const { updateHotkey, selectedMailbox, updateMailbox } = this.props;\n    const hotkey = getHotkey(e);\n    let handled: boolean = false;\n\n    if (hotkey) {\n\n      // Special handling for escape key\n      if (e.keyCode === KeyCode.Esc) {\n        if (selectedMailbox && selectedMailbox.query) {\n          updateMailbox({\n            ...selectedMailbox,\n            query: undefined,\n            queryParams: undefined,\n          });\n          handled = true;\n          this.searchInput?.blur();\n          this.searchInFocus = false;\n          this.handleFocus(true);\n        }\n\n        this.setState({ query: '' }, () => this.searchPopover.hide());\n      }\n\n      switch (hotkey.name || (hotkey as Hotkey & HotkeyCode).keyCode) {\n        case HotkeyAction.Search:\n          handled = true;\n          updateHotkey(HotkeyAction.Search);\n          break;\n        default: return;\n      }\n    }\n\n    if (handled) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n  }\n\n  handleSearchClear = () => {\n    const { updateMailbox, selectedMailbox } = this.props;\n    if (selectedMailbox && selectedMailbox.query) {\n      updateMailbox({\n        ...selectedMailbox,\n        query: undefined,\n        queryParams: undefined,\n      });\n    }\n\n    this.handleFocus(true);\n\n    this.setState({ query: '' }, () => this.searchPopover.hide());\n  }\n\n  handleSearchKeyDown = (e: React.KeyboardEvent<HTMLElement>) => {\n    const { updateMailbox, selectedMailbox } = this.props;\n    let handled = false;\n    switch (e.keyCode) {\n      case KeyCode.Esc:\n        if (selectedMailbox && selectedMailbox.query) {\n          updateMailbox({\n            ...selectedMailbox,\n            query: undefined,\n            queryParams: undefined,\n          });\n        }\n        this.searchInput?.blur();\n        this.searchInFocus = false;\n        this.handleFocus(true);\n        this.setState({ query: '' }, () => this.searchPopover.hide());\n        handled = true;\n        break;\n      case KeyCode.Down:\n        handled = true;\n        this.searchPopover.downArrow();\n        break;\n      case KeyCode.Up:\n        handled = true;\n        this.searchPopover.upArrow();\n        break;\n      case KeyCode.Enter:\n        handled = true;\n        this.searchPopover.enter();\n        if (selectedMailbox && selectedMailbox.query) {\n          this.searchInput?.blur();\n          this.searchInFocus = false;\n          this.handleFocus(true);\n        }\n        break;\n      default:\n        break;\n    }\n\n    if (handled) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  }\n\n  handleResizeStop = (\n    event: MouseEvent,\n    direction: string,\n    refToElement: HTMLElement,\n    delta: NumberSize,\n  ) => {\n    const { setWidth } = this.props;\n\n    if (refToElement.clientWidth) {\n      setWidth(refToElement.clientWidth);\n    }\n  }\n\n  // HACK(SHIN): Decrease InfiniteThreadList height by 10 due to HEADER_HEIGHT changing.\n  // Padding changes for some reason and miscalculates height of table and pushes app content up\n  render() {\n    const {\n      query,\n      selectedMailbox,\n      loading,\n      width,\n      selectedAccount,\n      lsbCollapsed,\n      failedDraftsCount,\n    } = this.props;\n    const {\n      listHeight,\n      lastMove,\n    } = this.state;\n\n    // Set filter text to unread if mailbox unread filter is set\n    const filterText = selectedMailbox && selectedMailbox.read !== undefined\n      ? 'Unread'\n      : 'All';\n\n    // Determine if we should show the SearchInput loading indicator\n    const providerLoading = selectedMailbox &&\n      selectedMailbox.providerSearch && !selectedMailbox.providerSearchComplete;\n    const showSearchInputLoading = (loading || providerLoading) &&\n      !!(selectedMailbox && selectedMailbox.query);\n\n    return (\n      <Resizable\n        className=\"thread-list\"\n        enable={{\n          top: false,\n          right: true,\n          bottom: false,\n          left: false,\n          topRight: false,\n          bottomRight: false,\n          bottomLeft: false,\n          topLeft: false,\n        }}\n        defaultSize={{\n          width: width || 300,\n          height: 'auto',\n        }}\n        minWidth={200}\n        onResizeStop={this.handleResizeStop}\n      >\n        <div\n          className=\"thread-list-main\"\n          tabIndex={-1}\n          onKeyDown={this.handleKeyDown}\n        >\n          <SearchInput\n            ref={this.handleSearchInputRef}\n            onSearch={this.handleSearch}\n            onFocus={this.handleSearchFocus}\n            onBlur={this.handleSearchBlurDebounced}\n            search={query}\n            key=\"search-input\"\n            height={SEARCH_HEIGHT}\n            loadingResults={showSearchInputLoading}\n            defaultValue={this.state.query}\n            onKeyDown={this.handleSearchKeyDown}\n            shouldFocus={this.searchInFocus}\n            onClear={this.handleSearchClear}\n            placeholder={selectedAccount ? `Search ${selectedAccount.description}` : 'Search'}\n          />\n          <AdvancedSearchPopoverConnect\n            key=\"advanced-search\"\n            query={this.state.query || ''}\n            onSearch={this.handleSearch}\n            ref={this.handleSearchPopoverRef}\n          />\n          <div className=\"header\" style={{ height: HEADER_HEIGHT }}>\n          {selectedAccount && lsbCollapsed && (\n              <div className=\"account-info\">\n                {selectedAccount.description}\n              </div>\n            )}\n          {selectedMailbox && selectedMailbox.type === MailboxType.Outbox &&\n            !!failedDraftsCount && (\n              <div className=\"failed-drafts-disclaimer\">\n                {failedDraftsCount === 1\n                  ? `${failedDraftsCount} draft failed to send`\n                  : `${failedDraftsCount} drafts failed to send`\n                }\n              </div>\n            )}\n            <h4>{this.state.title}</h4>\n            <button onClick={this.showPopover}>\n              {filterText}<Disclosure className=\"disclosure\"/>\n            </button>\n          </div>\n          <FilterPopover\n            ref={this.handlePopoverRef}\n            filters={THREAD_FILTERS}\n            onFilterSelect={this.handleFilterSelect}\n            selectedFilter={filterText}\n          />\n          <InfiniteThreadList\n            actions={THREAD_ACTIONS}\n            listHeight={listHeight}\n            key=\"infinite-thread-list\"\n            selectedIds={new Map()}\n            threads={[]}\n            drafts={[]}\n            onThreadMove={this.handleMove}\n            loading={loading}\n          />\n          {lastMove &&\n            <UndoPopup\n              title={`Moved to ${lastMove.payload.box}`}\n              onUndoClick={this.handleUndo}\n              resourceId={lastMove.resourceId}\n              autoDismissDuration={5000}\n            />\n          }\n        </div>\n      </Resizable>\n    );\n  }\n}\n\nexport default ThreadList;\n"]}]}