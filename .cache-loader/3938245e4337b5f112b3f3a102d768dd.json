{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/types/sequences.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/types/sequences.ts","mtime":1675280254122},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZXhwb3J0IHZhciBTZXF1ZW5jZVN0b3BDb25kaXRpb247CihmdW5jdGlvbiAoU2VxdWVuY2VTdG9wQ29uZGl0aW9uKSB7CiAgICBTZXF1ZW5jZVN0b3BDb25kaXRpb25bIlJlcGx5Il0gPSAicmVwbHkiOwogICAgU2VxdWVuY2VTdG9wQ29uZGl0aW9uWyJOb25lIl0gPSAibm9uZSI7Cn0pKFNlcXVlbmNlU3RvcENvbmRpdGlvbiB8fCAoU2VxdWVuY2VTdG9wQ29uZGl0aW9uID0ge30pKTsKZXhwb3J0IHZhciBTZXF1ZW5jZVJlY2lwaWVudFN0YXR1czsKKGZ1bmN0aW9uIChTZXF1ZW5jZVJlY2lwaWVudFN0YXR1cykgewogICAgU2VxdWVuY2VSZWNpcGllbnRTdGF0dXNbIkludmFsaWQiXSA9ICJpbnZhbGlkIjsKICAgIFNlcXVlbmNlUmVjaXBpZW50U3RhdHVzWyJBY3RpdmUiXSA9ICJhY3RpdmUiOwogICAgU2VxdWVuY2VSZWNpcGllbnRTdGF0dXNbIkNvbXBsZXRlIl0gPSAiY29tcGxldGUiOwogICAgU2VxdWVuY2VSZWNpcGllbnRTdGF0dXNbIkJvdW5jZWQiXSA9ICJib3VuY2VkIjsKICAgIFNlcXVlbmNlUmVjaXBpZW50U3RhdHVzWyJGYWlsZWQiXSA9ICJmYWlsZWQiOwogICAgU2VxdWVuY2VSZWNpcGllbnRTdGF0dXNbIlVuc3Vic2NyaWJlZCJdID0gInVuc3Vic2NyaWJlZCI7Cn0pKFNlcXVlbmNlUmVjaXBpZW50U3RhdHVzIHx8IChTZXF1ZW5jZVJlY2lwaWVudFN0YXR1cyA9IHt9KSk7CmV4cG9ydCB2YXIgU2VxdWVuY2VSZWNpcGllbnRGaWx0ZXI7CihmdW5jdGlvbiAoU2VxdWVuY2VSZWNpcGllbnRGaWx0ZXIpIHsKICAgIFNlcXVlbmNlUmVjaXBpZW50RmlsdGVyWyJBbGwiXSA9ICJhbGwiOwogICAgU2VxdWVuY2VSZWNpcGllbnRGaWx0ZXJbIkFjdGl2ZSJdID0gImFjdGl2ZSI7CiAgICBTZXF1ZW5jZVJlY2lwaWVudEZpbHRlclsiUGF1c2VkIl0gPSAicGF1c2VkIjsKICAgIFNlcXVlbmNlUmVjaXBpZW50RmlsdGVyWyJDb21wbGV0ZWQiXSA9ICJjb21wbGV0ZWQiOwogICAgU2VxdWVuY2VSZWNpcGllbnRGaWx0ZXJbIkJvdW5jZWQiXSA9ICJib3VuY2VkIjsKICAgIFNlcXVlbmNlUmVjaXBpZW50RmlsdGVyWyJGYWlsZWQiXSA9ICJmYWlsZWQiOwogICAgU2VxdWVuY2VSZWNpcGllbnRGaWx0ZXJbIlVuc3Vic2NyaWJlZCJdID0gInVuc3Vic2NyaWJlZCI7CiAgICBTZXF1ZW5jZVJlY2lwaWVudEZpbHRlclsiRGVsaXZlcmVkIl0gPSAiZGVsaXZlcmVkIjsKICAgIFNlcXVlbmNlUmVjaXBpZW50RmlsdGVyWyJPcGVuZWQiXSA9ICJvcGVuZWQiOwogICAgU2VxdWVuY2VSZWNpcGllbnRGaWx0ZXJbIkNsaWNrZWQiXSA9ICJjbGlja2VkIjsKICAgIFNlcXVlbmNlUmVjaXBpZW50RmlsdGVyWyJEb3dubG9hZGVkIl0gPSAiZG93bmxvYWRlZCI7CiAgICBTZXF1ZW5jZVJlY2lwaWVudEZpbHRlclsiUmVwbGllZCJdID0gInJlcGxpZWQiOwp9KShTZXF1ZW5jZVJlY2lwaWVudEZpbHRlciB8fCAoU2VxdWVuY2VSZWNpcGllbnRGaWx0ZXIgPSB7fSkpOwpleHBvcnQgdmFyIFNlcXVlbmNlUmVjaXBpZW50U29ydDsKKGZ1bmN0aW9uIChTZXF1ZW5jZVJlY2lwaWVudFNvcnQpIHsKICAgIFNlcXVlbmNlUmVjaXBpZW50U29ydFsiQ3JlYXRlZCJdID0gImNyZWF0ZWQiOwogICAgU2VxdWVuY2VSZWNpcGllbnRTb3J0WyJQYXVzZWQiXSA9ICJwYXVzZWQiOwogICAgU2VxdWVuY2VSZWNpcGllbnRTb3J0WyJOYW1lIl0gPSAibmFtZSI7CiAgICBTZXF1ZW5jZVJlY2lwaWVudFNvcnRbIlN0YXR1cyJdID0gInN0YXR1cyI7CiAgICBTZXF1ZW5jZVJlY2lwaWVudFNvcnRbIkxhc3RTdGFnZSJdID0gImxhc3RTdGFnZSI7CiAgICBTZXF1ZW5jZVJlY2lwaWVudFNvcnRbIkxhc3RTZW50Il0gPSAibGFzdFNlbnQiOwogICAgU2VxdWVuY2VSZWNpcGllbnRTb3J0WyJTY2hlZHVsZWQiXSA9ICJzY2hlZHVsZWQiOwogICAgU2VxdWVuY2VSZWNpcGllbnRTb3J0WyJPcGVuZWQiXSA9ICJvcGVuZWQiOwogICAgU2VxdWVuY2VSZWNpcGllbnRTb3J0WyJDbGlja2VkIl0gPSAiY2xpY2tlZCI7CiAgICBTZXF1ZW5jZVJlY2lwaWVudFNvcnRbIkRvd25sb2FkZWQiXSA9ICJkb3dubG9hZGVkIjsKICAgIFNlcXVlbmNlUmVjaXBpZW50U29ydFsiUmVwbGllZCJdID0gInJlcGxpZWQiOwp9KShTZXF1ZW5jZVJlY2lwaWVudFNvcnQgfHwgKFNlcXVlbmNlUmVjaXBpZW50U29ydCA9IHt9KSk7CmV4cG9ydCB2YXIgU2VxdWVuY2VTdGFnZVJlY2lwaWVudEZpbHRlcjsKKGZ1bmN0aW9uIChTZXF1ZW5jZVN0YWdlUmVjaXBpZW50RmlsdGVyKSB7CiAgICBTZXF1ZW5jZVN0YWdlUmVjaXBpZW50RmlsdGVyWyJTY2hlZHVsZWQiXSA9ICJzY2hlZHVsZWQiOwogICAgU2VxdWVuY2VTdGFnZVJlY2lwaWVudEZpbHRlclsiU2VudCJdID0gInNlbnQiOwogICAgU2VxdWVuY2VTdGFnZVJlY2lwaWVudEZpbHRlclsiUGF1c2VkIl0gPSAicGF1c2VkIjsKICAgIFNlcXVlbmNlU3RhZ2VSZWNpcGllbnRGaWx0ZXJbIkJvdW5jZWQiXSA9ICJib3VuY2VkIjsKICAgIFNlcXVlbmNlU3RhZ2VSZWNpcGllbnRGaWx0ZXJbIlVuc3Vic2NyaWJlZCJdID0gInVuc3Vic2NyaWJlZCI7CiAgICBTZXF1ZW5jZVN0YWdlUmVjaXBpZW50RmlsdGVyWyJEZWxpdmVyZWQiXSA9ICJkZWxpdmVyZWQiOwogICAgU2VxdWVuY2VTdGFnZVJlY2lwaWVudEZpbHRlclsiT3BlbmVkIl0gPSAib3BlbmVkIjsKICAgIFNlcXVlbmNlU3RhZ2VSZWNpcGllbnRGaWx0ZXJbIkNsaWNrZWQiXSA9ICJjbGlja2VkIjsKICAgIFNlcXVlbmNlU3RhZ2VSZWNpcGllbnRGaWx0ZXJbIkRvd25sb2FkZWQiXSA9ICJkb3dubG9hZGVkIjsKICAgIFNlcXVlbmNlU3RhZ2VSZWNpcGllbnRGaWx0ZXJbIlJlcGxpZWQiXSA9ICJyZXBsaWVkIjsKfSkoU2VxdWVuY2VTdGFnZVJlY2lwaWVudEZpbHRlciB8fCAoU2VxdWVuY2VTdGFnZVJlY2lwaWVudEZpbHRlciA9IHt9KSk7CmV4cG9ydCB2YXIgU2VxdWVuY2VTdGFnZVJlY2lwaWVudFNvcnQ7CihmdW5jdGlvbiAoU2VxdWVuY2VTdGFnZVJlY2lwaWVudFNvcnQpIHsKICAgIFNlcXVlbmNlU3RhZ2VSZWNpcGllbnRTb3J0WyJTY2hlZHVsZWQiXSA9ICJzY2hlZHVsZWQiOwogICAgU2VxdWVuY2VTdGFnZVJlY2lwaWVudFNvcnRbIkNyZWF0ZWQiXSA9ICJjcmVhdGVkIjsKICAgIFNlcXVlbmNlU3RhZ2VSZWNpcGllbnRTb3J0WyJQYXVzZWQiXSA9ICJwYXVzZWQiOwogICAgU2VxdWVuY2VTdGFnZVJlY2lwaWVudFNvcnRbIlN0YXR1cyJdID0gInN0YXR1cyI7CiAgICBTZXF1ZW5jZVN0YWdlUmVjaXBpZW50U29ydFsiU2VudCJdID0gInNlbnQiOwogICAgU2VxdWVuY2VTdGFnZVJlY2lwaWVudFNvcnRbIk9wZW5lZCJdID0gIm9wZW5lZCI7CiAgICBTZXF1ZW5jZVN0YWdlUmVjaXBpZW50U29ydFsiQ2xpY2tlZCJdID0gImNsaWNrZWQiOwogICAgU2VxdWVuY2VTdGFnZVJlY2lwaWVudFNvcnRbIkRvd25sb2FkZWQiXSA9ICJkb3dubG9hZGVkIjsKICAgIFNlcXVlbmNlU3RhZ2VSZWNpcGllbnRTb3J0WyJSZXBsaWVkIl0gPSAicmVwbGllZCI7Cn0pKFNlcXVlbmNlU3RhZ2VSZWNpcGllbnRTb3J0IHx8IChTZXF1ZW5jZVN0YWdlUmVjaXBpZW50U29ydCA9IHt9KSk7CmV4cG9ydCB2YXIgU2VxdWVuY2VTdGFnZVJlY2lwaWVudFN0YXR1czsKKGZ1bmN0aW9uIChTZXF1ZW5jZVN0YWdlUmVjaXBpZW50U3RhdHVzKSB7CiAgICBTZXF1ZW5jZVN0YWdlUmVjaXBpZW50U3RhdHVzWyJTY2hlZHVsZWQiXSA9ICJzY2hlZHVsZWQiOwogICAgU2VxdWVuY2VTdGFnZVJlY2lwaWVudFN0YXR1c1siQ29tcGxldGUiXSA9ICJjb21wbGV0ZSI7Cn0pKFNlcXVlbmNlU3RhZ2VSZWNpcGllbnRTdGF0dXMgfHwgKFNlcXVlbmNlU3RhZ2VSZWNpcGllbnRTdGF0dXMgPSB7fSkpOwpleHBvcnQgdmFyIFNlcXVlbmNlVGFiOwooZnVuY3Rpb24gKFNlcXVlbmNlVGFiKSB7CiAgICBTZXF1ZW5jZVRhYlsiU3RhZ2VzIl0gPSAic3RhZ2VzIjsKICAgIFNlcXVlbmNlVGFiWyJSZWNpcGllbnRzIl0gPSAicmVjaXBpZW50cyI7CiAgICBTZXF1ZW5jZVRhYlsiTWVzc2FnZSJdID0gIm1lc3NhZ2UiOwogICAgU2VxdWVuY2VUYWJbIlNldHRpbmdzIl0gPSAic2V0dGluZ3MiOwp9KShTZXF1ZW5jZVRhYiB8fCAoU2VxdWVuY2VUYWIgPSB7fSkpOwo="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/types/sequences.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/types/sequences.ts"],"names":[],"mappings":"AAGA,MAAM,CAAN,IAAY,qBAGX;AAHD,WAAY,qBAAqB;IAC/B,wCAAe,CAAA;IACf,sCAAa,CAAA;AACf,CAAC,EAHW,qBAAqB,KAArB,qBAAqB,QAGhC;AAsID,MAAM,CAAN,IAAkB,uBAOjB;AAPD,WAAkB,uBAAuB;IACvC,8CAAmB,CAAA;IACnB,4CAAiB,CAAA;IACjB,gDAAqB,CAAA;IACrB,8CAAmB,CAAA;IACnB,4CAAiB,CAAA;IACjB,wDAA6B,CAAA;AAC/B,CAAC,EAPiB,uBAAuB,KAAvB,uBAAuB,QAOxC;AAED,MAAM,CAAN,IAAY,uBAaX;AAbD,WAAY,uBAAuB;IACjC,sCAAW,CAAA;IACX,4CAAiB,CAAA;IACjB,4CAAiB,CAAA;IACjB,kDAAuB,CAAA;IACvB,8CAAmB,CAAA;IACnB,4CAAiB,CAAA;IACjB,wDAA6B,CAAA;IAC7B,kDAAuB,CAAA;IACvB,4CAAiB,CAAA;IACjB,8CAAmB,CAAA;IACnB,oDAAyB,CAAA;IACzB,8CAAmB,CAAA;AACrB,CAAC,EAbW,uBAAuB,KAAvB,uBAAuB,QAalC;AAED,MAAM,CAAN,IAAY,qBAYX;AAZD,WAAY,qBAAqB;IAC/B,4CAAmB,CAAA;IACnB,0CAAiB,CAAA;IACjB,sCAAa,CAAA;IACb,0CAAiB,CAAA;IACjB,gDAAuB,CAAA;IACvB,8CAAqB,CAAA;IACrB,gDAAuB,CAAA;IACvB,0CAAiB,CAAA;IACjB,4CAAmB,CAAA;IACnB,kDAAyB,CAAA;IACzB,4CAAmB,CAAA;AACrB,CAAC,EAZW,qBAAqB,KAArB,qBAAqB,QAYhC;AAED,MAAM,CAAN,IAAY,4BAWX;AAXD,WAAY,4BAA4B;IACtC,uDAAuB,CAAA;IACvB,6CAAa,CAAA;IACb,iDAAiB,CAAA;IACjB,mDAAmB,CAAA;IACnB,6DAA6B,CAAA;IAC7B,uDAAuB,CAAA;IACvB,iDAAiB,CAAA;IACjB,mDAAmB,CAAA;IACnB,yDAAyB,CAAA;IACzB,mDAAmB,CAAA;AACrB,CAAC,EAXW,4BAA4B,KAA5B,4BAA4B,QAWvC;AAED,MAAM,CAAN,IAAY,0BAUX;AAVD,WAAY,0BAA0B;IACpC,qDAAuB,CAAA;IACvB,iDAAmB,CAAA;IACnB,+CAAiB,CAAA;IACjB,+CAAiB,CAAA;IACjB,2CAAa,CAAA;IACb,+CAAiB,CAAA;IACjB,iDAAmB,CAAA;IACnB,uDAAyB,CAAA;IACzB,iDAAmB,CAAA;AACrB,CAAC,EAVW,0BAA0B,KAA1B,0BAA0B,QAUrC;AAUD,MAAM,CAAN,IAAkB,4BAGjB;AAHD,WAAkB,4BAA4B;IAC5C,uDAAuB,CAAA;IACvB,qDAAqB,CAAA;AACvB,CAAC,EAHiB,4BAA4B,KAA5B,4BAA4B,QAG7C;AAED,MAAM,CAAN,IAAkB,WAKjB;AALD,WAAkB,WAAW;IAC3B,gCAAiB,CAAA;IACjB,wCAAyB,CAAA;IACzB,kCAAmB,CAAA;IACnB,oCAAqB,CAAA;AACvB,CAAC,EALiB,WAAW,KAAX,WAAW,QAK5B","sourcesContent":["import { SequenceRecipientCreateRecipient } from '@src/ducks/sequenceRecipients';\nimport { Resource } from '@src/types';\n\nexport enum SequenceStopCondition {\n  Reply = 'reply',\n  None = 'none',\n}\n\nexport interface Sequence {\n  id: string;\n  created: Date;\n  updated: Date;\n  team?: string;\n  user: string;\n  account: string;\n  senderEmail: string;\n\n  // metadata\n  archived: boolean;\n  paused: boolean;\n  name: string;\n  headers: string[];\n  durationDays: number;\n  stages: number;\n\n  // schedule settings\n  afterSecondsSinceMidnight: number;\n  beforeSecondsSinceMidnight: number;\n  daysOfWeek: number[];\n  timeZone: string;\n  dailyLimit: number;\n\n  recipients: SequenceRecipientCount;\n  analytics: SequenceAnalytics;\n  stopCondition: SequenceStopCondition;\n}\n\nexport interface SequenceAnalytics {\n  delivered: number;\n  deliveredUnique: number; // Only for sequences model\n  opened: number;\n  clicked: number;\n  downloaded: number;\n  replied: number;\n  unsubscribed: number;\n}\n\nexport interface SequenceRecipient {\n  id: string;\n  email: string;\n  sequence: string;\n  created: Date;\n  updated: Date;\n  user: string;\n  givenName: string;\n  familyName: string;\n\n  status: SequenceRecipientStatus;\n  invalidReason?: string;\n  paused: boolean;\n  variables?: { [key: string]: string };\n  stage?: string;\n  lastStage: string;\n  scheduled?: Date;\n  lastSent?: Date;\n\n  analytics: SequenceAnalytics;\n}\n\nexport interface SequenceRecipientCount {\n  active: number;\n  completed: number;\n  paused: number;\n  bounced: number;\n  failed: number;\n}\n\nexport interface SequenceStageRecipientCount {\n  scheduled: number;\n  bounced: number;\n  paused: number;\n}\n\nexport interface SequenceStage {\n  id: string;\n  stage: string;\n  sequence: string;\n  created: Date;\n  updated: Date;\n  user: string;\n  newThread: boolean;\n  intervalDays: number;\n\n  recipients: SequenceStageRecipientCount;\n  analytics: SequenceAnalytics;\n  order: number;\n}\n\nexport interface SequenceStageInstance {\n  id: string;\n  stage: string;\n  sequence: string;\n  created: Date;\n  updated: Date;\n  user: string;\n  template?: string;\n\n  unsubscribeLink: boolean;\n  custom: boolean;\n  subject: string;\n  body: string;\n  userEdited: boolean;\n}\n\nexport interface SequenceStageRecipient {\n  id: string;\n  stage: string;\n  sequence: string;\n  created: Date;\n  updated: Date;\n  user: string;\n  instance: string;\n\n  sent?: Date;\n\n  draft?: string;\n  thread?: string;\n  message?: string;\n\n  analytics: SequenceAnalytics;\n\n  // computed\n  email: string;\n  fullName: string;\n  paused: boolean;\n  status: SequenceStageRecipientStatus;\n  sequenceStatus: SequenceRecipientStatus;\n  willSend?: Date;\n}\n\nexport const enum SequenceRecipientStatus {\n  Invalid = 'invalid',\n  Active = 'active',\n  Complete = 'complete',\n  Bounced = 'bounced',\n  Failed = 'failed',\n  Unsubscribed = 'unsubscribed',\n}\n\nexport enum SequenceRecipientFilter {\n  All = 'all',\n  Active = 'active',\n  Paused = 'paused',\n  Completed = 'completed',\n  Bounced = 'bounced',\n  Failed = 'failed',\n  Unsubscribed = 'unsubscribed',\n  Delivered = 'delivered',\n  Opened = 'opened',\n  Clicked = 'clicked',\n  Downloaded = 'downloaded',\n  Replied = 'replied',\n}\n\nexport enum SequenceRecipientSort {\n  Created = 'created',\n  Paused = 'paused',\n  Name = 'name',\n  Status = 'status',\n  LastStage = 'lastStage',\n  LastSent = 'lastSent',\n  Scheduled = 'scheduled',\n  Opened = 'opened',\n  Clicked = 'clicked',\n  Downloaded = 'downloaded',\n  Replied = 'replied',\n}\n\nexport enum SequenceStageRecipientFilter {\n  Scheduled = 'scheduled',\n  Sent = 'sent',\n  Paused = 'paused',\n  Bounced = 'bounced',\n  Unsubscribed = 'unsubscribed',\n  Delivered = 'delivered',\n  Opened = 'opened',\n  Clicked = 'clicked',\n  Downloaded = 'downloaded',\n  Replied = 'replied',\n}\n\nexport enum SequenceStageRecipientSort {\n  Scheduled = 'scheduled',\n  Created = 'created',\n  Paused = 'paused',\n  Status = 'status',\n  Sent = 'sent',\n  Opened = 'opened',\n  Clicked = 'clicked',\n  Downloaded = 'downloaded',\n  Replied = 'replied',\n}\n\nexport interface SequenceRecipientsState {\n  filter: SequenceRecipientFilter | SequenceStageRecipientFilter;\n  sort?: SequenceRecipientSort | SequenceStageRecipientSort;\n  query?: string;\n  offset?: number;\n  desc?: boolean;\n}\n\nexport const enum SequenceStageRecipientStatus {\n  Scheduled = 'scheduled',\n  Complete = 'complete',\n}\n\nexport const enum SequenceTab {\n  Stages = 'stages',\n  Recipients = 'recipients',\n  Message = 'message',\n  Settings = 'settings',\n}\n\nexport interface SequenceRecipientsAddState {\n  headersToAdd?: Resource<string[]>;\n  headers: string[];\n  recipients: Array<Resource<SequenceRecipientCreateRecipient>>;\n  emailHeader?: string;\n  givenNameHeader?: string;\n  familyNameHeader?: string;\n  csv?: string;\n  successCount?: number;\n  error?: Error;\n}\n"]}]}