{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/analytics.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/analytics.ts","mtime":1675280254061},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgUmVjb3JkVHJhY2tPcywgUmVjb3JkVHJhY2tEZXZpY2UsIEFuYWx5dGljc0NsaWVudCwgbW9ja0FuYWx5dGljc0NsaWVudCwgfSBmcm9tICdAc3JjL2FwaS9hbmFseXRpY3MnOwppbXBvcnQgeyBpc0VsZWN0cm9uTWFjLCBpc0VsZWN0cm9uV2luZG93cyB9IGZyb20gJ0BzcmMvbGliL2VsZWN0cm9uJzsKZXhwb3J0IHZhciBVc2VyRXZlbnRzOwooZnVuY3Rpb24gKFVzZXJFdmVudHMpIHsKICAgIFVzZXJFdmVudHNbIkFjdGl2aXR5RmVlZFZpZXdlZCJdID0gIkFjdGl2aXR5IEZlZWQgVmlld2VkIjsKICAgIFVzZXJFdmVudHNbIkFuYWx5dGljc1ZpZXdlZCJdID0gIkFuYWx5dGljcyBWaWV3ZWQiOwogICAgVXNlckV2ZW50c1siQ2FsZW5kYXJWaWV3ZWQiXSA9ICJDYWxlbmRhciBWaWV3ZWQiOwogICAgVXNlckV2ZW50c1siQ2FsZW5kYXJTaWRlYmFyVmlld2VkIl0gPSAiQ2FsZW5kYXIgU2lkZWJhciBWaWV3ZWQiOwogICAgVXNlckV2ZW50c1siQXNhbmFUYXNrQ3JlYXRlZCJdID0gIkFzYW5hIFRhc2sgQ3JlYXRlZCI7CiAgICBVc2VyRXZlbnRzWyJDb21tZW50UG9zdGVkIl0gPSAiQ29tbWVudCBQb3N0ZWQiOwogICAgVXNlckV2ZW50c1siRHJhZnRDcmVhdGVkIl0gPSAiRHJhZnQgQ3JlYXRlZCI7CiAgICBVc2VyRXZlbnRzWyJMaW5rRXh0cmFjdG9yT3BlbmVkIl0gPSAiTGluayBFeHRyYWN0b3IgT3BlbmVkIjsKICAgIFVzZXJFdmVudHNbIkxvZ2dlZEluIl0gPSAiTG9nZ2VkIEluIjsKICAgIFVzZXJFdmVudHNbIkxvZ2dlZE91dCJdID0gIlVzZXIgTG9nZ2VkIE91dCI7CiAgICBVc2VyRXZlbnRzWyJNZXNzYWdlU2VudCJdID0gIk1lc3NhZ2UgU2VudCI7CiAgICBVc2VyRXZlbnRzWyJPcGVuZWRBcHAiXSA9ICJPcGVuZWQgQXBwIjsKICAgIFVzZXJFdmVudHNbIk9uYm9hcmRpbmdTdGVwQ29tcGxldGVkIl0gPSAiT25ib2FyZGluZyBTdGVwIENvbXBsZXRlZCI7CiAgICBVc2VyRXZlbnRzWyJIdWJzcG90UGFnZVZpc2l0ZWQiXSA9ICJIdWJTcG90IFBhZ2UgVmlzaXRlZCI7CiAgICBVc2VyRXZlbnRzWyJTYWxlc2ZvcmNlVmlld2VkIl0gPSAiU2FsZXNmb3JjZSBWaWV3ZWQiOwogICAgVXNlckV2ZW50c1siU2NoZWR1bGluZ1NldHRpbmdzT3BlbmVkIl0gPSAiU2NoZWR1bGluZyBTZXR0aW5ncyBPcGVuZWQiOwogICAgVXNlckV2ZW50c1siU2NoZWR1bGluZ1VybENvcGllZCJdID0gIlNjaGVkdWxpbmcgVXJsIENvcGllZCI7CiAgICBVc2VyRXZlbnRzWyJTZXF1ZW5jZXNPcGVuZWQiXSA9ICJTZXF1ZW5jZXMgT3BlbmVkIjsKICAgIFVzZXJFdmVudHNbIlNlcXVlbmNlQ3JlYXRlZCJdID0gIlNlcXVlbmNlIENyZWF0ZWQiOwogICAgVXNlckV2ZW50c1siU2VxdWVuY2VSZWNpcGllbnRzVXBsb2FkZWQiXSA9ICJTZXF1ZW5jZSBSZWNpcGllbnRzIFVwbG9hZGVkIjsKICAgIFVzZXJFdmVudHNbIlNlcXVlbmNlQWN0aXZhdGVkIl0gPSAiU2VxdWVuY2UgQWN0aXZhdGVkIjsKICAgIFVzZXJFdmVudHNbIlNlcXVlbmNlUmVjaXBpZW50QWN0aXZhdGVkIl0gPSAiU2VxdWVuY2UgUmVjaXBpZW50IEFjdGl2YXRlZCI7CiAgICBVc2VyRXZlbnRzWyJTZXF1ZW5jZVN0YWdlQ3JlYXRlZCJdID0gIlNlcXVlbmNlIFN0YWdlIENyZWF0ZWQiOwogICAgVXNlckV2ZW50c1siU2hhcmVNZXNzYWdlIl0gPSAiU2hhcmUgTWVzc2FnZSI7CiAgICBVc2VyRXZlbnRzWyJTbGFja0ludGVncmF0aW9uSW5zdGFsbGVkIl0gPSAiU2xhY2sgSW50ZWdyYXRpb24gSW5zdGFsbGVkIjsKICAgIFVzZXJFdmVudHNbIlRlbXBsYXRlQ3JlYXRlZCJdID0gIlRlbXBsYXRlIENyZWF0ZWQiOwogICAgVXNlckV2ZW50c1siVGhyZWFkT3BlcmF0aW9uIl0gPSAiVGhyZWFkIE9wZXJhdGlvbiI7CiAgICBVc2VyRXZlbnRzWyJUaHJlYWRSZWFkIl0gPSAiVGhyZWFkIFJlYWQiOwogICAgVXNlckV2ZW50c1siVGhyZWFkU2hhcmVkIl0gPSAiVGhyZWFkIFNoYXJlZCI7CiAgICBVc2VyRXZlbnRzWyJUaHJlYWRNdXRlZCJdID0gIlRocmVhZCBNdXRlZCI7CiAgICBVc2VyRXZlbnRzWyJUaHJlYWRVbm11dGVkIl0gPSAiVGhyZWFkIFVubXV0ZWQiOwogICAgVXNlckV2ZW50c1siVGhyZWFkU2hhcmVkVG9TbGFjayJdID0gIlRocmVhZCBTaGFyZWQgVG8gU2xhY2siOwogICAgVXNlckV2ZW50c1siVGhyZWFkVW5yZWFkIl0gPSAiVGhyZWFkIFVucmVhZCI7CiAgICBVc2VyRXZlbnRzWyJWaWRlb1ZpZXdlZCJdID0gIlZpZGVvIFZpZXdlZCI7CiAgICBVc2VyRXZlbnRzWyJVbmRvU2VuZCJdID0gIlVuZG8gU2VuZCI7CiAgICBVc2VyRXZlbnRzWyJVbnN1YnNjcmliZWQiXSA9ICJVbnN1YnNjcmliZWQiOwp9KShVc2VyRXZlbnRzIHx8IChVc2VyRXZlbnRzID0ge30pKTsKdmFyIGFwaSA9IHByb2Nlc3MuZW52LkpFU1QgPT09ICd0cnVlJyA/IG1vY2tBbmFseXRpY3NDbGllbnQoKSA6IG5ldyBBbmFseXRpY3NDbGllbnQoKTsKZXhwb3J0IGZ1bmN0aW9uIHJlY29yZEV2ZW50KGV2ZW50TmFtZSwgcHJvcGVydGllcykgewogICAgdmFyIG9zID0gUmVjb3JkVHJhY2tPcy5XZWI7CiAgICBpZiAoaXNFbGVjdHJvbk1hYykgewogICAgICAgIG9zID0gUmVjb3JkVHJhY2tPcy5NYWNPUzsKICAgIH0KICAgIGVsc2UgaWYgKGlzRWxlY3Ryb25XaW5kb3dzKSB7CiAgICAgICAgb3MgPSBSZWNvcmRUcmFja09zLldpbmRvd3M7CiAgICB9CiAgICByZXR1cm4gYXBpLnJlY29yZFRyYWNrKHsKICAgICAgICBuYW1lOiBldmVudE5hbWUsCiAgICAgICAgb3M6IG9zLAogICAgICAgIGRldmljZTogUmVjb3JkVHJhY2tEZXZpY2UuRGVza3RvcCwKICAgICAgICB2ZXJzaW9uOiAwLAogICAgICAgIHByb3BlcnRpZXM6IHByb3BlcnRpZXMsCiAgICB9KS5zdWJzY3JpYmUoewogICAgICAgIGVycm9yOiBmdW5jdGlvbiAoZSkgewogICAgICAgICAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6bm8tY29uc29sZQogICAgICAgICAgICBjb25zb2xlLmVycm9yKGUpOwogICAgICAgIH0sCiAgICB9KTsKfQovLyBSZWNvcmQgYW4gZXZlbnQgdG8gZ29vZ2xlIGFuYWx5dGljcwpleHBvcnQgZnVuY3Rpb24gcmVjb3JkR0FFdmVudChjYXRlZ29yeSwgYWN0aW9uKSB7CiAgICBpZiAod2luZG93Lmd0YWcpIHsKICAgICAgICB0cnkgewogICAgICAgICAgICB3aW5kb3cuZ3RhZygnZXZlbnQnLCBhY3Rpb24sIHsgZXZlbnRfY2F0ZWdvcnk6IGNhdGVnb3J5IH0pOwogICAgICAgIH0KICAgICAgICBjYXRjaCAoZSkgewogICAgICAgICAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6bm8tY29uc29sZQogICAgICAgICAgICBjb25zb2xlLmVycm9yKGUpOwogICAgICAgIH0KICAgIH0KfQovLyBSZWNvcmQgYW4gZXZlbnQgdG8gRmIgUGl4ZWwgKFVuYXZhaWxhYmxlIG9uIGRlc2t0b3AgYXBwKQpleHBvcnQgZnVuY3Rpb24gcmVjb3JkRkJFdmVudCh0eXBlLCBuYW1lKSB7CiAgICBpZiAod2luZG93LmZicSkgewogICAgICAgIHRyeSB7CiAgICAgICAgICAgIHdpbmRvdy5mYnEodHlwZSwgbmFtZSk7CiAgICAgICAgfQogICAgICAgIGNhdGNoIChlKSB7CiAgICAgICAgICAgIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpuby1jb25zb2xlCiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZSk7CiAgICAgICAgfQogICAgfQp9Cg=="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/analytics.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/analytics.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,aAAa,EAAE,iBAAiB,EAChC,eAAe,EAAE,mBAAmB,GACrC,MAAM,oBAAoB,CAAC;AAC5B,OAAO,EAAE,aAAa,EAAE,iBAAiB,EAAE,MAAM,mBAAmB,CAAC;AAErE,MAAM,CAAN,IAAkB,UAqCjB;AArCD,WAAkB,UAAU;IAC1B,yDAA2C,CAAA;IAC3C,kDAAoC,CAAA;IACpC,gDAAkC,CAAA;IAClC,+DAAiD,CAAA;IACjD,qDAAuC,CAAA;IACvC,8CAAgC,CAAA;IAChC,4CAA8B,CAAA;IAC9B,2DAA6C,CAAA;IAC7C,oCAAsB,CAAA;IACtB,2CAA6B,CAAA;IAC7B,0CAA4B,CAAA;IAC5B,sCAAwB,CAAA;IACxB,mEAAqD,CAAA;IACrD,yDAA2C,CAAA;IAC3C,oDAAsC,CAAA;IACtC,qEAAuD,CAAA;IACvD,2DAA6C,CAAA;IAC7C,kDAAoC,CAAA;IACpC,kDAAoC,CAAA;IACpC,yEAA2D,CAAA;IAC3D,sDAAwC,CAAA;IACxC,yEAA2D,CAAA;IAC3D,6DAA+C,CAAA;IAC/C,4CAA8B,CAAA;IAC9B,uEAAyD,CAAA;IACzD,kDAAoC,CAAA;IACpC,kDAAoC,CAAA;IACpC,wCAA0B,CAAA;IAC1B,4CAA8B,CAAA;IAC9B,0CAA4B,CAAA;IAC5B,8CAAgC,CAAA;IAChC,4DAA8C,CAAA;IAC9C,4CAA8B,CAAA;IAC9B,0CAA4B,CAAA;IAC5B,oCAAsB,CAAA;IACtB,2CAA6B,CAAA;AAC/B,CAAC,EArCiB,UAAU,KAAV,UAAU,QAqC3B;AAED,IAAM,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,KAAK,MAAM,CAAC,CAAC,CAAC,mBAAmB,EAAE,CAAC,CAAC,CAAC,IAAI,eAAe,EAAE,CAAC;AAExF,MAAM,UAAU,WAAW,CAAC,SAAqB,EAAE,UAAwC;IACzF,IAAI,EAAE,GAAG,aAAa,CAAC,GAAG,CAAC;IAE3B,IAAI,aAAa,EAAE;QACjB,EAAE,GAAG,aAAa,CAAC,KAAK,CAAC;KAC1B;SAAM,IAAI,iBAAiB,EAAE;QAC5B,EAAE,GAAG,aAAa,CAAC,OAAO,CAAC;KAC5B;IAED,OAAO,GAAG,CAAC,WAAW,CAAC;QACrB,IAAI,EAAE,SAAS;QACf,EAAE,IAAA;QACF,MAAM,EAAE,iBAAiB,CAAC,OAAO;QACjC,OAAO,EAAE,CAAC;QACV,UAAU,YAAA;KACX,CAAC,CAAC,SAAS,CAAC;QACX,KAAK,EAAE,UAAC,CAAC;YACP,sCAAsC;YACtC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACnB,CAAC;KACF,CAAC,CAAC;AACL,CAAC;AAED,sCAAsC;AACtC,MAAM,UAAU,aAAa,CAAC,QAAgB,EAAE,MAAc;IAC5D,IAAK,MAAc,CAAC,IAAI,EAAE;QACxB,IAAI;YACD,MAAc,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE,cAAc,EAAE,QAAQ,EAAE,CAAC,CAAC;SACrE;QAAC,OAAO,CAAC,EAAE;YACV,sCAAsC;YACtC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;SAClB;KACF;AACH,CAAC;AAED,2DAA2D;AAC3D,MAAM,UAAU,aAAa,CAAC,IAA6B,EAAE,IAAY;IACvE,IAAI,MAAM,CAAC,GAAG,EAAE;QACd,IAAI;YACF,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;SACxB;QAAC,OAAO,CAAC,EAAE;YACV,sCAAsC;YACtC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;SAClB;KACF;AACH,CAAC","sourcesContent":["import {\n  RecordTrackOs, RecordTrackDevice,\n  AnalyticsClient, mockAnalyticsClient,\n} from '@src/api/analytics';\nimport { isElectronMac, isElectronWindows } from '@src/lib/electron';\n\nexport const enum UserEvents {\n  ActivityFeedViewed = 'Activity Feed Viewed',\n  AnalyticsViewed = 'Analytics Viewed',\n  CalendarViewed = 'Calendar Viewed',\n  CalendarSidebarViewed = 'Calendar Sidebar Viewed',\n  AsanaTaskCreated = 'Asana Task Created',\n  CommentPosted = 'Comment Posted',\n  DraftCreated = 'Draft Created',\n  LinkExtractorOpened = 'Link Extractor Opened',\n  LoggedIn = 'Logged In',\n  LoggedOut = 'User Logged Out',\n  MessageSent = 'Message Sent',\n  OpenedApp = 'Opened App',\n  OnboardingStepCompleted = 'Onboarding Step Completed',\n  HubspotPageVisited = 'HubSpot Page Visited',\n  SalesforceViewed = 'Salesforce Viewed',\n  SchedulingSettingsOpened = 'Scheduling Settings Opened',\n  SchedulingUrlCopied = 'Scheduling Url Copied',\n  SequencesOpened = 'Sequences Opened',\n  SequenceCreated = 'Sequence Created',\n  SequenceRecipientsUploaded = 'Sequence Recipients Uploaded',\n  SequenceActivated = 'Sequence Activated',\n  SequenceRecipientActivated = 'Sequence Recipient Activated',\n  SequenceStageCreated = 'Sequence Stage Created',\n  ShareMessage = 'Share Message',\n  SlackIntegrationInstalled = 'Slack Integration Installed',\n  TemplateCreated = 'Template Created',\n  ThreadOperation = 'Thread Operation',\n  ThreadRead = 'Thread Read',\n  ThreadShared = 'Thread Shared',\n  ThreadMuted = 'Thread Muted',\n  ThreadUnmuted = 'Thread Unmuted',\n  ThreadSharedToSlack = 'Thread Shared To Slack',\n  ThreadUnread = 'Thread Unread',\n  VideoViewed = 'Video Viewed',\n  UndoSend = 'Undo Send',\n  Unsubscribed = 'Unsubscribed',\n}\n\nconst api = process.env.JEST === 'true' ? mockAnalyticsClient() : new AnalyticsClient();\n\nexport function recordEvent(eventName: UserEvents, properties?: { [property: string]: any }) {\n  let os = RecordTrackOs.Web;\n\n  if (isElectronMac) {\n    os = RecordTrackOs.MacOS;\n  } else if (isElectronWindows) {\n    os = RecordTrackOs.Windows;\n  }\n\n  return api.recordTrack({\n    name: eventName,\n    os,\n    device: RecordTrackDevice.Desktop,\n    version: 0,\n    properties,\n  }).subscribe({\n    error: (e) => {\n      // tslint:disable-next-line:no-console\n      console.error(e);\n    },\n  });\n}\n\n// Record an event to google analytics\nexport function recordGAEvent(category: string, action: string) {\n  if ((window as any).gtag) {\n    try {\n      (window as any).gtag('event', action, { event_category: category });\n    } catch (e) {\n      // tslint:disable-next-line:no-console\n      console.error(e);\n    }\n  }\n}\n\n// Record an event to Fb Pixel (Unavailable on desktop app)\nexport function recordFBEvent(type: 'track' | 'trackCustom', name: string) {\n  if (window.fbq) {\n    try {\n      window.fbq(type, name);\n    } catch (e) {\n      // tslint:disable-next-line:no-console\n      console.error(e);\n    }\n  }\n}\n"]}]}