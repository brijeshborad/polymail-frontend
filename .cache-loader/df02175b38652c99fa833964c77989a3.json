{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Login/components/TeamInvite/index.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Login/components/TeamInvite/index.ts","mtime":1675280254080},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4JzsKaW1wb3J0IHsgdmFsdWVzIH0gZnJvbSAnbG9kYXNoJzsKaW1wb3J0IFRlYW1JbnZpdGUgZnJvbSAnLi9UZWFtSW52aXRlJzsKaW1wb3J0IHsgdGVhbU1lbWJlckludml0ZSwgdGVhbUludml0ZUxpc3QgfSBmcm9tICdAc3JjL2R1Y2tzL3RlYW1NZW1iZXJzJzsKaW1wb3J0IHsgdG9hc3RTZXQgfSBmcm9tICdAc3JjL2R1Y2tzL3RvYXN0cyc7CmltcG9ydCB7IGNvbnRhY3RUeXBlYWhlYWQgfSBmcm9tICdAc3JjL2R1Y2tzL2NvbnRhY3RzJzsKaW1wb3J0IHsgd2l0aFJvdXRlciB9IGZyb20gJ3JlYWN0LXJvdXRlcic7CnZhciBtYXBTdGF0ZVRvUHJvcHMgPSBmdW5jdGlvbiAoc3RhdGUpIHsKICAgIHZhciB0ZWFtID0gc3RhdGUudGVhbSAmJiBzdGF0ZS50ZWFtLmRhdGE7CiAgICByZXR1cm4gKHsKICAgICAgICB0ZWFtOiB0ZWFtLAogICAgICAgIHRlYW1JbnZpdGVzOiBzdGF0ZS50ZWFtSW52aXRlcyAmJiBzdGF0ZS50ZWFtSW52aXRlcy5kYXRhIHx8IFtdLAogICAgICAgIHRlYW1NZW1iZXJzOiBzdGF0ZS50ZWFtTWVtYmVycyAmJiB2YWx1ZXMoc3RhdGUudGVhbU1lbWJlcnMpLAogICAgfSk7Cn07CnZhciBtYXBEaXNwYXRjaFRvUHJvcHMgPSBmdW5jdGlvbiAoZGlzcGF0Y2gpIHsgcmV0dXJuICh7CiAgICBpbnZpdGVUZWFtTWVtYmVyOiBmdW5jdGlvbiAoZW1haWwpIHsgcmV0dXJuIGRpc3BhdGNoKHRlYW1NZW1iZXJJbnZpdGUoZW1haWwpKTsgfSwKICAgIHNldFRvYXN0OiBmdW5jdGlvbiAoZSkgeyByZXR1cm4gZGlzcGF0Y2godG9hc3RTZXQoZSkpOyB9LAogICAgY29udGFjdFR5cGVoZWFkOiBmdW5jdGlvbiAocXVlcnkpIHsgcmV0dXJuIGRpc3BhdGNoKGNvbnRhY3RUeXBlYWhlYWQocXVlcnkpKTsgfSwKICAgIGxpc3RUZWFtSW52aXRlczogZnVuY3Rpb24gKCkgeyByZXR1cm4gZGlzcGF0Y2godGVhbUludml0ZUxpc3QobnVsbCkpOyB9LAp9KTsgfTsKZXhwb3J0IGRlZmF1bHQgY29ubmVjdChtYXBTdGF0ZVRvUHJvcHMsIG1hcERpc3BhdGNoVG9Qcm9wcykod2l0aFJvdXRlcihUZWFtSW52aXRlKSk7Cg=="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Login/components/TeamInvite/index.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Login/components/TeamInvite/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAY,MAAM,aAAa,CAAC;AAChD,OAAO,EAAE,MAAM,EAAE,MAAM,QAAQ,CAAC;AAChC,OAAO,UAAgD,MAAM,cAAc,CAAC;AAE5E,OAAO,EAAE,gBAAgB,EAAE,cAAc,EAAE,MAAM,wBAAwB,CAAC;AAC1E,OAAO,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAC7C,OAAO,EAAE,gBAAgB,EAAE,MAAM,qBAAqB,CAAC;AACvD,OAAO,EAAE,UAAU,EAAE,MAAM,cAAc,CAAC;AAE1C,IAAM,eAAe,GAAG,UAAC,KAAiB;IACxC,IAAM,IAAI,GAAG,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;IAC3C,OAAO,CAAC;QACN,IAAI,MAAA;QACJ,WAAW,EAAE,KAAK,CAAC,WAAW,IAAI,KAAK,CAAC,WAAW,CAAC,IAAI,IAAI,EAAE;QAC9D,WAAW,EAAE,KAAK,CAAC,WAAW,IAAI,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC;KAC5D,CAAC,CAAC;AACL,CAAC,CAAC;AAEF,IAAM,kBAAkB,GAAG,UAAC,QAA8B,IAAoB,OAAA,CAAC;IAC7E,gBAAgB,EAAE,UAAA,KAAK,IAAI,OAAA,QAAQ,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,EAAjC,CAAiC;IAC5D,QAAQ,EAAE,UAAA,CAAC,IAAI,OAAA,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAArB,CAAqB;IACpC,eAAe,EAAE,UAAA,KAAK,IAAI,OAAA,QAAQ,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,EAAjC,CAAiC;IAC3D,eAAe,EAAE,cAAM,OAAA,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAA9B,CAA8B;CACtD,CAAC,EAL4E,CAK5E,CAAC;AAEH,eAAe,OAAO,CACpB,eAAe,EACf,kBAAkB,CACnB,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC","sourcesContent":["import { connect, Dispatch } from 'react-redux';\nimport { values } from 'lodash';\nimport TeamInvite, { DispatchProps, StateProps, Props } from './TeamInvite';\nimport { StoreState } from '@src/types';\nimport { teamMemberInvite, teamInviteList } from '@src/ducks/teamMembers';\nimport { toastSet } from '@src/ducks/toasts';\nimport { contactTypeahead } from '@src/ducks/contacts';\nimport { withRouter } from 'react-router';\n\nconst mapStateToProps = (state: StoreState): StateProps => {\n  const team = state.team && state.team.data;\n  return ({\n    team,\n    teamInvites: state.teamInvites && state.teamInvites.data || [],\n    teamMembers: state.teamMembers && values(state.teamMembers),\n  });\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<StoreState>): DispatchProps => ({\n  inviteTeamMember: email => dispatch(teamMemberInvite(email)),\n  setToast: e => dispatch(toastSet(e)),\n  contactTypehead: query => dispatch(contactTypeahead(query)),\n  listTeamInvites: () => dispatch(teamInviteList(null)),\n});\n\nexport default connect<StateProps, DispatchProps, Props>(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withRouter(TeamInvite));\n"]}]}