{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/publicTeams.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/publicTeams.ts","mtime":1675280254057},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnOwppbXBvcnQgeyBBY3Rpb25TdGF0dXMgfSBmcm9tICdAc3JjL3R5cGVzJzsKaW1wb3J0IHsgUFVCTElDX1RFQU1fRkVUQ0gsIHB1YmxpY1RlYW1GZXRjaCB9IGZyb20gJ0BzcmMvZHVja3MvcHVibGljVGVhbXMnOwp2YXIgcHVibGljVGVhbUZldGNoRXBpYyA9IGZ1bmN0aW9uIChhY3Rpb24kLCBzdG9yZSwgZGVwcykgewogICAgcmV0dXJuIGFjdGlvbiQub2ZUeXBlKFBVQkxJQ19URUFNX0ZFVENIKQogICAgICAgIC5maWx0ZXIoZnVuY3Rpb24gKGFjdGlvbikgeyByZXR1cm4gYWN0aW9uLnN0YXR1cyA9PT0gQWN0aW9uU3RhdHVzLlN0YXJ0OyB9KQogICAgICAgIC5mbGF0TWFwKGZ1bmN0aW9uIChhY3Rpb24pIHsKICAgICAgICByZXR1cm4gZGVwcy5zaGFyZWRUaHJlYWRzLmdldFRlYW1JbmZvKGFjdGlvbi5tZXRhKQogICAgICAgICAgICAubWFwKGZ1bmN0aW9uICh0ZWFtSW5mbykgeyByZXR1cm4gcHVibGljVGVhbUZldGNoKGFjdGlvbi5tZXRhLCB0ZWFtSW5mbyk7IH0pCiAgICAgICAgICAgIC5jYXRjaChmdW5jdGlvbiAoZSkgeyByZXR1cm4gT2JzZXJ2YWJsZS5vZihwdWJsaWNUZWFtRmV0Y2goYWN0aW9uLm1ldGEsIGUpKTsgfSk7CiAgICB9KTsKfTsKZXhwb3J0IGRlZmF1bHQgWwogICAgcHVibGljVGVhbUZldGNoRXBpYywKXTsK"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/publicTeams.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/publicTeams.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,MAAM,CAAC;AAGlC,OAAO,EAAE,YAAY,EAAsB,MAAM,YAAY,CAAC;AAE9D,OAAO,EAAE,iBAAiB,EAAE,eAAe,EAAE,MAAM,wBAAwB,CAAC;AAG5E,IAAM,mBAAmB,GAEA,UAAC,OAAO,EAAE,KAAK,EAAE,IAAI;IAC1C,OAAA,OAAO,CAAC,MAAM,CAAC,iBAAiB,CAAC;SAC9B,MAAM,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,MAAM,KAAK,YAAY,CAAC,KAAK,EAApC,CAAoC,CAAC;SACtD,OAAO,CAAC,UAAA,MAAM;QACb,OAAA,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC;aACxC,GAAG,CAAC,UAAA,QAAQ,IAAI,OAAA,eAAe,CAAC,MAAM,CAAC,IAAI,EAAE,QAAQ,CAAC,EAAtC,CAAsC,CAAC;aACvD,KAAK,CAAC,UAAC,CAAQ,IAAK,OAAA,UAAU,CAAC,EAAE,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAA9C,CAA8C,CAAC;IAFtE,CAEsE,CACzE;AAND,CAMC,CAAC;AAEN,eAAe;IACb,mBAAmB;CACpB,CAAC","sourcesContent":["import { Observable } from 'rxjs';\nimport { Epic } from 'redux-observable';\n\nimport { ActionStatus, Action, StoreState } from '@src/types';\nimport { Deps } from '@src/lib/epic';\nimport { PUBLIC_TEAM_FETCH, publicTeamFetch } from '@src/ducks/publicTeams';\nimport { SharedTeamInfo } from '@src/types/sharedThreads';\n\nconst publicTeamFetchEpic: Epic<\n  Action<string, SharedTeamInfo\n  >, StoreState, Deps> = (action$, store, deps) =>\n    action$.ofType(PUBLIC_TEAM_FETCH)\n      .filter(action => action.status === ActionStatus.Start)\n      .flatMap(action =>\n        deps.sharedThreads.getTeamInfo(action.meta)\n          .map(teamInfo => publicTeamFetch(action.meta, teamInfo))\n          .catch((e: Error) => Observable.of(publicTeamFetch(action.meta, e))),\n    );\n\nexport default [\n  publicTeamFetchEpic,\n];\n"]}]}