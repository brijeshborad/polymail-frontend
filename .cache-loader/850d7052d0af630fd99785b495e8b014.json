{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/RightSidebar/components/KeyboardShortcuts/index.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/RightSidebar/components/KeyboardShortcuts/index.tsx","mtime":1675280254031},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4JzsKaW1wb3J0IEtleWJvYXJkU2hvcnRjdXRzIGZyb20gJy4vS2V5Ym9hcmRTaG9ydGN1dHMnOwppbXBvcnQgeyBwcmVmZXJlbmNlc1VwZGF0ZSB9IGZyb20gJ0BzcmMvZHVja3MvbWUnOwp2YXIgbWFwU3RhdGVUb1Byb3BzID0gZnVuY3Rpb24gKHN0YXRlKSB7IHJldHVybiAoewogICAgcHJlZmVyZW5jZXM6IHN0YXRlLnByZWZlcmVuY2VzLAp9KTsgfTsKdmFyIG1hcERpc3BhdGNoVG9Qcm9wcyA9IGZ1bmN0aW9uIChkaXNwYXRjaCkgeyByZXR1cm4gKHsKICAgIHVwZGF0ZVByZWZlcmVuY2VzOiBmdW5jdGlvbiAocHJlZmVyZW5jZXMpIHsgcmV0dXJuIGRpc3BhdGNoKHByZWZlcmVuY2VzVXBkYXRlKHByZWZlcmVuY2VzKSk7IH0sCn0pOyB9OwpleHBvcnQgZGVmYXVsdCBjb25uZWN0KG1hcFN0YXRlVG9Qcm9wcywgbWFwRGlzcGF0Y2hUb1Byb3BzKShLZXlib2FyZFNob3J0Y3V0cyk7Cg=="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/RightSidebar/components/KeyboardShortcuts/index.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/RightSidebar/components/KeyboardShortcuts/index.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAY,MAAM,aAAa,CAAC;AAGhD,OAAO,iBAAgD,MAAM,qBAAqB,CAAC;AACnF,OAAO,EAAE,iBAAiB,EAAE,MAAM,eAAe,CAAC;AAElD,IAAM,eAAe,GAAG,UAAC,KAAiB,IAAiB,OAAA,CAAC;IAC1D,WAAW,EAAE,KAAK,CAAC,WAAW;CAC/B,CAAC,EAFyD,CAEzD,CAAC;AAEH,IAAM,kBAAkB,GAAG,UAAC,QAA8B,IAAoB,OAAA,CAAC;IAC7E,iBAAiB,EAAE,UAAA,WAAW,IAAI,OAAA,QAAQ,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC,EAAxC,CAAwC;CAC3E,CAAC,EAF4E,CAE5E,CAAC;AAEH,eAAe,OAAO,CACpB,eAAe,EAAE,kBAAkB,CACpC,CAAC,iBAAiB,CAAC,CAAC","sourcesContent":["import { connect, Dispatch } from 'react-redux';\n\nimport { StoreState } from '@src/types';\nimport KeyboardShortcuts, { StateProps, DispatchProps } from './KeyboardShortcuts';\nimport { preferencesUpdate } from '@src/ducks/me';\n\nconst mapStateToProps = (state: StoreState): StateProps => ({\n  preferences: state.preferences,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<StoreState>): DispatchProps => ({\n  updatePreferences: preferences => dispatch(preferencesUpdate(preferences)),\n});\n\nexport default connect<StateProps, DispatchProps, {}>(\n  mapStateToProps, mapDispatchToProps,\n)(KeyboardShortcuts);\n"]}]}