{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Billing/BillingPlans/BillingPlans.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Billing/BillingPlans/BillingPlans.tsx","mtime":1675280254096},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkgewogICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBmdW5jdGlvbiAoZCwgYikgewogICAgICAgIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwKICAgICAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fAogICAgICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChiLmhhc093blByb3BlcnR5KHApKSBkW3BdID0gYltwXTsgfTsKICAgICAgICByZXR1cm4gZXh0ZW5kU3RhdGljcyhkLCBiKTsKICAgIH07CiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHsKICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpOwogICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfQogICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTsKICAgIH07Cn0pKCk7CmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7CmltcG9ydCBOYXZpZ2F0aW9uSGVhZGVyIGZyb20gJ0BzcmMvcm91dGVzL1NldHRpbmdzL2NvbXBvbmVudHMvTmF2aWdhdGlvbkhlYWRlcic7CmltcG9ydCBCaWxsaW5nUGxhblNlY3Rpb24gZnJvbSAnLi9CaWxsaW5nUGxhblNlY3Rpb24nOwppbXBvcnQgVG9nZ2xlIGZyb20gJ0BzcmMvY29tcG9uZW50cy9Gb3JtL1RvZ2dsZSc7CmltcG9ydCB7IEJJTExJTkdfUExBTlMsIEJpbGxpbmdDeWNsZSB9IGZyb20gJ0BzcmMvdHlwZXMvYmlsbGluZyc7CmltcG9ydCBicm93c2VySGlzdG9yeSBmcm9tICdAc3JjL2xpYi9icm93c2VySGlzdG9yeSc7CmltcG9ydCB7IGZvcm1hdEN1cnJlbmN5Q2VudHMgfSBmcm9tICdAc3JjL2xpYi91dGlscyc7CmltcG9ydCBMb2FkaW5nRXJyb3JTdGF0ZSBmcm9tICdAc3JjL3JvdXRlcy9TZXR0aW5ncy9yb3V0ZXMvQmlsbGluZy9jb21wb25lbnRzL0xvYWRpbmdFcnJvclN0YXRlJzsKLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOm1heC1saW5lLWxlbmd0aAppbXBvcnQgQmlsbGluZ1N0YXR1c0Jhbm5lciBmcm9tICdAc3JjL3JvdXRlcy9TZXR0aW5ncy9yb3V0ZXMvQmlsbGluZy9jb21wb25lbnRzL0JpbGxpbmdTdGF0dXNCYW5uZXInOwppbXBvcnQgeyBNZVN0YXR1c05ldyB9IGZyb20gJ0BzcmMvdHlwZXMnOwppbXBvcnQgJy4vQmlsbGluZ1BsYW5zLnNjc3MnOwppbXBvcnQgeyBpc0Rpc2FibGVkU3RhdGUgfSBmcm9tICdAc3JjL2xpYi9iYW5uZXInOwppbXBvcnQgeyB0cmlhbERheXNMZWZ0IH0gZnJvbSAnQHNyYy9saWIvbW9kZWxzL2JpbGxpbmcnOwp2YXIgQmlsbGluZ1BsYW5zID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikgewogICAgX19leHRlbmRzKEJpbGxpbmdQbGFucywgX3N1cGVyKTsKICAgIGZ1bmN0aW9uIEJpbGxpbmdQbGFucyhwcm9wcykgewogICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMsIHByb3BzKSB8fCB0aGlzOwogICAgICAgIF90aGlzLmhhbmRsZUFubnVhbFRvZ2dsZSA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoewogICAgICAgICAgICAgICAgYW5udWFsVG9nZ2xlOiAhX3RoaXMuc3RhdGUuYW5udWFsVG9nZ2xlLAogICAgICAgICAgICB9KTsKICAgICAgICB9OwogICAgICAgIF90aGlzLmhhbmRsZUN0YUNsaWNrID0gZnVuY3Rpb24gKHRpZXIpIHsKICAgICAgICAgICAgLy8gcmVkaXJlY3QgdG8gY29ycmVjdCBwYWdlCiAgICAgICAgICAgIHZhciBjeWNsZSA9IF90aGlzLnN0YXRlLmFubnVhbFRvZ2dsZSA/ICdhbm51YWwnIDogJ21vbnRobHknOwogICAgICAgICAgICBicm93c2VySGlzdG9yeS5wdXNoKCIvc2V0dGluZ3MvYmlsbGluZy91cGdyYWRlLyIgKyB0aWVyICsgIi8iICsgY3ljbGUpOwogICAgICAgIH07CiAgICAgICAgX3RoaXMuaGFuZGxlQmFjayA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgYnJvd3Nlckhpc3RvcnkucHVzaCgiL3NldHRpbmdzL2JpbGxpbmciKTsKICAgICAgICB9OwogICAgICAgIF90aGlzLnN0YXRlID0gewogICAgICAgICAgICBhbm51YWxUb2dnbGU6IHByb3BzLnN1YnNjcmlwdGlvbiAmJgogICAgICAgICAgICAgICAgcHJvcHMuc3Vic2NyaXB0aW9uLmJpbGxpbmdDeWNsZSA9PT0gQmlsbGluZ0N5Y2xlLk1vbnRobHkgPyBmYWxzZSA6IHRydWUsCiAgICAgICAgfTsKICAgICAgICByZXR1cm4gX3RoaXM7CiAgICB9CiAgICBCaWxsaW5nUGxhbnMucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uICgpIHsKICAgICAgICB2YXIgX3RoaXMgPSB0aGlzOwogICAgICAgIHZhciBfYSA9IHRoaXMucHJvcHMsIHN1YnNjcmlwdGlvbiA9IF9hLnN1YnNjcmlwdGlvbiwgdHJpYWxFeHBpcmVzID0gX2EudHJpYWxFeHBpcmVzLCBiYWxhbmNlID0gX2EuYmFsYW5jZSwgbG9hZGluZyA9IF9hLmxvYWRpbmcsIGxvYWRpbmdFcnJvciA9IF9hLmxvYWRpbmdFcnJvciwgaXNBZG1pbiA9IF9hLmlzQWRtaW4sIGFjdGl2ZVN1YnNjcmlwdGlvbiA9IF9hLmFjdGl2ZVN1YnNjcmlwdGlvbiwgc2VhdHNVc2VkID0gX2Euc2VhdHNVc2VkLCB0cmlhbFBsYW4gPSBfYS50cmlhbFBsYW4sIGlzTW9iaWxlID0gX2EuaXNNb2JpbGUsIHN0YXR1c05ldyA9IF9hLnN0YXR1c05ldywgY29sbGFwc2VMc2IgPSBfYS5jb2xsYXBzZUxzYiwgY29sbGFwc2VkTW9iaWxlID0gX2EuY29sbGFwc2VkTW9iaWxlLCBwbGFuRXhwaXJlcyA9IF9hLnBsYW5FeHBpcmVzLCBhY2NvdW50cyA9IF9hLmFjY291bnRzOwogICAgICAgIHZhciBjdXJyZW50VGllciA9IHN1YnNjcmlwdGlvbiAmJiBzdWJzY3JpcHRpb24udGllcjsKICAgICAgICAvLyBmYWlsZWQgcGF5bWVudCB1c2VycyBzaG91bGRuJ3Qgc2VlIHRoZSBCaWxsaW5nU3RhdHVzQmFubmVyIGluIC9zZXR0aW5ncy9iaWxsaW5nCiAgICAgICAgLy8gaHR0cHM6Ly9wb2x5bWFpbC5hdGxhc3NpYW4ubmV0L2Jyb3dzZS9QTS0yMjcKICAgICAgICB2YXIgaGFzUGF5bWVudEZhaWxlZCA9IHN0YXR1c05ldyA9PT0gTWVTdGF0dXNOZXcuVW5wYWlkOwogICAgICAgIHZhciBoYXNUcmlhbEV4cGlyZWQgPSBzdGF0dXNOZXcgPT09IE1lU3RhdHVzTmV3LlRyaWFsRXhwaXJlZAogICAgICAgICAgICAvLyBwbGFuIHRha2VzIHByZWNlZGVuY2Ugb3ZlciB0cmlhbCBmb3IgY2FuY2VsbGVkIGFjY291bnRzCiAgICAgICAgICAgIHx8IHRyaWFsRGF5c0xlZnQocGxhbkV4cGlyZXMgfHwgdHJpYWxFeHBpcmVzKSA8PSAwOwogICAgICAgIGlmIChsb2FkaW5nIHx8IGxvYWRpbmdFcnJvciB8fCAhaXNBZG1pbikgewogICAgICAgICAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoTG9hZGluZ0Vycm9yU3RhdGUsIHsgbG9hZGluZzogbG9hZGluZywgbG9hZGluZ0Vycm9yOiBsb2FkaW5nRXJyb3IsIHJlcXVpcmVBZG1pbjogIWlzQWRtaW4gfSkpOwogICAgICAgIH0KICAgICAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIHsgY2xhc3NOYW1lOiAic2V0dGluZ3MtcGFuZWwgcHJlZmVyZW5jZXMtYmlsbGluZyIgfSwKICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChOYXZpZ2F0aW9uSGVhZGVyLCB7IHRpdGxlOiAiUGxhbnMgJiBCaWxsaW5nIiwgb25CYWNrOiBhY3RpdmVTdWJzY3JpcHRpb24gJiYgY3VycmVudFRpZXIgJiYgdGhpcy5oYW5kbGVCYWNrIHx8IHVuZGVmaW5lZCwgY29udGV4dEJ1dHRvbjogYWN0aXZlU3Vic2NyaXB0aW9uICYmIGN1cnJlbnRUaWVyICYmIFJlYWN0LmNyZWF0ZUVsZW1lbnQoImg1IiwgbnVsbCwgIkNoYW5nZSBQbGFuIikgfHwgdW5kZWZpbmVkLCBpc01vYmlsZTogaXNNb2JpbGUsIGNvbGxhcHNlZE1vYmlsZTogY29sbGFwc2VkTW9iaWxlLCBjb2xsYXBzZUxzYjogY29sbGFwc2VMc2IgfSksCiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIHsgY2xhc3NOYW1lOiAiYmlsbGluZy1wbGFucyIgfSwKICAgICAgICAgICAgICAgICghaGFzUGF5bWVudEZhaWxlZCAmJiAhaGFzVHJpYWxFeHBpcmVkKSAmJiAoUmVhY3QuY3JlYXRlRWxlbWVudChCaWxsaW5nU3RhdHVzQmFubmVyLCB7IHN1YnNjcmlwdGlvbjogc3Vic2NyaXB0aW9uLCB0cmlhbEV4cGlyZXM6IHRyaWFsRXhwaXJlcywgdHJpYWxQbGFuOiB0cmlhbFBsYW4sIGlzQWRtaW46IGlzQWRtaW4sIGlzRGlzYWJsZWQ6IGlzRGlzYWJsZWRTdGF0ZShzdGF0dXNOZXcpLCBjYXJkOiB0aGlzLnByb3BzLmNhcmQgfSkpLAogICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2IiwgeyBjbGFzc05hbWU6ICJ0b2dnbGUtaGVhZGVyIiB9LAogICAgICAgICAgICAgICAgICAgIGJhbGFuY2UgPCAwICYmIFJlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIHsgY2xhc3NOYW1lOiAiYWNjb3VudC1jcmVkaXQiIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoInNwYW4iLCB7IGNsYXNzTmFtZTogImVtb2ppIiB9LCAiXHVEODNEXHVEQ0I4IiksCiAgICAgICAgICAgICAgICAgICAgICAgICJZb3UgaGF2ZSAiLAogICAgICAgICAgICAgICAgICAgICAgICBmb3JtYXRDdXJyZW5jeUNlbnRzKC0xICogYmFsYW5jZSksCiAgICAgICAgICAgICAgICAgICAgICAgICIgaW4gYWNjb3VudCBjcmVkaXQiKSwKICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLCB7IGNsYXNzTmFtZTogImxhYmVsIiB9LCAiTW9udGhseSIpLAogICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoVG9nZ2xlLCB7IG9uOiB0aGlzLnN0YXRlLmFubnVhbFRvZ2dsZSwgb25DaGFuZ2U6IHRoaXMuaGFuZGxlQW5udWFsVG9nZ2xlIH0pLAogICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIHsgY2xhc3NOYW1lOiAibGFiZWwiIH0sICJBbm51YWwiKSksCiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLCB7IGNsYXNzTmFtZTogInBsYW4tc2VjdGlvbnMiIH0sIEJJTExJTkdfUExBTlMKICAgICAgICAgICAgICAgICAgICAuZmlsdGVyKGZ1bmN0aW9uIChwbGFuKSB7IHJldHVybiAhcGxhbi5kZXByZWNhdGVkOyB9KQogICAgICAgICAgICAgICAgICAgIC5tYXAoZnVuY3Rpb24gKHBsYW4pIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChCaWxsaW5nUGxhblNlY3Rpb24sIHsgdGl0bGU6IHBsYW4udGl0bGUsIGtleTogcGxhbi50aWVyLCBvbkN0YUNsaWNrOiBfdGhpcy5oYW5kbGVDdGFDbGljaywgdGllcjogcGxhbi50aWVyLCBjb3N0OiBfdGhpcy5zdGF0ZS5hbm51YWxUb2dnbGUgPyBwbGFuLmFubnVhbENvc3QgOiBwbGFuLm1vbnRobHlDb3N0LCBkZXNjcmlwdGlvbjogcGxhbi5kZXNjcmlwdGlvbiwgY3RhQ29weTogcGxhbi5jdGFDb3B5LCBmZWF0dXJlczogcGxhbi5mZWF0dXJlcywgZXhpc3RpbmdUaWVyOiBhY3RpdmVTdWJzY3JpcHRpb24gJiYgY3VycmVudFRpZXIgfHwgdW5kZWZpbmVkLCBzZWF0c1VzZWQ6IHNlYXRzVXNlZCwgaXNNb2JpbGU6IGlzTW9iaWxlLCBhY2NvdW50czogYWNjb3VudHMubGVuZ3RoLCBhY2NvdW50c0xpbWl0OiBwbGFuLmFjY291bnRzTGltaXQgfSk7CiAgICAgICAgICAgICAgICB9KSkpKSk7CiAgICB9OwogICAgcmV0dXJuIEJpbGxpbmdQbGFuczsKfShSZWFjdC5QdXJlQ29tcG9uZW50KSk7CmV4cG9ydCBkZWZhdWx0IEJpbGxpbmdQbGFuczsK"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Billing/BillingPlans/BillingPlans.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Billing/BillingPlans/BillingPlans.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport NavigationHeader from '@src/routes/Settings/components/NavigationHeader';\nimport BillingPlanSection from './BillingPlanSection';\nimport Toggle from '@src/components/Form/Toggle';\nimport { BillingTier, BILLING_PLANS, BillingSubscription, BillingCycle, BillingCard } from '@src/types/billing';\nimport browserHistory from '@src/lib/browserHistory';\nimport { formatCurrencyCents } from '@src/lib/utils';\nimport LoadingErrorState from '@src/routes/Settings/routes/Billing/components/LoadingErrorState';\n// tslint:disable-next-line:max-line-length\nimport BillingStatusBanner from '@src/routes/Settings/routes/Billing/components/BillingStatusBanner';\nimport { Account, MeStatusNew, TeamPlan } from '@src/types';\n\nimport './BillingPlans.scss';\nimport { isDisabledState } from '@src/lib/banner';\nimport { trialDaysLeft } from '@src/lib/models/billing';\n\nexport interface Props {\n  loading: boolean;\n  loadingError: boolean;\n  isAdmin: boolean;\n\n  balance: number;\n  seatsUsed: number;\n  activeSubscription: boolean;\n  subscription?: BillingSubscription;\n  trialExpires?: Date;\n  planExpires?: Date;\n  trialPlan?: TeamPlan;\n  isMobile?: boolean;\n  collapsedMobile?: boolean;\n  statusNew?: MeStatusNew;\n  card?: BillingCard;\n  accounts: Account[];\n}\n\nexport interface DispatchProps {\n  setToast(error: Error): void;\n  collapseLsb: (collapse: boolean) => void;\n}\n\ninterface State {\n  annualToggle: boolean;\n}\n\nclass BillingPlans extends React.PureComponent<Props & DispatchProps, State> {\n  constructor(props: Props & DispatchProps) {\n    super(props);\n    this.state = {\n      annualToggle: props.subscription &&\n         props.subscription.billingCycle === BillingCycle.Monthly ? false : true,\n    };\n  }\n\n  handleAnnualToggle = () => {\n    this.setState({\n      annualToggle: !this.state.annualToggle,\n    });\n  }\n\n  handleCtaClick = (tier: BillingTier) => {\n    // redirect to correct page\n    const cycle = this.state.annualToggle ? 'annual' : 'monthly';\n    browserHistory.push(`/settings/billing/upgrade/${tier}/${cycle}`);\n  }\n\n  handleBack = () => {\n    browserHistory.push(`/settings/billing`);\n  }\n\n  render() {\n    const {\n      subscription, trialExpires, balance, loading, loadingError,\n      isAdmin, activeSubscription, seatsUsed, trialPlan, isMobile, statusNew,\n      collapseLsb, collapsedMobile, planExpires, accounts,\n    } = this.props;\n\n    const currentTier = subscription && subscription.tier;\n    // failed payment users shouldn't see the BillingStatusBanner in /settings/billing\n    // https://polymail.atlassian.net/browse/PM-227\n    const hasPaymentFailed = statusNew === MeStatusNew.Unpaid;\n    const hasTrialExpired =\n      statusNew === MeStatusNew.TrialExpired\n      // plan takes precedence over trial for cancelled accounts\n      || trialDaysLeft(planExpires || trialExpires) <= 0;\n\n    if (loading || loadingError || !isAdmin) {\n      return (\n        <LoadingErrorState\n          loading={loading}\n          loadingError={loadingError}\n          requireAdmin={!isAdmin}\n        />\n      );\n    }\n\n    return (\n      <div className=\"settings-panel preferences-billing\">\n        <NavigationHeader\n          title=\"Plans & Billing\"\n          onBack={activeSubscription && currentTier && this.handleBack  || undefined}\n          contextButton={\n            activeSubscription && currentTier && <h5>Change Plan</h5> || undefined\n          }\n          isMobile={isMobile}\n          collapsedMobile={collapsedMobile}\n          collapseLsb={collapseLsb}\n        />\n        <div className=\"billing-plans\">\n          {(!hasPaymentFailed && !hasTrialExpired) && (\n            <BillingStatusBanner\n              subscription={subscription}\n              trialExpires={trialExpires}\n              trialPlan={trialPlan}\n              isAdmin={isAdmin}\n              isDisabled={isDisabledState(statusNew)}\n              card={this.props.card}\n            />\n          )}\n          <div className=\"toggle-header\">\n            {balance < 0  && <div className=\"account-credit\">\n              <span className=\"emoji\">💸</span>\n              You have {formatCurrencyCents(-1 * balance)} in account credit\n            </div>}\n            <div className=\"label\">Monthly</div>\n            <Toggle\n              on={this.state.annualToggle}\n              onChange={this.handleAnnualToggle}\n            />\n            <div className=\"label\">Annual</div>\n          </div>\n          <div className=\"plan-sections\">\n            {BILLING_PLANS\n              .filter(plan => !plan.deprecated)\n              .map(plan =>\n                <BillingPlanSection\n                  title={plan.title}\n                  key={plan.tier}\n                  onCtaClick={this.handleCtaClick}\n                  tier={plan.tier}\n                  cost={this.state.annualToggle ? plan.annualCost : plan.monthlyCost}\n                  description={plan.description}\n                  ctaCopy={plan.ctaCopy}\n                  features={plan.features}\n                  existingTier={activeSubscription && currentTier || undefined}\n                  seatsUsed={seatsUsed}\n                  isMobile={isMobile}\n                  accounts={accounts.length}\n                  accountsLimit={plan.accountsLimit}\n                />,\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BillingPlans;\n"]}]}