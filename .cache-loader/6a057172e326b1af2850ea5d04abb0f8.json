{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/ThreadDetail/components/ShareThreadPopover/components/ShareToSlack/components/SlackMessageEditor/SlackMessageEditor.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/ThreadDetail/components/ShareThreadPopover/components/ShareToSlack/components/SlackMessageEditor/SlackMessageEditor.tsx","mtime":1675280254043},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/ThreadDetail/components/ShareThreadPopover/components/ShareToSlack/components/SlackMessageEditor/SlackMessageEditor.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/ThreadDetail/components/ShareThreadPopover/components/ShareToSlack/components/SlackMessageEditor/SlackMessageEditor.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport { KeyCode, Resource } from '@src/types';\nimport { SlackChannel, SlackMember } from '@src/types/slack';\nimport {\n  Editor,\n  EditorState,\n  getDefaultKeyBinding,\n  ContentBlock,\n  ContentState,\n  CompositeDecorator,\n  SelectionState,\n  Modifier,\n} from 'draft-js';\n\nimport './SlackMessageEditor.scss';\nimport SlackTypeaheadPopover from './SlackTypeaheadPopover/SlackTypeaheadPopover';\nimport { debounce } from 'lodash';\nimport ChannelToken from './ChannelToken/ChannelToken';\nimport MentionToken from './MentionToken/MentionToken';\n\nexport interface Props {\n  onPostMessage: () => void;\n  onChange: (msg: string) => void;\n  channels: Resource<SlackChannel[]>;\n  members: Resource<SlackMember[]>;\n}\n\ninterface State {\n  editorState: EditorState;\n  members: SlackMember[];\n  channels: SlackChannel[];\n  popoverShown: boolean;\n}\n\nclass SlackMessageEditor extends React.PureComponent<Props, State> {\n  editor: Editor;\n  popoverShowDebounce: any;\n  popover: SlackTypeaheadPopover;\n  ref: HTMLDivElement;\n  compositeDecorator: CompositeDecorator;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.compositeDecorator = new CompositeDecorator([\n      {\n        strategy: this.handleStrategy,\n        component: ChannelToken,\n      },\n      {\n        strategy: this.handleStrategy,\n        component: MentionToken,\n      },\n    ]);\n\n    this.popoverShowDebounce = debounce(\n      () => {\n        if (this.popover && !this.state.popoverShown) {\n          this.popover.show();\n        }\n      },\n      100,\n    );\n\n    this.state = {\n      editorState: EditorState.createEmpty(),\n      channels: props.channels.data || [],\n      members: props.members.data || [],\n      popoverShown: false,\n    };\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props) {\n    if (nextProps.channels !== this.props.channels ||\n      nextProps.members !== this.props.members) {\n      this.setState({\n        channels: nextProps.channels.data || [],\n        members: nextProps.members.data || [],\n      });\n    }\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleClickOutside);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClickOutside);\n  }\n\n  handleClickOutside = (e: KeyboardEvent) => {\n    const { popoverShown } = this.state;\n\n    if (this.ref && this.popover && !this.ref.contains(e.target as Node) && popoverShown) {\n      e.stopPropagation();\n      e.preventDefault();\n      this.popover.hide();\n    }\n  }\n\n  handleEditorRef = (ref: Editor) => {\n    this.editor = ref;\n  }\n\n  handleEditorChange = (editorState: EditorState) => {\n    const { onChange, members, channels } = this.props;\n    const message = editorState.getCurrentContent().getPlainText();\n    const words = message.split(/\\s/);\n    let query = '';\n    let matchedMembers;\n    let matchedChannels;\n    let showPopover = false;\n\n    if (!message.match(/\\s$/) && words.length && words[words.length - 1].startsWith('@')) {\n      query = words[words.length - 1].slice(1);\n\n      if (members.data) {\n        matchedMembers = members.data.filter((m) => {\n          const lowercaseQuery = query.toLowerCase();\n          return m.displayName.toLowerCase().startsWith(lowercaseQuery) ||\n            m.realName.toLowerCase().startsWith(lowercaseQuery);\n        });\n\n        if (matchedMembers.length) {\n          showPopover = true;\n        }\n      }\n    }\n\n    if (!message.match(/\\s$/) && words.length && words[words.length - 1].startsWith('#')) {\n      query = words[words.length - 1].slice(1);\n\n      if (channels.data) {\n        matchedChannels = channels.data.filter((c) => {\n          const lowercaseQuery = query.toLowerCase();\n          return c.name.toLowerCase().startsWith(lowercaseQuery);\n        });\n\n        if (matchedChannels.length) {\n          showPopover = true;\n        }\n      }\n    }\n\n    const newState: any = { editorState };\n    if (message !== this.state.editorState.getCurrentContent().getPlainText()) {\n      onChange(this.getSlackMessage(editorState));\n      newState.channels = matchedChannels || [];\n      newState.members = matchedMembers || [];\n    }\n\n    if (showPopover && !this.state.popoverShown) {\n      this.popoverShowDebounce();\n    }\n\n    if (!showPopover && this.state.popoverShown) {\n      this.popoverShowDebounce.cancel();\n      this.popover.hide();\n    }\n\n    this.setState(newState);\n  }\n\n  handleKeyBinding = (e: React.KeyboardEvent<HTMLElement>) => {\n    switch (e.keyCode) {\n      case KeyCode.Enter:\n        if (this.state.popoverShown) {\n          return 'select';\n        }\n\n        if (!e.shiftKey) {\n          return 'post-message';\n        }\n        break;\n      case KeyCode.Up: {\n        const handled = this.handleUpArrow(e);\n        if (handled) {\n          return 'pm-up-arrow';\n        }\n        break;\n      }\n      case KeyCode.Down: {\n        const handled = this.handleDownArrow(e);\n        if (handled) {\n          return 'pm-down-arrow';\n        }\n        break;\n      }\n      case KeyCode.Esc: {\n        const handled = this.handleEscape(e);\n        if (handled) {\n          return 'pm-escape';\n        }\n        break;\n      }\n      default:\n        break;\n    }\n\n    return getDefaultKeyBinding(e);\n  }\n\n  getSlackMessage = (editorState: EditorState) => {\n    let contentState = editorState.getCurrentContent();\n    let selectionState = editorState.getSelection();\n    let entityKey;\n    let entity;\n    let lastKey;\n    let start;\n    let end;\n    let i = 0;\n    const updated = {};\n\n    while (i < contentState.getLastBlock().getText().length) {\n      entityKey = contentState.getLastBlock().getEntityAt(i);\n      i += 1;\n      if (lastKey && start !== undefined && end !== undefined\n        && lastKey !== entityKey && !updated[lastKey]) {\n        selectionState = selectionState.merge({\n          anchorOffset: start - 1,\n          focusOffset: end,\n        }) as SelectionState;\n        entity = contentState.getEntity(lastKey);\n        const { id, name } = entity.getData();\n\n        contentState = Modifier.replaceText(\n          contentState,\n          selectionState,\n          entity.getType() === 'CHANNEL' ?\n            `<#${id}|${name}>` : `<@${id}>`,\n          undefined,\n          lastKey,\n        );\n\n        // reset\n        updated[lastKey] = true;\n        lastKey = undefined;\n        start = undefined;\n        end = undefined;\n      }\n\n      if (!entityKey) {\n        continue;\n      }\n\n      if (!lastKey && !updated[entityKey]) {\n        lastKey = entityKey;\n        start = i;\n      }\n\n      if (lastKey && lastKey === entityKey) {\n        end = i;\n      }\n    }\n\n    if (lastKey && start !== undefined && end !== undefined\n      && !updated[lastKey]) {\n      selectionState = selectionState.merge({\n        anchorOffset: start - 1,\n        focusOffset: end,\n      }) as SelectionState;\n      entity = contentState.getEntity(lastKey);\n      const { id, name } = entity.getData();\n\n      contentState = Modifier.replaceText(\n        contentState,\n        selectionState,\n        entity.getType() === 'CHANNEL' ?\n          `<#${id}|${name}>` : `<@${id}>`,\n        undefined,\n        lastKey,\n      );\n\n      // reset\n      updated[lastKey] = true;\n      lastKey = undefined;\n      start = undefined;\n      end = undefined;\n    }\n\n    return contentState.getPlainText();\n  }\n\n  handleKeyCommand = (command: string) => {\n    const { onPostMessage } = this.props;\n\n    if (command === 'post-message') {\n      onPostMessage();\n      return 'handled';\n    }\n\n    if (command === 'select') {\n      if (this.state.members.length) {\n        this.popover.handleMemberSelect();\n      } else {\n        this.popover.onSelect();\n      }\n      return 'handled';\n    }\n\n    // Custom handlers for key commands\n    switch (command) {\n      case 'pm-up-arrow':\n      case 'pm-down-arrow':\n      case 'pm-escape':\n        return 'handled';\n      default: break;\n    }\n\n    return 'not-handled';\n  }\n\n  handleHotKeys = (e: React.KeyboardEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n  }\n\n  handleClick = (e: React.MouseEvent<HTMLDivElement>) => {\n    const { editorState } = this.state;\n\n    if (!editorState.getCurrentContent().getPlainText()) {\n      this.editor.focus();\n    }\n  }\n\n  handleShow = () => {\n    this.setState({\n      popoverShown: true,\n      editorState: EditorState.moveFocusToEnd(this.state.editorState),\n    });\n  }\n\n  handleHide = () => {\n    this.setState({\n      popoverShown: false,\n      editorState: EditorState.moveFocusToEnd(this.state.editorState),\n    });\n  }\n\n  handlePopoverRef = (ref: SlackTypeaheadPopover) => {\n    this.popover = ref;\n  }\n\n  handleRef = (ref: HTMLDivElement) => {\n    this.ref = ref;\n  }\n\n  handleUpArrow = (e: React.KeyboardEvent<HTMLElement>): boolean => {\n    if (this.state.popoverShown) {\n      this.popover.upArrow();\n      return true;\n    }\n    return false;\n  }\n\n  handleDownArrow = (e: React.KeyboardEvent<HTMLElement>): boolean => {\n    if (this.state.popoverShown) {\n      this.popover.downArrow();\n      return true;\n    }\n    return false;\n  }\n\n  handleEscape = (e: React.KeyboardEvent<HTMLElement>): boolean => {\n    if (this.state.popoverShown) {\n      this.popoverShowDebounce.cancel();\n      this.popover.hide();\n      return true;\n    }\n    return false;\n  }\n\n  handleChannelSelect = (c: SlackChannel) => {\n    let editorState = this.state.editorState;\n    editorState = EditorState.moveSelectionToEnd(editorState);\n    const text = editorState.getCurrentContent().getLastBlock().getText();\n    let selectionState = editorState.getSelection();\n    let start = selectionState.getStartOffset();\n    const end = selectionState.getEndOffset();\n\n    while (text.charAt(start) !== '#' && start > 0) {\n      start -= 1;\n    }\n\n    selectionState = selectionState.merge({\n      anchorOffset: start,\n      focusOffset: end,\n    }) as SelectionState;\n    let contentState = editorState.getCurrentContent().createEntity('CHANNEL', 'IMMUTABLE', {\n      id: c.id,\n      name: c.name,\n    });\n\n    contentState = Modifier.replaceText(\n      editorState.getCurrentContent(),\n      selectionState,\n      `#${c.name}`,\n      undefined,\n      contentState.getLastCreatedEntityKey(),\n    );\n\n    editorState = EditorState.push(\n      editorState,\n      contentState,\n      'apply-entity',\n    );\n    editorState = EditorState.set(editorState, { decorator: this.compositeDecorator });\n\n    this.setState(\n      {\n        editorState,\n      },\n      () => {\n        this.editor.focus();\n        this.props.onChange(this.getSlackMessage(editorState));\n        this.insertSpace();\n        this.popoverShowDebounce.cancel();\n        this.popover.hide();\n      },\n    );\n  }\n\n  insertSpace = () => {\n    const spaceCharacter = ' ';\n\n    const currentState = this.state.editorState;\n    const newContentState = Modifier.replaceText(\n      currentState.getCurrentContent(),\n      currentState.getSelection(),\n      spaceCharacter,\n    );\n\n    this.setState({\n      editorState: EditorState.push(currentState, newContentState, 'insert-characters'),\n    });\n  }\n\n  handleMemberSelect = (m: SlackMember) => {\n    let editorState = this.state.editorState;\n    editorState = EditorState.moveSelectionToEnd(editorState);\n    const text = editorState.getCurrentContent().getLastBlock().getText();\n    let selectionState = editorState.getSelection();\n    let start = selectionState.getStartOffset();\n    const end = selectionState.getEndOffset();\n\n    while (text.charAt(start) !== '@' && start > 0) {\n      start -= 1;\n    }\n\n    selectionState = selectionState.merge({\n      anchorOffset: start,\n      focusOffset: end,\n    }) as SelectionState;\n    let contentState = editorState.getCurrentContent().createEntity('MENTION', 'IMMUTABLE', {\n      id: m.id,\n      name: m.displayName,\n    });\n\n    contentState = Modifier.replaceText(\n      editorState.getCurrentContent(),\n      selectionState,\n      `@${m.displayName}`,\n      undefined,\n      contentState.getLastCreatedEntityKey(),\n    );\n\n    editorState = EditorState.push(\n      editorState,\n      contentState,\n      'apply-entity',\n    );\n    editorState = EditorState.set(editorState, { decorator: this.compositeDecorator });\n\n    this.setState(\n      {\n        editorState,\n      },\n      () => {\n        this.editor.focus();\n        this.props.onChange(this.getSlackMessage(editorState));\n        this.insertSpace();\n        this.popoverShowDebounce.cancel();\n        this.popover.hide();\n      },\n    );\n  }\n\n  handleStrategy = (contentBlock: ContentBlock, callback: any, contentState: ContentState) => {\n    contentBlock.findEntityRanges(\n      (character) => {\n        const entityKey = character.getEntity();\n        if (entityKey === null) {\n          return false;\n        }\n        return contentState.getEntity(entityKey).getType() === 'CHANNEL' ||\n          contentState.getEntity(entityKey).getType() === 'MENTION';\n      },\n      callback,\n    );\n  }\n\n  render() {\n    const { editorState, channels, members } = this.state;\n    const isEmpty = !!editorState.getCurrentContent().getPlainText();\n\n    return (\n      <div\n        className={classnames('slack-message-editor', {\n          'hide-placeholder': isEmpty,\n        })}\n        onKeyDown={this.handleHotKeys}\n        onClick={this.handleClick}\n        ref={this.handleRef}\n      >\n        <Editor\n          onChange={this.handleEditorChange}\n          editorState={editorState}\n          placeholder=\"add a message..\"\n          ref={this.handleEditorRef}\n          keyBindingFn={this.handleKeyBinding}\n          handleKeyCommand={this.handleKeyCommand}\n          tabIndex={0}\n        />\n        <SlackTypeaheadPopover\n          ref={this.handlePopoverRef}\n          channels={channels}\n          members={members}\n          onHide={this.handleHide}\n          onShow={this.handleShow}\n          onMemberSelect={this.handleMemberSelect}\n          onChannelSelect={this.handleChannelSelect}\n        />\n      </div>\n    );\n  }\n}\n\nexport default SlackMessageEditor;\n"]}]}