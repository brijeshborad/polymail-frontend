{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/api/templates.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/api/templates.ts","mtime":1675280253981},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkgewogICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHsKICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHsKICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTsKICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKQogICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07CiAgICAgICAgfQogICAgICAgIHJldHVybiB0OwogICAgfTsKICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9OwppbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7CmltcG9ydCB7IGpzb25SZXF1ZXN0LCBibGFua1JlcXVlc3QgfSBmcm9tICcuL2Jhc2UnOwppbXBvcnQgeyBhcHBseVRlbXBsYXRlRGVmYXVsdHMgfSBmcm9tICdAc3JjL2xpYi90ZW1wbGF0ZSc7CmltcG9ydCB7IGNyZWF0ZUF0dGFjaG1lbnQgfSBmcm9tICdAc3JjL21vY2tzL2F0dGFjaG1lbnRzJzsKaW1wb3J0IHsgY3JlYXRlVGVtcGxhdGUgfSBmcm9tICdAc3JjL21vY2tzL3RlbXBsYXRlcyc7CmltcG9ydCB7IENsb3VkRmlsZUNsaWVudCB9IGZyb20gJ0BzcmMvYXBpL2Nsb3VkRmlsZSc7CnZhciBUZW1wbGF0ZUNsaWVudCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHsKICAgIGZ1bmN0aW9uIFRlbXBsYXRlQ2xpZW50KCkgewogICAgfQogICAgVGVtcGxhdGVDbGllbnQucHJvdG90eXBlLnVwZGF0ZSA9IGZ1bmN0aW9uICh0ZW1wbGF0ZSkgewogICAgICAgIHJldHVybiBqc29uUmVxdWVzdCh7CiAgICAgICAgICAgIG1ldGhvZDogJ1BBVENIJywKICAgICAgICAgICAgcm91dGU6ICIvdjEvdGVtcGxhdGVzLyIgKyB0ZW1wbGF0ZS5pZCwKICAgICAgICAgICAgYm9keTogdGVtcGxhdGUsCiAgICAgICAgfSkubWFwKGZ1bmN0aW9uIChuZXdUZW1wbGF0ZSkgeyByZXR1cm4gYXBwbHlUZW1wbGF0ZURlZmF1bHRzKG5ld1RlbXBsYXRlKTsgfSk7CiAgICB9OwogICAgVGVtcGxhdGVDbGllbnQucHJvdG90eXBlLmNyZWF0ZSA9IGZ1bmN0aW9uICh0ZW1wbGF0ZSkgewogICAgICAgIHJldHVybiBqc29uUmVxdWVzdCh7CiAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLAogICAgICAgICAgICByb3V0ZTogIi92MS90ZW1wbGF0ZXMiLAogICAgICAgICAgICBib2R5OiBfX2Fzc2lnbihfX2Fzc2lnbih7fSwgdGVtcGxhdGUpLCB7IGlkOiB1bmRlZmluZWQgfSksCiAgICAgICAgfSkubWFwKGZ1bmN0aW9uIChuZXdUZW1wbGF0ZSkgeyByZXR1cm4gYXBwbHlUZW1wbGF0ZURlZmF1bHRzKG5ld1RlbXBsYXRlKTsgfSk7CiAgICB9OwogICAgVGVtcGxhdGVDbGllbnQucHJvdG90eXBlLmRlbGV0ZSA9IGZ1bmN0aW9uICh0ZW1wbGF0ZSkgewogICAgICAgIHJldHVybiBibGFua1JlcXVlc3QoewogICAgICAgICAgICBtZXRob2Q6ICdERUxFVEUnLAogICAgICAgICAgICByb3V0ZTogIi92MS90ZW1wbGF0ZXMvIiArIHRlbXBsYXRlLmlkLAogICAgICAgIH0pOwogICAgfTsKICAgIFRlbXBsYXRlQ2xpZW50LnByb3RvdHlwZS5saXN0ID0gZnVuY3Rpb24gKGZyb20pIHsKICAgICAgICByZXR1cm4ganNvblJlcXVlc3QoewogICAgICAgICAgICBtZXRob2Q6ICdHRVQnLAogICAgICAgICAgICByb3V0ZTogZnJvbSA/ICIvdjEvdGVtcGxhdGVzP2Zyb209IiArIGZyb20gOiAnL3YxL3RlbXBsYXRlcycsCiAgICAgICAgfSkKICAgICAgICAgICAgLm1hcChmdW5jdGlvbiAodGVtcGxhdGVzKSB7IHJldHVybiB0ZW1wbGF0ZXMubWFwKGZ1bmN0aW9uICh0ZW1wbGF0ZSkgeyByZXR1cm4gYXBwbHlUZW1wbGF0ZURlZmF1bHRzKHRlbXBsYXRlKTsgfSk7IH0pOwogICAgfTsKICAgIFRlbXBsYXRlQ2xpZW50LnByb3RvdHlwZS5saXN0SW5jciA9IGZ1bmN0aW9uICh0bykgewogICAgICAgIHJldHVybiBqc29uUmVxdWVzdCh7CiAgICAgICAgICAgIG1ldGhvZDogJ0dFVCcsCiAgICAgICAgICAgIHJvdXRlOiB0byA/ICIvdjEvdGVtcGxhdGVzP3RvPSIgKyB0byA6ICcvdjEvdGVtcGxhdGVzJywKICAgICAgICB9KQogICAgICAgICAgICAubWFwKGZ1bmN0aW9uICh0ZW1wbGF0ZXMpIHsgcmV0dXJuIHRlbXBsYXRlcy5tYXAoZnVuY3Rpb24gKHRlbXBsYXRlKSB7IHJldHVybiBhcHBseVRlbXBsYXRlRGVmYXVsdHModGVtcGxhdGUpOyB9KTsgfSk7CiAgICB9OwogICAgVGVtcGxhdGVDbGllbnQucHJvdG90eXBlLmxpc3RJbmNyQnlUZWFtID0gZnVuY3Rpb24gKHRlYW0sIHRvKSB7CiAgICAgICAgcmV0dXJuIGpzb25SZXF1ZXN0KHsKICAgICAgICAgICAgbWV0aG9kOiAnR0VUJywKICAgICAgICAgICAgcm91dGU6IHRvID8gIi92MS90ZW1wbGF0ZXM/dGVhbT0iICsgdGVhbSArICImdG89IiArIHRvIDogIi92MS90ZW1wbGF0ZXM/dGVhbT0iICsgdGVhbSwKICAgICAgICB9KQogICAgICAgICAgICAubWFwKGZ1bmN0aW9uICh0ZW1wbGF0ZXMpIHsgcmV0dXJuIHRlbXBsYXRlcy5tYXAoZnVuY3Rpb24gKHRlbXBsYXRlKSB7IHJldHVybiBhcHBseVRlbXBsYXRlRGVmYXVsdHModGVtcGxhdGUpOyB9KTsgfSk7CiAgICB9OwogICAgVGVtcGxhdGVDbGllbnQucHJvdG90eXBlLmxpc3RCeVRlYW0gPSBmdW5jdGlvbiAodGVhbSwgZnJvbSkgewogICAgICAgIHJldHVybiBqc29uUmVxdWVzdCh7CiAgICAgICAgICAgIG1ldGhvZDogJ0dFVCcsCiAgICAgICAgICAgIHJvdXRlOiBmcm9tID8gIi92MS90ZW1wbGF0ZXM/dGVhbT0iICsgdGVhbSArICImZnJvbT0iICsgZnJvbSA6ICIvdjEvdGVtcGxhdGVzP3RlYW09IiArIHRlYW0sCiAgICAgICAgfSkKICAgICAgICAgICAgLm1hcChmdW5jdGlvbiAodGVtcGxhdGVzKSB7IHJldHVybiB0ZW1wbGF0ZXMubWFwKGZ1bmN0aW9uICh0ZW1wbGF0ZSkgeyByZXR1cm4gYXBwbHlUZW1wbGF0ZURlZmF1bHRzKHRlbXBsYXRlKTsgfSk7IH0pOwogICAgfTsKICAgIFRlbXBsYXRlQ2xpZW50LnByb3RvdHlwZS51cGxvYWRBdHRhY2htZW50ID0gZnVuY3Rpb24gKHJlc291cmNlSWQsIGF0dGFjaG1lbnQsIGZpbGUsIGlubGluZSwgY2xvdWQpIHsKICAgICAgICByZXR1cm4gbmV3IENsb3VkRmlsZUNsaWVudCgpCiAgICAgICAgICAgIC51cGxvYWRXaXRoUHJvZ3Jlc3MoZmlsZSkKICAgICAgICAgICAgLmZsYXRNYXAoZnVuY3Rpb24gKGYpIHsKICAgICAgICAgICAgaWYgKHR5cGVvZiBmID09PSAnbnVtYmVyJykgewogICAgICAgICAgICAgICAgcmV0dXJuIE9ic2VydmFibGUub2YoZik7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIGpzb25SZXF1ZXN0KHsKICAgICAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLAogICAgICAgICAgICAgICAgcm91dGU6ICIvdjEvdGVtcGxhdGVzLyIgKyByZXNvdXJjZUlkICsgIi9hdHRhY2htZW50cyIsCiAgICAgICAgICAgICAgICBib2R5OiBfX2Fzc2lnbihfX2Fzc2lnbih7IGlkOiBhdHRhY2htZW50LCBmaWxlbmFtZTogZmlsZS5uYW1lIH0sIGYpLCB7IGlubGluZTogaW5saW5lLAogICAgICAgICAgICAgICAgICAgIGNsb3VkOiBjbG91ZCB9KSwKICAgICAgICAgICAgfSk7CiAgICAgICAgfSk7CiAgICB9OwogICAgVGVtcGxhdGVDbGllbnQucHJvdG90eXBlLmFkZEF0dGFjaG1lbnQgPSBmdW5jdGlvbiAocmVzb3VyY2UsIGlkLCBmaWxlbmFtZSwgY2xvdWRGaWxlLCBpbmxpbmUsIGNsb3VkKSB7CiAgICAgICAgcmV0dXJuIGpzb25SZXF1ZXN0KHsKICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsCiAgICAgICAgICAgIHJvdXRlOiAiL3YxL3RlbXBsYXRlcy8iICsgcmVzb3VyY2UgKyAiL2F0dGFjaG1lbnRzIiwKICAgICAgICAgICAgYm9keTogewogICAgICAgICAgICAgICAgaWQ6IGlkLAogICAgICAgICAgICAgICAgZmlsZW5hbWU6IGZpbGVuYW1lLAogICAgICAgICAgICAgICAgaW5saW5lOiBpbmxpbmUsCiAgICAgICAgICAgICAgICBjbG91ZDogY2xvdWQsCiAgICAgICAgICAgICAgICBjbG91ZEZpbGU6IGNsb3VkRmlsZSwKICAgICAgICAgICAgfSwKICAgICAgICB9KTsKICAgIH07CiAgICBUZW1wbGF0ZUNsaWVudC5wcm90b3R5cGUucmVtb3ZlQXR0YWNobWVudCA9IGZ1bmN0aW9uIChyZXNvdXJjZUlkLCBhdHRhY2htZW50KSB7CiAgICAgICAgcmV0dXJuIGJsYW5rUmVxdWVzdCh7CiAgICAgICAgICAgIG1ldGhvZDogJ0RFTEVURScsCiAgICAgICAgICAgIHJvdXRlOiAiL3YxL3RlbXBsYXRlcy8iICsgcmVzb3VyY2VJZCArICIvYXR0YWNobWVudHMvIiArIGF0dGFjaG1lbnQsCiAgICAgICAgfSk7CiAgICB9OwogICAgVGVtcGxhdGVDbGllbnQucHJvdG90eXBlLnNoYXJlID0gZnVuY3Rpb24gKHRlbXBsYXRlSWQsIHRlYW1JZCkgewogICAgICAgIHJldHVybiBqc29uUmVxdWVzdCh7CiAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLAogICAgICAgICAgICByb3V0ZTogIi92MS90ZW1wbGF0ZXMvIiArIHRlbXBsYXRlSWQgKyAiL3NoYXJlIiwKICAgICAgICAgICAgYm9keTogewogICAgICAgICAgICAgICAgdGVhbTogdGVhbUlkLAogICAgICAgICAgICB9LAogICAgICAgIH0pCiAgICAgICAgICAgIC5tYXAoZnVuY3Rpb24gKGpzb24pIHsgcmV0dXJuIGFwcGx5VGVtcGxhdGVEZWZhdWx0cyhqc29uKTsgfSk7CiAgICB9OwogICAgcmV0dXJuIFRlbXBsYXRlQ2xpZW50Owp9KCkpOwpleHBvcnQgeyBUZW1wbGF0ZUNsaWVudCB9OwpleHBvcnQgZnVuY3Rpb24gbW9ja1RlbXBsYXRlQ2xpZW50KCkgewogICAgcmV0dXJuIHsKICAgICAgICBsaXN0OiBmdW5jdGlvbiAoZnJvbSkgeyByZXR1cm4gT2JzZXJ2YWJsZS5vZihbXSk7IH0sCiAgICAgICAgbGlzdEJ5VGVhbTogZnVuY3Rpb24gKHRlYW0sIGZyb20pIHsgcmV0dXJuIE9ic2VydmFibGUub2YoW10pOyB9LAogICAgICAgIHVwZGF0ZTogZnVuY3Rpb24gKHRlbXBsYXRlKSB7IHJldHVybiBPYnNlcnZhYmxlLm9mKHRlbXBsYXRlKTsgfSwKICAgICAgICBjcmVhdGU6IGZ1bmN0aW9uICh0ZW1wbGF0ZSkgeyByZXR1cm4gT2JzZXJ2YWJsZS5vZih0ZW1wbGF0ZSk7IH0sCiAgICAgICAgZGVsZXRlOiBmdW5jdGlvbiAodGVtcGxhdGUpIHsgcmV0dXJuIE9ic2VydmFibGUub2YobnVsbCk7IH0sCiAgICAgICAgdXBsb2FkQXR0YWNobWVudDogZnVuY3Rpb24gKHJlc291cmNlLCBhdHRhY2htZW50LCBmaWxlLCBpbmxpbmUsIGNsb3VkKSB7IHJldHVybiBPYnNlcnZhYmxlLm9mKGNyZWF0ZUF0dGFjaG1lbnQoKSk7IH0sCiAgICAgICAgYWRkQXR0YWNobWVudDogZnVuY3Rpb24gKHJlc291cmNlLCBpZCwgZmlsbmVhbWUsIGNsb3VkRmlsZSwgaW5saW5lLCBjbG91ZCkgeyByZXR1cm4gT2JzZXJ2YWJsZS5vZihjcmVhdGVBdHRhY2htZW50KCkpOyB9LAogICAgICAgIHJlbW92ZUF0dGFjaG1lbnQ6IGZ1bmN0aW9uICh0ZW1wbGF0ZSwgYXR0YWNobWVudCkgeyByZXR1cm4gT2JzZXJ2YWJsZS5vZihudWxsKTsgfSwKICAgICAgICBsaXN0SW5jckJ5VGVhbTogZnVuY3Rpb24gKHRlbXBsYXRlLCB0bykgeyByZXR1cm4gT2JzZXJ2YWJsZS5vZihbXSk7IH0sCiAgICAgICAgbGlzdEluY3I6IGZ1bmN0aW9uICh0bykgeyByZXR1cm4gT2JzZXJ2YWJsZS5vZihbXSk7IH0sCiAgICAgICAgc2hhcmU6IGZ1bmN0aW9uICh0ZW1wbGF0ZUlkLCB0ZWFtSWQpIHsKICAgICAgICAgICAgcmV0dXJuIE9ic2VydmFibGUub2YoY3JlYXRlVGVtcGxhdGUoZmFsc2UsIHsgaWQ6IHRlbXBsYXRlSWQsIHRlYW06IHRlYW1JZCB9KSk7CiAgICAgICAgfSwKICAgIH07Cn0K"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/api/templates.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/api/templates.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,MAAM,CAAC;AAGlC,OAAO,EAAE,WAAW,EAAE,YAAY,EAAE,MAAM,QAAQ,CAAC;AACnD,OAAO,EAAE,qBAAqB,EAAE,MAAM,mBAAmB,CAAC;AAC1D,OAAO,EAAE,gBAAgB,EAAE,MAAM,wBAAwB,CAAC;AAC1D,OAAO,EAAE,cAAc,EAAE,MAAM,sBAAsB,CAAC;AACtD,OAAO,EAAE,eAAe,EAAE,MAAM,oBAAoB,CAAC;AA6BrD;IAAA;IA2HA,CAAC;IA1HC,+BAAM,GAAN,UAAO,QAAkB;QACvB,OAAO,WAAW,CAAC;YACjB,MAAM,EAAE,OAAO;YACf,KAAK,EAAE,mBAAiB,QAAQ,CAAC,EAAI;YACrC,IAAI,EAAE,QAAQ;SACf,CAAC,CAAC,GAAG,CAAC,UAAA,WAAW,IAAI,OAAA,qBAAqB,CAAC,WAAW,CAAC,EAAlC,CAAkC,CAAC,CAAC;IAC5D,CAAC;IAED,+BAAM,GAAN,UAAO,QAAkB;QACvB,OAAO,WAAW,CAAC;YACjB,MAAM,EAAE,MAAM;YACd,KAAK,EAAE,eAAe;YACtB,IAAI,wBAAO,QAAQ,KAAE,EAAE,EAAE,SAAS,GAAE;SACrC,CAAC,CAAC,GAAG,CAAC,UAAA,WAAW,IAAI,OAAA,qBAAqB,CAAC,WAAW,CAAC,EAAlC,CAAkC,CAAC,CAAC;IAC5D,CAAC;IAED,+BAAM,GAAN,UAAO,QAAkB;QACvB,OAAO,YAAY,CAAC;YAClB,MAAM,EAAE,QAAQ;YAChB,KAAK,EAAE,mBAAiB,QAAQ,CAAC,EAAI;SACtC,CAAC,CAAC;IACL,CAAC;IAED,6BAAI,GAAJ,UAAK,IAAa;QAChB,OAAO,WAAW,CAAC;YACjB,MAAM,EAAE,KAAK;YACb,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,wBAAsB,IAAM,CAAC,CAAC,CAAC,eAAe;SAC7D,CAAC;aACD,GAAG,CAAC,UAAC,SAAqB,IAAK,OAAA,SAAS,CAAC,GAAG,CAAC,UAAA,QAAQ,IAAI,OAAA,qBAAqB,CAAC,QAAQ,CAAC,EAA/B,CAA+B,CAAC,EAA1D,CAA0D,CAAC,CAAC;IAC9F,CAAC;IAED,iCAAQ,GAAR,UAAS,EAAW;QAClB,OAAO,WAAW,CAAC;YACjB,MAAM,EAAE,KAAK;YACb,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,sBAAoB,EAAI,CAAC,CAAC,CAAC,eAAe;SACvD,CAAC;aACD,GAAG,CAAC,UAAC,SAAqB,IAAK,OAAA,SAAS,CAAC,GAAG,CAAC,UAAA,QAAQ,IAAI,OAAA,qBAAqB,CAAC,QAAQ,CAAC,EAA/B,CAA+B,CAAC,EAA1D,CAA0D,CAAC,CAAC;IAC9F,CAAC;IAED,uCAAc,GAAd,UAAe,IAAY,EAAE,EAAW;QACtC,OAAO,WAAW,CAAC;YACjB,MAAM,EAAE,KAAK;YACb,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,wBAAsB,IAAI,YAAO,EAAI,CAAC,CAAC,CAAC,wBAAsB,IAAM;SACjF,CAAC;aACD,GAAG,CAAC,UAAC,SAAqB,IAAK,OAAA,SAAS,CAAC,GAAG,CAAC,UAAA,QAAQ,IAAI,OAAA,qBAAqB,CAAC,QAAQ,CAAC,EAA/B,CAA+B,CAAC,EAA1D,CAA0D,CAAC,CAAC;IAC9F,CAAC;IAED,mCAAU,GAAV,UAAW,IAAY,EAAE,IAAa;QACpC,OAAO,WAAW,CAAC;YACjB,MAAM,EAAE,KAAK;YACb,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,wBAAsB,IAAI,cAAS,IAAM,CAAC,CAAC,CAAC,wBAAsB,IAAM;SACvF,CAAC;aACD,GAAG,CAAC,UAAC,SAAqB,IAAK,OAAA,SAAS,CAAC,GAAG,CAAC,UAAA,QAAQ,IAAI,OAAA,qBAAqB,CAAC,QAAQ,CAAC,EAA/B,CAA+B,CAAC,EAA1D,CAA0D,CAAC,CAAC;IAC9F,CAAC;IAED,yCAAgB,GAAhB,UACE,UAAkB,EAClB,UAAkB,EAClB,IAAU,EACV,MAAe,EACf,KAAc;QAEd,OAAO,IAAI,eAAe,EAAE;aACzB,kBAAkB,CAAC,IAAI,CAAC;aACxB,OAAO,CAAC,UAAC,CAAC;YACT,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE;gBACzB,OAAO,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;aACzB;YAED,OAAO,WAAW,CAAC;gBACjB,MAAM,EAAE,MAAM;gBACd,KAAK,EAAE,mBAAiB,UAAU,iBAAc;gBAChD,IAAI,sBACF,EAAE,EAAE,UAAU,EACd,QAAQ,EAAE,IAAI,CAAC,IAAI,IAChB,CAAC,KACJ,MAAM,QAAA;oBACN,KAAK,OAAA,GACN;aACF,CAAC,CAAC;QACL,CAAC,CACF,CAAC;IACJ,CAAC;IAED,sCAAa,GAAb,UACE,QAAgB,EAChB,EAAU,EACV,QAAgB,EAChB,SAAiB,EACjB,MAAe,EACf,KAAc;QAEd,OAAO,WAAW,CAAC;YACjB,MAAM,EAAE,MAAM;YACd,KAAK,EAAE,mBAAiB,QAAQ,iBAAc;YAC9C,IAAI,EAAE;gBACJ,EAAE,IAAA;gBACF,QAAQ,UAAA;gBACR,MAAM,QAAA;gBACN,KAAK,OAAA;gBACL,SAAS,WAAA;aACV;SACF,CAAC,CAAC;IACL,CAAC;IAED,yCAAgB,GAAhB,UAAiB,UAAkB,EAAE,UAAkB;QACrD,OAAO,YAAY,CAAC;YAClB,MAAM,EAAE,QAAQ;YAChB,KAAK,EAAE,mBAAiB,UAAU,qBAAgB,UAAY;SAC/D,CAAC,CAAC;IACL,CAAC;IAED,8BAAK,GAAL,UAAM,UAAkB,EAAE,MAAc;QACtC,OAAO,WAAW,CAAC;YACjB,MAAM,EAAE,MAAM;YACd,KAAK,EAAE,mBAAiB,UAAU,WAAQ;YAC1C,IAAI,EAAE;gBACJ,IAAI,EAAE,MAAM;aACb;SACF,CAAC;aACD,GAAG,CAAC,UAAA,IAAI,IAAI,OAAA,qBAAqB,CAAC,IAAI,CAAC,EAA3B,CAA2B,CAAC,CAAC;IAC5C,CAAC;IACH,qBAAC;AAAD,CAAC,AA3HD,IA2HC;;AAED,MAAM,UAAU,kBAAkB;IAChC,OAAO;QACL,IAAI,EAAE,UAAC,IAAa,IAAK,OAAA,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,EAAjB,CAAiB;QAC1C,UAAU,EAAE,UAAC,IAAY,EAAE,IAAa,IAAK,OAAA,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,EAAjB,CAAiB;QAC9D,MAAM,EAAE,UAAC,QAAkB,IAAK,OAAA,UAAU,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAvB,CAAuB;QACvD,MAAM,EAAE,UAAC,QAAkB,IAAK,OAAA,UAAU,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAvB,CAAuB;QACvD,MAAM,EAAE,UAAC,QAAkB,IAAK,OAAA,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,EAAnB,CAAmB;QACnD,gBAAgB,EAAE,UAChB,QAAgB,EAChB,UAAkB,EAClB,IAAU,EACV,MAAe,EACf,KAAc,IACX,OAAA,UAAU,CAAC,EAAE,CAAC,gBAAgB,EAAE,CAAC,EAAjC,CAAiC;QACtC,aAAa,EAAE,UACb,QAAgB,EAChB,EAAU,EACV,QAAgB,EAChB,SAAiB,EACjB,MAAe,EACf,KAAc,IACX,OAAA,UAAU,CAAC,EAAE,CAAC,gBAAgB,EAAE,CAAC,EAAjC,CAAiC;QACtC,gBAAgB,EAAE,UAAC,QAAgB,EAAE,UAAkB,IAAK,OAAA,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,EAAnB,CAAmB;QAC/E,cAAc,EAAE,UAAC,QAAgB,EAAE,EAAW,IAAK,OAAA,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,EAAjB,CAAiB;QACpE,QAAQ,EAAE,UAAC,EAAW,IAAK,OAAA,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,EAAjB,CAAiB;QAC5C,KAAK,EAAE,UAAC,UAAkB,EAAE,MAAc;YACxC,OAAA,UAAU,CAAC,EAAE,CAAC,cAAc,CAAC,KAAK,EAAE,EAAE,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC;QAAtE,CAAsE;KACzE,CAAC;AACJ,CAAC","sourcesContent":["import { Observable } from 'rxjs';\n\nimport { Template, Attachment } from '@src/types';\nimport { jsonRequest, blankRequest } from './base';\nimport { applyTemplateDefaults } from '@src/lib/template';\nimport { createAttachment } from '@src/mocks/attachments';\nimport { createTemplate } from '@src/mocks/templates';\nimport { CloudFileClient } from '@src/api/cloudFile';\n\nexport interface TemplateAPI {\n  list(id?: string): Observable<Template[]>;\n  listByTeam(team: string, id?: string): Observable<Template[]>;\n  listIncr(to?: string): Observable<Template[]>;\n  listIncrByTeam(team: string, to?: string): Observable<Template[]>;\n  update(template: Template): Observable<Template>;\n  create(template: Template): Observable<Template>;\n  delete(template: Template): Observable<null>;\n  uploadAttachment(\n    resource: string,\n    attachment: string,\n    file: File,\n    inline: boolean,\n    cloud: boolean,\n  ): Observable<Attachment|number>;\n  addAttachment(\n    resource: string,\n    id: string,\n    filename: string,\n    cloudFile: string,\n    inline: boolean,\n    cloud: boolean,\n  ): Observable<Attachment>;\n  removeAttachment(resource: string, attachment: string): Observable<null>;\n  share(templateId: string, teamId: string): Observable<Template>;\n}\n\nexport class TemplateClient implements TemplateAPI {\n  update(template: Template): Observable<Template> {\n    return jsonRequest({\n      method: 'PATCH',\n      route: `/v1/templates/${template.id}`,\n      body: template,\n    }).map(newTemplate => applyTemplateDefaults(newTemplate));\n  }\n\n  create(template: Template): Observable<Template> {\n    return jsonRequest({\n      method: 'POST',\n      route: `/v1/templates`,\n      body: { ...template, id: undefined },\n    }).map(newTemplate => applyTemplateDefaults(newTemplate));\n  }\n\n  delete(template: Template): Observable<null> {\n    return blankRequest({\n      method: 'DELETE',\n      route: `/v1/templates/${template.id}`,\n    });\n  }\n\n  list(from?: string): Observable<Template[]> {\n    return jsonRequest({\n      method: 'GET',\n      route: from ? `/v1/templates?from=${from}` : '/v1/templates',\n    })\n    .map((templates: Template[]) => templates.map(template => applyTemplateDefaults(template)));\n  }\n\n  listIncr(to?: string): Observable<Template[]> {\n    return jsonRequest({\n      method: 'GET',\n      route: to ? `/v1/templates?to=${to}` : '/v1/templates',\n    })\n    .map((templates: Template[]) => templates.map(template => applyTemplateDefaults(template)));\n  }\n\n  listIncrByTeam(team: string, to?: string): Observable<Template[]> {\n    return jsonRequest({\n      method: 'GET',\n      route: to ? `/v1/templates?team=${team}&to=${to}` : `/v1/templates?team=${team}`,\n    })\n    .map((templates: Template[]) => templates.map(template => applyTemplateDefaults(template)));\n  }\n\n  listByTeam(team: string, from?: string): Observable<Template[]> {\n    return jsonRequest({\n      method: 'GET',\n      route: from ? `/v1/templates?team=${team}&from=${from}` : `/v1/templates?team=${team}`,\n    })\n    .map((templates: Template[]) => templates.map(template => applyTemplateDefaults(template)));\n  }\n\n  uploadAttachment(\n    resourceId: string,\n    attachment: string,\n    file: File,\n    inline: boolean,\n    cloud: boolean,\n  ): Observable<Attachment|number> {\n    return new CloudFileClient()\n      .uploadWithProgress(file)\n      .flatMap((f) => {\n        if (typeof f === 'number') {\n          return Observable.of(f);\n        }\n\n        return jsonRequest({\n          method: 'POST',\n          route: `/v1/templates/${resourceId}/attachments`,\n          body: {\n            id: attachment,\n            filename: file.name,\n            ...f,\n            inline,\n            cloud,\n          },\n        });\n      },\n    );\n  }\n\n  addAttachment(\n    resource: string,\n    id: string,\n    filename: string,\n    cloudFile: string,\n    inline: boolean,\n    cloud: boolean,\n  ): Observable<Attachment> {\n    return jsonRequest({\n      method: 'POST',\n      route: `/v1/templates/${resource}/attachments`,\n      body: {\n        id,\n        filename,\n        inline,\n        cloud,\n        cloudFile,\n      },\n    });\n  }\n\n  removeAttachment(resourceId: string, attachment: string): Observable<null> {\n    return blankRequest({\n      method: 'DELETE',\n      route: `/v1/templates/${resourceId}/attachments/${attachment}`,\n    });\n  }\n\n  share(templateId: string, teamId: string): Observable<Template> {\n    return jsonRequest({\n      method: 'POST',\n      route: `/v1/templates/${templateId}/share`,\n      body: {\n        team: teamId,\n      },\n    })\n    .map(json => applyTemplateDefaults(json));\n  }\n}\n\nexport function mockTemplateClient(): TemplateAPI {\n  return {\n    list: (from?: string) => Observable.of([]),\n    listByTeam: (team: string, from?: string) => Observable.of([]),\n    update: (template: Template) => Observable.of(template),\n    create: (template: Template) => Observable.of(template),\n    delete: (template: Template) => Observable.of(null),\n    uploadAttachment: (\n      resource: string,\n      attachment: string,\n      file: File,\n      inline: boolean,\n      cloud: boolean,\n    ) => Observable.of(createAttachment()),\n    addAttachment: (\n      resource: string,\n      id: string,\n      filneame: string,\n      cloudFile: string,\n      inline: boolean,\n      cloud: boolean,\n    ) => Observable.of(createAttachment()),\n    removeAttachment: (template: string, attachment: string) => Observable.of(null),\n    listIncrByTeam: (template: string, to?: string) => Observable.of([]),\n    listIncr: (to?: string) => Observable.of([]),\n    share: (templateId: string, teamId: string) =>\n      Observable.of(createTemplate(false, { id: templateId, team: teamId })),\n  };\n}\n"]}]}