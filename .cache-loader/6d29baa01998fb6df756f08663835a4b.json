{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/mocks/messages.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/mocks/messages.ts","mtime":1675280254071},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkgewogICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHsKICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHsKICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTsKICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKQogICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07CiAgICAgICAgfQogICAgICAgIHJldHVybiB0OwogICAgfTsKICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9OwppbXBvcnQgeyBjcmVhdGVTaGFyZWRUaHJlYWQgfSBmcm9tICdAc3JjL21vY2tzL3NoYXJlZFRocmVhZHMnOwppbXBvcnQgeyBtb2NrTm93IH0gZnJvbSAnQHNyYy9saWIvZGF0ZXRpbWUnOwpleHBvcnQgdmFyIGNyZWF0ZU1lc3NhZ2UgPSBmdW5jdGlvbiAobWVzc2FnZSkgewogICAgcmV0dXJuIF9fYXNzaWduKHsgaWQ6ICcxMjM0NScsIGludGVybmFsOiBuZXcgRGF0ZSgnMjAxNy0wOS0yN1QwNToyMDozMS4yMTZaJyksIHNlbnQ6IHRydWUsIHJlYWQ6IHRydWUsIHN0YXJyZWQ6IHRydWUsIHRyYWNrZWQ6IHRydWUsIHRyYWNrczogNCwgc3ViamVjdDogJ1RoaXMgaXMgYSB0ZXN0Jywgc25pcHBldDogJ0NoZWNrIG91dCB0aGlzIHRlc3QnLCBmcm9tOiAnc2hpbkBwb2x5bWFpbC5pbycsIGNjOiBbXSwgYmNjOiBbJ2Zvb0Bwb2x5bWFpbC5pbyddLCB0bzogWydzaGFoYW5AcG9seW1haWwuaW8nXSwgaGFzQXR0YWNobWVudHM6IGZhbHNlLCBhdHRhY2htZW50czogW10sIHJmY0lkOiAnMTIzNDUnLCByZXBseVRvOiBbXSB9LCBtZXNzYWdlKTsKfTsKZXhwb3J0IHZhciBjcmVhdGVNZXNzYWdlQm9keSA9IGZ1bmN0aW9uIChtZXNzYWdlQm9keSkgewogICAgcmV0dXJuIF9fYXNzaWduKF9fYXNzaWduKHsgaWQ6ICcxMjM0NScsIGJvZHk6ICd0aGlzIGlzIGEgYm9keScsIGhpc3Rvcnk6ICd0aGlzIGlzIGEgaGlzdG9yeScsIGhpc3RvcnlNYXJrZXI6ICdpcycsIHVuc3Vic2NyaWJlTGluazogJ2h0dHBzOi8vdW5zdWJzY3JpYmUuY29tJyB9LCBtZXNzYWdlQm9keSksIHsgdXBkYXRlZDogbW9ja05vdywgdGhyZWFkOiAndGVzdGRvZ2V0aHJlYWQnIH0pOwp9OwpleHBvcnQgdmFyIGNyZWF0ZVNoYXJlTGluayA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuICh7CiAgICBtZXNzYWdlOiBjcmVhdGVNZXNzYWdlKCkuaWQsCiAgICBzaGFyZWRUaHJlYWQ6IGNyZWF0ZVNoYXJlZFRocmVhZCgpLmlkLAogICAgdXJsOiAnaHR0cHM6Ly9wb2x5bWFpbC5pbycsCn0pOyB9Owo="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/mocks/messages.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/mocks/messages.ts"],"names":[],"mappings":";;;;;;;;;;;AACA,OAAO,EAAE,kBAAkB,EAAE,MAAM,0BAA0B,CAAC;AAC9D,OAAO,EAAE,OAAO,EAAE,MAAM,mBAAmB,CAAC;AAE5C,MAAM,CAAC,IAAM,aAAa,GAAG,UAAC,OAA0B;IACtD,kBACE,EAAE,EAAE,OAAO,EACX,QAAQ,EAAE,IAAI,IAAI,CAAC,0BAA0B,CAAC,EAC9C,IAAI,EAAE,IAAI,EACV,IAAI,EAAE,IAAI,EACV,OAAO,EAAE,IAAI,EACb,OAAO,EAAE,IAAI,EACb,MAAM,EAAE,CAAC,EACT,OAAO,EAAE,gBAAgB,EACzB,OAAO,EAAE,qBAAqB,EAC9B,IAAI,EAAE,kBAAkB,EACxB,EAAE,EAAE,EAAE,EACN,GAAG,EAAE,CAAC,iBAAiB,CAAC,EACxB,EAAE,EAAE,CAAC,oBAAoB,CAAC,EAC1B,cAAc,EAAE,KAAK,EACrB,WAAW,EAAE,EAAE,EACf,KAAK,EAAE,OAAO,EACd,OAAO,EAAE,EAAE,IAER,OAAO,EACV;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,IAAM,iBAAiB,GAAG,UAAC,WAAkC;IAClE,2BACE,EAAE,EAAE,OAAO,EACX,IAAI,EAAE,gBAAgB,EACtB,OAAO,EAAE,mBAAmB,EAC5B,aAAa,EAAE,IAAI,EACnB,eAAe,EAAE,yBAAyB,IACvC,WAAW,KACd,OAAO,EAAE,OAAO,EAChB,MAAM,EAAE,gBAAgB,IACxB;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,IAAM,eAAe,GAAG,cAAiB,OAAA,CAAC;IAC/C,OAAO,EAAE,aAAa,EAAE,CAAC,EAAE;IAC3B,YAAY,EAAE,kBAAkB,EAAE,CAAC,EAAE;IACrC,GAAG,EAAE,qBAAqB;CAC3B,CAAC,EAJ8C,CAI9C,CAAC","sourcesContent":["import { Partial, Message, MessageBody, ShareLink } from '@src/types';\nimport { createSharedThread } from '@src/mocks/sharedThreads';\nimport { mockNow } from '@src/lib/datetime';\n\nexport const createMessage = (message?: Partial<Message>): Message => {\n  return {\n    id: '12345',\n    internal: new Date('2017-09-27T05:20:31.216Z'),\n    sent: true,\n    read: true,\n    starred: true,\n    tracked: true,\n    tracks: 4,\n    subject: 'This is a test',\n    snippet: 'Check out this test',\n    from: 'shin@polymail.io',\n    cc: [],\n    bcc: ['foo@polymail.io'],\n    to: ['shahan@polymail.io'],\n    hasAttachments: false,\n    attachments: [],\n    rfcId: '12345',\n    replyTo: [],\n\n    ...message,\n  };\n};\n\nexport const createMessageBody = (messageBody?: Partial<MessageBody>): MessageBody => {\n  return {\n    id: '12345',\n    body: 'this is a body',\n    history: 'this is a history',\n    historyMarker: 'is',\n    unsubscribeLink: 'https://unsubscribe.com',\n    ...messageBody,\n    updated: mockNow,\n    thread: 'testdogethread',\n  };\n};\n\nexport const createShareLink = (): ShareLink => ({\n  message: createMessage().id,\n  sharedThread: createSharedThread().id,\n  url: 'https://polymail.io',\n});\n"]}]}