{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Threads/components/ThreadList/components/AdvancedSearchPopover/AdvancedSearchPopover.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Threads/components/ThreadList/components/AdvancedSearchPopover/AdvancedSearchPopover.tsx","mtime":1675280254113},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Threads/components/ThreadList/components/AdvancedSearchPopover/AdvancedSearchPopover.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Threads/components/ThreadList/components/AdvancedSearchPopover/AdvancedSearchPopover.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport Popover from '@src/components/Popover/Popover';\nimport DefaultSearch from './components/DefaultSearch';\nimport ContactsSearch from './components/ContactsSearch/ContactsSearch';\nimport BoxSearch from './components/BoxSearch/BoxSearch';\nimport ModifierSearch from './components/ModifierSearch/ModifierSearch';\nimport DateSearch, { DATE_FORMAT } from './components/DateSearch/DateSearch';\nimport TextSearch from './components/TextSearch/TextSearch';\nimport { List, Contact, ThreadBox, MailboxType } from '@src/types';\nimport { getDefaultOptions } from '@src/lib/search';\nimport { values, sum, filter, debounce, forEach, sortBy } from 'lodash';\n\nimport './AdvancedSearchPopover.scss';\nimport { dateTypeaheadOptions } from '@src/lib/datetime';\nimport { Moment } from 'moment';\n\nexport interface Props {\n  query: string;\n  onSearch: (query: string, complete: boolean) => void;\n}\n\nexport interface StateProps {\n  lists: List[];\n  typeaheadContacts: Contact[];\n}\n\nexport interface DispatchProps {\n  searchContactTypeahead: (query: string) => void;\n  clearContactTypeahead: () => void;\n}\n\ninterface State {\n  queryParams?: { [key in SearchModifier]: string | undefined };\n  selectedIndex: number;\n  options: { [ key: string ]: any[] | undefined };\n  mouseInPopover: boolean;\n}\n\nenum SearchModifier {\n  Contact = 'contact',\n  Text = 'text',\n  Box = 'box',\n  Is = 'is',\n  Has = 'has',\n  Before = 'before',\n  After = 'after',\n}\n\nexport const enum ComponentType {\n  Default = 'default',\n  Text = 'text',\n  Contact = 'contact',\n  Modifier = 'modifier',\n  Box = 'box',\n  Date = 'date',\n}\n\nconst DEFAULT_OPTIONS = {\n  modifiers: [\n    {\n      heading: 'in:',\n      list: 'inbox, archive, trash, lists',\n    },\n    {\n      heading: 'is:',\n      list: 'unread, replied, starred, opened, unopened',\n    },\n    {\n      heading: 'has:',\n      list: 'reminder, attachment',\n    },\n  ],\n  contacts: [\n    {\n      heading: 'with:',\n      list: 'contact',\n    },\n    {\n      heading: 'from:',\n      list: 'contact',\n    },\n    {\n      heading: 'to:',\n      list: 'contact',\n    },\n  ],\n  dates: [\n    {\n      heading: 'before:',\n      list: 'date',\n    },\n    {\n      heading: 'after:',\n      list: 'date',\n    },\n  ],\n};\nconst REGEX = '([^:]+$|(\"|\\').+(\"|\\')?$)';\n\nclass AdvancedSearchPopover extends React.PureComponent<Props & StateProps & DispatchProps, State> {\n  private popover: Popover;\n  private debounced: any;\n  private componentOrder: ComponentType[];\n  private showDebounce: any;\n  private hideDebounce: any;\n\n  constructor(props: Props & StateProps & DispatchProps) {\n    super();\n\n    this.debounced = debounce(this.updateOptions, 100);\n\n    this.componentOrder = [\n      ComponentType.Text,\n      ComponentType.Contact,\n      ComponentType.Modifier,\n      ComponentType.Box,\n      ComponentType.Date,\n    ];\n\n    const queryParams = this.getQueryParams(props.query, props.lists);\n    this.state = {\n      mouseInPopover: false,\n      queryParams,\n      options: {},\n      selectedIndex: 0,\n    };\n  }\n\n  show = () => {\n    this.hideDebounce.cancel();\n    this.showDebounce();\n  }\n\n  hide = () => {\n    this.showDebounce.cancel();\n    this.hideDebounce();\n  }\n\n  handleRef = (ref: Popover) => {\n    this.popover = ref;\n  }\n\n  updateOptions = (props: Props & StateProps & DispatchProps) => {\n    const queryParams = this.getQueryParams(props.query, props.lists);\n\n    // TODO(SHIN): Handle when mouse has exited options\n    const newOptions = this.getOptions(queryParams);\n    this.setState({\n      queryParams,\n      selectedIndex: (!this.state.mouseInPopover && this.state.options !== newOptions)\n          ? 0\n          : this.state.selectedIndex,\n      options: newOptions,\n    });\n  }\n\n  componentDidMount() {\n    this.showDebounce = debounce(this.popover.show, 100);\n    this.hideDebounce = debounce(this.popover.hide, 100);\n\n    if (this.state.queryParams) {\n      this.setState({\n        options: this.getOptions(this.state.queryParams),\n      });\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props & StateProps & DispatchProps) {\n    if (nextProps.query && nextProps.query !== this.props.query) {\n      this.show();\n      const queryParams = this.getQueryParams(nextProps.query, nextProps.lists);\n      const search = this.getQueryParamForComponent(['contact', 'text'], queryParams);\n\n      if (search === undefined) {\n        nextProps.clearContactTypeahead();\n      } else {\n        nextProps.searchContactTypeahead(search);\n      }\n    }\n\n    if (nextProps.query !== this.props.query ||\n      nextProps.typeaheadContacts !== this.props.typeaheadContacts ||\n      this.props.lists !== nextProps.lists) {\n      this.debounced(nextProps);\n    }\n  }\n\n  componentWillUnmount() {\n    this.debounced.cancel();\n    this.showDebounce.cancel();\n    this.hideDebounce.cancel();\n  }\n\n  // getQueryParam always returns a lowercased version of params\n  getQueryParam = (query: string, keywords: string[]) => {\n    const queryLowerCased = query.toLowerCase();\n    const keywordsLowerCased = keywords.map(k => k.toLowerCase());\n    const keyword = keywordsLowerCased.filter((k) => {\n      // NEED TO fix all MATCH( everyehwere)\n      return queryLowerCased.match(new RegExp(k + REGEX, 'g'));\n    })[0];\n\n    if (keyword) {\n      return queryLowerCased.match(new RegExp(REGEX, 'g'))![0].split(/'|\"/).join('');\n    }\n\n    if (queryLowerCased.match(new RegExp(`(${keywordsLowerCased.join('|')})$`, 'gi'))) {\n      return '';\n    }\n\n    return undefined;\n  }\n\n  getQueryParams = (query: string, lists: List[]) => {\n    const searchModifierToPrefixMapping = [\n      { modifier: SearchModifier.Contact, prefixes: ['with:', 'from:', 'to:'] },\n      { modifier: SearchModifier.Box, prefixes: ['in:'] },\n      { modifier: SearchModifier.Is, prefixes: ['is:'] },\n      { modifier: SearchModifier.Has, prefixes: ['has:'] },\n      { modifier: SearchModifier.Before, prefixes: ['before:'] },\n      { modifier: SearchModifier.After, prefixes: ['after:'] },\n    ];\n    const queryParams = {};\n\n    searchModifierToPrefixMapping.forEach(mapping =>\n      queryParams[mapping.modifier] = this.getQueryParam(query, mapping.prefixes),\n    );\n\n    forEach(queryParams, (param: string, modifier: SearchModifier) => {\n      if (param !== undefined) {\n        const indexOfSpace = param.search(/\\s/g);\n        let possibleOptions;\n        let params;\n        let regex;\n\n        switch (modifier) {\n          case SearchModifier.Contact:\n            regex = new RegExp(`^\\\\S+@\\\\S+\\\\.\\\\S+`, 'gi');\n\n            if (param.match(regex) && indexOfSpace !== -1) {\n              queryParams[SearchModifier.Contact] = undefined;\n              queryParams[SearchModifier.Text] = param.slice(indexOfSpace + 1);\n            }\n            break;\n          case SearchModifier.Box:\n            possibleOptions = (getDefaultOptions(ComponentType.Box) || []).concat(\n              lists.map(l => l.name),\n            ).map(o => o.trim().toLowerCase());\n            params = param.split(/\\s/g);\n            break;\n          case SearchModifier.Is:\n          case SearchModifier.Has:\n            possibleOptions = getDefaultOptions(\n              ComponentType.Modifier,\n              SearchModifier.Is === modifier,\n            ) || [];\n            params = param.split(/\\s/g);\n            break;\n          case SearchModifier.Before:\n          case SearchModifier.After:\n            regex = new RegExp(`^\\\\d{4}/\\\\d{2}/\\\\d{2}`, 'gi');\n            break;\n          default:\n            break;\n        }\n\n        if (regex && param !== '' && param.match(regex) && indexOfSpace !== -1) {\n          queryParams[modifier] = undefined;\n          queryParams[SearchModifier.Text] = param.slice(indexOfSpace + 1);\n        } else if (possibleOptions && params && possibleOptions.length && params.length &&\n          possibleOptions.indexOf(params[0].trim().toLowerCase()) !== -1) {\n          queryParams[modifier] = undefined;\n          queryParams[SearchModifier.Text] = params.slice(1).join(' ');\n        }\n      }\n    });\n\n    if (queryParams[SearchModifier.Text] === undefined) {\n      queryParams[SearchModifier.Text] = query ? query : undefined;\n    }\n\n    return queryParams as { [key in SearchModifier]: string | undefined };\n  }\n\n  getQueryParamForComponent = (\n    params: string[], queryParams: { [key in SearchModifier]: string | undefined },\n  ) => {\n    if (!queryParams) {\n      return undefined;\n    }\n\n    let i;\n    let p;\n    for (i = 0; i < params.length; i += 1) {\n      p = params[i];\n      if (queryParams[p] !== undefined) {\n        return queryParams[p];\n      }\n    }\n\n    return undefined;\n  }\n\n  getOptionsForComponent = (\n    component: ComponentType,\n    query: string | undefined,\n    queryParams: { [key in SearchModifier]: string | undefined },\n  ) => {\n    if (query === undefined) {\n      return undefined;\n    }\n\n    switch (component) {\n      case ComponentType.Text:\n        return [query].concat((getDefaultOptions(component) || [])\n            .filter(m => m.slice(0, m.length - 1).match(query)));\n      case ComponentType.Contact:\n        return this.props.typeaheadContacts.slice(0, 5);\n      case ComponentType.Modifier:\n        return (getDefaultOptions(component, queryParams[SearchModifier.Is] !== undefined) || [])\n          .filter(m => m.match(query));\n      case ComponentType.Box:\n        const options: Array<List|ThreadBox|MailboxType> = (getDefaultOptions(component) || [])\n          .filter(b => b.toLowerCase().match(query)) as Array<ThreadBox|MailboxType>;\n\n        return options\n          .concat(sortBy(\n            this.props.lists.filter(l => l.name.toLowerCase().match(query)),\n            l => l.name.toLowerCase(),\n          ))\n          .slice(0, 5);\n      case ComponentType.Date:\n        return dateTypeaheadOptions(query).slice(0, 5);\n      default:\n        return undefined;\n    }\n  }\n\n  // returns options for all components\n  getOptions = (queryParams: { [key in SearchModifier]: string | undefined }) => {\n    const componentToQueryParamMapping = [\n      { component: ComponentType.Text, params: ['text'] },\n      { component: ComponentType.Contact, params: ['contact', 'text'] },\n      { component: ComponentType.Box, params: ['box'] },\n      { component: ComponentType.Modifier, params: ['is', 'has'] },\n      { component: ComponentType.Date, params: ['before', 'after'] },\n    ];\n    const options = {};\n\n    let component;\n    let search;\n    componentToQueryParamMapping.forEach((mapping) => {\n      component = mapping.component;\n      search = this.getQueryParamForComponent(mapping.params, queryParams);\n      options[component] = this.getOptionsForComponent(component, search, queryParams);\n    });\n\n    return options;\n  }\n\n  search = (type: ComponentType | null, selection: any) => {\n    const { queryParams } = this.state;\n    const { query, onSearch } = this.props;\n\n    if (!queryParams) {\n      return;\n    }\n\n    let newQuery;\n    let toReplace;\n    let replaceWith;\n    let handled = false;\n    let completeSearch = false;\n    switch (type) {\n      case ComponentType.Contact:\n        if (queryParams[SearchModifier.Contact] !== undefined) {\n          toReplace = queryParams[SearchModifier.Contact];\n          replaceWith = selection.email;\n          completeSearch = true;\n        } else {\n          toReplace = queryParams[SearchModifier.Text];\n          replaceWith = `with:${selection.email}`;\n          completeSearch = true;\n        }\n        break;\n      case ComponentType.Box:\n        toReplace = queryParams[SearchModifier.Box];\n        replaceWith = typeof selection === 'string' ? selection : selection.name;\n        if (replaceWith.indexOf(' ') > 0) {\n          replaceWith = `\"${replaceWith}\"`;\n        }\n        completeSearch = true;\n        break;\n      case ComponentType.Modifier:\n        toReplace = queryParams[SearchModifier.Is] !== undefined ?\n          queryParams[SearchModifier.Is] : queryParams[SearchModifier.Has];\n        replaceWith = selection;\n        completeSearch = true;\n        break;\n      case ComponentType.Date:\n        toReplace = queryParams[SearchModifier.After] !== undefined ?\n          queryParams[SearchModifier.After] : queryParams[SearchModifier.Before];\n        replaceWith = selection.moment ? selection.moment.format(DATE_FORMAT) : undefined;\n        completeSearch = true;\n        break;\n      case ComponentType.Text:\n        if (selection === queryParams[SearchModifier.Text]) {\n          onSearch(query, true);\n          handled = true;\n        } else {\n          toReplace = queryParams[SearchModifier.Text];\n          replaceWith = selection;\n          completeSearch = false;\n        }\n        break;\n      case ComponentType.Default:\n        if (selection && selection.heading) {\n          onSearch(\n            selection.heading.search(/\\s/g) > -1 ?\n              `\"${selection.heading}\"` : selection.heading,\n            false,\n          );\n          handled = true;\n        }\n        break;\n      default:\n        break;\n    }\n\n    if (toReplace && replaceWith && !handled) {\n      newQuery = query.replace(new RegExp(`${toReplace}$`, 'gi'), replaceWith);\n      onSearch(newQuery, completeSearch);\n    } else if (toReplace === '' && replaceWith && !handled) {\n      newQuery = query + replaceWith;\n      onSearch(newQuery, completeSearch);\n    }\n  }\n\n  handleSelect = (index?: number, option?: { component: ComponentType, option: any }) => {\n    if (index !== undefined) {\n      this.enter();\n    } else if (option) {\n      this.search(option.component, option.option);\n    }\n  }\n\n  getSumOfAllOptions = (options: { [ key: string ]: any[] | undefined }) => {\n    return sum(filter(values(options), o => !!o && !!o.length).map(o => o!.length));\n  }\n\n  getSelectedComponentIndex = () => {\n    const { query } = this.props;\n    const { selectedIndex, options } = this.state;\n    if (!query) {\n      return { component: ComponentType.Default, relativeIndex: selectedIndex };\n    }\n\n    const index = selectedIndex % this.getSumOfAllOptions(options);\n    let totalOptions = 0;\n    let i;\n    for (i = 0; i < this.componentOrder.length; i += 1) {\n      if (options[this.componentOrder[i]]) {\n        totalOptions += options[this.componentOrder[i]]!.length;\n        if (totalOptions > index) {\n          return {\n            component: this.componentOrder[i],\n            relativeIndex: index - (totalOptions - options[this.componentOrder[i]]!.length),\n          };\n        }\n      }\n    }\n\n    return undefined;\n  }\n\n  downArrow = () => {\n    const { query } = this.props;\n    const { selectedIndex, options } = this.state;\n\n    if (!query) {\n      this.setState({\n        selectedIndex: Math.min(\n          selectedIndex + 1,\n          7,\n        ),\n      });\n      return;\n    }\n\n    const sumOptions = this.getSumOfAllOptions(options);\n    this.setState({\n      selectedIndex: Math.min(\n        selectedIndex + 1,\n        sumOptions ? sumOptions - 1 : 0,\n      ),\n    });\n  }\n\n  upArrow = () => {\n    const { selectedIndex } = this.state;\n    this.setState({ selectedIndex: Math.max(selectedIndex - 1, 0) });\n  }\n\n  enter = () => {\n    const { query } = this.props;\n    const selectedOption = this.getSelectedComponentIndex();\n    const selectedComponent = selectedOption && selectedOption.component;\n    const selectedIndex = selectedOption && selectedOption.relativeIndex;\n\n    if (!query && selectedIndex !== undefined) {\n      let total = 0;\n      forEach(DEFAULT_OPTIONS, (value, key) => {\n        total += value.length;\n        if (total > selectedIndex) {\n          this.search(ComponentType.Default, value[selectedIndex - (total - value.length)]);\n        }\n      });\n    } else if (selectedOption && selectedComponent && selectedIndex !== undefined) {\n      const options = this.state.options[selectedComponent];\n\n      if (options) {\n        this.search(selectedComponent, options[selectedIndex]);\n      }\n    } else if (query) {\n      this.search(null, query);\n    }\n  }\n\n  handleMouseLeave = () => {\n    this.setState({ mouseInPopover: false });\n  }\n\n  handleMouseEnter = (component: ComponentType, relativeIndex: number) => {\n    let sumOfOptions = 0;\n\n    // Special Handling for default case\n    if (component === ComponentType.Default) {\n      this.setState({ selectedIndex: relativeIndex, mouseInPopover: true });\n    }\n\n    let i;\n    for (i = 0; i < this.componentOrder.length; i += 1) {\n      if (component === this.componentOrder[i]) {\n        this.setState({ selectedIndex: sumOfOptions + relativeIndex, mouseInPopover: true });\n        break;\n      } else if (this.state.options[this.componentOrder[i]]) {\n        sumOfOptions += this.state.options[this.componentOrder[i]]!.length;\n      }\n    }\n  }\n\n  render() {\n    const { query } = this.props;\n    const { queryParams, options } = this.state;\n    const selectedOption = this.getSelectedComponentIndex();\n    const selectedComponent = selectedOption && selectedOption.component;\n    const selectedIndex = selectedOption && selectedOption.relativeIndex;\n\n    return (\n      <Popover\n        className=\"advanced-search-popover\"\n        ref={this.handleRef}\n        onMouseLeave={this.handleMouseLeave}\n        autoFocusOff\n        allowClickPropagation\n      >\n        {options[ComponentType.Text] && <TextSearch\n          options={options[ComponentType.Text] as string[]}\n          onSelect={this.handleSelect}\n          onSuggestionMouseEnter={this.handleMouseEnter}\n          selectedIndex={selectedComponent === ComponentType.Text ?\n            selectedIndex : undefined}\n        />}\n        {options[ComponentType.Contact] && <ContactsSearch\n          options={options[ComponentType.Contact] as Contact[]}\n          showModifier={queryParams!.contact === undefined}\n          onSelect={this.handleSelect}\n          onSuggestionMouseEnter={this.handleMouseEnter}\n          selectedIndex={selectedComponent === ComponentType.Contact ?\n            selectedIndex : undefined}\n        />}\n        {options[ComponentType.Modifier] && <ModifierSearch\n          showIsOptions={queryParams!.is !== undefined}\n          onSelect={this.handleSelect}\n          onSuggestionMouseEnter={this.handleMouseEnter}\n          options={options[ComponentType.Modifier] as string[]}\n          selectedIndex={selectedComponent === ComponentType.Modifier ?\n            selectedIndex : undefined}\n        />}\n        {options[ComponentType.Box] && <BoxSearch\n          options={options[ComponentType.Box] as Array<ThreadBox|List|MailboxType>}\n          onSelect={this.handleSelect}\n          onSuggestionMouseEnter={this.handleMouseEnter}\n          selectedIndex={selectedComponent === ComponentType.Box ?\n            selectedIndex : undefined}\n        />}\n        {options[ComponentType.Date] && <DateSearch\n          onSelect={this.handleSelect}\n          options={options[ComponentType.Date] as Array<{ title: string; moment: Moment; }>}\n          onSuggestionMouseEnter={this.handleMouseEnter}\n          selectedIndex={selectedComponent === ComponentType.Date ?\n            selectedIndex : undefined}\n          query={queryParams && (queryParams[SearchModifier.Before]\n            || queryParams[SearchModifier.After])}\n        />}\n        {!query && !this.getSumOfAllOptions(options) && <DefaultSearch\n          onSelect={this.handleSelect}\n          onSuggestionMouseEnter={this.handleMouseEnter}\n          selectedIndex={selectedComponent === ComponentType.Default ?\n            selectedIndex : undefined}\n          options={DEFAULT_OPTIONS}\n        />}\n      </Popover>\n    );\n  }\n}\n\nexport default AdvancedSearchPopover;\n"]}]}