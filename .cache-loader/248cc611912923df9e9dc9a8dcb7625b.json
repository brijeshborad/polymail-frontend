{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/ContentEditable/ContentEditable.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/ContentEditable/ContentEditable.tsx","mtime":1675280254003},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/ContentEditable/ContentEditable.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/ContentEditable/ContentEditable.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CloudAttachmentCell from '@src/components/Compose/Attachments/CloudAttachmentCell';\nimport CalendarInvite from '@src/components/Cells/CalendarInvite/CalendarInvite';\nimport { filenameIconUrl, AttachmentUploadOptions } from '@src/lib/attachment';\nimport {\n  Attachment,\n  AttachmentMeta,\n  KeyCode,\n  DraftCalendarInvite,\n  Contact,\n  LinkPreviewProps,\n} from '@src/types';\nimport FormattingBar from './FormattingBar';\nimport VariablePopover from './VariablePopover';\n\nimport './ContentEditable.scss';\nimport { sanitize, FakeDOM } from '@src/lib/html';\nimport { parseAddress } from '@src/lib/address';\nimport { debounce, Cancelable, last, compact } from 'lodash';\nimport { mongoId } from '@src/lib/crypt';\nimport { jsonRequest } from '@src/api/base';\nimport LinkPreview, {\n  closeButtons,\n} from '@src/components/ThreadDetail/components/Composer/components/LinkPreview';\nimport { isRightToLeftChar } from '@src/lib/utils';\nimport { isPrimaryModifierKey } from '@src/lib/hotkeys';\nimport Resizable, { ResizeCallback, ResizeStartCallback } from 're-resizable';\nimport { generateSentFromPolymailHtmlDiv } from '@src/lib/draft';\nimport { AmplitudeEvents, logAmplitudeEvent } from '@src/lib/amplitude-analytics';\n\ninterface Props {\n  html: string;\n  template?: string;\n  draft?: string;\n  autofocus?: boolean;\n  disabled?: boolean;\n  noBranding?: boolean;\n  useLinkPreview?: boolean;\n  variables?: string[];\n\n  onSelect?: () => void;\n  onChange?: (html: string) => void;\n  onAttachmentUpload?: (list: File[], options: AttachmentUploadOptions) => void;\n  onAttachmentRemove?: (id: string) => void;\n  onTabPress?: (event: React.KeyboardEvent<HTMLDivElement>|KeyboardEvent) => boolean;\n  getContact?: (email: string) => Contact;\n}\n\ninterface State {\n  lastSelectedRange?: Range;\n  forceHyperlinkPopup?: boolean;\n  selection: boolean;\n  selectionCenter: Point;\n  focus: boolean;\n  variablePopoverPosition: Point;\n  html: string;\n  oldContentEditablePosition?: Range;\n}\n\ninterface CustomWindow extends Window {\n  getSelection(): Selection;\n}\ndeclare let window: CustomWindow;\n\nexport interface Point {\n  x: number;\n  y: number;\n}\n\n// Nesting Level Styles\nconst ORDERED_NESTING_STYLES = ['decimal', 'lower-alpha', 'lower-roman'];\nconst UNORDERED_NESTING_STYLES = ['disc', 'circle', 'square'];\n\n// TODO(SHIN): Handle hotkeys & immediate hyperlink\n// TODO(SHIN): Implement tabbing, indent and outdent behavior\n// TODO(SHIN): Pass in prop to identify when to focus\nexport default class ContentEditable extends React.Component<Props, State> {\n  private body: HTMLDivElement;\n  private timeout: NodeJS.Timer;\n  private selectedPlaceholderIndex?: number;\n  private ref: HTMLDivElement;\n  private handleChangeDebounced: ((html: string) => void) & Cancelable;\n\n  constructor() {\n    super();\n\n    const initialPosition = {\n      x: 0,\n      y: 0,\n    };\n\n    this.state = {\n      selection: false,\n      selectionCenter: initialPosition,\n      variablePopoverPosition: initialPosition,\n      focus: false,\n      html: '',\n    };\n\n    this.handleChangeDebounced = debounce(this.handleChange, 750, { trailing: true });\n  }\n\n  componentDidMount() {\n    // tslint:disable-next-line no-unnecessary-type-assertion\n    if (this.props.autofocus) {\n      this.focus();\n    }\n\n    const doc = FakeDOM().createElement('div');\n    doc.innerHTML = this.props.html;\n    const closeContainer = doc.getElementsByClassName('pm-cal-invite-close-container')[0];\n    if (closeContainer && closeContainer.childElementCount === 0) {\n      const img = document.createElement('img');\n      img.src = `${process.env.API_URL}/v2/img/calendar-invite/close@3x.png`;\n      img.alt = 'Close Icon';\n      img.setAttribute('data-pm-delete-calendar-invite', 'true');\n      img.setAttribute('style', 'width: 12px; height: 12px; float: right; cursor: pointer;');\n      closeContainer.appendChild(img);\n    }\n\n    this.setState({\n      html: doc.innerHTML,\n      variablePopoverPosition: {\n        x: 0,\n        y: this.ref ? this.ref.offsetTop : 0,\n      },\n    });\n\n    document.addEventListener('mousedown', this.handleMouseDown);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleMouseDown);\n\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props) {\n    let closeContainer;\n    const img = document.createElement('img');\n    img.src = `${process.env.API_URL}/v2/img/calendar-invite/close@3x.png`;\n    img.alt = 'Close Icon';\n    img.setAttribute('data-pm-delete-calendar-invite', 'true');\n    img.setAttribute('style', 'width: 12px; height: 12px; float: right; cursor: pointer;');\n\n    if (this.props.template !== nextProps.template || this.props.draft !== nextProps.draft ||\n      nextProps.disabled || !this.state.focus) {\n      const doc = FakeDOM().createElement('div');\n      doc.innerHTML = nextProps.html;\n      closeContainer = doc.getElementsByClassName('pm-cal-invite-close-container')[0];\n      if (closeContainer && closeContainer.childElementCount === 0) {\n        closeContainer.appendChild(img);\n      }\n\n      this.setState({ html: doc.innerHTML });\n\n      // only focus if template or draft has changed\n      if (this.props.draft !== nextProps.draft) {\n        this.focus();\n      }\n    } else {\n      if (this.ref) {\n        closeContainer = this.ref.getElementsByClassName('pm-cal-invite-close-container')[0];\n        if (closeContainer && closeContainer.childElementCount === 0) {\n          closeContainer.appendChild(img);\n        }\n      }\n    }\n  }\n\n  handleMouseDown = (e: MouseEvent) => {\n    const target = e.target as HTMLElement;\n\n    if (target && this.ref && !this.ref.contains(target) && this.state.focus) {\n      this.handleClickOutside();\n    }\n  }\n\n  handleRef = (ref: HTMLDivElement) => {\n    this.ref = ref;\n  }\n\n  cancelOnChange = () => {\n    this.handleChangeDebounced.cancel();\n  }\n\n  resetOnChangeDebounce = () => {\n    this.handleChangeDebounced.cancel();\n    this.handleChangeDebounced = debounce(this.handleChange, 750, { trailing: true });\n  }\n\n  onChange = (e: React.ChangeEvent<HTMLDivElement>) => {\n    const { variablePopoverPosition } = this.state;\n    const { variables } = this.props;\n\n    // Check for text-based list insertions when change is not an undo type\n    if (e.nativeEvent && (e.nativeEvent as any).inputType !== 'historyUndo') {\n      this.checkForUnorderedList();\n      this.checkForOrderedList();\n    }\n\n    if (this.body) {\n      // Pass HTML through callback on changes.\n      this.handleChangeDebounced(this.body.innerHTML);\n      const newVariablePopoverPosition = this.getPopoverPosition()\n        || variablePopoverPosition;\n\n      // Handle updates to variable popover if necessary\n      if (variables && newVariablePopoverPosition !== variablePopoverPosition) {\n        this.setState({\n          variablePopoverPosition: newVariablePopoverPosition,\n        });\n      }\n    }\n  }\n\n  // Identifies how many levels deep an nested <LI> tag is\n  checkListTagNestingLevel = (element: HTMLElement, tags: string[]): number => {\n    let level = -1;\n    let walker: HTMLElement|null = element;\n\n    // Start at -1 in order to capture zero index\n    while (walker && this.body.contains(walker)) {\n      if (tags.indexOf(walker.tagName) > -1) {\n        level += 1;\n      }\n      walker = walker.parentElement;\n    }\n\n    // Fallback mechanism to make sure we never return lower than 0\n    if (level === -1) {\n      return 0;\n    }\n\n    return level;\n  }\n\n  // Takes current indentation level of element and applies proper styling.\n  applyListStyling = () => {\n    const selection = document.getSelection();\n    if (!selection) {\n      return;\n    }\n\n    const range = selection.getRangeAt(0);\n    const selectionElement = range.startContainer;\n\n    let parent = selectionElement.parentElement;\n\n    // TODO(SHAHAN): We could also run a check where it\n    // just keeps walking the parents until we find a UL/OL and\n    // bound it by the body containing the element\n    // so we don't overflow. Since there could be an edge case of children\n    // TEXT nodes?\n    if (parent?.tagName === 'LI') {\n      parent = parent.parentElement;\n    }\n\n    if (!parent) {\n      return;\n    }\n\n    parent.style.marginTop = '0';\n    parent.style.marginBottom = '0';\n    const level = this.checkListTagNestingLevel(parent, ['OL', 'UL']);\n\n    parent.style.listStyleType = parent.tagName === 'UL'\n      ? UNORDERED_NESTING_STYLES[level % 3]\n      : ORDERED_NESTING_STYLES[level % 3];\n  }\n\n  checkForUnorderedList = () => {\n    const selection = document.getSelection();\n    if (!selection) {\n      return;\n    }\n    // Ordered List insertion\n    const unorderedListRegexp = new RegExp(\n      '^\\\\*\\\\s',\n      'g',\n    );\n    const startRange = selection.getRangeAt(0);\n    const startContainerValue = startRange\n      && startRange.startContainer && startRange.startContainer.nodeValue;\n    const commandState = document.queryCommandState('insertUnorderedList');\n    if (!commandState && startContainerValue && startRange &&\n      startContainerValue.length === 2 && startContainerValue.match(unorderedListRegexp)\n    ) {\n      startRange.setStart(startRange.startContainer, 0);\n      document.execCommand('delete', false, 'false');\n      document.execCommand('insertUnorderedList', false, 'false');\n      const newSelection = document.getSelection();\n      if (newSelection) {\n        newSelection.collapseToEnd();\n        const elementRange = newSelection.getRangeAt(0);\n        const element = elementRange.startContainer;\n        if (element && element instanceof HTMLElement) {\n          const parent = element.parentElement;\n          // Set start value of ordered list insertion\n          if (parent && parent.tagName === 'UL') {\n            this.applyListStyling();\n          }\n        }\n        startRange.setStartAfter(startRange.startContainer);\n      }\n    }\n  }\n\n  checkForOrderedList = () => {\n    const selection = document.getSelection();\n    if (!selection) {\n      return;\n    }\n    // Ordered List insertion\n    const orderedListRegexp = new RegExp(\n      /^(\\d+)\\.\\s/,\n    );\n    const startRange = selection.getRangeAt(0);\n    const startContainerValue = startRange\n      && startRange.startContainer && startRange.startContainer.nodeValue;\n    const commandState = document.queryCommandState('insertOrderedList');\n    if (!commandState && startContainerValue &&\n      startContainerValue.length === 3 && startContainerValue.match(orderedListRegexp)\n    ) {\n      const match = startContainerValue.match(orderedListRegexp);\n      const digit = match && match[1];\n      startRange.setStart(startRange.startContainer, 0);\n      document.execCommand('delete', false, 'false');\n      document.execCommand('insertOrderedList', false, 'false');\n      selection.collapseToEnd();\n      const elementRange = selection.getRangeAt(0);\n      const element = elementRange.startContainer;\n      if (element && element instanceof HTMLElement) {\n        const parent = element.parentElement;\n        // Set start value of ordered list insertion\n        if (digit && parent && parent.tagName === 'OL') {\n          parent.setAttribute('start', digit);\n          this.applyListStyling();\n        }\n      }\n      startRange.setStartAfter(startRange.startContainer);\n    }\n  }\n\n  // Automatically wraps paste in anchor tag and uploads image pastes\n  // TODO(SHIN): May want to identify a way we can sanitize on paste\n  //  while using system paste handler\n  onPaste = (e: React.ClipboardEvent<HTMLDivElement>) => {\n    const { onAttachmentUpload, noBranding, useLinkPreview } = this.props;\n\n    // Handle pasting of url\n    const pastedText = e.clipboardData.getData('text/plain');\n\n    if (pastedText\n        && typeof process.env.SCHEDULING_URL === 'string'\n        && pastedText.startsWith(process.env.SCHEDULING_URL)) {\n      logAmplitudeEvent(AmplitudeEvents.ShareCalendarMeetingTime);\n    }\n\n    // Custom behavior handling when pasting files\n    const rtfExists = e.clipboardData.types.indexOf('text/rtf') !== -1;\n    if (e.clipboardData.types.indexOf('Files') !== -1 && !rtfExists) {\n      e.preventDefault();\n      e.stopPropagation();\n      const fileList = e.clipboardData.files;\n      const files = compact(Array.from(fileList)\n        .map((blank, index) => fileList.item(index)));\n      if (files && !!files.length && onAttachmentUpload) {\n        onAttachmentUpload(files, {});\n        return;\n      }\n    }\n\n    // Handles stripping formatting/color/style when pasting in html content.\n    const htmlHandler = () => {\n      const pastedHtml = e.clipboardData.getData('text/html');\n      if (pastedHtml) {\n        const wrapper = FakeDOM().createElement('div');\n        wrapper.innerHTML = pastedHtml;\n\n        // Remove formatting when pasting in anything that is not a table\n        if (!wrapper.querySelector('table')) {\n          e.preventDefault();\n          e.stopPropagation();\n\n          const allChildren = wrapper.getElementsByTagName('*');\n          Array.from(allChildren).forEach((element) => {\n            element.removeAttribute('style');\n            element.removeAttribute('color');\n            element.removeAttribute('class');\n\n            // Strip out head and meta\n            if (['HEAD', 'META', 'STYLE'].indexOf(element.tagName) > -1) {\n              element.parentElement?.removeChild(element);\n            }\n\n            // HACK(SHIN): Replaces body wrapped elements from Google Docs with proper content\n            if (element.tagName === 'B' && !!element.id) {\n              const replacement = FakeDOM().createElement('div');\n              replacement.innerHTML = element.innerHTML;\n              element.parentElement?.replaceChild(replacement, element);\n            }\n          });\n          const range = window.getSelection()?.getRangeAt(0);\n          if (range) {\n            range.deleteContents();\n          }\n\n          const pastedData = wrapper.innerHTML;\n          document.execCommand('insertHTML', false, pastedData);\n          return;\n        }\n      }\n    };\n\n    // No handling if there is are whitespace characters\n    const whiteSpaceRegex = /[\\s\\n\\t\\r]/g;\n    if (pastedText.match(whiteSpaceRegex)?.length) {\n      htmlHandler();\n      return;\n    }\n\n    // Do not handle when pasting multiple urls\n    const regex = new RegExp(/(https?:\\/\\/[^\\s]+)/g);\n    const matches = pastedText.match(regex);\n    if (matches && matches.length > 1) {\n      htmlHandler();\n      return;\n    }\n\n    // Do not use custom handling if cannot be parsed into a url\n    // TODO(SHIN): Pasting url with space\n    try {\n      const url = new URL(pastedText);\n      // TODO(SHIN): Only anchorize pasted content that is of url-based type\n      e.preventDefault();\n\n      if (url) {\n        const isSelected = !!(window && window.getSelection && window.getSelection().toString());\n        const id = mongoId();\n        // Create contenteditable false node to wrap <a> tag\n        const node = document.createElement('a');\n        node.setAttribute('data-pm-link-preview', id);\n        node.setAttribute('href', pastedText);\n        const innerHtmlText = isSelected ? window.getSelection().toString() : pastedText;\n        node.innerHTML = sanitize(innerHtmlText);\n\n        // Get selection\n        const sel = window.getSelection();\n        if (sel && sel.rangeCount) {\n          if (isSelected) {\n            // Keep styles of selection\n            this.handleHrefSubmit(sel.toString(), pastedText);\n          } else {\n            // Insert node that will be replaced by the LinkPreview\n            const range = sel.getRangeAt(0);\n\n            // Insert node at caret\n            document.execCommand(\n              'insertHTML',\n              false,\n              node.outerHTML,\n            );\n\n            sel.collapseToEnd();\n            this.handleChangeDebounced(this.body.innerHTML);\n\n            // Do not process link preview if part of a HTML list element\n            const containerEl = (range.startContainer instanceof HTMLElement) &&\n              range.startContainer;\n            const parentElement = range.startContainer.parentElement;\n            const inList = (containerEl && ['UL', 'LI'].indexOf(containerEl.tagName) > -1) ||\n              (parentElement && ['UL', 'LI'].indexOf(parentElement.tagName) > -1);\n            if (inList) {\n              return;\n            }\n          }\n        }\n\n        // Do not turn into link preview if preference is not turned on\n        if (!useLinkPreview) {\n          return;\n        }\n\n        // we don't need preview when text is selected\n        if (isSelected) return;\n\n        // Creates Link Preview for node and replaces contents\n        jsonRequest({\n          method: 'GET',\n          route: '/v1/linkpreview?url=' + encodeURIComponent(pastedText),\n        })\n          .subscribe((response: LinkPreviewProps) => {\n            const linkPreviewContainer = FakeDOM().createElement('div');\n            const element = document.querySelector(`[data-pm-link-preview=\"${id}\"]`) as HTMLElement;\n            if (!element) {\n              return;\n            }\n            const linkPreviewComponent = (\n              <LinkPreview\n                title={response.title}\n                href={response.url}\n                siteName={response.siteName || response.url}\n                img={response.imageUrl}\n                description={response.description}\n                id={id}\n                isPro={!!noBranding}\n              />\n            );\n\n            // Save cursor position in case it needs to be restored\n            this.saveCursorPosition();\n\n            // Render link preview and post updates\n            ReactDOM.render(linkPreviewComponent, linkPreviewContainer, () => {\n              // Replaces HTML\n              window.getSelection()!.removeAllRanges();\n              window.getSelection()!.addRange(new Range());\n              window.getSelection()!.getRangeAt(0).selectNode(element);\n              const linkPreviewHTML = linkPreviewContainer.innerHTML;\n              document.execCommand(\n                'insertHTML',\n                false,\n                linkPreviewHTML,\n              );\n\n              const replacementElement = document\n                .querySelector(`[data-pm-link-preview-id=\"${id}\"]`) as HTMLElement;\n\n              if (!replacementElement) {\n                return;\n              }\n              replacementElement.setAttribute('contenteditable', 'false');\n              const linkPreviewCloseButtons = closeButtons(id);\n              const closeContainer = FakeDOM().createElement('div');\n\n              // Handle insertions of link preview close buttons\n              ReactDOM.render(linkPreviewCloseButtons, closeContainer, () => {\n                const linkPreviewNode = this.body\n                  .querySelector(`[data-pm-link-preview-id=\"${id}\"]`);\n                if (linkPreviewNode) {\n                  linkPreviewNode.insertBefore(closeContainer, element.firstElementChild);\n                  closeContainer.outerHTML = closeContainer.innerHTML;\n                  this.handleChangeDebounced(this.body.innerHTML);\n                  this.restoreCursorPosition();\n                }\n              });\n            });\n          });\n      }\n    } catch {\n      htmlHandler();\n    }\n  }\n\n  onSelect = (e: React.SyntheticEvent<HTMLDivElement>) => {\n    const sel = window.getSelection();\n    const { variablePopoverPosition } = this.state;\n    const newCollapsedState = !sel!.isCollapsed;\n    const forceHyperlinkPopup = false;\n\n    // Only reset selection states if selection or hyperlink has changed\n    if (newCollapsedState !== this.state.selection ||\n      forceHyperlinkPopup !== (this.state.forceHyperlinkPopup || false)) {\n      this.setState({ selection: !sel!.isCollapsed, forceHyperlinkPopup: false });\n    }\n\n    if (sel!.rangeCount) {\n      this.setState({\n        selectionCenter: this.getCenter(),\n        lastSelectedRange: sel!.getRangeAt(0),\n        variablePopoverPosition: this.getPopoverPosition() || variablePopoverPosition,\n      });\n    }\n\n    // Delegate for selections\n    if (this.props.onSelect) {\n      this.props.onSelect();\n    }\n  }\n\n  handleFormatOption = (key: string) => {\n    switch (key) {\n      case 'bold':\n        this.handleFormattingExecCommand('bold');\n        break;\n      case 'italics':\n        this.handleFormattingExecCommand('italic');\n        break;\n      case 'underline':\n        this.handleFormattingExecCommand('underline');\n        break;\n      case 'orderedList':\n        document.execCommand('insertOrderedList');\n        break;\n      case 'unorderedList':\n        document.execCommand('insertUnorderedList');\n        break;\n      default:\n        break;\n    }\n\n    this.focus();\n  }\n\n  getCenter = () => {\n    // Get selection\n    const sel = window.getSelection();\n    if (sel && sel.rangeCount) {\n      let rect = sel.getRangeAt(0).getBoundingClientRect();\n\n      // HACK(SHIN): If no bounding rect use container edge. Uses startContainer as any\n      // since it has property boundingClientRect, but needs typecast\n      if (!rect.top && !rect.left) {\n        const el: any = sel.getRangeAt(0);\n        if (el && el.startContainer && el.startContainer.getBoundingClientRect) {\n          rect = el.startContainer.getBoundingClientRect();\n          return {\n            y: rect.top,\n            x: rect.left,\n          };\n        }\n      }\n\n      const selectionCenter = {\n        y: rect.top,\n        x: rect.left + rect.width / 2,\n      };\n\n      return selectionCenter;\n    }\n\n    return this.state.selectionCenter;\n  }\n\n  getPopoverPosition = () => {\n    const sel = window.getSelection();\n\n    // Capture Y position of selection by calculating offsetTop\n    if (sel && sel.rangeCount) {\n      const rectContainer = sel.getRangeAt(0).startContainer;\n      if (rectContainer instanceof HTMLElement) {\n        const variablePopoverPosition = {\n          y: rectContainer.offsetTop - 5 || this.state.variablePopoverPosition.y,\n          x: 0,\n        };\n\n        // Only reset if y-position has changed\n        if (variablePopoverPosition.y !== this.state.variablePopoverPosition.y) {\n          return variablePopoverPosition;\n        }\n      }\n    }\n\n    return null;\n  }\n\n  insertTextAtCursor = (text: string) => {\n    const textNode = document.createTextNode(text);\n    this.insertAtCursor(textNode);\n  }\n\n  insertAtCursor = (node: HTMLElement | Text) => {\n    const { variablePopoverPosition } = this.state;\n    let sel: Selection|null;\n    let range;\n\n    if (window.getSelection) {\n      sel = window.getSelection();\n      if (sel && sel.getRangeAt && sel.rangeCount) {\n        range = sel.getRangeAt(0);\n        range.deleteContents();\n        range.insertNode(node);\n\n        sel.removeAllRanges();\n        sel.addRange(range);\n        this.setState(\n          { variablePopoverPosition: this.getPopoverPosition() || variablePopoverPosition },\n          () => {\n            sel!.collapseToEnd();\n          },\n        );\n\n        if (this.body) {\n          this.handleChangeDebounced(this.body.innerHTML);\n        }\n      }\n    }\n  }\n\n  handleHrefSubmit = (selectedText: string, href?: string) => {\n    const sel = window.getSelection();\n    if (!sel) {\n      return;\n    }\n\n    sel.removeAllRanges();\n\n    if (this.state.lastSelectedRange) {\n      sel.addRange(this.state.lastSelectedRange);\n    }\n\n    if (!href) {\n      document.execCommand('unlink', false, 'false');\n      return;\n    }\n\n    document.execCommand('createLink', false, href);\n    sel.collapseToEnd();\n  }\n\n  // TODO(SHIN): Handle enter when outdented\n  // TODO(SHIN): Handle level indentation type\n  handleHotkey = (event: React.KeyboardEvent<HTMLDivElement>|KeyboardEvent) => {\n    let handled = false;\n\n    switch (event.keyCode) {\n      // HACK(SHIN): Do not pass up navigation hotkey while contenteditable is editing\n      case KeyCode.G:\n        event.stopPropagation();\n        break;\n      case KeyCode.Delete:\n      case KeyCode.ExtendedDelete:\n        // Do not allow delete when resize handler is showing\n        const element = document.querySelector('.pm-resizable-image-container');\n        if (element && element.parentElement) {\n          // return;\n          const selection = document.getSelection();\n          const range = document.createRange();\n          const foundImage = element.querySelector('img');\n          const id = foundImage && foundImage.id;\n           // Remove the resize handlers and delete the image in question\n          this.sanitizeResizeHandlers();\n          const elementToDelete = document.querySelector(`#${id}`);\n          if (selection && elementToDelete) {\n            selection.removeAllRanges();\n            range.selectNode(elementToDelete);\n            selection.addRange(range);\n          }\n        }\n        break;\n      case KeyCode.U:\n        if (event.metaKey || event.ctrlKey) {\n          this.handleFormattingExecCommand('underline', false, 'false');\n          handled = true;\n        }\n        break;\n      case KeyCode.K:\n        // Handle hyperlink\n        if (isPrimaryModifierKey(event)) {\n          const sel = window.getSelection();\n          if (sel && sel.rangeCount && !this.state.forceHyperlinkPopup) {\n            this.setState({\n              selectionCenter: this.getCenter(),\n              lastSelectedRange: sel.getRangeAt(0),\n              selection: true,\n              forceHyperlinkPopup: true,\n            });\n          } else {\n            this.setState({\n              selection: false,\n              forceHyperlinkPopup: false,\n            });\n          }\n          handled = true;\n        }\n        break;\n      case KeyCode.OpenBracket:\n        const checkTabOrderedList = document.queryCommandState('insertOrderedList');\n        const checkTabUnorderedList = document.queryCommandState('insertUnorderedList');\n\n        if (isPrimaryModifierKey(event) && (checkTabOrderedList || checkTabUnorderedList)) {\n          document.execCommand('outdent');\n          this.applyListStyling();\n          handled = true;\n        }\n        break;\n      case KeyCode.ClosedBracket:\n        const checkBackTabOrderedList = document.queryCommandState('insertOrderedList');\n        const checkBackTabUnorderedList = document.queryCommandState('insertUnorderedList');\n\n        if (isPrimaryModifierKey(event) && (checkBackTabOrderedList || checkBackTabUnorderedList)) {\n          document.execCommand('indent');\n          this.applyListStyling();\n          handled = true;\n        }\n        break;\n      case KeyCode.Enter:\n        // Override behavior when hitting enter on indented selection.\n        // If enter and indent, remove indent as overridden behavior\n        const enterSelection = window.getSelection();\n        if (enterSelection) {\n          const isStart = enterSelection.anchorNode && enterSelection.anchorOffset === 0;\n          const isCollapsed = enterSelection.isCollapsed;\n          if (this.isSelectionIndented() && isStart && isCollapsed) {\n            document.execCommand('outdent', false);\n            handled = true;\n            break;\n          }\n        }\n        break;\n      case KeyCode.Tab:\n        event.preventDefault();\n        const insertOrderedList = document.queryCommandState('insertOrderedList');\n        const insertUnorderedList = document.queryCommandState('insertUnorderedList');\n        const listSelection = document.getSelection();\n        const parent = listSelection && listSelection.anchorNode &&\n          listSelection.anchorNode.parentElement;\n        const parentElement = parent && parent.tagName.toLowerCase();\n        const listSelected = parentElement && ['li', 'ol', 'ul'].indexOf(parentElement) > -1;\n        const templateVariables = this.ref && this.ref.getElementsByClassName('data-pm-var');\n\n        if (insertOrderedList || insertUnorderedList || listSelected) {\n          if (event.shiftKey) {\n            document.execCommand('outdent');\n            this.applyListStyling();\n            return;\n          }\n\n          document.execCommand('indent');\n          this.applyListStyling();\n          return;\n        }\n        if (templateVariables && templateVariables.length) {\n          if (this.props.onTabPress && this.props.onTabPress(event)) {\n            const sel = window.getSelection();\n            if (sel) {\n              sel.removeAllRanges();\n              this.setState({ selection: false });\n            }\n          }\n          const variables = Array.from(templateVariables) as HTMLElement[];\n          if (this.selectedPlaceholderIndex === undefined) {\n            this.selectedPlaceholderIndex = event.shiftKey ? variables.length : -1;\n          }\n\n          if (event.shiftKey) {\n            this.selectedPlaceholderIndex -= 1;\n          } else {\n            this.selectedPlaceholderIndex += 1;\n          }\n\n          if (this.selectedPlaceholderIndex >= 0 &&\n            this.selectedPlaceholderIndex < variables.length) {\n\n            this.selectElement(variables[this.selectedPlaceholderIndex]);\n            this.focus();\n            return;\n          }\n          if (this.props.onTabPress && this.props.onTabPress(event)) {\n            const sel = window.getSelection();\n            if (sel) {\n              sel.removeAllRanges();\n              this.setState({ selection: false, forceHyperlinkPopup: false });\n            }\n          }\n        } else if (!this.props.onTabPress || !this.props.onTabPress(event)) {\n          // Handle indents and outdents when selecting words\n          const tabSelection = window.getSelection();\n          if (tabSelection && !tabSelection.isCollapsed) {\n            const action = event.shiftKey ? 'outdent' : 'indent';\n            document.execCommand(action, false);\n            handled = true;\n            break;\n          } else if (event.shiftKey) {\n            const action = event.shiftKey ? 'outdent' : 'indent';\n            document.execCommand(action, false);\n            handled = true;\n            break;\n          }\n\n          // If no selection or not outdenting, just insert a span at selection\n          const node = document.createElement('span');\n          node.innerHTML = '&#009';\n          node.setAttribute('style', 'white-space: pre-wrap');\n          this.insertAtCursor(node);\n          this.focus();\n        }\n        handled = true;\n        this.selectedPlaceholderIndex = undefined;\n        break;\n      default:\n        break;\n    }\n\n    if (!handled) {\n      this.selectedPlaceholderIndex = undefined;\n    }\n\n    if (handled) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n  }\n\n  // Utility element to determine whether the cursor content is\n  // contained within a blockquote element (javascript indent)\n  isSelectionIndented = (): boolean => {\n    const tabSelection = window.getSelection();\n    if (tabSelection && tabSelection.anchorNode && tabSelection.anchorNode.parentElement) {\n      const parentElement = tabSelection.anchorNode.parentElement;\n      const tagMatches = tabSelection.anchorNode.nodeName.toLowerCase() === 'blockquote';\n      const parentMatches = parentElement.tagName.toLowerCase() === 'blockquote';\n\n      // Returns true if selection or cursor element is blockquote\n      return parentMatches || tagMatches || !!parentElement.closest('blockquote');\n    }\n\n    return false;\n  }\n\n  // handleFormattingExecCommand is a shim that temporarily toggles contenteditable for non-editable\n  // elements in order to apply consistent formatting options\n  // execCommand is deprecated, but there is not direct alternative atm\n  // https://stackoverflow.com/a/70831583/13772033\n  // todo: should consider in a future using alternatives to execCommand\n  handleFormattingExecCommand = (\n    command: string,\n    showUI: boolean|undefined = undefined,\n    value: string|undefined = undefined,\n  ) => {\n    const items = this.body.querySelectorAll('[contenteditable=false]');\n    items.forEach(i => i.setAttribute('contenteditable', 'true'));\n    document.execCommand(command, showUI, value);\n    items.forEach(i => i.setAttribute('contenteditable', 'false'));\n  }\n\n  handleFontSelect = (value: string) => {\n    this.handleFormattingExecCommand('fontName', false, value);\n    this.handleChangeDebounced(this.body.innerHTML);\n    this.focus();\n  }\n\n  handleFontSizeSelect = (value: string) => {\n    const selection = document.getSelection();\n    if (!selection) {\n      return;\n    }\n\n    const range = selection.getRangeAt(0);\n    const startContainer = range.startContainer;\n\n    if (startContainer.parentElement instanceof HTMLElement) {\n      this.handleFormattingExecCommand('fontSize', false, '7');\n      const fonts = this.body.querySelectorAll('font');\n      Array.from(fonts).forEach((font) => {\n        if (font.getAttribute('size') === '7') {\n          font.removeAttribute('size');\n          font.style.fontSize = value !== ''\n            ? `${value}px`\n            : '';\n        }\n      });\n\n      this.handleChangeDebounced(this.body.innerHTML);\n      this.focus();\n    }\n  }\n\n  handleFontColorSelect = (value: string) => {\n    this.handleFormattingExecCommand('foreColor', false, value);\n\n    this.handleChangeDebounced(this.body.innerHTML);\n    this.focus();\n  }\n\n  handleFontColorReset = () => {\n    this.handleFormattingExecCommand('removeFormat', false, 'foreColor');\n    this.handleChangeDebounced(this.body.innerHTML);\n    this.focus();\n  }\n\n  handleBodyRef = (ref: HTMLDivElement) => {\n    this.body = ref;\n  }\n\n  focus = (selectFirstPlaceholder?: boolean, selectLastPlaceholder?: boolean) => {\n    if (this.body) {\n      const setFocusTimeout = (callback?: () => void) => {\n        this.timeout = global.setTimeout(\n          () => {\n            // Selects the end of the document when focusing\n            this.body.focus();\n\n            // NOTE(SHIN): Specialized focus handler for move to BCC\n            const bccSelector = document.querySelector('.pm-bcc-thx');\n            if (bccSelector) {\n              document.execCommand('selectAll', false);\n              document.getSelection()?.collapseToEnd();\n            }\n\n            if (callback) {\n              callback();\n            }\n          },\n          0,\n        );\n      };\n      clearTimeout(this.timeout);\n\n      if (selectFirstPlaceholder || selectLastPlaceholder) {\n        const templateVariables = this.ref && this.ref.getElementsByClassName('data-pm-var') || [];\n        if (selectFirstPlaceholder) {\n          this.selectedPlaceholderIndex = 0;\n        } else {\n          this.selectedPlaceholderIndex = templateVariables.length ?\n            templateVariables.length - 1 : undefined;\n        }\n\n        if (this.selectedPlaceholderIndex !== undefined) {\n          const variables = Array.from(templateVariables) as HTMLElement[];\n          setFocusTimeout(() =>\n            this.selectElement(variables[this.selectedPlaceholderIndex!]),\n          );\n        }\n      } else {\n        setFocusTimeout();\n      }\n    }\n  }\n\n  selectElement = (element: HTMLElement) => {\n    const sel = window.getSelection();\n    const range = document.createRange();\n    if (sel && range) {\n      range.setStartBefore(element);\n      range.setEndAfter(element);\n      sel.removeAllRanges();\n      sel.addRange(range);\n    }\n  }\n\n  // Removes the attachment id from the draft by removing HTML then calls update\n  handleCloudAttachmentRemove = (id: string) => {\n    const { onAttachmentRemove } = this.props;\n    const element = this.body && this.body.querySelector(`div[data-pm-attachment-id=\"${id}\"]`);\n    if (element && element.parentElement) {\n      element.parentElement.removeChild(element);\n      this.handleChangeDebounced(this.body.innerHTML);\n      if (onAttachmentRemove) {\n        onAttachmentRemove(id);\n      }\n    }\n  }\n\n  handleBlur = () => {\n    this.sanitizeResizeHandlers();\n  }\n\n  // TODO(SHIN): Clicking outside will clear range unnecessarily\n  handleClickOutside = () => {\n    this.setState({ focus: false }, () => {\n\n      // Sanitize out any resizing elements\n      this.sanitizeResizeHandlers();\n\n      /// Removes selection if still in ContentEditable\n      if (window.getSelection) {\n        const sel = window.getSelection();\n        if (sel && sel.containsNode(this.ref, true)) {\n          sel.removeAllRanges();\n\n          // NOTE(SHIN): Blur the body so we get any re-focus events\n          // Fixes Grammarly cursor reset issue\n          this.body?.blur();\n        }\n      }\n\n      this.handleHide();\n    });\n  }\n\n  // Removes resize component upon completion of resize\n  handleResizeStop: ResizeCallback = (e: MouseEvent|TouchEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n    this.sanitizeResizeHandlers();\n  }\n\n  // Prevents click handler for firing for resize events\n  handleResizeStart: ResizeStartCallback = (e: React.MouseEvent<any>) => {\n    e.stopPropagation();\n    e.preventDefault();\n  }\n\n  // Wraps HTML image element with resize.\n  handleWrapImageWithResize = (element: HTMLImageElement) => {\n    // Do not wrap if body is not contenteditable\n    if (this.body && !this.body.isContentEditable) {\n      return;\n    }\n\n    // If parent is resize handler, then do not do anything\n    if (element.parentElement && element.parentElement.className &&\n      element.parentElement.className.startsWith('pm-resizable-image-')) {\n      return;\n    }\n\n    // If any other resize handlers are shown, then clean those out.\n    if (document.querySelector('.pm-resizable-image-container')) {\n      this.sanitizeResizeHandlers();\n    }\n\n    // Create a wrapped parent that is inline block to contain the image and render comonent\n    const wrappedParent = document.createElement('div');\n    wrappedParent.style.display = 'inline-block';\n    wrappedParent.style.height = element.style.height;\n    wrappedParent.style.width = element.style.width;\n    wrappedParent.style.maxHeight = element.style.maxHeight;\n    wrappedParent.style.maxWidth = element.style.maxWidth;\n    if (element.parentElement) {\n      element.parentElement.insertBefore(wrappedParent, element);\n      wrappedParent.appendChild(element);\n    }\n\n    const handleStyles = {\n      width: '8px',\n      height: '8px',\n      borderRadius: '1px',\n      backgroundColor: '#00aaff',\n    };\n\n    const resizableComponent = (\n      <Resizable\n        className=\"pm-resizable-image-container\"\n        handleClasses={{\n          bottomRight: 'pm-resizable-image-handle',\n          topLeft: 'pm-resizable-image-handle',\n          bottomLeft: 'pm-resizable-image-handle',\n          topRight: 'pm-resizable-image-handle',\n        }}\n        handleStyles={{\n          bottomRight: handleStyles,\n          bottomLeft: handleStyles,\n          topRight: handleStyles,\n          topLeft: handleStyles,\n        }}\n        defaultSize={{\n          width: element.width,\n          height: element.height,\n        }}\n        style={{\n          display: 'inline-block',\n        }}\n        lockAspectRatio\n        onResizeStart={this.handleResizeStart}\n        onResizeStop={this.handleResizeStop}\n      >\n        <img\n          id={element.id}\n          src={element.src}\n          data-pm-attachment-id={element.getAttribute('data-pm-attachment-id')}\n          data-pm-template-id={element.getAttribute('data-pm-template-id')}\n          style={{\n            width: '100%',\n          }}\n        />\n      </Resizable>\n    );\n\n    // Render wrapped resize and remove all selections\n    ReactDOM.render(\n      resizableComponent,\n      wrappedParent,\n      () => {\n        const selection = document.getSelection();\n        if (selection) {\n          const resizeElement = document.querySelector('.pm-resizable-image-container');\n          if (resizeElement) {\n            resizeElement.setAttribute('contenteditable', 'false');\n          }\n          selection.removeAllRanges();\n        }\n      },\n    );\n  }\n\n  // Strips out Resize Component from DOM or passed container element\n  sanitizeResizeHandlers = (container?: HTMLElement) => {\n    let update = false;\n    const elementToUpdate = (container || this.body);\n    const allElements = elementToUpdate.querySelectorAll('.pm-resizable-image-container');\n    Array.from(allElements).forEach((element) => {\n      if (!(element instanceof HTMLElement)) {\n        return;\n      }\n\n      // Create replacment node for the resizble elements\n      // const node = FakeDOM().createElement('div');\n      const newImg = FakeDOM().createElement('img');\n      const foundImage = element.querySelector('img');\n      const parent = element.parentElement;\n\n      // Replace contents with replacement node and remove the resizable component\n      if (element && parent) {\n        update = true;\n        if (foundImage) {\n          newImg.src = foundImage.src;\n          newImg.id = foundImage.id;\n          newImg.setAttribute(\n            'data-pm-attachment-id',\n            foundImage.getAttribute('data-pm-attachment-id') || '',\n          );\n          newImg.setAttribute(\n            'data-pm-template-id',\n            foundImage.getAttribute('data-pm-template-id') || '',\n          );\n          newImg.style.maxWidth = foundImage.style.maxWidth;\n          if (element.style.width && parseInt(element.style.width, 10)) {\n            newImg.width = parseInt(element.style.width, 10);\n          }\n\n          if (element.style.height && parseInt(element.style.height, 10)) {\n            newImg.height = parseInt(element.style.height, 10);\n          }\n          newImg.style.width = '100%';\n          newImg.style.height = '100%';\n          newImg.style.maxWidth = element.style.width;\n          newImg.style.maxHeight = element.style.height;\n        }\n\n        if (element) {\n          parent.outerHTML = newImg.outerHTML;\n        }\n      }\n    });\n\n    if (update) {\n      this.handleChangeDebounced(elementToUpdate.innerHTML);\n    }\n  }\n\n  handleClick = (e: React.SyntheticEvent<HTMLElement>) => {\n    const { variablePopoverPosition } = this.state;\n    const { draft } = this.props;\n    const target = e.target as HTMLElement;\n    const parentElement = target.parentElement;\n\n    // Wrap resize handler if clicked on an inline image\n    if (target && target.id && target.id.startsWith('pm-inline') &&\n    target.className !== 'pm-inline-loading') {\n      const imageTarget = target as HTMLImageElement;\n      this.handleWrapImageWithResize(imageTarget);\n      e.stopPropagation();\n      e.preventDefault();\n      return;\n    }\n\n    // Remove handles if clicked on a non image\n    if (target && !(target instanceof HTMLImageElement)) {\n      this.sanitizeResizeHandlers();\n    }\n\n    // Handle attachment Removes on Cloud Attachment\n    if (parentElement &&\n      [target.className, parentElement.className].indexOf('attachment-remove-button') > -1\n    ) {\n      // We set the container dependent on which tag has the attachment remove\n      // since you can be clicking the SVG instead of the button\n      const cloudAttachmentContainer = target.className === 'attachment-remove-button'\n        ? parentElement\n        : parentElement.parentElement;\n      if (cloudAttachmentContainer) {\n        const attachmentId = cloudAttachmentContainer.getAttribute('data-pm-attachment-id');\n        if (attachmentId) {\n          this.handleCloudAttachmentRemove(attachmentId);\n        }\n      }\n    }\n\n    // Handle link preview buttons\n    if (target.parentElement && target.parentElement.parentElement) {\n      const grandparent = target.parentElement.parentElement;\n      const parent = target.parentElement;\n      if (grandparent.className === 'pm-lp-close-buttons') {\n\n        // Id of link preview element\n        const id = last(parent.className.split('-'));\n        const element = id && document.querySelector(`[data-pm-link-preview-id=\"${id}\"]`);\n\n        // Close Buttons\n        if (parent.className && parent.className.startsWith('close')) {\n          if (element && element.parentElement) {\n            element.parentElement.removeChild(element);\n            this.handleChangeDebounced(this.body.innerHTML);\n          }\n        } else if (parent.className && parent.className.startsWith('link-only')) { // Unlinking\n          if (element) {\n            const href = element.getAttribute('data-pm-link-preview-url');\n            const anchorNode = document.createElement('a');\n            if (href) {\n              anchorNode.setAttribute('href', href);\n              anchorNode.innerHTML = href;\n              element.outerHTML = anchorNode.outerHTML;\n            }\n          }\n        }\n      }\n    }\n\n    // HACK(SHIN): Allow for clicking on anchor tags to open in url since standard anchor\n    // tag behavior does not work when contenteditable\n    const anchorElement = target.tagName === 'A'\n      ? target\n      : target.parentElement && target.parentElement.tagName === 'A' && target.parentElement;\n    if (anchorElement) {\n      const url = anchorElement.getAttribute('href');\n\n      // HACK(SHIN): See if we can handle blobs elsewhere\n      if (url && !url.startsWith('blob')) {\n        window.open(url, '_blank');\n        e.preventDefault();\n        e.stopPropagation();\n      }\n      return;\n    }\n\n    // If in draft, remove placeholder styling on click\n    if (target.className === 'data-pm-var' && draft) {\n      target.removeAttribute('class');\n      target.removeAttribute('contenteditable');\n      target.removeAttribute('style');\n      const sel = window.getSelection();\n      const range = document.createRange();\n      if (sel && range) {\n        range.setStartBefore(target);\n        range.setEndAfter(target);\n        sel.removeAllRanges();\n        sel.addRange(range);\n      }\n    }\n\n    if (target.dataset && target.dataset.pmDeleteCalendarInvite) {\n      const node = this.ref && this.ref.getElementsByClassName('pm-calendar-invite')[0];\n      if (node && node.parentNode) {\n        node.parentNode.removeChild(node);\n        this.handleChangeDebounced(this.body.innerHTML);\n      }\n    }\n\n    this.selectedPlaceholderIndex = undefined;\n    this.setState({\n      variablePopoverPosition: this.getPopoverPosition() || variablePopoverPosition,\n    });\n  }\n\n  handleVariableSelect = (value: string) => {\n    const style = 'color: #444444; background-color: rgba(255, 223, 50, 0.25); '\n    + 'border-radius: 2px;' +\n      'padding: 1px 4px; font-weight: 500; cursor: pointer;';\n    const spanNode = document.createElement('span');\n    spanNode.setAttribute('style', style);\n    spanNode.setAttribute('contenteditable', 'false');\n    spanNode.className = 'data-pm-var';\n    spanNode.innerHTML = value;\n\n    const selection = document.getSelection();\n    const range = selection && selection.getRangeAt(0);\n\n    // Insert Node and call save\n    if (range) {\n      range.insertNode(spanNode);\n      if (selection) {\n        selection.collapseToEnd();\n      }\n      this.handleChangeDebounced(this.getBody());\n    }\n  }\n\n  handleFocus = () => {\n    this.setState({ focus: true });\n  }\n\n  addCalendarInvite = (event: DraftCalendarInvite) => {\n    const { getContact } = this.props;\n    const contacts = getContact ? event.recipients.map(r => getContact(parseAddress(r).email)) : [];\n\n    this.injectElement(\n      <CalendarInvite event={event} noBranding={!!this.props.noBranding} contacts={contacts} />,\n      true,\n    );\n  }\n\n  replaceCalendarInvite = (event: DraftCalendarInvite) => {\n    const { getContact } = this.props;\n    const contacts = getContact ? event.recipients.map(r => getContact(parseAddress(r).email)) : [];\n    const node = this.ref && this.ref.getElementsByClassName('pm-calendar-invite')[0];\n\n    if (node) {\n      ReactDOM.render(\n        <CalendarInvite event={event} noBranding={!!this.props.noBranding} contacts={contacts} />,\n        node.parentElement,\n        () => {\n          this.handleChangeDebounced(this.body.innerHTML);\n        },\n      );\n    }\n  }\n\n  // Update body directly via DOM and signal onChange event\n  updateSignature = (signature: string) => {\n    const signatureElement = this.body.querySelector('#psignature');\n    if (signatureElement) {\n      const fakeNode = FakeDOM().createElement('div');\n      fakeNode.innerHTML = signature;\n\n      // Replace signature\n      signatureElement.outerHTML = fakeNode.innerHTML;\n      const textContent = fakeNode.textContent;\n\n      // Remove cases where sent from polymail is in signature\n      if (textContent && textContent.toLowerCase().includes('polymail')) {\n        const sfpNode = this.body.querySelector('.pm-sfp');\n        if (sfpNode && sfpNode.parentElement) {\n          sfpNode.parentElement.removeChild(sfpNode);\n        }\n      }\n    }\n\n    this.handleChangeDebounced(this.body.innerHTML);\n  }\n\n  updateSentFromPolymail = (enabled: boolean) => {\n    if (!enabled) {\n      return;\n    }\n\n    if (!this.body) {\n      return;\n    }\n\n    // If SFP exists don't do anything\n    const sfpExists = this.body.querySelector('.pm-sfp');\n    if (!!sfpExists) {\n      return;\n    }\n\n    // Handles proper insertion of sent from polymail\n    const accountSignature = this.body.querySelector('#psignature');\n    const signatureText = accountSignature && accountSignature.textContent;\n    if (signatureText && !signatureText.toLowerCase().includes('polymail')) {\n      const sfpDiv = generateSentFromPolymailHtmlDiv();\n      if (accountSignature && accountSignature.parentElement) {\n        accountSignature.insertAdjacentElement('afterend', sfpDiv);\n      } else {\n        this.body.appendChild(sfpDiv);\n      }\n      this.handleChangeDebounced(this.body.innerHTML);\n    }\n  }\n\n  // Getter to identify if attachment or meta exists in body\n  attachmentExistsInBody = (id: string) => {\n    return !!this.body.querySelector(`[data-pm-attachment-id=\"${id}\"]`);\n  }\n\n  replaceAttachment = (attachment: Attachment) => {\n    if (attachment.cloud) {\n      const element = (\n        <CloudAttachmentCell\n          id={attachment.id}\n          iconUrl={filenameIconUrl(attachment.filename)}\n          cloudUrl={attachment.cloudUrl}\n          filename={attachment.filename}\n          onDelete={this.handleCloudAttachmentRemove}\n          length={attachment.length}\n          progress={1}\n        />);\n      const id = `data-pm-attachment-id-${attachment.id}`;\n      this.replaceElement(id, element);\n    }\n\n    // Handles replacing inline image\n    if (attachment.inline) {\n      const image = new Image();\n      image.src = attachment.cloudUrl;\n\n      // Handles optimistic forward cases for inline attachments\n      if (attachment.originalCid) {\n        const strippedCid = attachment.originalCid.replace('<', '').replace('>', '');\n        const original = document.querySelector(`[src=\"cid:${strippedCid}\"]`);\n        if (original) {\n          original.setAttribute('id', `pm-inline-id-${attachment.id}`);\n          original.setAttribute('src', attachment.cloudUrl);\n          original.setAttribute('data-pm-attachment-id', attachment.id);\n        }\n      }\n\n      image.onload = () => {\n        const id = `pm-inline-id-${attachment.id}`;\n        const found = document.getElementById(id);\n        const element = (\n          <img\n            id={`pm-inline-id-${attachment.id}`}\n            src={attachment.cloudUrl}\n            data-pm-attachment-id={attachment.id}\n            style={{\n              maxWidth: found && found.style.maxWidth || '100%',\n              width: found && found.style.width,\n              height: found && found.style.height,\n              maxHeight: found && found.style.maxHeight,\n            }}\n          />\n        );\n\n        this.replaceElement(id, element);\n      };\n    }\n  }\n\n  // TODO(SHIN): Implement progress when available\n  replaceAttachmentMeta = (meta: AttachmentMeta, error?: Error) => {\n    const file: any | undefined = meta.file;\n    const src = meta.cloudUrl ||\n      file && (file.preview || file.webkitRelativePath) ||\n      '';\n    const filename = meta.filename || meta.file && meta.file.name || '';\n    const length = meta.length || meta.file && meta.file.size || 1000;\n    if (meta.cloud) {\n      const element = (\n        <CloudAttachmentCell\n          id={meta.attachment}\n          progress={meta.progress || 0}\n          iconUrl={filenameIconUrl(filename)}\n          cloudUrl={src}\n          filename={filename}\n          onDelete={this.handleCloudAttachmentRemove}\n          length={length}\n          error={error}\n          isMeta\n        />);\n      const id = `data-pm-attachment-id-${meta.attachment}`;\n      this.replaceElement(id, element);\n    }\n\n    // HACK(SHIN): Set explicit width for 100% to prevent composer truncate when scrollbars\n    // always showing\n    // HACK(SHIN): Only replace attachment meta updates when progress === 1 and image is\n    // still loading. fixes issue where replacements were happening to finished attachments\n    // in SequenceStageMessage (May want to rethink if we bring progress UI for inline attachments)\n    // HACK(SHIN): Replacing when attachmentMeta changes\n    if (meta.inline) {\n      const image = new Image();\n      const uploading = (meta.progress || 0) < 1;\n      image.src = src;\n      image.onload = () => {\n        const element = (\n          <img\n            id={`pm-inline-id-${meta.attachment}`}\n            src={src}\n            data-pm-attachment-id={meta.attachment}\n            className={uploading ? 'pm-inline-loading' : undefined}\n            style={{\n              maxWidth: '100%',\n            }}\n          />\n        );\n        const id = `pm-inline-id-${meta.attachment}`;\n        const check = document.getElementById(id);\n        if (!check) {\n          return;\n        }\n        const checkSrc = (check as HTMLImageElement).src;\n\n        // HACK(SHIN): Handler replacing inline image for blob url changes\n        if (checkSrc && checkSrc !== src) {\n          this.replaceElement(id, element);\n        }\n\n        // Do not do anything if progress is not equal to one\n        if (meta.progress !== 1) {\n          return;\n        }\n\n        // Only replace if element is still loading\n        if (check && check.className === 'pm-inline-loading') {\n          this.replaceElement(id, element);\n        }\n      };\n    }\n  }\n\n  // Update body directly via DOM and signal onChange event\n  injectCloudAttachmentMeta = (meta: AttachmentMeta, error?: Error) => {\n    const file: any | undefined = meta.file;\n    const src = meta.cloudUrl ||\n      file && (file.preview || file.webkitRelativePath) ||\n      '';\n\n    const CloudElement = (\n      <CloudAttachmentCell\n        id={meta.attachment}\n        progress={meta.progress || 0}\n        iconUrl={filenameIconUrl(meta.file && meta.file.name || '')}\n        cloudUrl={src}\n        filename={meta.file && meta.file.name || ''}\n        onDelete={this.handleCloudAttachmentRemove}\n        length={meta.file && meta.file.size || 1000}\n        error={error}\n        isMeta\n      />);\n\n    this.injectElement(CloudElement);\n  }\n\n  // Update body directly via DOM and signal onChange event\n  // HACK(SHIN): Set explicit width for 100% to prevent composer truncate when scrollbars\n  // always showing\n  injectInlineAttachmentMeta = (meta: AttachmentMeta) => {\n    const isDraft = this.props.draft !== undefined;\n    const file: any | undefined = meta.file;\n    const src = meta.cloudUrl ||\n      file && (file.preview || file.webkitRelativePath || URL.createObjectURL(file)) ||\n      '';\n    const InlineImage = (\n        <img\n          className=\"pm-inline-loading\"\n          id={`pm-inline-id-${meta.attachment}`}\n          src={src}\n          data-pm-attachment-id={meta.attachment}\n          data-pm-template-id={isDraft && this.props.template}\n          style={{\n            maxWidth: '100%',\n          }}\n        />\n    );\n\n    // HACK(SHIN): Sets explicit width to outer container to prevent composer truncate\n    this.injectElement(InlineImage);\n  }\n\n  // Update body directly via DOM and signal onChange event\n  injectSignatureImageAttachmentMeta = (meta: AttachmentMeta) => {\n    const file: any | undefined = meta.file;\n    const src = meta.cloudUrl ||\n      file && (file.preview || file.webkitRelativePath) ||\n      '';\n    const InlineImage = (\n      <img\n        id={`pm-inline-id-${meta.attachment}`}\n        src={src}\n        data-pm-signature-image-id={meta.attachment}\n        data-pm-account-id={meta.resourceId}\n        style={{\n          maxWidth: '100%',\n        }}\n      />\n    );\n\n    this.injectElement(InlineImage);\n  }\n\n  // HACK(SHIN): Set explicit width for 100% to prevent composer truncate when scrollbars\n  // always showing\n  replaceSignatureImageAttachmentMeta = (meta: AttachmentMeta) => {\n    const file: any | undefined = meta.file;\n    const src = meta.cloudUrl ||\n      file && (file.preview || file.webkitRelativePath) ||\n      '';\n    const element = (\n      <img\n        id={`pm-inline-id-${meta.attachment}`}\n        src={src}\n        data-pm-signature-image-id={meta.attachment}\n        data-pm-account-id={meta.resourceId}\n        style={{\n          maxWidth: '100%',\n        }}\n      />\n    );\n    const id = `pm-inline-id-${meta.attachment}`;\n    this.replaceElement(id, element);\n  }\n\n  replaceSignatureImageAttachment = (attachment: Attachment) => {\n    const image = new Image();\n    image.src = attachment.cloudUrl;\n    image.onload = () => {\n      const element = (\n        <img\n          id={`pm-inline-id-${attachment.id}`}\n          src={attachment.cloudUrl}\n          data-pm-signature-image-id={attachment.id}\n          style={{\n            maxWidth: '100%',\n          }}\n        />\n      );\n      const id = `pm-inline-id-${attachment.id}`;\n      this.replaceElement(id, element);\n\n      // Handle attachment replace by updating body\n      this.handleChangeDebounced(this.body.innerHTML);\n    };\n  }\n\n  replaceElement = (id: string, element: JSX.Element) => {\n    // Creates node for element renders and replaces\n    const containerDiv = FakeDOM().createElement('div');\n    ReactDOM.render(\n      element,\n      containerDiv,\n      () => { // Callback to save changes\n        // Replaces element\n        const found = this.body && this.body.querySelector(`#${id}`);\n        if (found && found.parentElement) {\n          found.outerHTML = containerDiv.innerHTML;\n        }\n\n        ReactDOM.unmountComponentAtNode(containerDiv);\n        this.handleChangeDebounced(this.body.innerHTML);\n      });\n  }\n\n  injectElement = (element: JSX.Element, atEnd: boolean = false) => {\n    // Attachment Node\n    const node = document.createElement('div');\n    const selection = window.getSelection();\n\n    // New line node\n    const newLine = document.createElement('div');\n    newLine.innerHTML = '<br>';\n\n    ReactDOM.render(element, node, () => {\n      const copyNode = node.cloneNode(true);\n      const anchorNode = selection!.anchorNode;\n      const composeParentSelected = anchorNode && anchorNode === this.ref;\n      const rangeExists = selection && selection.rangeCount > 0;\n\n      // Check for range intersections where selection can be inside an attachment\n      const elements = document.querySelectorAll('.compose-attachment-cloud-container');\n      let intersectedAttachment: HTMLElement|undefined;\n      if (elements && rangeExists && elements.length > 0) {\n        Array.from(elements).forEach((el: HTMLElement) => {\n          if (selection!.containsNode(el, true)) {\n            intersectedAttachment = el;\n          }\n        });\n      }\n\n      // Inject cloud attachment\n      if (!atEnd &&\n        rangeExists &&\n        document.activeElement === this.body &&\n        !composeParentSelected\n      ) {\n        const range = selection!.getRangeAt(0);\n\n        if (intersectedAttachment) {\n          range.setEndAfter(intersectedAttachment);\n          range.setStartAfter(intersectedAttachment);\n        }\n\n        range.insertNode(copyNode);\n        selection!.collapseToEnd();\n\n      } else {\n        const signatureElement = this.body.querySelector('#psignature');\n        if (signatureElement && signatureElement.parentElement) {\n          signatureElement.parentElement.insertBefore(copyNode, signatureElement);\n          signatureElement.parentElement.insertBefore(newLine, signatureElement);\n        } else {\n          this.body.appendChild(copyNode);\n        }\n      }\n\n      ReactDOM.unmountComponentAtNode(node);\n\n      this.handleChangeDebounced(this.body.innerHTML);\n    });\n  }\n\n  handleChange = (html: string) => {\n    const { onChange } = this.props;\n    if (onChange && this.body) {\n      const doc = FakeDOM().createElement('div');\n      doc.innerHTML = this.body.innerHTML;\n      const closeCont = doc.getElementsByClassName('pm-cal-invite-close-container')[0];\n      if (closeCont) {\n        closeCont.innerHTML = '';\n      }\n\n      // Sanitize any resize elements out\n      this.sanitizeResizeHandlers(doc);\n\n      onChange(doc.innerHTML);\n    }\n  }\n\n  // Returns body of contenteditable\n  getBody = () => {\n    const doc = FakeDOM().createElement('div');\n    doc.innerHTML = this.body.innerHTML;\n    const closeCont = doc.getElementsByClassName('pm-cal-invite-close-container')[0];\n    if (closeCont) {\n      closeCont.innerHTML = '';\n    }\n\n    // Sanitize any resize elements out\n    this.sanitizeResizeHandlers(doc);\n    return doc.innerHTML;\n  }\n\n  getComputedStyleProperty = (el: HTMLElement, propName: string): string | undefined => {\n    if (window.getComputedStyle) {\n      return window.getComputedStyle(el)[propName];\n    }\n\n    if (el.style) {\n      return el.style[propName];\n    }\n\n    return;\n  }\n\n  getSelectionStyleProperty = (propName: string): string | undefined => {\n    let containerEl;\n    if (window.getSelection) {\n      const sel = window.getSelection();\n      if (sel && sel.rangeCount) {\n        const range = sel.getRangeAt(0);\n        containerEl = range.commonAncestorContainer;\n\n        // Make sure we have an element rather than a text node\n        if (containerEl.nodeType === 3) {\n          containerEl = containerEl.parentNode;\n        }\n      }\n\n      if (containerEl instanceof HTMLElement) {\n        return this.getComputedStyleProperty(containerEl, propName);\n      }\n    }\n\n    return;\n  }\n\n  getSelectionStyleColorProperty = (propName: string): string | undefined => {\n    let containerEl;\n    if (window.getSelection && this.body) {\n      const sel = window.getSelection();\n      if (sel && sel.rangeCount) {\n        const range = sel.getRangeAt(0);\n        containerEl = range.commonAncestorContainer;\n\n        // Make sure we have an element rather than a text node\n        if (containerEl.nodeType === 3) {\n          containerEl = containerEl.parentNode;\n        }\n      }\n\n      // Try to identify differences in color\n      let matchedColor: string|undefined;\n      if (containerEl instanceof HTMLElement) {\n        matchedColor = this.getComputedStyleProperty(containerEl, propName);\n      }\n      const bodyDefaults = this.getComputedStyleProperty(this.body, propName);\n      if (matchedColor === bodyDefaults) {\n        return 'default';\n      }\n\n      return matchedColor;\n    }\n\n    return;\n  }\n\n  pasteCalendarUrl = (url: string) => {\n    if (!this.state.selection) {\n      const sel = window.getSelection();\n      if (sel && sel.rangeCount) {\n        this.setState(\n          {\n            selectionCenter: this.getCenter(),\n            lastSelectedRange: sel.getRangeAt(0),\n          },\n          () => this.handleHrefSubmit('', url),\n        );\n      }\n      return;\n    }\n\n    this.handleHrefSubmit('', url);\n  }\n\n  handleHide = () => {\n    this.setState(\n      {\n        lastSelectedRange: undefined,\n        selection: false,\n        forceHyperlinkPopup: false,\n      },\n    );\n  }\n\n  handleRemoveFormatting = () => {\n    document.execCommand('removeFormat');\n  }\n\n  restoreCursorPosition = () => {\n    const selection = window.getSelection();\n    if (selection && this.state.oldContentEditablePosition) {\n      selection.removeAllRanges();\n      selection.addRange(this.state.oldContentEditablePosition);\n    }\n\n    this.setState({ oldContentEditablePosition: undefined });\n  }\n\n  saveCursorPosition = () => {\n    const selection = window.getSelection();\n    if (selection && !!selection.rangeCount) {\n      this.setState({ oldContentEditablePosition: selection.getRangeAt(0) });\n    }\n  }\n\n  handleKeyUp = (e: React.KeyboardEvent<HTMLDivElement>) => {\n    const compose = e.currentTarget;\n    const divs = compose.getElementsByTagName('div');\n    let div: HTMLDivElement;\n    let text;\n    let lastDivRightToLeft = false;\n\n    // tslint:disable-next-line:prefer-for-of\n    for (let i = 0; i < divs.length; i += 1) {\n      div = divs[i];\n      if (div.parentNode !== compose || div.getAttribute('data-pm-history')) {\n        continue;\n      }\n\n      text = (div.textContent || div.innerText || '').trim();\n\n      if (text && isRightToLeftChar(text.charCodeAt(0))) {\n        div.setAttribute('dir', 'rtl');\n        lastDivRightToLeft = true;\n      } else if (!text && lastDivRightToLeft) {\n        div.setAttribute('dir', 'rtl');\n        lastDivRightToLeft = true;\n      } else {\n        div.removeAttribute('dir');\n        lastDivRightToLeft = false;\n      }\n    }\n  }\n\n  // Moves cursor to specified mouse position\n  moveCursorToPosition = (position: Point) => {\n\n    // Takes element at cursor position and then moves selection to that point if contained in body\n    const element = document.elementFromPoint(position.x, position.y);\n    if (this.body && element && this.body.contains(element)) {\n\n      // Do not move cursor if point was contained in a signature\n      const signature = this.body.querySelector('#psignature');\n      if (signature && signature.contains(element)) {\n        return;\n      }\n\n      const selection = document.getSelection();\n      if (selection && !!selection.rangeCount) {\n        const range = selection.getRangeAt(0);\n        range.selectNode(element);\n        range.collapse(true);\n      }\n    }\n  }\n\n  isEditing = () => {\n    return this.focus || document.activeElement?.className === 'compose-editable';\n  }\n\n  render() {\n    const { variables } = this.props;\n    const {\n      selectionCenter,\n      focus,\n      variablePopoverPosition,\n      html,\n      forceHyperlinkPopup,\n      lastSelectedRange,\n    } = this.state;\n\n    return (\n      <div\n        className=\"content-editable\"\n        tabIndex={1}\n        ref={this.handleRef}\n        onClick={this.handleClick}\n        onBlur={this.handleBlur}\n      >\n        <FormattingBar\n          onOptionSelect={this.handleFormatOption}\n          center={selectionCenter}\n          onHrefSubmit={this.handleHrefSubmit}\n          onFontSelect={this.handleFontSelect}\n          onFontSizeSelect={this.handleFontSizeSelect}\n          onFontColorSelect={this.handleFontColorSelect}\n          onFontColorReset={this.handleFontColorReset}\n          selectedText={lastSelectedRange && lastSelectedRange.toString() || ''}\n          bolded={focus && !!document.queryCommandState && document.queryCommandState('bold')\n            ? true : undefined}\n          italicized={focus && !!document.queryCommandState && document.queryCommandState('italic')\n            ? true : undefined}\n          underlined={focus && !!document.queryCommandState &&\n            document.queryCommandState('underline') ? true : undefined}\n          orderedList={focus && !!document.queryCommandState\n            && document.queryCommandState('insertOrderedList') ? true : undefined}\n          unorderedList={focus && !!document.queryCommandState\n            && document.queryCommandState('insertUnorderedList') ? true : undefined}\n          forceHyperlink={forceHyperlinkPopup}\n          selectedFontSize={this.getSelectionStyleProperty('fontSize')}\n          selectedFontFamily={this.getSelectionStyleProperty('fontFamily')}\n          selectedFontColor={this.getSelectionStyleColorProperty('color')}\n          onHide={this.handleHide}\n          onRemoveFormatting={this.handleRemoveFormatting}\n        />\n        {variables && <VariablePopover\n          top={variablePopoverPosition.y}\n          right={variablePopoverPosition.x}\n          variables={variables}\n          onSelect={this.handleVariableSelect}\n          show={focus}\n        />}\n        <div\n          onKeyDown={this.handleHotkey}\n          onKeyUp={this.handleKeyUp}\n          className=\"compose-editable\"\n          ref={this.handleBodyRef}\n          contentEditable={!this.props.disabled}\n          dangerouslySetInnerHTML={{ __html: html }}\n          onInput={this.onChange}\n          onPaste={this.onPaste}\n          onSelect={this.onSelect}\n          onFocus={this.handleFocus}\n        />\n      </div>\n    );\n  }\n}\n"]}]}