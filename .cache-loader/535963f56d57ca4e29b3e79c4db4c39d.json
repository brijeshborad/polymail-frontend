{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/CommandControl/index.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/CommandControl/index.ts","mtime":1675280254001},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IENvbW1hbmRDb250cm9sIGZyb20gJy4vQ29tbWFuZENvbnRyb2wnOwppbXBvcnQgeyBjb25uZWN0IH0gZnJvbSAncmVhY3QtcmVkdXgnOwppbXBvcnQgeyBjb21tYW5kQ29udHJvbEhpZGUgfSBmcm9tICdAc3JjL2R1Y2tzL2NvbW1hbmRDb250cm9sJzsKdmFyIFBPVEVOVElBTF9MQUJFTFMgPSBbJ2hlcmUnLCAnaGVsbG8nLCAnYmx1ZScsICd5ZWxsb3cnLCAnb25ib2FyZGluZyddOwp2YXIgTEFCRUxTID0gW107CnZhciBtYXBTdGF0ZVRvUHJvcHMgPSBmdW5jdGlvbiAoc3RhdGUsIG93blByb3BzKSB7CiAgICByZXR1cm4gKHsKICAgICAgICBhY3Rpb246IHN0YXRlLmNvbW1hbmRDb250cm9sVHlwZSwKICAgICAgICBsYWJlbHM6IExBQkVMUywKICAgICAgICBwb3RlbnRpYWxMYWJlbHM6IFBPVEVOVElBTF9MQUJFTFMsCiAgICB9KTsKfTsKdmFyIG1hcERpc3BhdGNoVG9Qcm9wcyA9IGZ1bmN0aW9uIChkaXNwYXRjaCkgeyByZXR1cm4gKHsKICAgIG9uSGlkZTogZnVuY3Rpb24gKCkgeyByZXR1cm4gZGlzcGF0Y2goY29tbWFuZENvbnRyb2xIaWRlKHVuZGVmaW5lZCkpOyB9LAp9KTsgfTsKZXhwb3J0IGRlZmF1bHQgY29ubmVjdChtYXBTdGF0ZVRvUHJvcHMsIG1hcERpc3BhdGNoVG9Qcm9wcykoQ29tbWFuZENvbnRyb2wpOwo="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/CommandControl/index.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/CommandControl/index.ts"],"names":[],"mappings":"AAAA,OAAO,cAAwC,MAAM,kBAAkB,CAAC;AAGxE,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AAGtC,OAAO,EAAE,kBAAkB,EAAE,MAAM,2BAA2B,CAAC;AAE/D,IAAM,gBAAgB,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,YAAY,CAAC,CAAC;AAC3E,IAAM,MAAM,GAAa,EAAE,CAAC;AAC5B,IAAM,eAAe,GAAG,UAAC,KAAiB,EAAE,QAAe;IACzD,OAAA,CAAC;QACC,MAAM,EAAE,KAAK,CAAC,kBAAkB;QAChC,MAAM,EAAE,MAAM;QACd,eAAe,EAAE,gBAAgB;KAC1B,CAAA;AAJT,CAIS,CAAC;AAEZ,IAAM,kBAAkB,GAAG,UAAC,QAA8B,IAAoB,OAAA,CAAC;IAC7E,MAAM,EAAE,cAAM,OAAA,QAAQ,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,EAAvC,CAAuC;CACtD,CAAC,EAF4E,CAE5E,CAAC;AAEH,eAAe,OAAO,CAAC,eAAe,EAAE,kBAAkB,CAAC,CAAC,cAAc,CAAC,CAAC","sourcesContent":["import CommandControl, { Props, DispatchProps } from './CommandControl';\nimport { Dispatch } from 'redux';\n\nimport { connect } from 'react-redux';\nimport { StoreState } from '@src/types';\n\nimport { commandControlHide } from '@src/ducks/commandControl';\n\nconst POTENTIAL_LABELS = ['here', 'hello', 'blue', 'yellow', 'onboarding'];\nconst LABELS: string[] = [];\nconst mapStateToProps = (state: StoreState, ownProps: Props): Props =>\n  ({\n    action: state.commandControlType,\n    labels: LABELS,\n    potentialLabels: POTENTIAL_LABELS,\n  } as any);\n\nconst mapDispatchToProps = (dispatch: Dispatch<StoreState>): DispatchProps => ({\n  onHide: () => dispatch(commandControlHide(undefined)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CommandControl);\n"]}]}