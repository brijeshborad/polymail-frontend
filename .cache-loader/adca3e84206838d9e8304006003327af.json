{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/css-loader/dist/cjs.js??ref--7-2!/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/sass-loader/dist/cjs.js??ref--7-3!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/Base/Toast/Toast.scss","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/Base/Toast/Toast.scss","mtime":1675280253988},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/styles/helpers.scss","mtime":1675280254121},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/styles/colors.scss","mtime":1675280254121},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/styles/typography.scss","mtime":1675280254121},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/styles/mixins.scss","mtime":1675280254121},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/css-loader/dist/cjs.js","mtime":1675365393897},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/sass-loader/dist/cjs.js","mtime":1675365391315}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIpKHRydWUpOwovLyBNb2R1bGUKZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsICIudG9hc3Qge1xuICBkaXNwbGF5OiBmbGV4O1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIGxlZnQ6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICBtYXgtd2lkdGg6IDYwMHB4O1xuICB3aWR0aDogZml0LWNvbnRlbnQ7XG4gIHRvcDogMjBweDtcbiAgcGFkZGluZzogOHB4IDE0cHg7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xuICBjb2xvcjogI2U3NGMzYztcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgei1pbmRleDogMTAxO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG4udGhlbWUtbGlnaHQgLnRvYXN0IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2U3NGMzYztcbiAgY29sb3I6ICNmZmZmZmY7XG4gIGJvcmRlcjogbm9uZTtcbn1cbi50aGVtZS1kYXJrIC50b2FzdCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlNzRjM2M7XG4gIGNvbG9yOiAjZmZmZmZmO1xuICBib3JkZXI6IG5vbmU7XG59XG4udG9hc3QgPiBzcGFuIHtcbiAgZmxleDogMTtcbiAgd2lkdGg6IDEwMCU7XG59XG4udG9hc3QgPiAuY2xvc2UtYnV0dG9uIHtcbiAgcGFkZGluZzogNHB4IDZweDtcbiAgbWFyZ2luLWxlZnQ6IDEwcHg7XG4gIHRyYW5zaXRpb246IDAuMnMgYmFja2dyb3VuZC1jb2xvciBlYXNlLWluLW91dDtcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xufVxuLnRoZW1lLWxpZ2h0IC50b2FzdCA+IC5jbG9zZS1idXR0b246aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWI2ZDYwO1xufVxuLnRoZW1lLWRhcmsgLnRvYXN0ID4gLmNsb3NlLWJ1dHRvbjpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlYjZkNjA7XG59XG4udG9hc3QgPiAuY2xvc2UtYnV0dG9uID4gc3ZnIHBhdGgge1xuICBzdHJva2U6ICNmZmZmZmY7XG59XG4udG9hc3QgPiAuY2xvc2UtYnV0dG9uID4gLmNsb3NlLWljb24ge1xuICB3aWR0aDogMTBweDtcbiAgaGVpZ2h0OiAxMHB4O1xufVxuXG4uY29uZmlybWF0aW9uLXRvYXN0LCAuaG90a2V5LXRvYXN0IHtcbiAgd2lkdGg6IGZpdC1jb250ZW50O1xuICBmb250LXNpemU6IDE0cHg7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG59XG4udGhlbWUtbGlnaHQgLmNvbmZpcm1hdGlvbi10b2FzdCwgLnRoZW1lLWxpZ2h0IC5ob3RrZXktdG9hc3Qge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDc5Y2VmO1xuICBjb2xvcjogI2ZmZmZmZjtcbiAgYm9yZGVyOiBub25lO1xufVxuLnRoZW1lLWRhcmsgLmNvbmZpcm1hdGlvbi10b2FzdCwgLnRoZW1lLWRhcmsgLmhvdGtleS10b2FzdCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwNzljZWY7XG4gIGNvbG9yOiAjZmZmZmZmO1xuICBib3JkZXI6IG5vbmU7XG59XG4uY29uZmlybWF0aW9uLXRvYXN0ID4gc3ZnIHBhdGgsIC5ob3RrZXktdG9hc3QgPiBzdmcgcGF0aCB7XG4gIGZpbGw6ICM0OWJhZmE7XG59XG4uY29uZmlybWF0aW9uLXRvYXN0ID4gc3ZnIGNpcmNsZSwgLmhvdGtleS10b2FzdCA+IHN2ZyBjaXJjbGUge1xuICBmaWxsOiAjZmZmZmZmO1xufVxuLmNvbmZpcm1hdGlvbi10b2FzdCA+IHNwYW4sIC5ob3RrZXktdG9hc3QgPiBzcGFuIHtcbiAgbWFyZ2luLWxlZnQ6IDEwcHg7XG59XG4udGhlbWUtbGlnaHQgLmNvbmZpcm1hdGlvbi10b2FzdCA+IHNwYW4sIC50aGVtZS1saWdodCAuaG90a2V5LXRvYXN0ID4gc3BhbiB7XG4gIGNvbG9yOiAjZmZmZmZmO1xufVxuLnRoZW1lLWRhcmsgLmNvbmZpcm1hdGlvbi10b2FzdCA+IHNwYW4sIC50aGVtZS1kYXJrIC5ob3RrZXktdG9hc3QgPiBzcGFuIHtcbiAgY29sb3I6ICNmZmZmZmY7XG59XG4uY29uZmlybWF0aW9uLXRvYXN0LmhpZGUtY2hlY2sgPiBzcGFuLCAuaG90a2V5LXRvYXN0LmhpZGUtY2hlY2sgPiBzcGFuIHtcbiAgbWFyZ2luLWxlZnQ6IHVuc2V0O1xufVxuLmNvbmZpcm1hdGlvbi10b2FzdCAuc2hvcnRjdXQtY29udGFpbmVyLCAuaG90a2V5LXRvYXN0IC5zaG9ydGN1dC1jb250YWluZXIge1xuICBtYXJnaW4tbGVmdDogNXB4O1xufVxuXG4uaG90a2V5LXRvYXN0IHtcbiAgdG9wOiA0MHB4O1xuICBwYWRkaW5nOiAxMHB4IDE0cHg7XG59XG4udGhlbWUtZGFyayAuaG90a2V5LXRvYXN0ID4gLnNob3J0Y3V0LWNvbnRhaW5lciA+IC5rZXlib2FyZC1zeW1ib2wge1xuICBmb250LXdlaWdodDogNjAwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjJmNWY4O1xuICBib3JkZXI6ICNjOWQ0ZTAgMXB4IHNvbGlkO1xuICBib3JkZXItYm90dG9tOiAjYzlkNGUwIDJweCBzb2xpZDtcbiAgY29sb3I6ICM0NDQ0NDQ7XG59XG5cbi5jb25maXJtYXRpb24tdG9hc3QuYm90dG9tLWxlZnQge1xuICBib3R0b206IDIwcHg7XG4gIGxlZnQ6IDIwcHg7XG4gIHRvcDogdW5zZXQ7XG59XG5cbi5jb25maXJtYXRpb24tdG9hc3QuYm90dG9tLWNlbnRlciB7XG4gIGJvdHRvbTogMjBweDtcbiAgdG9wOiB1bnNldDtcbn0iLCAiIix7InZlcnNpb24iOjMsInNvdXJjZXMiOlsiL1VzZXJzL2FuZHJld3NhbWJveS9EZXNrdG9wL0dpdC9wb2x5bWFpbC93ZWJhcHAvc3JjL2NvbXBvbmVudHMvQmFzZS9Ub2FzdC9Ub2FzdC5zY3NzIiwiL1VzZXJzL2FuZHJld3NhbWJveS9EZXNrdG9wL0dpdC9wb2x5bWFpbC93ZWJhcHAvc3JjL3N0eWxlcy90eXBvZ3JhcGh5LnNjc3MiLCIvVXNlcnMvYW5kcmV3c2FtYm95L0Rlc2t0b3AvR2l0L3BvbHltYWlsL3dlYmFwcC9zcmMvc3R5bGVzL2NvbG9ycy5zY3NzIiwiVG9hc3Quc2NzcyIsIi9Vc2Vycy9hbmRyZXdzYW1ib3kvRGVza3RvcC9HaXQvcG9seW1haWwvd2ViYXBwL3NyYy9zdHlsZXMvbWl4aW5zLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFDRSxhQUFBO0VBQ0EsZUFBQTtFQUNBLFNBQUE7RUFDQSwyQkFBQTtFQUNBLGdCQUFBO0VBQ0Esa0JBQUE7RUFNQSxTQUFBO0VBQ0EsaUJBQUE7RUFDQSxlQUFBO0VBQ0EsZ0JDVFM7RURVVCxnQkFBQTtFQUNBLGtCQUFBO0VBQ0EsY0VKTTtFRktOLG1CQUFBO0VBRUEsWUFBQTtFQUNBLGtCQUFBO0FHUEY7QUNGSTtFSkxBLHlCRU1JO0VGTEosY0VWSTtFRldKLFlBQUE7QUdVSjtBQ1BJO0VKTEEseUJFTUk7RUZMSixjRVZJO0VGV0osWUFBQTtBR2VKO0FIREU7RUFDRSxPQUFBO0VBQ0EsV0FBQTtBR0dKO0FIQUU7RUFDRSxnQkFBQTtFQUNBLGlCQUFBO0VBQ0EsNkNBQUE7RUFDQSxrQkFBQTtBR0VKO0FDdEJJO0VKdUI4Qix5QkFBQTtBR0VsQztBQ3pCSTtFSnVCOEIseUJBQUE7QUdLbEM7QUhGSTtFQUNFLGVFekNFO0FDNkNSO0FIREk7RUFDRSxXQUFBO0VBQ0EsWUFBQTtBR0dOOztBSEVBO0VBQ0Usa0JBQUE7RUFDQSxlQUFBO0VBQ0EsZ0JDOUNLO0FFK0NQO0FDekNJO0VKMENBLHlCRWhESTtFRmlESixjRXpESTtFRjBESixZQUFBO0FHRUo7QUM5Q0k7RUowQ0EseUJFaERJO0VGaURKLGNFekRJO0VGMERKLFlBQUE7QUdPSjtBSEhJO0VBQ0UsYUFBQTtBR0tOO0FISEk7RUFDRSxhRWxFRTtBQ3VFUjtBSERFO0VBQ0UsaUJBQUE7QUdHSjtBQzVESTtFSjJERSxjRXpFRTtBQzZFUjtBQy9ESTtFSjJERSxjRXpFRTtBQ2dGUjtBSEZJO0VBQ0Usa0JBQUE7QUdJTjtBSEFFO0VBQ0UsZ0JBQUE7QUdFSjs7QUhFQTtFQUNFLFNBQUE7RUFDQSxrQkFBQTtBR0NGO0FDM0NNO0VKOENBLGdCQ3ZGSztFRHdGTCx5QkU1RU07RUY2RU4seUJBQUE7RUFDQSxnQ0FBQTtFQUNBLGNFaEdLO0FDZ0dYOztBSEtBO0VBQ0UsWUFBQTtFQUNBLFVBQUE7RUFDQSxVQUFBO0FHRkY7O0FIS0E7RUFDRSxZQUFBO0VBQ0EsVUFBQTtBR0ZGIiwiZmlsZSI6IlRvYXN0LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0ICdoZWxwZXJzJztcblxuLnRvYXN0IHtcbiAgZGlzcGxheTogZmxleDtcbiAgcG9zaXRpb246IGZpeGVkO1xuICBsZWZ0OiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgbWF4LXdpZHRoOiA2MDBweDtcbiAgd2lkdGg6IGZpdC1jb250ZW50O1xuICBAaW5jbHVkZSB0aGVtaWZ5KCR0aGVtZXMpIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZXJyb3I7XG4gICAgY29sb3I6ICR3aGl0ZTtcbiAgICBib3JkZXI6IG5vbmU7XG4gIH07XG4gIHRvcDogMjBweDtcbiAgcGFkZGluZzogOHB4IDE0cHg7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgZm9udC13ZWlnaHQ6ICRzZW1pYm9sZDtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xuICBjb2xvcjogJGVycm9yO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAvLyAxMDAgaXMgcG9wb3ZlciwgYW5kIHVzZWQgaW4gUmVhdXRoZW50aWNhdGUgUG9wb3ZlclxuICB6LWluZGV4OiAxMDE7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcblxuICA+IHNwYW4ge1xuICAgIGZsZXg6IDE7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cblxuICA+IC5jbG9zZS1idXR0b24ge1xuICAgIHBhZGRpbmc6IDRweCA2cHg7XG4gICAgbWFyZ2luLWxlZnQ6IDEwcHg7XG4gICAgdHJhbnNpdGlvbjogMC4ycyBiYWNrZ3JvdW5kLWNvbG9yIGVhc2UtaW4tb3V0O1xuICAgIGJvcmRlci1yYWRpdXM6IDNweDtcblxuICAgICY6aG92ZXIge1xuICAgICAgQGluY2x1ZGUgdGhlbWlmeSgkdGhlbWVzKSB7IGJhY2tncm91bmQtY29sb3I6IGxpZ2h0ZW4oJGVycm9yLCA4JSk7IH07XG4gICAgfVxuXG4gICAgPiBzdmcgcGF0aCB7XG4gICAgICBzdHJva2U6ICR3aGl0ZTtcbiAgICB9XG5cbiAgICA+IC5jbG9zZS1pY29uIHtcbiAgICAgIHdpZHRoOiAxMHB4O1xuICAgICAgaGVpZ2h0OiAxMHB4O1xuICAgIH1cbiAgfVxufVxuXG4uY29uZmlybWF0aW9uLXRvYXN0LCAuaG90a2V5LXRvYXN0IHtcbiAgd2lkdGg6IGZpdC1jb250ZW50O1xuICBmb250LXNpemU6IDE0cHg7XG4gIGZvbnQtd2VpZ2h0OiAkYm9sZDtcbiAgQGluY2x1ZGUgdGhlbWlmeSgkdGhlbWVzKSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGF6dXJlO1xuICAgIGNvbG9yOiAkd2hpdGU7XG4gICAgYm9yZGVyOiBub25lO1xuICB9O1xuXG4gID4gc3ZnIHtcbiAgICBwYXRoIHtcbiAgICAgIGZpbGw6IGxpZ2h0ZW4oJGF6dXJlLCAxNSUpO1xuICAgIH1cbiAgICBjaXJjbGUge1xuICAgICAgZmlsbDogJHdoaXRlO1xuICAgIH1cbiAgfVxuXG4gID4gc3BhbiB7XG4gICAgbWFyZ2luLWxlZnQ6IDEwcHg7XG4gICAgQGluY2x1ZGUgdGhlbWlmeSgkdGhlbWVzKSB7XG4gICAgICBjb2xvcjogJHdoaXRlO1xuICAgIH07XG4gIH1cblxuICAmLmhpZGUtY2hlY2sge1xuICAgID4gc3BhbiB7XG4gICAgICBtYXJnaW4tbGVmdDogdW5zZXQ7XG4gICAgfVxuICB9XG5cbiAgLnNob3J0Y3V0LWNvbnRhaW5lciB7XG4gICAgbWFyZ2luLWxlZnQ6IDVweDtcbiAgfVxufVxuXG4uaG90a2V5LXRvYXN0IHtcbiAgdG9wOiA0MHB4O1xuICBwYWRkaW5nOiAxMHB4IDE0cHg7XG5cbiAgPiAuc2hvcnRjdXQtY29udGFpbmVyID4gLmtleWJvYXJkLXN5bWJvbCB7XG4gICAgQGluY2x1ZGUgdGhlbWlmeVNpbmdsZSgkZGFyaywgJHRoZW1lcykge1xuICAgICAgZm9udC13ZWlnaHQ6ICRzZW1pYm9sZDtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICRsaWdodEdyYXk7XG4gICAgICBib3JkZXI6ICRncmF5IDFweCBzb2xpZDtcbiAgICAgIGJvcmRlci1ib3R0b206ICRncmF5IDJweCBzb2xpZDtcbiAgICAgIGNvbG9yOiAkY2hhcmNvYWw7XG4gICAgfTtcbiAgfVxufVxuXG4uY29uZmlybWF0aW9uLXRvYXN0LmJvdHRvbS1sZWZ0IHtcbiAgYm90dG9tOiAyMHB4O1xuICBsZWZ0OiAyMHB4O1xuICB0b3A6IHVuc2V0O1xufVxuXG4uY29uZmlybWF0aW9uLXRvYXN0LmJvdHRvbS1jZW50ZXIge1xuICBib3R0b206IDIwcHg7XG4gIHRvcDogdW5zZXQ7XG59XG4iLCIvLyBpZiB0aGUgZm9sbG93aW5nIGlzIHVwZGF0ZWQsIHNob3VsZCBhbHNvIHVwZGF0ZSBgbGliL3R5cG9ncmFwaHkudHNgXG4kZGVmYXVsdEZvbnQ6IC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCxcbiAgXCJTZWdvZSBVSVwiLCBcIlJvYm90b1wiLCBcIk94eWdlblwiLCBcIlVidW50dVwiLCBcIkNhbnRhcmVsbFwiLFxuICBcIkZpcmEgU2Fuc1wiLCBcIkRyb2lkIFNhbnNcIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLFxuICBzYW5zLXNlcmlmO1xuXG4kcmVndWxhcjogNDAwO1xuJG1lZGl1bTogNTAwO1xuJHNlbWlib2xkOiA2MDA7XG4kYm9sZDogNzAwO1xuIiwiLy8gTGlnaHQgVGhlbWVzIFNBU1MgdmFyc1xuJHdoaXRlOiAjZmZmZmZmO1xuJHNub3c6ICNmYWZhZmE7XG4kY2hhcmNvYWw6ICM0NDQ0NDQ7XG4kZ3JheTogI2M5ZDRlMDtcbiRzaWx2ZXI6ICM3ZThmOWY7XG4kbGFiZWw6ICNkMzQ3YWU7XG4kaW5ib3g6ICM0N2RmZjU7XG4kbWlkbmlnaHQ6ICMyNDJlNDQ7XG4kYXp1cmU6ICMwNzljZWY7XG4kcmVhZExhdGVyOiAjZmZhMDU3O1xuJGFyY2hpdmU6ICM4N2VjYmI7XG4kdHJhc2g6ICNmZjZiN2M7XG4kc3RhcjogI2ZmZGYzMjtcbiRzZW5kTGF0ZXI6ICMxMDk3ZGQ7XG4kZm9sbG93VXA6ICNmNjRiODE7XG4kZXJyb3I6ICNlNzRjM2M7XG4kY29tcG9zZUhvdmVyOiAjNEVENkVCO1xuJGxzYkNlbGxIb3ZlcjogIzQzNGY2NztcbiRsc2JDZWxsU2VsZWN0ZWQ6ICMzMzNlNTU7XG4kbGlnaHRHcmF5OiAjZjJmNWY4O1xuJGRhcmtCbHVlOiAjMmM3MWMxO1xuJG1lZGl1bUdyZWVuOiAjMGVjMzZiO1xuJGJvcmRlckdyYXk6ICNlZWVlZWU7XG4kaWNlQmx1ZTogI2U4ZjNmZjtcbiRjb21wbGV0ZWRHcmF5OiAjYWZiYmM4O1xuJGdyYXlIb3ZlcjogZGFya2VuKCR3aGl0ZSwgNCUpO1xuJHRocmVhZEhvdmVyOiByZ2JhKCRpY2VCbHVlLCAuNSk7XG4kdGhyZWFkU2VsZWN0ZWQ6ICRpY2VCbHVlO1xuJGNvbW1lbnRCb2R5OiByZ2JhKDAsIDE3MCwgMjU1LCAwLjEpO1xuJGJsYWNrOiAjMDAwMDAwO1xuXG4kZmFjZWJvb2s6ICM1YTdhYzc7XG4kdHdpdHRlcjogIzViYmNlYztcbiRhbmdlbExpc3Q6ICMwMDAwMDA7XG4kbGlua2VkSW46ICMwMDdiYjU7XG5cbiRib3hTaGFkb3c6IDJweCAycHggNHB4IDAgcmdiYSgxMjUsIDE0MywgMTYwLCAwLjUpO1xuJGdyYXlCb3JkZXI6IHNvbGlkIDJweCAkYm9yZGVyR3JheTtcbiRsaWdodEdyYXlCb3JkZXI6ICRsaWdodEdyYXkgMXB4IHNvbGlkO1xuJHNlcXVlbmNlTWF4V2lkdGg6IDEwNDBweDtcblxuLy8gQ29uc3RhbnRzIChOb3QgY2hhbmdlZCBieSB0aGVtZSlcbiR0cnVlV2hpdGU6ICNmZmZmZmY7XG4kdHJ1ZURhcms6ICMxMjEyMTI7XG5cbi8vIExpZ2h0IFRoZW1lcyBTQVNTIHZhcnNcbiRkYXJrUHJpbWFyeVRleHQ6ICNlOGU4ZTg7XG4kZGFya1NlY29uZGFyeVRleHQ6ICNBQUFBQUE7XG5cbiRkYXJrOiAnZGFyayc7XG4kbGlnaHQ6ICdsaWdodCc7XG5cbi8vIFRoZW1pZmllZCBDb2xvcnNcbiR0aGVtZXM6IChcbiAgJGxpZ2h0OiAoXG4gICAgdHJ1ZURhcms6ICR0cnVlRGFyayxcbiAgICB0cnVlV2hpdGU6ICNmYWZhZmEsXG4gICAgdW5zZXQ6ICd1bnNldCcsXG4gICAgdHJhbnNwYXJlbnRDb2xvcjogdHJhbnNwYXJlbnQsXG4gICAgcHJpbWFyeUFjY2VudDogJGF6dXJlLFxuXG4gICAgLy8gTWFpbiBBcHBcbiAgICBwcmltYXJ5VGV4dENvbG9yOiAkY2hhcmNvYWwsXG4gICAgc2Vjb25kYXJ5VGV4dENvbG9yOiAkc2lsdmVyLFxuICAgIHRlcnRpYXJ5VGV4dENvbG9yOiAkZ3JheSxcblxuICAgIC8vIEJhY2tncm91bmQgQ29sb3JzXG4gICAgcHJpbWFyeUJhY2tncm91bmRDb2xvcjogJHdoaXRlLFxuICAgIHNlY29uZGFyeUJhY2tncm91bmRDb2xvcjogJHNub3csXG4gICAgdGVydGlhcnlCYWNrZ3JvdW5kQ29sb3I6ICR3aGl0ZSxcbiAgICBwcmltYXJ5Q29udHJhc3RCb3JkZXJDb2xvcjogJGxpZ2h0R3JheSxcbiAgICBzZWNvbmRhcnlDb250cmFzdEJvcmRlckNvbG9yOiAkbGlnaHRHcmF5LFxuXG4gICAgLy8gTGVmdCBTaWRlYmFyXG4gICAgbHNiQmFja2dyb3VuZENvbG9yOiAkbWlkbmlnaHQsXG4gICAgbHNiSGVhZGVyQ29sb3I6ICRncmF5LFxuXG4gICAgLy8gQm9yZGVyc1xuICAgIGxvd0NvbnRyYXN0Qm9yZGVyOiAkbGlnaHRHcmF5IDFweCBzb2xpZCxcbiAgICBsb3dDb250cmFzdEJvcmRlckNvbG9yOiAkbGlnaHRHcmF5LFxuICAgIGhpZ2hDb250cmFzdEJvcmRlcjogJGdyYXkgMnB4IHNvbGlkLFxuICAgIGhpZ2hDb250cmFzdEJvcmRlckNvbG9yOiAkZ3JheSxcbiAgICBib3hTaGFkb3c6ICRib3hTaGFkb3csXG5cbiAgICAvLyBBY2NlbnRzXG4gICAgbG93Q29udHJhc3RBY2NlbnQ6IHJnYmEoMjQyLCAyNDUsIDI0OCwgMC41KSxcblxuICAgIC8vIEhvdmVyc1xuICAgIGhpZ2hDb250cmFzdEhvdmVyOiAkZ3JheUhvdmVyLFxuXG4gICAgZ3JheTogJGdyYXksXG4gICAgZ3JheVRleHQ6ICRncmF5LFxuICAgIG1pZG5pZ2h0OiAkbWlkbmlnaHQsXG4gICAgaWNlQmx1ZTogJGljZUJsdWUsXG4gICAgdGhyZWFkSG92ZXI6IHJnYmEoJGljZUJsdWUsIDAuNSksXG4gICAgYm9yZGVyR3JheTogJGxpZ2h0R3JheSxcbiAgICB0aHJlYWRTZWxlY3RlZDogJGljZUJsdWUsXG4gICAgbGlnaHRHcmF5Qm9yZGVyOiAkbGlnaHRHcmF5IDFweCBzb2xpZCxcbiAgICBncmF5SG92ZXI6ICRncmF5SG92ZXIsXG5cbiAgKSxcbiAgJGRhcms6IChcbiAgICAvLyBDb25zdGFudHMgdGhhdCBkbyBub3QgY2hhbmdlXG4gICAgdHJ1ZVdoaXRlOiAjZmFmYWZhLFxuICAgIHRydWVEYXJrOiAkdHJ1ZURhcmssXG4gICAgcHJpbWFyeUFjY2VudDogJGF6dXJlLFxuICAgIHRyYW5zcGFyZW50Q29sb3I6IHRyYW5zcGFyZW50LFxuICAgIHVuc2V0OiAndW5zZXQnLFxuXG4gICAgLy8gTWFpbiBBcHBcbiAgICBwcmltYXJ5VGV4dENvbG9yOiAkZGFya1ByaW1hcnlUZXh0LFxuICAgIHNlY29uZGFyeVRleHRDb2xvcjogJGRhcmtTZWNvbmRhcnlUZXh0LFxuICAgIHRlcnRpYXJ5VGV4dENvbG9yOiAjNzc3Nzc3LFxuICAgIHByaW1hcnlCYWNrZ3JvdW5kQ29sb3I6ICMyMTIxMjEsXG4gICAgc2Vjb25kYXJ5QmFja2dyb3VuZENvbG9yOiAjMjMyMzIzLFxuICAgIHRlcnRpYXJ5QmFja2dyb3VuZENvbG9yOiAjMjUyNTI1LFxuICAgIHNlY29uZGFyeUNvbnRyYXN0Qm9yZGVyQ29sb3I6IGxpZ2h0ZW4oIzEyMTIxMiwgMTAlKSxcbiAgICBjb250cmFzdGVkQm9yZGVyQ29sb3I6IGxpZ2h0ZW4oIzEyMTIxMiwgMTAlKSxcblxuICAgIC8vIExlZnQgU2lkZWJhclxuICAgIGxzYkJhY2tncm91bmRDb2xvcjogIzI1MjUyNSxcbiAgICBsc2JIZWFkZXJDb2xvcjogZGFya2VuKCNmYWZhZmEsIDEwJSksXG5cbiAgICAvLyBCb3JkZXJzXG4gICAgbG93Q29udHJhc3RCb3JkZXI6ICMyQzJDMkMgMXB4IHNvbGlkLFxuICAgIGxvd0NvbnRyYXN0Qm9yZGVyQ29sb3I6ICMyQzJDMkMsXG4gICAgaGlnaENvbnRyYXN0Qm9yZGVyOiAjMkUyRTJFIDJweCBzb2xpZCxcbiAgICBoaWdoQ29udHJhc3RCb3JkZXJDb2xvcjogIzJFMkUyRSxcbiAgICBib3hTaGFkb3c6IDJweCAycHggNHB4IDAgIzEyMTIxMixcblxuICAgIC8vIEFjY2VudHNcbiAgICBsb3dDb250cmFzdEFjY2VudDogcmdiYSg3NywgNzcsIDc3LCAwLjEzMiksXG5cbiAgICAvLyBIb3ZlcnNcbiAgICBoaWdoQ29udHJhc3RIb3ZlcjogbGlnaHRlbihsaWdodGVuKCMwRjBGMEYsIDUlKSwgNSUpLFxuXG4gICAgZ3JheTogbGlnaHRlbigjMEYwRjBGLCAxNSUpLFxuICAgIG1pZG5pZ2h0OiBsaWdodGVuKCMwRjBGMEYsIDEwJSksXG4gICAgaWNlQmx1ZTogbGlnaHRlbigjMEYwRjBGLCA3JSksXG4gICAgYm9yZGVyR3JheTogbGlnaHRlbigjMEYwRjBGLCAxMCUpLFxuICAgIHRocmVhZEhvdmVyOiByZ2JhKCMzNjM2MzYsIDAuNyksXG4gICAgdGhyZWFkU2VsZWN0ZWQ6IHJnYmEoIzM2MzYzNiwgMC41KSxcbiAgICBsaWdodEdyYXlCb3JkZXI6ICMyQzJDMkMgMXB4IHNvbGlkLFxuICAgIGdyYXlUZXh0OiAjZmFmYWZhLFxuICAgIGdyYXlIb3ZlcjogIzJFMkUyRSxcbiAgKSxcbik7XG4iLCIudG9hc3Qge1xuICBkaXNwbGF5OiBmbGV4O1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIGxlZnQ6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICBtYXgtd2lkdGg6IDYwMHB4O1xuICB3aWR0aDogZml0LWNvbnRlbnQ7XG4gIHRvcDogMjBweDtcbiAgcGFkZGluZzogOHB4IDE0cHg7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xuICBjb2xvcjogI2U3NGMzYztcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgei1pbmRleDogMTAxO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG4udGhlbWUtbGlnaHQgLnRvYXN0IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2U3NGMzYztcbiAgY29sb3I6ICNmZmZmZmY7XG4gIGJvcmRlcjogbm9uZTtcbn1cbi50aGVtZS1kYXJrIC50b2FzdCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlNzRjM2M7XG4gIGNvbG9yOiAjZmZmZmZmO1xuICBib3JkZXI6IG5vbmU7XG59XG4udG9hc3QgPiBzcGFuIHtcbiAgZmxleDogMTtcbiAgd2lkdGg6IDEwMCU7XG59XG4udG9hc3QgPiAuY2xvc2UtYnV0dG9uIHtcbiAgcGFkZGluZzogNHB4IDZweDtcbiAgbWFyZ2luLWxlZnQ6IDEwcHg7XG4gIHRyYW5zaXRpb246IDAuMnMgYmFja2dyb3VuZC1jb2xvciBlYXNlLWluLW91dDtcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xufVxuLnRoZW1lLWxpZ2h0IC50b2FzdCA+IC5jbG9zZS1idXR0b246aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWI2ZDYwO1xufVxuLnRoZW1lLWRhcmsgLnRvYXN0ID4gLmNsb3NlLWJ1dHRvbjpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlYjZkNjA7XG59XG4udG9hc3QgPiAuY2xvc2UtYnV0dG9uID4gc3ZnIHBhdGgge1xuICBzdHJva2U6ICNmZmZmZmY7XG59XG4udG9hc3QgPiAuY2xvc2UtYnV0dG9uID4gLmNsb3NlLWljb24ge1xuICB3aWR0aDogMTBweDtcbiAgaGVpZ2h0OiAxMHB4O1xufVxuXG4uY29uZmlybWF0aW9uLXRvYXN0LCAuaG90a2V5LXRvYXN0IHtcbiAgd2lkdGg6IGZpdC1jb250ZW50O1xuICBmb250LXNpemU6IDE0cHg7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG59XG4udGhlbWUtbGlnaHQgLmNvbmZpcm1hdGlvbi10b2FzdCwgLnRoZW1lLWxpZ2h0IC5ob3RrZXktdG9hc3Qge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDc5Y2VmO1xuICBjb2xvcjogI2ZmZmZmZjtcbiAgYm9yZGVyOiBub25lO1xufVxuLnRoZW1lLWRhcmsgLmNvbmZpcm1hdGlvbi10b2FzdCwgLnRoZW1lLWRhcmsgLmhvdGtleS10b2FzdCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwNzljZWY7XG4gIGNvbG9yOiAjZmZmZmZmO1xuICBib3JkZXI6IG5vbmU7XG59XG4uY29uZmlybWF0aW9uLXRvYXN0ID4gc3ZnIHBhdGgsIC5ob3RrZXktdG9hc3QgPiBzdmcgcGF0aCB7XG4gIGZpbGw6ICM0OWJhZmE7XG59XG4uY29uZmlybWF0aW9uLXRvYXN0ID4gc3ZnIGNpcmNsZSwgLmhvdGtleS10b2FzdCA+IHN2ZyBjaXJjbGUge1xuICBmaWxsOiAjZmZmZmZmO1xufVxuLmNvbmZpcm1hdGlvbi10b2FzdCA+IHNwYW4sIC5ob3RrZXktdG9hc3QgPiBzcGFuIHtcbiAgbWFyZ2luLWxlZnQ6IDEwcHg7XG59XG4udGhlbWUtbGlnaHQgLmNvbmZpcm1hdGlvbi10b2FzdCA+IHNwYW4sIC50aGVtZS1saWdodCAuaG90a2V5LXRvYXN0ID4gc3BhbiB7XG4gIGNvbG9yOiAjZmZmZmZmO1xufVxuLnRoZW1lLWRhcmsgLmNvbmZpcm1hdGlvbi10b2FzdCA+IHNwYW4sIC50aGVtZS1kYXJrIC5ob3RrZXktdG9hc3QgPiBzcGFuIHtcbiAgY29sb3I6ICNmZmZmZmY7XG59XG4uY29uZmlybWF0aW9uLXRvYXN0LmhpZGUtY2hlY2sgPiBzcGFuLCAuaG90a2V5LXRvYXN0LmhpZGUtY2hlY2sgPiBzcGFuIHtcbiAgbWFyZ2luLWxlZnQ6IHVuc2V0O1xufVxuLmNvbmZpcm1hdGlvbi10b2FzdCAuc2hvcnRjdXQtY29udGFpbmVyLCAuaG90a2V5LXRvYXN0IC5zaG9ydGN1dC1jb250YWluZXIge1xuICBtYXJnaW4tbGVmdDogNXB4O1xufVxuXG4uaG90a2V5LXRvYXN0IHtcbiAgdG9wOiA0MHB4O1xuICBwYWRkaW5nOiAxMHB4IDE0cHg7XG59XG4udGhlbWUtZGFyayAuaG90a2V5LXRvYXN0ID4gLnNob3J0Y3V0LWNvbnRhaW5lciA+IC5rZXlib2FyZC1zeW1ib2wge1xuICBmb250LXdlaWdodDogNjAwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjJmNWY4O1xuICBib3JkZXI6ICNjOWQ0ZTAgMXB4IHNvbGlkO1xuICBib3JkZXItYm90dG9tOiAjYzlkNGUwIDJweCBzb2xpZDtcbiAgY29sb3I6ICM0NDQ0NDQ7XG59XG5cbi5jb25maXJtYXRpb24tdG9hc3QuYm90dG9tLWxlZnQge1xuICBib3R0b206IDIwcHg7XG4gIGxlZnQ6IDIwcHg7XG4gIHRvcDogdW5zZXQ7XG59XG5cbi5jb25maXJtYXRpb24tdG9hc3QuYm90dG9tLWNlbnRlciB7XG4gIGJvdHRvbTogMjBweDtcbiAgdG9wOiB1bnNldDtcbn0iLCJAZnVuY3Rpb24gdGhlbWVkKCRrZXkpIHtcbiAgQHJldHVybiBtYXAtZ2V0KCR0aGVtZS1tYXAsICRrZXkpO1xufVxuXG5AbWl4aW4gYXBwLWRyYWdnYWJsZSgpIHtcbiAgLXdlYmtpdC1hcHAtcmVnaW9uOiBkcmFnO1xuXG4gIC50aGVtZS13aW5kb3dzICYge1xuICAgIC13ZWJraXQtYXBwLXJlZ2lvbjogbm8tZHJhZztcbiAgfVxufVxuXG5AbWl4aW4gdGhlbWlmeSgkdGhlbWVzOiAkdGhlbWVzKSB7XG4gIEBlYWNoICR0aGVtZSwgJG1hcCBpbiAkdGhlbWVzIHtcblxuICAgIC50aGVtZS0jeyR0aGVtZX0gJiB7XG4gICAgICAkdGhlbWUtbWFwOiAoKSAhZ2xvYmFsO1xuICAgICAgQGVhY2ggJGtleSwgJHN1Ym1hcCBpbiAkbWFwIHtcbiAgICAgICAgJHZhbHVlOiBtYXAtZ2V0KG1hcC1nZXQoJHRoZW1lcywgJHRoZW1lKSwgJyN7JGtleX0nKTtcbiAgICAgICAgJHRoZW1lLW1hcDogbWFwLW1lcmdlKCR0aGVtZS1tYXAsICgka2V5OiAkdmFsdWUpKSAhZ2xvYmFsO1xuICAgICAgfVxuXG4gICAgICBAY29udGVudDtcbiAgICAgICR0aGVtZS1tYXA6IG51bGwgIWdsb2JhbDtcbiAgICB9XG5cbiAgfVxufVxuXG5AbWl4aW4gdGhlbWlmeUJvZHkoJHRoZW1lczogJHRoZW1lcykge1xuICBAZWFjaCAkdGhlbWUsICRtYXAgaW4gJHRoZW1lcyB7XG5cbiAgICAmLnRoZW1lLSN7JHRoZW1lfSB7XG4gICAgICAkdGhlbWUtbWFwOiAoKSAhZ2xvYmFsO1xuICAgICAgQGVhY2ggJGtleSwgJHN1Ym1hcCBpbiAkbWFwIHtcbiAgICAgICAgJHZhbHVlOiBtYXAtZ2V0KG1hcC1nZXQoJHRoZW1lcywgJHRoZW1lKSwgJyN7JGtleX0nKTtcbiAgICAgICAgJHRoZW1lLW1hcDogbWFwLW1lcmdlKCR0aGVtZS1tYXAsICgka2V5OiAkdmFsdWUpKSAhZ2xvYmFsO1xuICAgICAgfVxuXG4gICAgICBAY29udGVudDtcbiAgICAgICR0aGVtZS1tYXA6IG51bGwgIWdsb2JhbDtcbiAgICB9XG5cbiAgfVxufVxuXG5AbWl4aW4gdGhlbWlmeVNpbmdsZSgkbW9kZSwgJHRoZW1lczogJHRoZW1lcykge1xuICBAZWFjaCAkdGhlbWUsICRtYXAgaW4gJHRoZW1lcyB7XG4gICAgQGlmICRtb2RlID09ICR0aGVtZSB7XG4gICAgICAudGhlbWUtI3skdGhlbWV9ICYge1xuICAgICAgICAkdGhlbWUtbWFwOiAoKSAhZ2xvYmFsO1xuICAgICAgICBAZWFjaCAka2V5LCAkc3VibWFwIGluICRtYXAge1xuICAgICAgICAgICR2YWx1ZTogbWFwLWdldChtYXAtZ2V0KCR0aGVtZXMsICR0aGVtZSksICcjeyRrZXl9Jyk7XG4gICAgICAgICAgJHRoZW1lLW1hcDogbWFwLW1lcmdlKCR0aGVtZS1tYXAsICgka2V5OiAkdmFsdWUpKSAhZ2xvYmFsO1xuICAgICAgICB9XG5cbiAgICAgICAgQGNvbnRlbnQ7XG4gICAgICAgICR0aGVtZS1tYXA6IG51bGwgIWdsb2JhbDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuQG1peGluIGJvdW5jZS1waXhlbHMoJHBpeGVscykge1xuICBAa2V5ZnJhbWVzIGJvdW5jZS1waXhlbHMge1xuICAgIDAlIHsgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0kcGl4ZWxzKSB9XG4gICAgNTAlIHsgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKCRwaXhlbHMpIH1cbiAgICAxMDAlIHsgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0kcGl4ZWxzKSB9XG4gIH1cbiAgYW5pbWF0aW9uOiBib3VuY2UtcGl4ZWxzIDJzIGVhc2UtaW4tb3V0IGluZmluaXRlO1xufVxuXG5AbWl4aW4gZm9yY2UtZ3B1KCkge1xuICAtd2Via2l0LWJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgLW1vei1iYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG4gIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgxKTtcbiAgLW1zLXRyYW5zZm9ybTogc2NhbGUoMSk7XG4gIC1tb3otdHJhbnNmb3JtOiBzY2FsZSgxKTtcbiAgYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICB0cmFuc2Zvcm06IHNjYWxlKDEpO1xufVxuXG5AbWl4aW4gYmx1cigkcGl4ZWxzKSB7XG4gIC13ZWJraXQtZmlsdGVyOiBibHVyKCRwaXhlbHMpO1xuICAtbW96LWZpbHRlcjogYmx1cigkcGl4ZWxzKTtcbiAgLW8tZmlsdGVyOiBibHVyKCRwaXhlbHMpO1xuICAtbXMtZmlsdGVyOiBibHVyKCRwaXhlbHMpO1xuICBmaWx0ZXI6IGJsdXIoJHBpeGVscyk7XG59XG5cbkBtaXhpbiBlbmFibGUtc2VsZWN0aW9uKCkge1xuICAtd2Via2l0LXRvdWNoLWNhbGxvdXQ6IGF1dG87IC8qIGlPUyBTYWZhcmkgKi9cbiAgLXdlYmtpdC11c2VyLXNlbGVjdDogdGV4dDsgLyogU2FmYXJpICovXG4gIC1raHRtbC11c2VyLXNlbGVjdDogdGV4dDsgLyogS29ucXVlcm9yIEhUTUwgKi9cbiAgLW1vei11c2VyLXNlbGVjdDogdGV4dDsgLyogRmlyZWZveCAqL1xuICAtbXMtdXNlci1zZWxlY3Q6IHRleHQ7IC8qIEludGVybmV0IEV4cGxvcmVyL0VkZ2UgKi9cbiAgdXNlci1zZWxlY3Q6IHRleHQ7XG4gIC13ZWJraXQtYXBwLXJlZ2lvbjogbm8tZHJhZztcbiAgY3Vyc29yOiBhdXRvO1xufVxuXG5AbWl4aW4gZGlzYWJsZS1zZWxlY3Rpb24oKSB7XG4gIC13ZWJraXQtdG91Y2gtY2FsbG91dDogbm9uZTsgLyogaU9TIFNhZmFyaSAqL1xuICAtd2Via2l0LXVzZXItc2VsZWN0OiBub25lOyAvKiBTYWZhcmkgKi9cbiAgLWtodG1sLXVzZXItc2VsZWN0OiBub25lOyAvKiBLb25xdWVyb3IgSFRNTCAqL1xuICAtbW96LXVzZXItc2VsZWN0OiBub25lOyAvKiBGaXJlZm94ICovXG4gIC1tcy11c2VyLXNlbGVjdDogbm9uZTsgLyogSW50ZXJuZXQgRXhwbG9yZXIvRWRnZSAqL1xuICB1c2VyLXNlbGVjdDogbm9uZTtcbiAgY3Vyc29yOiBkZWZhdWx0O1xufVxuXG5AbWl4aW4gZW5hYmxlLWZvbnQtc21vb3RoaW5nKCkge1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTtcbn1cblxuQG1peGluIGRpc2FibGUtZm9udC1zbW9vdGhpbmcoKSB7XG4gIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGF1dG87XG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBhdXRvO1xufVxuXG5AbWl4aW4gdHJ1bmNhdGUtYXQoJGxpbmVzKSB7XG4gIC8vIGVsbGlwc2lzXG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgd29yZC13cmFwOiBicmVhay13b3JkO1xuICB3b3JkLWJyZWFrOiBicmVhay1hbGw7XG5cbiAgLy8gbXVsdGlsaW5lIGVsbGlwc2VzIGZvciB3ZWJraXQgYnJvd3NlcnNcbiAgLy8gYWxsIG90aGVyIGJyb3dzZXJzIHdpbGwgbGltaXQgdG8gMSBsaW5lLFxuICAvLyAgIGJ1dCBub3QgZ2V0IGVsbGlwc2lzXG4gIEBpZiAkbGluZXMgPiAxIHtcbiAgICAtd2Via2l0LWxpbmUtY2xhbXA6ICRsaW5lcztcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgIC8vIE5PVEUoU0hBSEFOKTogVGhlIGZvbGxvd2luZyBicmVha3MgdGhlIC4uLiBpbiBub24td2Via2l0IGJyb3dzZXJzXG4gICAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgfVxufVxuXG5AbWl4aW4gZHJvcC1yaWdodCgkc2Vjb25kcykge1xuICBhbmltYXRpb246IGRyb3AtcmlnaHQgJHNlY29uZHMgZWFzZS1pbi1vdXQgMHMgMTtcbn1cblxuQG1peGluIGRyb3AtaW4oJHNlY29uZHMpIHtcbiAgYW5pbWF0aW9uOiBkcm9wLWluICRzZWNvbmRzIGVhc2UtaW4tb3V0IDBzIDE7XG59XG5cbkBtaXhpbiBleHBhbmQtdmVydGljYWwoJHNlY29uZHMpIHtcbiAgdHJhbnNmb3JtLW9yaWdpbjogdG9wO1xuICBhbmltYXRpb246IGV4cGFuZC12ZXJ0aWNhbCAkc2Vjb25kcyBlYXNlLWluLW91dCAwcyAxO1xufVxuXG5AbWl4aW4gZmFkZS1pbigkc2Vjb25kcykge1xuICBhbmltYXRpb246IGZhZGUtaW4gJHNlY29uZHMgZWFzZS1pbi1vdXQgMHMgMTtcbn1cblxuQG1peGluIGZhZGUtb3V0KCRzZWNvbmRzKSB7XG4gIGFuaW1hdGlvbjogZmFkZS1vdXQgJHNlY29uZHMgZWFzZS1pbi1vdXQgMHMgMTtcbiAgYW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7XG59XG5cbkBtaXhpbiBleHBhbmQoJHNlY29uZHMpIHtcbiAgYW5pbWF0aW9uOiBleHBhbmQgJHNlY29uZHMgZWFzZS1pbi1vdXQgMHMgMTtcbn1cblxuQG1peGluIGJyb3dzZXItZGVmYXVsdHMoKSB7XG4gIEBpbmNsdWRlIGRpc2FibGUtZm9udC1zbW9vdGhpbmcoKTtcbiAgbGluZS1oZWlnaHQ6IGluaXRpYWw7XG5cbiAgKiB7XG4gICAgYm94LXNpemluZzogY29udGVudC1ib3g7XG4gICAgbGV0dGVyLXNwYWNpbmc6IGluaXRpYWw7XG4gIH1cblxuICBiLCBzdHJvbmcge1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICB9XG5cbiAgaDEge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGZvbnQtc2l6ZTogMmVtO1xuICAgIG1hcmdpbi10b3A6IDAuNjdlbTtcbiAgICBtYXJnaW4tYm90dG9tOiAwLjY3ZW07XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICB9XG5cbiAgaDIge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGZvbnQtc2l6ZTogMS41ZW07XG4gICAgbWFyZ2luLXRvcDogMC44M2VtO1xuICAgIG1hcmdpbi1ib3R0b206IDAuODNlbTtcbiAgICBtYXJnaW4tbGVmdDogMDtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIH1cblxuICBoMyB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgZm9udC1zaXplOiAxLjE3ZW07XG4gICAgbWFyZ2luLXRvcDogMWVtO1xuICAgIG1hcmdpbi1ib3R0b206IDFlbTtcbiAgICBtYXJnaW4tbGVmdDogMDtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIH1cblxuICBoNCB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgZm9udC1zaXplOiAxZW07XG4gICAgbWFyZ2luLXRvcDogMS4zM2VtO1xuICAgIG1hcmdpbi1ib3R0b206IDEuMzNlbTtcbiAgICBtYXJnaW4tbGVmdDogMDtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIH1cblxuICBoNSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgZm9udC1zaXplOiAuODNlbTtcbiAgICBtYXJnaW4tdG9wOiAxLjY3ZW07XG4gICAgbWFyZ2luLWJvdHRvbTogMS42N2VtO1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgfVxuXG4gIGg2IHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBmb250LXNpemU6IC42N2VtO1xuICAgIG1hcmdpbi10b3A6IDIuMzNlbTtcbiAgICBtYXJnaW4tYm90dG9tOiAyLjMzZW07XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICB9XG5cbiAgcCB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbWFyZ2luLXRvcDogMWVtO1xuICAgIG1hcmdpbi1ib3R0b206IDFlbTtcbiAgICBtYXJnaW4tbGVmdDogMDtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gIH1cbn1cbiJdfV0pOwo="}]}