{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/scheduling.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/scheduling.tsx","mtime":1675280254120},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8gUG9seWZpbGxzCmltcG9ydCAnd2hhdHdnLWZldGNoJzsKLy8gRW5hYmxlIFNlbnRyeSBmb3IgcHJvZHVjdGlvbiBlbnZpcm9ubWVudHMKaW1wb3J0IHsgaW5pdCB9IGZyb20gJ0BzZW50cnkvYnJvd3Nlcic7CmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nICYmIHByb2Nlc3MuZW52LlNFTlRSWV9EU04gIT09ICcnKSB7CiAgICBpbml0KHsKICAgICAgICBkc246IHByb2Nlc3MuZW52LlNFTlRSWV9EU04sCiAgICAgICAgcmVsZWFzZTogcHJvY2Vzcy5lbnYuU09VUkNFX1ZFUlNJT04sCiAgICAgICAgZW52aXJvbm1lbnQ6IHByb2Nlc3MuZW52LlNFTlRSWV9FTlYsCiAgICB9KTsKfQovLyBXZSBuZWVkIHRoaXMgaW1wb3J0IHRvIGJlIGZpcnN0IGFzIGl0IGhhcyB0aGUgcmVzZXQgc3R5bGVzLCBhbmQgdHlwb2dyYXBoeSBzZXR1cAppbXBvcnQgJy4vQXBwLnNjc3MnOwovLyBJbXBvcnRzCmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7CmltcG9ydCBSZWFjdERPTSBmcm9tICdyZWFjdC1kb20nOwppbXBvcnQgeyBTd2l0Y2gsIFJvdXRlIH0gZnJvbSAncmVhY3Qtcm91dGVyJzsKaW1wb3J0IHsgY3JlYXRlU3RvcmUsIGFwcGx5TWlkZGxld2FyZSB9IGZyb20gJ3JlZHV4JzsKaW1wb3J0IHsgUHJvdmlkZXIgfSBmcm9tICdyZWFjdC1yZWR1eCc7CmltcG9ydCB7IGNyZWF0ZUVwaWNNaWRkbGV3YXJlIH0gZnJvbSAncmVkdXgtb2JzZXJ2YWJsZSc7CmltcG9ydCB7IHJvdXRlck1pZGRsZXdhcmUsIENvbm5lY3RlZFJvdXRlciB9IGZyb20gJ3JlYWN0LXJvdXRlci1yZWR1eCc7CmltcG9ydCB7IGNvbWJpbmVSZWR1Y2VycyB9IGZyb20gJy4vbGliL3JlZHV4JzsKaW1wb3J0IHsgaW5pdGlhbFN0YXRlV2l0aENhY2hlZERhdGEgfSBmcm9tICcuL2xpYi9zdGF0ZSc7CmltcG9ydCB7IGRlZmF1bHREZXBzLCBjb21iaW5lV3JhcEVwaWNzIH0gZnJvbSAnLi9saWIvZXBpYyc7CmltcG9ydCBicm93c2VySGlzdG9yeSBmcm9tICcuL2xpYi9icm93c2VySGlzdG9yeSc7CmltcG9ydCBzY2hlZHVsaW5nRHVja3MgZnJvbSAnLi9kdWNrcy9zY2hlZHVsaW5nJzsKaW1wb3J0IHNjaGVkdWxpbmdFcGljcyBmcm9tICcuL2VwaWNzL3NjaGVkdWxpbmcnOwppbXBvcnQgRXJyb3JCb3VuZGFyeSBmcm9tICcuL2NvbXBvbmVudHMvRXJyb3JCb3VuZGFyeS9FcnJvckJvdW5kYXJ5JzsKaW1wb3J0IENhbGVuZGFyU2NoZWR1bGluZyBmcm9tICdAc3JjL3JvdXRlcy9DYWxlbmRhclNjaGVkdWxpbmcnOwppbXBvcnQgRXJyb3JQYWdlIGZyb20gJ0BzcmMvY29tcG9uZW50cy9CYXNlL0Vycm9yUGFnZSc7Ci8vIENyZWF0ZSBTdG9yZQp2YXIgZHVja3MgPSBjb21iaW5lUmVkdWNlcnMuYXBwbHkodm9pZCAwLCBzY2hlZHVsaW5nRHVja3MpOwp2YXIgc3RvcmUgPSBjcmVhdGVTdG9yZShkdWNrcywgaW5pdGlhbFN0YXRlV2l0aENhY2hlZERhdGEoKSwgYXBwbHlNaWRkbGV3YXJlKHJvdXRlck1pZGRsZXdhcmUoYnJvd3Nlckhpc3RvcnkpLCBjcmVhdGVFcGljTWlkZGxld2FyZShjb21iaW5lV3JhcEVwaWNzKHNjaGVkdWxpbmdFcGljcyksIHsgZGVwZW5kZW5jaWVzOiBkZWZhdWx0RGVwcygpIH0pKSk7Ci8vIEhhbmRsZSBFcnJvciBDb21wb25lbnQKdmFyIEVycm9yQ29tcG9uZW50ID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChFcnJvclBhZ2UsIG51bGwpOyB9OwovLyBSZW5kZXIKUmVhY3RET00ucmVuZGVyKFJlYWN0LmNyZWF0ZUVsZW1lbnQoRXJyb3JCb3VuZGFyeSwgbnVsbCwKICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUHJvdmlkZXIsIHsgc3RvcmU6IHN0b3JlIH0sCiAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChDb25uZWN0ZWRSb3V0ZXIsIHsgaGlzdG9yeTogYnJvd3Nlckhpc3RvcnkgfSwKICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChTd2l0Y2gsIG51bGwsCiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlLCB7IHBhdGg6ICIvOnVzZXJTbHVnLzpzbHVnIiwgY29tcG9uZW50OiBDYWxlbmRhclNjaGVkdWxpbmcsIGV4YWN0OiB0cnVlIH0pLAogICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZSwgeyByZW5kZXI6IEVycm9yQ29tcG9uZW50IH0pKSkpKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2FwcCcpKTsK"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/scheduling.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/scheduling.tsx"],"names":[],"mappings":"AAAA,YAAY;AACZ,OAAO,cAAc,CAAC;AAEtB,4CAA4C;AAC5C,OAAO,EAAE,IAAI,EAAE,MAAM,iBAAiB,CAAC;AAEvC,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,IAAI,OAAO,CAAC,GAAG,CAAC,UAAU,KAAK,EAAE,EAAE;IAC1E,IAAI,CAAC;QACH,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,UAAU;QAC3B,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,cAAc;QACnC,WAAW,EAAE,OAAO,CAAC,GAAG,CAAC,UAAU;KACpC,CAAC,CAAC;CACJ;AAED,mFAAmF;AACnF,OAAO,YAAY,CAAC;AAEpB,UAAU;AACV,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,QAAQ,MAAM,WAAW,CAAC;AACjC,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,cAAc,CAAC;AAE7C,OAAO,EAAE,WAAW,EAAE,eAAe,EAAE,MAAM,OAAO,CAAC;AAErD,OAAO,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAC;AACvC,OAAO,EAAE,oBAAoB,EAAE,MAAM,kBAAkB,CAAC;AACxD,OAAO,EAAE,gBAAgB,EAAE,eAAe,EAAE,MAAM,oBAAoB,CAAC;AAGvE,OAAO,EAAE,eAAe,EAAE,MAAM,aAAa,CAAC;AAC9C,OAAO,EAAE,0BAA0B,EAAE,MAAM,aAAa,CAAC;AACzD,OAAO,EAAE,WAAW,EAAE,gBAAgB,EAAE,MAAM,YAAY,CAAC;AAC3D,OAAO,cAAc,MAAM,sBAAsB,CAAC;AAElD,OAAO,eAAe,MAAM,oBAAoB,CAAC;AACjD,OAAO,eAAe,MAAM,oBAAoB,CAAC;AAEjD,OAAO,aAAa,MAAM,0CAA0C,CAAC;AAErE,OAAO,kBAAkB,MAAM,gCAAgC,CAAC;AAChE,OAAO,SAAS,MAAM,gCAAgC,CAAC;AAEvD,eAAe;AACf,IAAM,KAAK,GAAG,eAAe,eAAI,eAAe,CAAC,CAAC;AAClD,IAAM,KAAK,GAAG,WAAW,CACvB,KAAK,EACL,0BAA0B,EAAE,EAC5B,eAAe,CACb,gBAAgB,CAAC,cAAc,CAAC,EAChC,oBAAoB,CAAC,gBAAgB,CAAC,eAAe,CAAC,EAAE,EAAE,YAAY,EAAE,WAAW,EAAE,EAAE,CAAC,CACzF,CACF,CAAC;AAEF,yBAAyB;AACzB,IAAM,cAAc,GAAG,cAAM,OAAA,oBAAC,SAAS,OAAG,EAAb,CAAa,CAAC;AAE3C,SAAS;AACT,QAAQ,CAAC,MAAM,CACb,oBAAC,aAAa;IACZ,oBAAC,QAAQ,IAAC,KAAK,EAAE,KAAK;QACpB,oBAAC,eAAe,IAAC,OAAO,EAAE,cAAc;YACtC,oBAAC,MAAM;gBACL,oBAAC,KAAK,IACJ,IAAI,EAAC,kBAAkB,EACvB,SAAS,EAAE,kBAAkB,EAC7B,KAAK,SACL;gBACF,oBAAC,KAAK,IAAC,MAAM,EAAE,cAAc,GAAI,CAC1B,CACO,CACT,CACG,EAChB,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAgB,CAC9C,CAAC","sourcesContent":["// Polyfills\nimport 'whatwg-fetch';\n\n// Enable Sentry for production environments\nimport { init } from '@sentry/browser';\n\nif (process.env.NODE_ENV === 'production' && process.env.SENTRY_DSN !== '') {\n  init({\n    dsn: process.env.SENTRY_DSN,\n    release: process.env.SOURCE_VERSION,\n    environment: process.env.SENTRY_ENV,\n  });\n}\n\n// We need this import to be first as it has the reset styles, and typography setup\nimport './App.scss';\n\n// Imports\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Switch, Route } from 'react-router';\n\nimport { createStore, applyMiddleware } from 'redux';\n\nimport { Provider } from 'react-redux';\nimport { createEpicMiddleware } from 'redux-observable';\nimport { routerMiddleware, ConnectedRouter } from 'react-router-redux';\n\nimport { StoreState } from './types';\nimport { combineReducers } from './lib/redux';\nimport { initialStateWithCachedData } from './lib/state';\nimport { defaultDeps, combineWrapEpics } from './lib/epic';\nimport browserHistory from './lib/browserHistory';\n\nimport schedulingDucks from './ducks/scheduling';\nimport schedulingEpics from './epics/scheduling';\n\nimport ErrorBoundary from './components/ErrorBoundary/ErrorBoundary';\n\nimport CalendarScheduling from '@src/routes/CalendarScheduling';\nimport ErrorPage from '@src/components/Base/ErrorPage';\n\n// Create Store\nconst ducks = combineReducers(...schedulingDucks);\nconst store = createStore<StoreState>(\n  ducks,\n  initialStateWithCachedData(),\n  applyMiddleware(\n    routerMiddleware(browserHistory),\n    createEpicMiddleware(combineWrapEpics(schedulingEpics), { dependencies: defaultDeps() }),\n  ),\n);\n\n// Handle Error Component\nconst ErrorComponent = () => <ErrorPage />;\n\n// Render\nReactDOM.render(\n  <ErrorBoundary>\n    <Provider store={store}>\n      <ConnectedRouter history={browserHistory}>\n        <Switch>\n          <Route\n            path=\"/:userSlug/:slug\"\n            component={CalendarScheduling}\n            exact\n          />\n          <Route render={ErrorComponent} />\n        </Switch>\n      </ConnectedRouter>\n    </Provider>\n  </ErrorBoundary>,\n  document.getElementById('app') as HTMLElement,\n);\n"]}]}