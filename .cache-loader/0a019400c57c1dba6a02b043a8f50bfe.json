{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/RightSidebar/components/ContactInfo/components/ContactInteractions/components/ConversationsPane/Conversation/index.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/RightSidebar/components/ContactInfo/components/ContactInteractions/components/ConversationsPane/Conversation/index.tsx","mtime":1675280254028},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IENvbnZlcnNhdGlvbiBmcm9tICcuL0NvbnZlcnNhdGlvbic7CmltcG9ydCB7IGNvbm5lY3QgfSBmcm9tICdyZWFjdC1yZWR1eCc7CmltcG9ydCB7IGNvbnRhY3RUaHJlYWRTZWxlY3QgfSBmcm9tICdAc3JjL2R1Y2tzL3RocmVhZHMnOwppbXBvcnQgeyB3aXRoUm91dGVyIH0gZnJvbSAncmVhY3Qtcm91dGVyJzsKdmFyIG1hcFN0YXRlVG9Qcm9wcyA9IGZ1bmN0aW9uIChzdGF0ZSwgb3duUHJvcHMpIHsKICAgIHJldHVybiB7CiAgICAgICAgc2VsZWN0ZWRNYWlsYm94OiBzdGF0ZS5tYWlsYm94LAogICAgICAgIHNlbGVjdGVkQ29udmVyc2F0aW9uOiBzdGF0ZS5zZWxlY3RlZENvbnRhY3RUaHJlYWQsCiAgICAgICAgc2VsZWN0ZWRBY2NvdW50OiBzdGF0ZS5sZWZ0U2lkZWJhci5zZWxlY3RlZEFjY291bnQsCiAgICB9Owp9Owp2YXIgbWFwRGlzcGF0Y2hUb1Byb3BzID0gZnVuY3Rpb24gKGRpc3BhdGNoKSB7IHJldHVybiAoewogICAgc2VsZWN0Q29udmVyc2F0aW9uOiBmdW5jdGlvbiAoY29udmVyc2F0aW9uKSB7IHJldHVybiBkaXNwYXRjaChjb250YWN0VGhyZWFkU2VsZWN0KGNvbnZlcnNhdGlvbikpOyB9LAp9KTsgfTsKZXhwb3J0IGRlZmF1bHQgY29ubmVjdChtYXBTdGF0ZVRvUHJvcHMsIG1hcERpc3BhdGNoVG9Qcm9wcykod2l0aFJvdXRlcihDb252ZXJzYXRpb24pKTsK"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/RightSidebar/components/ContactInfo/components/ContactInteractions/components/ConversationsPane/Conversation/index.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/RightSidebar/components/ContactInfo/components/ContactInteractions/components/ConversationsPane/Conversation/index.tsx"],"names":[],"mappings":"AAAA,OAAO,YAAsC,MAAM,gBAAgB,CAAC;AACpE,OAAO,EAAE,OAAO,EAAY,MAAM,aAAa,CAAC;AAEhD,OAAO,EAAE,mBAAmB,EAAE,MAAM,oBAAoB,CAAC;AACzD,OAAO,EAAE,UAAU,EAAE,MAAM,cAAc,CAAC;AAE1C,IAAM,eAAe,GAAG,UAAC,KAAiB,EAAE,QAAe;IACzD,OAAO;QACL,eAAe,EAAE,KAAK,CAAC,OAAO;QAC9B,oBAAoB,EAAE,KAAK,CAAC,qBAAqB;QACjD,eAAe,EAAE,KAAK,CAAC,WAAW,CAAC,eAAe;KACnD,CAAC;AACJ,CAAC,CAAC;AAEF,IAAM,kBAAkB,GAAG,UAAC,QAA8B,IAAoB,OAAA,CAAC;IAC7E,kBAAkB,EAAE,UAAC,YAAoB,IAAK,OAAA,QAAQ,CAAC,mBAAmB,CAAC,YAAY,CAAC,CAAC,EAA3C,CAA2C;CAC1F,CAAC,EAF4E,CAE5E,CAAC;AAEH,eAAe,OAAO,CAAC,eAAe,EAAE,kBAAkB,CAAC,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC","sourcesContent":["import Conversation, { Props, DispatchProps } from './Conversation';\nimport { connect, Dispatch } from 'react-redux';\nimport { StoreState, Thread } from '@src/types';\nimport { contactThreadSelect } from '@src/ducks/threads';\nimport { withRouter } from 'react-router';\n\nconst mapStateToProps = (state: StoreState, ownProps: Props): any => {\n  return {\n    selectedMailbox: state.mailbox,\n    selectedConversation: state.selectedContactThread,\n    selectedAccount: state.leftSidebar.selectedAccount,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<StoreState>): DispatchProps => ({\n  selectConversation: (conversation: Thread) => dispatch(contactThreadSelect(conversation)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Conversation));\n"]}]}