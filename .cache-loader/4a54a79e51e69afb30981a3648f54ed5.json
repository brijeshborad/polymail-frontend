{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Accounts/routes/AccountDetail/index.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Accounts/routes/AccountDetail/index.ts","mtime":1675280254095},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4JzsKaW1wb3J0IHsgd2l0aFJvdXRlciB9IGZyb20gJ3JlYWN0LXJvdXRlcic7CmltcG9ydCB7IGxhc3QgfSBmcm9tICdsb2Rhc2gnOwppbXBvcnQgeyBwcmVmZXJlbmNlc1VwZGF0ZSB9IGZyb20gJ0BzcmMvZHVja3MvbWUnOwppbXBvcnQgeyBzZWxlY3RBY2NvdW50cywgc2VsZWN0QWxpYXNlcywgYWNjb3VudFVwZGF0ZSwgYWNjb3VudERlbGV0ZSwgc2lnbmF0dXJlSW1hZ2VBZGQsIHNpZ25hdHVyZUltYWdlUmVtb3ZlLCB9IGZyb20gJ0BzcmMvZHVja3MvYWNjb3VudHMnOwppbXBvcnQgeyBzZWxlY3RBdHRhY2htZW50TWV0YXNGb3JSZXNvdXJjZSB9IGZyb20gJ0BzcmMvZHVja3MvZHJhZnRzJzsKaW1wb3J0IEFjY291bnREZXRhaWwgZnJvbSAnLi9BY2NvdW50RGV0YWlsJzsKdmFyIG1hcFN0YXRlVG9Qcm9wcyA9IGZ1bmN0aW9uIChzdGF0ZSwgb3duUHJvcHMpIHsKICAgIHZhciBwYXRoID0gb3duUHJvcHMubWF0Y2ggJiYgb3duUHJvcHMubWF0Y2gucGFyYW1zLmFjY291bnRJZDsKICAgIHZhciBhY2NvdW50cyA9IHNlbGVjdEFjY291bnRzKHN0YXRlKTsKICAgIC8vIFRPRE8oU0hJTik6IEhhbmRsZSBzYWZlIGFjY291bnQKICAgIHZhciBhY2NvdW50ID0gbGFzdChhY2NvdW50cy5maWx0ZXIoZnVuY3Rpb24gKGEpIHsgcmV0dXJuIGEuaWQgPT09IHBhdGg7IH0pKTsKICAgIHJldHVybiB7CiAgICAgICAgcHJlZmVyZW5jZXM6IHN0YXRlLnByZWZlcmVuY2VzLAogICAgICAgIGFjY291bnQ6IGFjY291bnQsCiAgICAgICAgYWxpYXNlczogc2VsZWN0QWxpYXNlcyhzdGF0ZSwgYWNjb3VudCksCiAgICAgICAgLy8gVE9ETyhTSElOKTogQWJzdHJhY3Qgc2VsZWN0b3IgZm9yIGF0dGFjaG1lbnQgbWV0YXMKICAgICAgICBhdHRhY2htZW50TWV0YXM6IGFjY291bnQgJiYgc2VsZWN0QXR0YWNobWVudE1ldGFzRm9yUmVzb3VyY2Uoc3RhdGUsIGFjY291bnQuaWQpIHx8IFtdLAogICAgfTsKfTsKdmFyIG1hcERpc3BhdGNoVG9Qcm9wcyA9IGZ1bmN0aW9uIChkaXNwYXRjaCkgeyByZXR1cm4gKHsKICAgIHVwZGF0ZVByZWZlcmVuY2VzOiBmdW5jdGlvbiAocHJlZnMpIHsgcmV0dXJuIGRpc3BhdGNoKHByZWZlcmVuY2VzVXBkYXRlKHByZWZzKSk7IH0sCiAgICB1cGRhdGVBY2NvdW50OiBmdW5jdGlvbiAoYWNjb3VudCkgeyByZXR1cm4gZGlzcGF0Y2goYWNjb3VudFVwZGF0ZShhY2NvdW50KSk7IH0sCiAgICBkZWxldGVBY2NvdW50OiBmdW5jdGlvbiAoYWNjb3VudCkgeyByZXR1cm4gZGlzcGF0Y2goYWNjb3VudERlbGV0ZShhY2NvdW50KSk7IH0sCiAgICBhZGRTaWduYXR1cmVJbWFnZTogZnVuY3Rpb24gKG1ldGEpIHsgcmV0dXJuIGRpc3BhdGNoKHNpZ25hdHVyZUltYWdlQWRkKG1ldGEpKTsgfSwKICAgIHJlbW92ZVNpZ25hdHVyZUltYWdlOiBmdW5jdGlvbiAobWV0YSkgeyByZXR1cm4gZGlzcGF0Y2goc2lnbmF0dXJlSW1hZ2VSZW1vdmUobWV0YSkpOyB9LAp9KTsgfTsKZXhwb3J0IGRlZmF1bHQgd2l0aFJvdXRlcihjb25uZWN0KG1hcFN0YXRlVG9Qcm9wcywgbWFwRGlzcGF0Y2hUb1Byb3BzKShBY2NvdW50RGV0YWlsKSk7Cg=="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Accounts/routes/AccountDetail/index.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Accounts/routes/AccountDetail/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAY,MAAM,aAAa,CAAC;AAChD,OAAO,EAAuB,UAAU,EAAE,MAAM,cAAc,CAAC;AAC/D,OAAO,EAAE,IAAI,EAAE,MAAM,QAAQ,CAAC;AAG9B,OAAO,EAAE,iBAAiB,EAAE,MAAM,eAAe,CAAC;AAClD,OAAO,EACL,cAAc,EACd,aAAa,EACb,aAAa,EACb,aAAa,EACb,iBAAiB,EACjB,oBAAoB,GACpB,MAAM,qBAAqB,CAAC;AAC9B,OAAO,EAAE,gCAAgC,EAAE,MAAM,mBAAmB,CAAC;AACrE,OAAO,aAAuC,MAAM,iBAAiB,CAAC;AAEtE,IAAM,eAAe,GAAG,UAAC,KAAiB,EAAE,QAAkC;IAC5E,IAAM,IAAI,GAAW,QAAQ,CAAC,KAAK,IAAI,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC;IACvE,IAAM,QAAQ,GAAc,cAAc,CAAC,KAAK,CAAC,CAAC;IAElD,kCAAkC;IAClC,IAAM,OAAO,GAAY,IAAI,CAC3B,QAAQ,CAAC,MAAM,CAAC,UAAC,CAAU,IAAK,OAAA,CAAC,CAAC,EAAE,KAAK,IAAI,EAAb,CAAa,CAAC,CAC9C,CAAC;IAEH,OAAO;QACL,WAAW,EAAE,KAAK,CAAC,WAAW;QAC9B,OAAO,SAAA;QACP,OAAO,EAAE,aAAa,CAAC,KAAK,EAAE,OAAO,CAAC;QACtC,qDAAqD;QACrD,eAAe,EAAE,OAAO,IAAI,gCAAgC,CAAC,KAAK,EAAE,OAAO,CAAC,EAAE,CAAC,IAAI,EAAE;KACtF,CAAC;AACJ,CAAC,CAAC;AAEF,IAAM,kBAAkB,GAAG,UAAC,QAA8B,IAAoB,OAAA,CAAC;IAC7E,iBAAiB,EAAE,UAAC,KAAkB,IAAK,OAAA,QAAQ,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,EAAlC,CAAkC;IAC7E,aAAa,EAAE,UAAC,OAAgB,IAAK,OAAA,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,EAAhC,CAAgC;IACrE,aAAa,EAAE,UAAC,OAAgB,IAAK,OAAA,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,EAAhC,CAAgC;IACrE,iBAAiB,EAAE,UAAA,IAAI,IAAI,OAAA,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,EAAjC,CAAiC;IAC5D,oBAAoB,EAAE,UAAA,IAAI,IAAI,OAAA,QAAQ,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,EAApC,CAAoC;CACnE,CAAC,EAN4E,CAM5E,CAAC;AAEH,eAAe,UAAU,CAAC,OAAO,CAC/B,eAAe,EAAE,kBAAkB,CACpC,CAAC,aAAa,CAAC,CAAC,CAAC","sourcesContent":["import { connect, Dispatch } from 'react-redux';\nimport { RouteComponentProps, withRouter } from 'react-router';\nimport { last } from 'lodash';\n\nimport { StoreState, Account, Preferences } from '@src/types';\nimport { preferencesUpdate } from '@src/ducks/me';\nimport {\n  selectAccounts,\n  selectAliases,\n  accountUpdate,\n  accountDelete,\n  signatureImageAdd,\n  signatureImageRemove,\n } from '@src/ducks/accounts';\nimport { selectAttachmentMetasForResource } from '@src/ducks/drafts';\nimport AccountDetail, { Props, DispatchProps } from './AccountDetail';\n\nconst mapStateToProps = (state: StoreState, ownProps: RouteComponentProps<any>): Props => {\n  const path: string = ownProps.match && ownProps.match.params.accountId;\n  const accounts: Account[] = selectAccounts(state);\n\n  // TODO(SHIN): Handle safe account\n  const account: Account = last(\n    accounts.filter((a: Account) => a.id === path),\n  )!;\n\n  return {\n    preferences: state.preferences,\n    account,\n    aliases: selectAliases(state, account),\n    // TODO(SHIN): Abstract selector for attachment metas\n    attachmentMetas: account && selectAttachmentMetasForResource(state, account.id) || [],\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<StoreState>): DispatchProps => ({\n  updatePreferences: (prefs: Preferences) => dispatch(preferencesUpdate(prefs)),\n  updateAccount: (account: Account) => dispatch(accountUpdate(account)),\n  deleteAccount: (account: Account) => dispatch(accountDelete(account)),\n  addSignatureImage: meta => dispatch(signatureImageAdd(meta)),\n  removeSignatureImage: meta => dispatch(signatureImageRemove(meta)),\n});\n\nexport default withRouter(connect<Props, DispatchProps>(\n  mapStateToProps, mapDispatchToProps,\n)(AccountDetail));\n"]}]}