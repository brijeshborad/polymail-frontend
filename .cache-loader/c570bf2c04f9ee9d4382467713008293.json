{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/RightSidebar/components/LinkExtractor/LinkExtractor.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/RightSidebar/components/LinkExtractor/LinkExtractor.tsx","mtime":1675280254031},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/RightSidebar/components/LinkExtractor/LinkExtractor.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/RightSidebar/components/LinkExtractor/LinkExtractor.tsx"],"names":[],"mappings":";;;;;;;;;;;;;AACA,OAAO,KAAK,MAAM,OAAO,CAAC;AAG1B,OAAO,sBAAsB,CAAC;AAC9B,OAAO,EAAE,WAAW,EAAE,MAAM,kBAAkB,CAAC;AAC/C,OAAO,EAAE,OAAO,EAAU,MAAM,YAAY,CAAC;AAC7C,OAAO,UAAU,MAAM,YAAY,CAAC;AACpC,OAAO,EAAE,WAAW,EAAE,UAAU,EAAE,MAAM,oBAAoB,CAAC;AAC7D,OAAO,cAAc,MAAM,yBAAyB,CAAC;AAoBrD,yDAAyD;AACzD;IAAmC,iCAAiD;IAIlF;QAAA,YACE,iBAAO,SAMR;QAmDD,oBAAc,GAAG,UAAC,GAAqB;YACrC,KAAI,CAAC,KAAK,GAAG,GAAG,CAAC;QACnB,CAAC,CAAA;QAED,wBAAkB,GAAG,UAAC,GAAmB;YACvC,KAAI,CAAC,cAAc,GAAG,GAAG,CAAC;QAC5B,CAAC,CAAA;QAED,mBAAa,GAAG,UAAC,CAAwC;YACjD,IAAA,gBAA6C,EAA3C,gCAAa,EAAE,gCAA4B,CAAC;YAEpD,IAAI,OAAO,GAAG,KAAK,CAAC;YACpB,QAAQ,CAAC,CAAC,OAAO,EAAE;gBACjB,KAAK,OAAO,CAAC,EAAE,CAAC,CAAC;oBACf,OAAO,GAAG,IAAI,CAAC;oBACf,IAAM,UAAQ,GAAG,aAAa,GAAG,CAAC,CAAC;oBACnC,IAAI,UAAQ,GAAG,CAAC,EAAE;wBAChB,MAAM;qBACP;oBACD,KAAI,CAAC,QAAQ,CACX,EAAE,aAAa,EAAE,UAAQ,EAAE,EAC3B;wBACE,IAAM,IAAI,GAAG,QAAQ,CAAC,cAAc,CAAC,yBAAuB,UAAU,CAAC,CAAC;wBACxE,IAAI,IAAI,EAAE;4BACR,IAAM,MAAM,GAAG,KAAI,CAAC,cAAc,CAAC;4BACnC,IAAM,OAAO,GAAG,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;4BACrE,IAAI,OAAO,EAAE;gCACX,IAAI,CAAC,cAAc,CAAC;oCAClB,QAAQ,EAAE,QAAQ;oCAClB,KAAK,EAAE,OAAO;oCACd,MAAM,EAAE,SAAS;iCAClB,CAAC,CAAC;6BACJ;yBACF;oBACH,CAAC,CACF,CAAC;oBACF,MAAM;iBACP;gBACD,KAAK,OAAO,CAAC,IAAI,CAAC,CAAC;oBACjB,OAAO,GAAG,IAAI,CAAC;oBACf,IAAM,UAAQ,GAAG,aAAa,GAAG,CAAC,CAAC;oBACnC,IAAI,UAAQ,IAAI,aAAa,CAAC,MAAM,EAAE;wBACpC,OAAO,GAAG,IAAI,CAAC;wBACf,MAAM;qBACP;oBAED,KAAI,CAAC,QAAQ,CACX,EAAE,aAAa,EAAE,UAAQ,EAAE,EAC3B;wBACE,IAAM,IAAI,GAAG,QAAQ,CAAC,cAAc,CAAC,yBAAuB,UAAU,CAAC,CAAC;wBACxE,IAAI,IAAI,EAAE;4BACR,IAAM,MAAM,GAAG,KAAI,CAAC,cAAc,CAAC;4BACnC,IAAM,UAAU,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC;gCACxE,CAAC,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC;4BAC3C,IAAI,UAAU,EAAE;gCACd,IAAI,CAAC,cAAc,CAAC;oCAClB,QAAQ,EAAE,QAAQ;oCAClB,KAAK,EAAE,KAAK;oCACZ,MAAM,EAAE,SAAS;iCAClB,CAAC,CAAC;6BACJ;yBACF;oBACH,CAAC,CACF,CAAC;oBACF,MAAM;iBACP;gBACD,KAAK,OAAO,CAAC,GAAG;oBACd,OAAO,GAAG,IAAI,CAAC;oBACf,KAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;oBAClB,MAAM;gBACR,KAAK,OAAO,CAAC,KAAK;oBAChB,OAAO,GAAG,IAAI,CAAC;oBACf,IAAI,aAAa,CAAC,MAAM,EAAE;wBACxB,IAAM,IAAI,GAAG,aAAa,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC;wBAC/C,IAAI,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,UAAU,CAAC,QAAQ,GAAG;4BAC9B,CAAC,CAAC,eAAe,EAAE,CAAC;4BACpB,CAAC,CAAC,cAAc,EAAE,CAAC;4BACnB,cAAc,CAAC,IAAI,CAAC,8BAA4B,kBAAkB,CAAC,IAAI,CAAG,CAAC,CAAC;4BAC5E,OAAO;yBACR;wBACD,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;wBAC5B,OAAO;qBACR;oBACD,MAAM;gBACR;oBACE,MAAM;aACT;YAED,IAAI,OAAO,EAAE;gBACX,CAAC,CAAC,eAAe,EAAE,CAAC;gBACpB,CAAC,CAAC,cAAc,EAAE,CAAC;gBACnB,OAAO;aACR;QACH,CAAC,CAAA;QAED,iBAAW,GAAG;YACZ,KAAI,CAAC,QAAQ,CAAC;gBACZ,YAAY,EAAE,IAAI;gBAClB,aAAa,EAAE,CAAC;aACjB,CAAC,CAAC;QACL,CAAC,CAAA;QAED,gBAAU,GAAG;YACX,KAAI,CAAC,QAAQ,CACX,EAAE,YAAY,EAAE,KAAK,EAAE,EACvB;gBACE,IAAM,UAAU,GAAG,QAAQ,CAAC,sBAAsB,CAAC,sBAAsB,CAAC,CAAC;gBAC3E,IAAM,OAAO,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;gBAC9B,IAAI,OAAO,IAAI,OAAO,YAAY,WAAW,EAAE;oBAC7C,OAAO,CAAC,KAAK,EAAE,CAAC;iBACjB;YACH,CAAC,CACF,CAAC;QACJ,CAAC,CAAA;QAED,uBAAiB,GAAG,UAAC,CAAoC;YAC/C,IAAA,yBAAK,CAAgB;YAC7B,IAAM,KAAK,GAAG,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;YAEzD,IAAI,gBAAgB,GAAG,KAAK,CAAC,MAAM,CAAC,UAAA,CAAC;gBACnC,OAAA,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC;YAAhE,CAAgE,CACjE,CAAC;YACF,IAAI,KAAK,KAAK,EAAE,EAAG;gBACjB,gBAAgB,GAAG,WAAW,CAAC,gBAAgB,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;aAClE;YAED,KAAI,CAAC,QAAQ,CACX;gBACE,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC,KAAK;gBAC5B,aAAa,EAAE,CAAC;gBAChB,aAAa,EAAE,gBAAgB;aAChC,CACF,CAAC;QACJ,CAAC,CAAA;QAED,iBAAW,GAAG;YACJ,IAAA,2CAAc,CAAgB;YACtC,IAAM,SAAS,GAAG,CAAC,CAAC,cAAc;gBACjC,CAAC,CAAC,qCAAqC;gBACvC,CAAC,CAAC,0BAA0B,CAAC;YAC9B,OAAO,CACL,6BAAK,SAAS,EAAC,wBAAwB;gBACrC,6BAAK,SAAS,EAAC,eAAe;oBAC5B,6BAAK,SAAS,EAAC,OAAO,qBAEhB;oBACN,6BAAK,SAAS,EAAC,aAAa,IACzB,SAAS,CACN,CACF,CACF,CACP,CAAC;QACJ,CAAC,CAAA;QAhNC,KAAI,CAAC,KAAK,GAAG;YACX,aAAa,EAAE,EAAE;YACjB,KAAK,EAAE,EAAE;YACT,aAAa,EAAE,CAAC;SACjB,CAAC;;IACJ,CAAC;IAED,yCAAiB,GAAjB;QAAA,iBAmBC;QAlBO,IAAA,eAAoD,EAAlD,kCAAc,EAAE,gBAAK,EAAE,8BAA2B,CAAC;QAC3D,uCAAuC;QACvC,WAAW,CAAC,UAAU,CAAC,mBAAmB,CAAC,CAAC;QAE5C,iCAAiC;QACjC,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,cAAc,EAAE;YACnC,YAAY,EAAE,CAAC;SAChB;QAED,0BAA0B;QAC1B,IAAI,CAAC,QAAQ,CACX;YACE,aAAa,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK;SAChC,EACD;;YACE,MAAA,KAAI,CAAC,KAAK,0CAAE,KAAK,GAAG;QACtB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,0CAAkB,GAAlB,UAAmB,QAAe;QAC1B,IAAA,eAA+D,EAA7D,kCAAc,EAAE,8BAAY,EAAE,gBAAK,EAAE,wBAAwB,CAAC;QACtE,IAAM,SAAS,GAAG,QAAQ,CAAC,cAAc,CAAC;QAClC,IAAA,8CAAgB,CAAgB;QAExC,iCAAiC;QACjC,IAAI,CAAC,CAAC,cAAc,IAAI,cAAc,CAAC,EAAE,MAAK,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,EAAE,CAAA,EAAE;YAC3D,IAAI,SAAS,EAAE;gBACb,YAAY,EAAE,CAAC;aAChB;iBAAM;gBACL,IAAI,CAAC,QAAQ,CAAC,EAAE,gBAAgB,EAAE,IAAI,EAAE,CAAC,CAAC;aAC3C;SACF;QAED,sCAAsC;QACtC,IAAI,gBAAgB,IAAI,SAAS,EAAE;YACjC,IAAI,CAAC,QAAQ,CACX,EAAE,gBAAgB,EAAE,KAAK,EAAE,EAC3B,cAAM,OAAA,YAAY,EAAE,EAAd,CAAc,CACrB,CAAC;SACH;QAED,0BAA0B;QAC1B,IAAI,KAAK,KAAK,QAAQ,CAAC,KAAK,EAAE;YAC5B,IAAI,CAAC,QAAQ,CAAC,EAAE,aAAa,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;SACpD;IACH,CAAC;IA4JD,8BAAM,GAAN;QAAA,iBA2DC;QA1DS,IAAA,wBAAK,CAAgB;QACvB,IAAA,eAAoD,EAAlD,gBAAK,EAAE,gCAAa,EAAE,gCAA4B,CAAC;QAC3D,IAAM,WAAW,GAAG,cAAc,CAAC;QAEnC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;YACjB,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC;SAC3B;QAED,IAAM,QAAQ,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC;QACrD,IAAM,eAAe,GAAG,CAAC,CAAC,KAAK;YAC7B,CAAC,CAAC,CAAC;gBAAO,aAAa,CAAC,MAAM;;gBAAY,+BAAI,KAAK,CAAK,CAAO,CAAC;YAChE,CAAC,CAAC,CAAC;gBAAM;oBAAI,KAAK,CAAC,MAAM;;oBAAG,QAAQ,CAAK;8CAAkC,CAAC,CAAC;QAE/E,OAAO,CACL,6BAAK,SAAS,EAAC,wBAAwB;YACrC,6BAAK,SAAS,EAAC,eAAe;gBAC5B,6BAAK,SAAS,EAAC,OAAO,qBAEhB;gBACN,6BAAK,SAAS,EAAC,aAAa,IACzB,eAAe,CACZ,CACF;YACN,6BAAK,SAAS,EAAC,iBAAiB;gBAC9B,+BACE,GAAG,EAAC,MAAM,EACV,SAAS,EAAC,eAAe,EACzB,WAAW,EAAE,WAAW,EACxB,GAAG,EAAE,IAAI,CAAC,cAAc,EACxB,SAAS,EAAE,IAAI,CAAC,aAAa,EAC7B,QAAQ,EAAE,IAAI,CAAC,iBAAiB,EAChC,KAAK,EAAE,KAAK,EACZ,UAAU,EAAE,KAAK,EACjB,OAAO,EAAE,IAAI,CAAC,WAAW,EACzB,MAAM,EAAE,IAAI,CAAC,UAAU,GACvB,CACE;YACN,6BACE,GAAG,EAAE,IAAI,CAAC,kBAAkB,EAC5B,SAAS,EAAC,OAAO;gBAEhB,CAAC,aAAa,CAAC,MAAM,IAAI,CACxB,6BAAK,SAAS,EAAC,aAAa,IACzB,yBAAuB,KAAO,CAC3B,CACP;gBACA,CAAC,CAAC,aAAa,CAAC,MAAM,IAAI,aAAa,CAAC,GAAG,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,CACrD,oBAAC,iBAAiB,IAChB,KAAK,EAAE,CAAC,EACR,GAAG,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,IAAI,GAAG,GAAG,EAC3B,IAAI,EAAE,CAAC,EACP,QAAQ,EAAE,aAAa,KAAK,CAAC,EAC7B,OAAO,EAAE,KAAI,CAAC,KAAK,CAAC,YAAY,GAChC,CACH,EARsD,CAQtD,CAAC,CACE,CACF,CACP,CAAC;IACJ,CAAC;IACH,oBAAC;AAAD,CAAC,AApRD,CAAmC,KAAK,CAAC,aAAa,GAoRrD;;AAQD,IAAM,iBAAiB,GAAG,UAAC,KAA6B;IAC9C,IAAA,iBAAI,EAAE,mBAAK,EAAE,yBAAQ,EAAE,uBAAO,CAAW;IAEjD,IAAM,WAAW,GAAG,UAAC,CAAgC;QACnD,CAAC,CAAC,eAAe,EAAE,CAAC;QACpB,CAAC,CAAC,cAAc,EAAE,CAAC;QACnB,IAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAEvB,6BAA6B;QAC7B,IAAI,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,UAAU,CAAC,QAAQ,GAAG;YAC9B,cAAc,CAAC,IAAI,CAAC,8BAA4B,kBAAkB,CAAC,IAAI,CAAG,CAAC,CAAC;YAC5E,OAAO;SACR;QACD,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IAC9B,CAAC,CAAC;IAEF,OAAO,CACL,6BACE,SAAS,EACP,UAAU,CAAC,qBAAqB,EAAE;YAChC,QAAQ,EAAE,CAAC,CAAC,QAAQ,IAAI,CAAC,CAAC,OAAO;SAClC,CAAC,EAEJ,EAAE,EAAE,yBAAuB,KAAO,EAClC,OAAO,EAAE,WAAW;QAEpB,6BAAK,SAAS,EAAC,OAAO,IACnB,IAAI,CAAC,KAAK,CACP;QACN,6BACE,SAAS,EAAC,MAAM,IAEf,IAAI,CAAC,IAAI,CACN,CACF,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,aAAa,CAAC","sourcesContent":["\nimport React from 'react';\nimport { AnchorElement } from '@src/lib/html';\n\nimport './LinkExtractor.scss';\nimport { sortMatches } from '@src/lib/matcher';\nimport { KeyCode, Thread } from '@src/types';\nimport classNames from 'classnames';\nimport { recordEvent, UserEvents } from '@src/lib/analytics';\nimport browserHistory from '@src/lib/browserHistory';\n\nexport interface Props {\n  links: AnchorElement[];\n  selectedThread?: Thread;\n  hasBodies?: boolean;\n}\n\nexport interface DispatchProps {\n  extractLinks: () => void;\n}\n\nexport interface State {\n  filteredLinks: AnchorElement[];\n  query: string;\n  selectedIndex: number;\n  fetchAfterBodies?: boolean;\n  inputFocused?: boolean;\n}\n\n// TODO(SHIN): Need to identify when bodies are available\nexport class LinkExtractor extends React.PureComponent<Props & DispatchProps, State> {\n  input: HTMLInputElement;\n  linksContainer: HTMLElement;\n\n  constructor() {\n    super();\n    this.state = {\n      filteredLinks: [],\n      query: '',\n      selectedIndex: 0,\n    };\n  }\n\n  componentDidMount() {\n    const { selectedThread, links, extractLinks } = this.props;\n    // Track when user opens link extractor\n    recordEvent(UserEvents.LinkExtractorOpened);\n\n    // Handle initial fetch if needed\n    if (!links.length && selectedThread) {\n      extractLinks();\n    }\n\n    // Set initial link values\n    this.setState(\n      {\n        filteredLinks: this.props.links,\n      },\n      () => {\n        this.input?.focus();\n      },\n    );\n  }\n\n  componentDidUpdate(oldProps: Props) {\n    const { selectedThread, extractLinks, links, hasBodies } = this.props;\n    const oldThread = oldProps.selectedThread;\n    const { fetchAfterBodies } = this.state;\n\n    // Handle initial fetch if needed\n    if (!!selectedThread && selectedThread.id !== oldThread?.id) {\n      if (hasBodies) {\n        extractLinks();\n      } else {\n        this.setState({ fetchAfterBodies: true });\n      }\n    }\n\n    // Handle delayed fetch when necessary\n    if (fetchAfterBodies && hasBodies) {\n      this.setState(\n        { fetchAfterBodies: false },\n        () => extractLinks(),\n      );\n    }\n\n    // Set initial link values\n    if (links !== oldProps.links) {\n      this.setState({ filteredLinks: this.props.links });\n    }\n  }\n\n  handleInputRef = (ref: HTMLInputElement) => {\n    this.input = ref;\n  }\n\n  handleContainerRef = (ref: HTMLDivElement) => {\n    this.linksContainer = ref;\n  }\n\n  handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    const { selectedIndex, filteredLinks } = this.state;\n\n    let handled = false;\n    switch (e.keyCode) {\n      case KeyCode.Up: {\n        handled = true;\n        const newIndex = selectedIndex - 1;\n        if (newIndex < 0) {\n          break;\n        }\n        this.setState(\n          { selectedIndex: newIndex },\n          () => {\n            const item = document.getElementById(`link-extractor-cell-${newIndex}`);\n            if (item) {\n              const parent = this.linksContainer;\n              const overTop = item.offsetTop - parent.offsetTop < parent.scrollTop;\n              if (overTop) {\n                item.scrollIntoView({\n                  behavior: 'smooth',\n                  block: 'start',\n                  inline: 'nearest',\n                });\n              }\n            }\n          },\n        );\n        break;\n      }\n      case KeyCode.Down: {\n        handled = true;\n        const newIndex = selectedIndex + 1;\n        if (newIndex >= filteredLinks.length) {\n          handled = true;\n          break;\n        }\n\n        this.setState(\n          { selectedIndex: newIndex },\n          () => {\n            const item = document.getElementById(`link-extractor-cell-${newIndex}`);\n            if (item) {\n              const parent = this.linksContainer;\n              const overBottom = (item.offsetTop - parent.offsetTop + item.clientHeight) >\n                (parent.scrollTop + parent.clientHeight);\n              if (overBottom) {\n                item.scrollIntoView({\n                  behavior: 'smooth',\n                  block: 'end',\n                  inline: 'nearest',\n                });\n              }\n            }\n          },\n        );\n        break;\n      }\n      case KeyCode.Esc:\n        handled = true;\n        this.input.blur();\n        break;\n      case KeyCode.Enter:\n        handled = true;\n        if (filteredLinks.length) {\n          const href = filteredLinks[selectedIndex].href;\n          if (href?.startsWith('mailto')) {\n            e.stopPropagation();\n            e.preventDefault();\n            browserHistory.push(`/mail/all/compose?mailto=${encodeURIComponent(href)}`);\n            return;\n          }\n          window.open(href, '_blank');\n          return;\n        }\n        break;\n      default:\n        break;\n    }\n\n    if (handled) {\n      e.stopPropagation();\n      e.preventDefault();\n      return;\n    }\n  }\n\n  handleFocus = () => {\n    this.setState({\n      inputFocused: true,\n      selectedIndex: 0,\n    });\n  }\n\n  handleBlur = () => {\n    this.setState(\n      { inputFocused: false },\n      () => {\n        const threadList = document.getElementsByClassName('infinite-thread-list');\n        const element = threadList[0];\n        if (element && element instanceof HTMLElement) {\n          element.focus();\n        }\n      },\n    );\n  }\n\n  handleInputChange = (e: React.FormEvent<HTMLInputElement>) => {\n    const { links } = this.props;\n    const query = e.currentTarget.value.trim().toLowerCase();\n\n    let newFilteredLinks = links.filter(l =>\n      !!(l.value.toLowerCase() + l.href.toLowerCase()).includes(query),\n    );\n    if (query !== '')  {\n      newFilteredLinks = sortMatches(newFilteredLinks, query, 'value');\n    }\n\n    this.setState(\n      {\n        query: e.currentTarget.value,\n        selectedIndex: 0,\n        filteredLinks: newFilteredLinks,\n      },\n    );\n  }\n\n  renderEmpty = () => {\n    const { selectedThread } = this.props;\n    const emptyCopy = !!selectedThread\n     ? 'No links found in this conversation'\n     : 'No conversation selected';\n    return (\n      <div className=\"link-extractor-sidebar\">\n        <div className=\"title-section\">\n          <div className=\"title\">\n            Link Extractor\n          </div>\n          <div className=\"description\">\n            {emptyCopy}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const { links } = this.props;\n    const { query, filteredLinks, selectedIndex } = this.state;\n    const placeholder = 'Search Links';\n\n    if (!links.length) {\n      return this.renderEmpty();\n    }\n\n    const linkCopy = links.length > 1 ? 'links' : 'link';\n    const descriptionCopy = !!query\n      ? (<span>{filteredLinks.length} matching: <b>{query}</b></span>)\n      : (<span><b>{links.length} {linkCopy}</b> found in this conversation</span>);\n\n    return (\n      <div className=\"link-extractor-sidebar\">\n        <div className=\"title-section\">\n          <div className=\"title\">\n            Link Extractor\n          </div>\n          <div className=\"description\">\n            {descriptionCopy}\n          </div>\n        </div>\n        <div className=\"input-container\">\n          <input\n            dir=\"auto\"\n            className=\"control-input\"\n            placeholder={placeholder}\n            ref={this.handleInputRef}\n            onKeyDown={this.handleKeyDown}\n            onChange={this.handleInputChange}\n            value={query}\n            spellCheck={false}\n            onFocus={this.handleFocus}\n            onBlur={this.handleBlur}\n          />\n        </div>\n        <div\n          ref={this.handleContainerRef}\n          className=\"links\"\n        >\n          {!filteredLinks.length && (\n            <div className=\"empty-state\">\n              {`No links found for: ${query}`}\n            </div>\n          )}\n          {!!filteredLinks.length && filteredLinks.map((l, i) => (\n            <LinkExtractorCell\n              index={i}\n              key={l.value + l.href + 'i'}\n              link={l}\n              selected={selectedIndex === i}\n              focused={this.state.inputFocused}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\ninterface LinkExtractorCellProps {\n  link: AnchorElement;\n  index: number;\n  selected?: boolean;\n  focused?: boolean;\n}\nconst LinkExtractorCell = (props: LinkExtractorCellProps) => {\n  const { link, index, selected, focused } = props;\n\n  const handleClick = (e: React.MouseEvent<HTMLElement>) => {\n    e.stopPropagation();\n    e.preventDefault();\n    const href = link.href;\n\n    // Custom handling for mailto\n    if (href?.startsWith('mailto')) {\n      browserHistory.push(`/mail/all/compose?mailto=${encodeURIComponent(href)}`);\n      return;\n    }\n    window.open(href, '_blank');\n  };\n\n  return (\n    <div\n      className={\n        classNames('link-extractor-cell', {\n          selected: !!selected && !!focused,\n        })\n      }\n      id={`link-extractor-cell-${index}`}\n      onClick={handleClick}\n    >\n      <div className=\"title\">\n        {link.value}\n      </div>\n      <div\n        className=\"href\"\n      >\n        {link.href}\n      </div>\n    </div>\n  );\n};\n\nexport default LinkExtractor;\n"]}]}