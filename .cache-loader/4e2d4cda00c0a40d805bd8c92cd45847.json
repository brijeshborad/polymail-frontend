{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/contactNotes.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/contactNotes.ts","mtime":1675280254047},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9hOwppbXBvcnQgdXBkYXRlIGZyb20gJ2ltbXV0YWJpbGl0eS1oZWxwZXInOwppbXBvcnQgeyBjcmVhdGUgfSBmcm9tICdAc3JjL2xpYi9yZWR1eCc7CmV4cG9ydCB2YXIgQ09OVEFDVF9OT1RFU19GRVRDSCA9IChfYSA9IGNyZWF0ZSgnQ09OVEFDVF9OT1RFU19GRVRDSCcsIHsKICAgIHN0YXJ0OiBmdW5jdGlvbiAoc3RhdGUsIG1ldGEpIHsKICAgICAgICByZXR1cm4gdXBkYXRlKHN0YXRlLCB7CiAgICAgICAgICAgIHNlbGVjdGVkQ29udGFjdE5vdGVzOiB7CiAgICAgICAgICAgICAgICAkc2V0OiBbXSwKICAgICAgICAgICAgfSwKICAgICAgICB9KTsKICAgIH0sCiAgICBzdWNjZXNzOiBmdW5jdGlvbiAoc3RhdGUsIG1ldGEsIHBheWxvYWQpIHsKICAgICAgICByZXR1cm4gdXBkYXRlKHN0YXRlLCB7CiAgICAgICAgICAgIHNlbGVjdGVkQ29udGFjdE5vdGVzOiB7CiAgICAgICAgICAgICAgICAkc2V0OiBwYXlsb2FkLAogICAgICAgICAgICB9LAogICAgICAgIH0pOwogICAgfSwKfSksIF9hLnR5cGUpLCBjb250YWN0Tm90ZXNGZXRjaCA9IF9hLmFjdGlvbiwgY29udGFjdE5vdGVzRmV0Y2hSZWR1Y2VyID0gX2EucmVkdWNlcjsKZXhwb3J0IGRlZmF1bHQgWwogICAgY29udGFjdE5vdGVzRmV0Y2hSZWR1Y2VyLApdOwo="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/contactNotes.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/contactNotes.ts"],"names":[],"mappings":";AAAA,OAAO,MAAM,MAAM,qBAAqB,CAAC;AAEzC,OAAO,EAAE,MAAM,EAAE,MAAM,gBAAgB,CAAC;AAKxC,MAAM,CACJ,IAAA;;;;;;;;;;;;;;;YAAyB,EACzB,6BAAyB,EACzB,qCAAiC,CAehC;AAEH,eAAe;IACb,wBAAwB;CACzB,CAAC","sourcesContent":["import update from 'immutability-helper';\n\nimport { create } from '@src/lib/redux';\nimport {\n  ContactNote,\n} from '@src/types';\n\nexport const {\n  type: CONTACT_NOTES_FETCH,\n  action: contactNotesFetch,\n  reducer: contactNotesFetchReducer,\n} = create<string, ContactNote[]>('CONTACT_NOTES_FETCH', {\n  start: (state, meta) =>\n    update(state, {\n      selectedContactNotes: {\n        $set: [],\n      },\n    }),\n\n  success: (state, meta, payload) =>\n    update(state, {\n      selectedContactNotes: {\n        $set: payload,\n      },\n    }),\n});\n\nexport default [\n  contactNotesFetchReducer,\n];\n"]}]}