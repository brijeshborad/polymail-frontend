{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/index.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/index.tsx","mtime":1675280254060},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkgewogICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHsKICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHsKICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTsKICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKQogICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07CiAgICAgICAgfQogICAgICAgIHJldHVybiB0OwogICAgfTsKICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9Owp2YXIgX2EsIF9iLCBfYzsKLy8gRmxhZ3MgZm9yIERldmVsb3BtZW50Ci8vIE5PVEU6IE11c3QgYmUgZmFsc2Ugd2hlbiBtZXJnaW5nCnZhciBlbmFibGVSZWR1eExvZ2dlciA9IGZhbHNlOyAvLyBvdXRwdXQgcmVkdXggYWN0aW9ucyBhbmQgc3RhdGUgdG8gY29uc29sZQp2YXIgZW5hYmxlRGJMb2dnZXIgPSBmYWxzZTsgLy8gb3V0cHV0IGRiIG9wIHN0YXRzIHRvIGNvbnNvbGUKdmFyIGVuYWJsZUZvcmNlV29ya2VyID0gZmFsc2U7IC8vIGZvcmNlcyB3b3JrZXIgdG8gYmUgYSBub3JtYWwgd29ya2VyLCBhbmQgbm90IGEgc2hhcmVkIHdvcmtlcgp2YXIgZW5hYmxlRm9yY2VTZWFyY2hEYiA9IGZhbHNlOyAvLyBmb3JjZXMgdHVybmluZyBvbiBzZWFyY2ggZGIKdmFyIGRpc2FibGVBcGlDb3JzT3B0aW1pemF0aW9uID0gZmFsc2U7IC8vIGRpc2FibGUgQ09SUyBvcHRpbWl6YXRpb24gZm9yIEFQSSByZXF1ZXN0cwovLyBQb2x5ZmlsbHMKaW1wb3J0ICd3aGF0d2ctZmV0Y2gnOwovLyBFbmFibGUgU2VudHJ5IGZvciBwcm9kdWN0aW9uIGVudmlyb25tZW50cwppbXBvcnQgeyBpbml0LCBjYXB0dXJlRXhjZXB0aW9uIH0gZnJvbSAnQHNlbnRyeS9icm93c2VyJzsKaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicgJiYgcHJvY2Vzcy5lbnYuU0VOVFJZX0RTTiAhPT0gJycpIHsKICAgIGluaXQoewogICAgICAgIGRzbjogcHJvY2Vzcy5lbnYuU0VOVFJZX0RTTiwKICAgICAgICByZWxlYXNlOiBwcm9jZXNzLmVudi5TT1VSQ0VfVkVSU0lPTiwKICAgICAgICBlbnZpcm9ubWVudDogcHJvY2Vzcy5lbnYuU0VOVFJZX0VOViwKICAgIH0pOwp9Ci8vIFdlIG5lZWQgdGhpcyBpbXBvcnQgdG8gYmUgZmlyc3QgYXMgaXQgaGFzIHRoZSByZXNldCBzdHlsZXMsIGFuZCB0eXBvZ3JhcGh5IHNldHVwCmltcG9ydCAnLi9BcHAuc2Nzcyc7Ci8vIEltcG9ydHMKaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JzsKaW1wb3J0IFJlYWN0RE9NIGZyb20gJ3JlYWN0LWRvbSc7CmltcG9ydCB7IGNyZWF0ZUxvZ2dlciB9IGZyb20gJ3JlZHV4LWxvZ2dlcic7CmltcG9ydCB7IGNyZWF0ZVN0b3JlLCBhcHBseU1pZGRsZXdhcmUgfSBmcm9tICdyZWR1eCc7CmltcG9ydCB7IFByb3ZpZGVyIH0gZnJvbSAncmVhY3QtcmVkdXgnOwppbXBvcnQgeyBjcmVhdGVFcGljTWlkZGxld2FyZSB9IGZyb20gJ3JlZHV4LW9ic2VydmFibGUnOwppbXBvcnQgeyByb3V0ZXJNaWRkbGV3YXJlIH0gZnJvbSAncmVhY3Qtcm91dGVyLXJlZHV4JzsKaW1wb3J0IHsgaW5pdERiLCBDbGVhckNhY2hlTWVjaGFuaXNtLCBzZXRDbGVhckNhY2hlTWVjaGFuaXNtLCBzZXRBbGxvd1JlY29ubmVjdCwgZW5hYmxlRm9yY2VEZWJ1ZywgfSBmcm9tICdAc3JjL2xpYi9kYic7Ci8vIFVzZWQgdG8gZW5hYmxlIEluZGV4ZWREQiBjYWxscyBmb3IgZGVidWdnaW5nCmlmIChlbmFibGVEYkxvZ2dlcikgewogICAgZW5hYmxlRm9yY2VEZWJ1ZygpOwp9Ci8vIEZvcmNlIGVuYWJsZSBzZWFyY2ggZGIgZm9yIGRlYnVnZ2luZwppZiAoZW5hYmxlRm9yY2VTZWFyY2hEYikgewogICAgZW5hYmxlU2VhcmNoRGIoeyBlbmFibGVkOiB0cnVlIH0pOwp9Ci8vIEVuYWJsZSBFbGVjdHJvbiBCYXNlZCBDbGVhciBDYWNoZQp2YXIgYnJpZGdlQmFzZWRDbGVhckNhY2hlID0gISEoKF9hID0gd2luZG93LlBNRWxlY3Ryb25CcmlkZ2UpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5jbGVhckNhY2hlVjIpCiAgICAmJiAhISgoX2IgPSB3aW5kb3cuUE1FbGVjdHJvbkJyaWRnZSkgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLnNldENsZWFyQ2FjaGVTdGF0dXNIYW5kbGVyKTsKaWYgKGJyaWRnZUJhc2VkQ2xlYXJDYWNoZSkgewogICAgc2V0Q2xlYXJDYWNoZU1lY2hhbmlzbShDbGVhckNhY2hlTWVjaGFuaXNtLkVsZWN0cm9uQnJpZGdlKTsKfQppbXBvcnQgZHVja3MgZnJvbSAnLi9kdWNrcyc7CmltcG9ydCBlcGljcyBmcm9tICcuL2VwaWNzJzsKaW1wb3J0IHsgUG9seW1haWxTdGF0dXNUeXBlIH0gZnJvbSAnLi90eXBlcyc7CmltcG9ydCB7IGluaXRpYWxTdGF0ZVdpdGhDYWNoZWREYXRhIH0gZnJvbSAnLi9saWIvc3RhdGUnOwppbXBvcnQgeyBzZXRUb2tlbiwgQVVUSF9UT0tFTl9OT05FLCBzZXRMb2dnZWRPdXRDYWxsYmFjaywgZGlzYWJsZUNvcnNPcHRpbWl6YXRpb24sIGlzTG9nZ2VkSW4sIH0gZnJvbSAnLi9hcGkvYmFzZSc7CmlmIChkaXNhYmxlQXBpQ29yc09wdGltaXphdGlvbikgewogICAgZGlzYWJsZUNvcnNPcHRpbWl6YXRpb24oKTsKfQppbXBvcnQgeyBkYlJlYWR5LCBkYkNsZWFyaW5nQ2FjaGUgfSBmcm9tICcuL2R1Y2tzL2RiJzsKaW1wb3J0IHsgYXBwVXBkYXRlUmVhZHksIG9ubGluZVNldCwgYXBwRGVmYXVsdENsaWVudCwgYXBwU3RhdHVzU2V0IH0gZnJvbSAnQHNyYy9kdWNrcy9hcHAnOwppbXBvcnQgeyBzdGFydCB9IGZyb20gJy4vZHVja3MvYXV0aCc7CmltcG9ydCB7IHdpbmRvd0ZvY3VzIH0gZnJvbSAnLi9kdWNrcy93aW5kb3cnOwppbXBvcnQgRXJyb3JCb3VuZGFyeSwgeyBFcnJvclBhZ2UgfSBmcm9tICcuL2NvbXBvbmVudHMvRXJyb3JCb3VuZGFyeS9FcnJvckJvdW5kYXJ5JzsKaW1wb3J0IHsgYnJpZGdlU3luY1N0b3JlIH0gZnJvbSAnLi93b3JrZXIvYnJpZGdlL3N0b3JlJzsKaW1wb3J0IHsgY3JlYXRlQnJpZGdlTWlkZGxld2FyZSB9IGZyb20gJy4vd29ya2VyL2JyaWRnZS9taWRkbGV3YXJlJzsKaW1wb3J0IHsgY3JlYXRlQWN0aW9uRGlzcGF0Y2hlck1pZGRsZXdhcmUsIH0gZnJvbSAnLi9saWIvQWN0aW9uRGlzcGF0Y2hlcic7CmltcG9ydCB7IGRlZmF1bHREZXBzIH0gZnJvbSAnLi9saWIvZXBpYyc7CmltcG9ydCBicm93c2VySGlzdG9yeSBmcm9tICcuL2xpYi9icm93c2VySGlzdG9yeSc7CmltcG9ydCBBcHAgZnJvbSAnLi9BcHAnOwppbXBvcnQgeyBzZXRIb3RrZXlQcmVmZXJlbmNlLCBjcmVhdGVIb3RrZXlNaWRkbGV3YXJlIH0gZnJvbSAnQHNyYy9saWIvaG90a2V5cyc7CmltcG9ydCB7IGlzRWxlY3Ryb24gfSBmcm9tICdAc3JjL2xpYi9lbGVjdHJvbic7CmltcG9ydCB7IHRvYXN0U2V0LCBDb25maXJtYXRpb25Qb3NpdG9uLCBDb25maXJtYXRpb25FcnJvciB9IGZyb20gJ0BzcmMvZHVja3MvdG9hc3RzJzsKaW1wb3J0IHsgdGhyZWFkQXR0YWNobWVudERvd25sb2FkUHJvZ3Jlc3MgfSBmcm9tICdAc3JjL2R1Y2tzL3RocmVhZHMnOwppbXBvcnQgeyBjbGVhckV2ZXJ5dGhpbmcgfSBmcm9tICcuL2xpYi9hdXRoJzsKaW1wb3J0IHsgZ2V0QXV0aFRva2VuRnJvbUNvb2tpZSwgZ2V0TmVlZHNURkFGcm9tQ29va2llLCBTVEFOREFSRF9DT09LSUVfQVRUUklCVVRFUyB9IGZyb20gJy4vbGliL2Nvb2tpZXMnOwppbXBvcnQgeyBlbmFibGVTZWFyY2hEYiB9IGZyb20gJy4vbGliL2RldmljZSc7CmltcG9ydCB7IFdpbmRvd3NUaXRsZUJhclByb3ZpZGVyIH0gZnJvbSAnLi9jb21wb25lbnRzL0Jhc2UvV2luZG93c1RpdGxlQmFyJzsKaW1wb3J0IHsgdXBkYXRlVGhlbWUgfSBmcm9tICcuL2xpYi90aGVtZSc7CmltcG9ydCBDb29raWVzIGZyb20gJ2pzLWNvb2tpZSc7CmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50JzsKLy8gRmlndXJlIG91dCB0b2tlbiBmcm9tIGNvb2tpZXMKdmFyIGdldFRva2VuID0gZnVuY3Rpb24gKCkgewogICAgdmFyIHRva2VuID0gZ2V0QXV0aFRva2VuRnJvbUNvb2tpZSgpOwogICAgaWYgKHRva2VuKSB7CiAgICAgICAgcmV0dXJuIHRva2VuOwogICAgfQogICAgcmV0dXJuIEFVVEhfVE9LRU5fTk9ORTsKfTsKLy8gU3Bhd24gYSBuZXcgd29ya2VyCi8vIE5PVEUoU0hBSEFOKTogVGhlIFNPVVJDRV9WRVJTSU9OIGlzIHRvIHdvcmthcm91bmQgQ0ROIGNhY2hpbmcgaXNzdWVzCnZhciB3b3JrZXI7Ci8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpwcmVmZXItY29uZGl0aW9uYWwtZXhwcmVzc2lvbgppZiAod2luZG93LlNoYXJlZFdvcmtlciAhPT0gdW5kZWZpbmVkICYmICFlbmFibGVGb3JjZVdvcmtlcikgewogICAgd29ya2VyID0gbmV3IFNoYXJlZFdvcmtlcigiL3dvcmtlci5qcz8iICsgcHJvY2Vzcy5lbnYuU09VUkNFX1ZFUlNJT04pOwp9CmVsc2UgewogICAgd29ya2VyID0gbmV3IFdvcmtlcigiL3dvcmtlci5qcz8iICsgcHJvY2Vzcy5lbnYuU09VUkNFX1ZFUlNJT04pOwp9Cndvcmtlci5vbmVycm9yID0gZnVuY3Rpb24gKGUpIHsKICAgIGNhcHR1cmVFeGNlcHRpb24oZSk7CiAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6bm8tY29uc29sZQogICAgY29uc29sZS5lcnJvcihlLm1lc3NhZ2UsIGUpOwp9OwovLyBHZXQgaW5pdGlhbCBhdXRoIHRva2VuCnZhciBpbml0aWFsVG9rZW4gPSBnZXRUb2tlbigpOwppZiAoaW5pdGlhbFRva2VuICE9PSBBVVRIX1RPS0VOX05PTkUpIHsKICAgIHNldFRva2VuKGluaXRpYWxUb2tlbik7Cn0KLy8gU2V0dXAgbG9nb3V0IGNhbGxiYWNrCnNldExvZ2dlZE91dENhbGxiYWNrKGZ1bmN0aW9uICgpIHsKICAgIGNsZWFyRXZlcnl0aGluZyhzdG9yZSkuc3Vic2NyaWJlKHsKICAgICAgICBlcnJvcjogZnVuY3Rpb24gKGUpIHsKICAgICAgICAgICAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOm5vLWNvbnNvbGUKICAgICAgICAgICAgY29uc29sZS5lcnJvcihlKTsKICAgICAgICAgICAgY2FwdHVyZUV4Y2VwdGlvbihlKTsKICAgICAgICB9LAogICAgfSk7Cn0pOwovLyBTZXR1cCBNaWRkbGV3YXJlCnZhciBtaWRkbGV3YXJlID0gWwogICAgcm91dGVyTWlkZGxld2FyZShicm93c2VySGlzdG9yeSksCiAgICBjcmVhdGVCcmlkZ2VNaWRkbGV3YXJlKHdvcmtlciksCiAgICBjcmVhdGVFcGljTWlkZGxld2FyZShlcGljcywgeyBkZXBlbmRlbmNpZXM6IGRlZmF1bHREZXBzKCkgfSksCiAgICBjcmVhdGVBY3Rpb25EaXNwYXRjaGVyTWlkZGxld2FyZSgpLAogICAgY3JlYXRlSG90a2V5TWlkZGxld2FyZSgpLApdOwovLyBSZWR1eCBMb2dnZXIgc2hvdWQgYmUgbGFzdAppZiAoZW5hYmxlUmVkdXhMb2dnZXIpIHsKICAgIG1pZGRsZXdhcmUucHVzaChjcmVhdGVMb2dnZXIoewogICAgLy8gcHJlZGljYXRlOiAoZ2V0U3RhdGUsIGFjdGlvbikgPT4KICAgIC8vIGFjdGlvbi50eXBlID09PSBCSUxMSU5HX0NPVVBPTl9WQUxJREFURSB8fCBhY3Rpb24udHlwZSA9PT0gQklMTElOR19VUEdSQURFX0NPVVBPTl9TRVQsCiAgICAvLyBhY3Rpb24udHlwZSAhPT0gTUFJTF9DT1VOVF9VUERBVEUKICAgIC8vICYmIGFjdGlvbi50eXBlICE9PSBXSU5ET1dfRk9DVVMKICAgIC8vICYmIGFjdGlvbi50eXBlICE9PSBERVZJQ0VfUkVHSVNURVIKICAgIC8vICYmIGFjdGlvbi50eXBlICE9PSBJTkNSRU1FTlRBTF9TVEFUVVNfVE9HR0xFCiAgICAvLyAmJiBhY3Rpb24udHlwZSAhPT0gQVBQX1NUQVRVU19TRVQsCiAgICB9KSk7Cn0KLy8gRXh0cmFjdCBVVE0gcHJvcHMgb24gZmlyc3QgbG9hZCBzbyB3ZSBjYW4gcGFzcyB1cCB0byBzZXJ2ZXIKdmFyIHV0bVBhcmFtcyA9IHt9Owp2YXIgZXh0cmFjdFV0bVBhcmFtcyA9IGZ1bmN0aW9uICgpIHsKICAgIHZhciBjb29raWVQYXJhbXMgPSBDb29raWVzLmdldCgncG1VdG1QYXJhbXMnKTsKICAgIHZhciBzZWFyY2ggPSBjb29raWVQYXJhbXMgfHwgYnJvd3Nlckhpc3RvcnkubG9jYXRpb24uc2VhcmNoOwogICAgaWYgKHNlYXJjaCkgewogICAgICAgIHZhciB0cmltbWVkID0gc2VhcmNoLnRyaW0oKS5yZXBsYWNlKCc/JywgJycpOwogICAgICAgIHZhciBzZWFyY2hQYXJhbXMgPSBuZXcgVVJMU2VhcmNoUGFyYW1zKHRyaW1tZWQpOwogICAgICAgIHZhciBzb3VyY2VQYXJhbSA9IHNlYXJjaFBhcmFtcy5nZXQoJ3V0bV9zb3VyY2UnKTsKICAgICAgICBpZiAoc291cmNlUGFyYW0pIHsKICAgICAgICAgICAgdXRtUGFyYW1zLnNvdXJjZSA9IHNvdXJjZVBhcmFtOwogICAgICAgIH0KICAgICAgICB2YXIgY2FtcGFpZ25QYXJhbSA9IHNlYXJjaFBhcmFtcy5nZXQoJ3V0bV9jYW1wYWlnbicpOwogICAgICAgIGlmIChjYW1wYWlnblBhcmFtKSB7CiAgICAgICAgICAgIHV0bVBhcmFtcy5jYW1wYWlnbiA9IGNhbXBhaWduUGFyYW07CiAgICAgICAgfQogICAgICAgIHZhciBtZWRpdW1QYXJhbSA9IHNlYXJjaFBhcmFtcy5nZXQoJ3V0bV9tZWRpdW0nKTsKICAgICAgICBpZiAobWVkaXVtUGFyYW0pIHsKICAgICAgICAgICAgdXRtUGFyYW1zLm1lZGl1bSA9IG1lZGl1bVBhcmFtOwogICAgICAgIH0KICAgIH0KICAgIHZhciBrZXlzID0gT2JqZWN0LmtleXModXRtUGFyYW1zKTsKICAgIGlmICh1dG1QYXJhbXMgJiYga2V5cy5sZW5ndGgpIHsKICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgncG1VdG1QYXJhbXMnLCBKU09OLnN0cmluZ2lmeSh1dG1QYXJhbXMpKTsKICAgIH0KfTsKZXh0cmFjdFV0bVBhcmFtcygpOwovLyBFeHRyYWN0IFBsYXRmb3JtIFJlZGlyZWN0CnZhciByZWRpcmVjdFBsYXRmb3JtOwp2YXIgZXh0cmFjdFJlZGlyZWN0UGxhdGZvcm0gPSBmdW5jdGlvbiAoKSB7CiAgICB2YXIgc2VhcmNoID0gYnJvd3Nlckhpc3RvcnkubG9jYXRpb24uc2VhcmNoOwogICAgdmFyIHVybFBhcmFtcyA9IG5ldyBVUkxTZWFyY2hQYXJhbXMoc2VhcmNoKTsKICAgIHZhciByZWRpcmVjdFBsYXRmb3JtU3RyaW5nID0gdXJsUGFyYW1zLmdldCgncmVkaXJlY3RfcGxhdGZvcm0nKTsKICAgIHZhciBwbXB0ID0gdXJsUGFyYW1zLmdldCgncG1wdCcpOwogICAgdmFyIHR0bCA9IHVybFBhcmFtcy5nZXQoJ3R0bCcpOwogICAgaWYgKHJlZGlyZWN0UGxhdGZvcm1TdHJpbmcpIHsKICAgICAgICByZWRpcmVjdFBsYXRmb3JtID0gcmVkaXJlY3RQbGF0Zm9ybVN0cmluZzsKICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgncmVkaXJlY3RQbGF0Zm9ybScsIEpTT04uc3RyaW5naWZ5KHJlZGlyZWN0UGxhdGZvcm0pKTsKICAgIH0KICAgIGlmIChwbXB0KSB7CiAgICAgICAgLy8gU2V0IHRva2VuCiAgICAgICAgdmFyIHRva2VuID0gewogICAgICAgICAgICBwdWJsaWM6IHBtcHQsCiAgICAgICAgfTsKICAgICAgICAvLyBTZXQgVFRMCiAgICAgICAgdmFyIGV4cGlyZXMgPSB2b2lkIDA7CiAgICAgICAgaWYgKHR0bCAmJiBwYXJzZUludCh0dGwsIHVuZGVmaW5lZCkpIHsKICAgICAgICAgICAgZXhwaXJlcyA9IG1vbWVudCgpLmFkZChwYXJzZUludCh0dGwsIHVuZGVmaW5lZCksICdzZWNvbmRzJykudG9EYXRlKCk7CiAgICAgICAgfQogICAgICAgIC8vIFNldCBDb29raWUKICAgICAgICBDb29raWVzLnNldCgncG1sdCcsIHRva2VuLCBfX2Fzc2lnbihfX2Fzc2lnbih7fSwgU1RBTkRBUkRfQ09PS0lFX0FUVFJJQlVURVMpLCB7IGV4cGlyZXM6IGV4cGlyZXMgfSkpOwogICAgfQp9OwpleHRyYWN0UmVkaXJlY3RQbGF0Zm9ybSgpOwovLyBDcmVhdGUgU3RvcmUKdmFyIHN0b3JlID0gY3JlYXRlU3RvcmUoZHVja3MsIGluaXRpYWxTdGF0ZVdpdGhDYWNoZWREYXRhKCksIGFwcGx5TWlkZGxld2FyZS5hcHBseSh2b2lkIDAsIG1pZGRsZXdhcmUpKTsKLy8gSW5pdGlhbGl6ZSBIb3RrZXlzCnNldEhvdGtleVByZWZlcmVuY2Uoc3RvcmUuZ2V0U3RhdGUoKS5wcmVmZXJlbmNlcy5ob3RrZXlzKTsKLy8gSG9vayB3b3JrZXIgaW50byByZWR1eApicmlkZ2VTeW5jU3RvcmUod29ya2VyLCBzdG9yZSk7Ci8vIFRyaWdnZXIgSW5pdGlhbCBPYmplY3QgTG9hZHMgaWYgaGF2ZSBhdXRoIHRva2VuLCBhbmQgbm90IG5lZWQgVEZBCmlmIChpbml0aWFsVG9rZW4gIT09IEFVVEhfVE9LRU5fTk9ORSAmJiAhZ2V0TmVlZHNURkFGcm9tQ29va2llKCkpIHsKICAgIHN0b3JlLmRpc3BhdGNoKHN0YXJ0KG51bGwpKTsKfQovLyBFbmFibGUgbWFpbHRvIGxpbmtzIG9uIGVsZWN0cm9uIGFwcAppZiAod2luZG93LlBNRWxlY3Ryb25CcmlkZ2UgJiYgd2luZG93LlBNRWxlY3Ryb25CcmlkZ2Uuc2V0TWFpbHRvSGFuZGxlcikgewogICAgd2luZG93LlBNRWxlY3Ryb25CcmlkZ2Uuc2V0TWFpbHRvSGFuZGxlcihmdW5jdGlvbiAodXJpKSB7CiAgICAgICAgYnJvd3Nlckhpc3RvcnkucHVzaCgiL21haWwvYWxsL2NvbXBvc2U/bWFpbHRvPSIgKyBlbmNvZGVVUklDb21wb25lbnQodXJpKSk7CiAgICB9KTsKfQovLyBFbmFibGUgZGVmYXVsdCBjbGllbnQgaGFuZGxlciBvbiBlbGVjdHJvbiBhcHAKaWYgKHdpbmRvdy5QTUVsZWN0cm9uQnJpZGdlICYmIHdpbmRvdy5QTUVsZWN0cm9uQnJpZGdlLnNldERlZmF1bHRDbGllbnRIYW5kbGVyKSB7CiAgICB3aW5kb3cuUE1FbGVjdHJvbkJyaWRnZS5zZXREZWZhdWx0Q2xpZW50SGFuZGxlcihmdW5jdGlvbiAoaXNEZWZhdWx0KSB7CiAgICAgICAgc3RvcmUuZGlzcGF0Y2goYXBwRGVmYXVsdENsaWVudChpc0RlZmF1bHQpKTsKICAgIH0pOwp9Ci8vIFRyaWdnZXIgZGVmYXVsdCBjbGllbnQgY2hlY2sgb24gZWxlY3Ryb24gYXBwCmlmICgoX2MgPSB3aW5kb3cuUE1FbGVjdHJvbkJyaWRnZSkgPT09IG51bGwgfHwgX2MgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9jLnRyaWdnZXJEZWZhdWx0Q2xpZW50Q2hlY2spIHsKICAgIHdpbmRvdy5QTUVsZWN0cm9uQnJpZGdlLnRyaWdnZXJEZWZhdWx0Q2xpZW50Q2hlY2soKTsKfQovLyBFbmFibGUgbmF2aWdhdGlvbiBvZiBlbGVjdHJvbiBhcHAKaWYgKHdpbmRvdy5QTUVsZWN0cm9uQnJpZGdlICYmIHdpbmRvdy5QTUVsZWN0cm9uQnJpZGdlLnNldE5hdmlnYXRpb25IYW5kbGVyKSB7CiAgICB3aW5kb3cuUE1FbGVjdHJvbkJyaWRnZS5zZXROYXZpZ2F0aW9uSGFuZGxlcihmdW5jdGlvbiAodXJsKSB7CiAgICAgICAgYnJvd3Nlckhpc3RvcnkucmVwbGFjZSh1cmwpOwogICAgfSk7Cn0KLy8gRW5hYmxlIGVsZWN0cm9uIHVwZGF0ZXMKaWYgKHdpbmRvdy5QTUVsZWN0cm9uQnJpZGdlICYmIHdpbmRvdy5QTUVsZWN0cm9uQnJpZGdlLnNldFVwZGF0ZVJlYWR5SGFuZGxlcikgewogICAgd2luZG93LlBNRWxlY3Ryb25CcmlkZ2Uuc2V0VXBkYXRlUmVhZHlIYW5kbGVyKGZ1bmN0aW9uICgpIHsKICAgICAgICBzdG9yZS5kaXNwYXRjaChhcHBVcGRhdGVSZWFkeSh0cnVlKSk7CiAgICB9KTsKfQp2YXIgdHJ5RGJSZXNldFJldHJpZXMgPSAwOwp2YXIgdHJ5RGJSZXNldCA9IGZ1bmN0aW9uICgpIHsKICAgIGluaXREYih0cnVlKQogICAgICAgIC5zdWJzY3JpYmUoewogICAgICAgIG5leHQ6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgc2V0QWxsb3dSZWNvbm5lY3QodHJ1ZSk7CiAgICAgICAgICAgIHN0b3JlLmRpc3BhdGNoKGRiUmVhZHkobnVsbCkpOwogICAgICAgICAgICBzdG9yZS5kaXNwYXRjaChkYkNsZWFyaW5nQ2FjaGUoZmFsc2UpKTsKICAgICAgICAgICAgLy8gU2VuZCBzdWNjY2VzcyBub3RpZmljYXRpb24gdGhhdCBjYWNoZSBoYXMgYmVlbiBjbGVhcmVkCiAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgdmFyIGNsZWFyQ2FjaGVDb3B5ID0gJ0NhY2hlIGhhcyBiZWVuIHN1Y2Nlc3NmdWxseSBjbGVhcmVkISc7CiAgICAgICAgICAgICAgICBzdG9yZS5kaXNwYXRjaCh0b2FzdFNldChuZXcgQ29uZmlybWF0aW9uRXJyb3IoY2xlYXJDYWNoZUNvcHksIHRydWUsIENvbmZpcm1hdGlvblBvc2l0b24uVG9wQ2VudGVyKSkpOwogICAgICAgICAgICB9LCAzMDAwKTsKICAgICAgICB9LAogICAgICAgIGVycm9yOiBmdW5jdGlvbiAoZSkgewogICAgICAgICAgICBjYXB0dXJlRXhjZXB0aW9uKGUpOwogICAgICAgICAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6IG5vLWNvbnNvbGUKICAgICAgICAgICAgY29uc29sZS5lcnJvcihlKTsKICAgICAgICAgICAgLy8gUmV0cnkgY29ubmVjdGlvbgogICAgICAgICAgICBpZiAodHJ5RGJSZXNldFJldHJpZXMgPCAyKSB7CiAgICAgICAgICAgICAgICB0cnlEYlJlc2V0UmV0cmllcyArPSAxOwogICAgICAgICAgICAgICAgdHJ5RGJSZXNldCgpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgLy8gU2hvdyBFcnJvciBCb3VuZGFyeSB0byBhbGxvdyB1c2VyIHRvIHJlZnJlc2ggcGFnZQogICAgICAgICAgICAgICAgUmVhY3RET00ucmVuZGVyKFJlYWN0LmNyZWF0ZUVsZW1lbnQoRXJyb3JQYWdlLCBudWxsKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2FwcCcpKTsKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICB9KTsKfTsKLy8gRW5hYmxlIGNsZWFyIGNhY2hlIHN0YXR1cwppZiAod2luZG93LlBNRWxlY3Ryb25CcmlkZ2UgJiYgd2luZG93LlBNRWxlY3Ryb25CcmlkZ2Uuc2V0Q2xlYXJDYWNoZVN0YXR1c0hhbmRsZXIpIHsKICAgIHdpbmRvdy5QTUVsZWN0cm9uQnJpZGdlLnNldENsZWFyQ2FjaGVTdGF0dXNIYW5kbGVyKGZ1bmN0aW9uIChjbGVhcmluZywgZXJyb3IpIHsKICAgICAgICAvLyBIYW5kbGUgZXJyb3IgY2FzZQogICAgICAgIGlmIChlcnJvcikgewogICAgICAgICAgICBjYXB0dXJlRXhjZXB0aW9uKGVycm9yKTsKICAgICAgICAgICAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOiBuby1jb25zb2xlCiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpOwogICAgICAgICAgICAvLyBTaG93IGVycm9yIHBhZ2UKICAgICAgICAgICAgUmVhY3RET00ucmVuZGVyKFJlYWN0LmNyZWF0ZUVsZW1lbnQoRXJyb3JQYWdlLCBudWxsKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2FwcCcpKTsKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KICAgICAgICAvLyBPdGhlcndpc2UgdXBkYXRlIGNsZWFyaW5nIC8gcmVzZXQgY29ubmVjdGlvbiBkZXBlbmRpbmcgb24gc3RhdHVzCiAgICAgICAgaWYgKGNsZWFyaW5nKSB7CiAgICAgICAgICAgIHNldEFsbG93UmVjb25uZWN0KGZhbHNlKTsKICAgICAgICAgICAgc3RvcmUuZGlzcGF0Y2goZGJDbGVhcmluZ0NhY2hlKGNsZWFyaW5nKSk7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB9CiAgICAgICAgdHJ5RGJSZXNldCgpOwogICAgfSk7Cn0KLy8gRW5hYmxlIGVsZWN0cm9uIHN5bmMgdHJpZ2dlcnMgKHN1Y2ggYXMgcmVzdW1pbmcgZnJvbSBzbGVlcCkKaWYgKHdpbmRvdy5QTUVsZWN0cm9uQnJpZGdlICYmIHdpbmRvdy5QTUVsZWN0cm9uQnJpZGdlLnNldFNob3VsZFN5bmNIYW5kbGVyKSB7CiAgICB3aW5kb3cuUE1FbGVjdHJvbkJyaWRnZS5zZXRTaG91bGRTeW5jSGFuZGxlcihmdW5jdGlvbiAoKSB7CiAgICAgICAgc3RvcmUuZGlzcGF0Y2gob25saW5lU2V0KHRydWUpKTsKICAgICAgICBzdG9yZS5kaXNwYXRjaChhcHBTdGF0dXNTZXQoeyBzdGF0dXNUeXBlOiBQb2x5bWFpbFN0YXR1c1R5cGUuT25saW5lIH0pKTsKICAgIH0pOwp9Ci8vIEVuYWJsZSBhdHRhY2htZW50IGRvd25sb2FkIHByb2dyZXNzCmlmICh3aW5kb3cuUE1FbGVjdHJvbkJyaWRnZSAmJiB3aW5kb3cuUE1FbGVjdHJvbkJyaWRnZS5zZXRBdHRhY2htZW50RG93bmxvYWRpbmdIYW5kbGVyKSB7CiAgICB3aW5kb3cuUE1FbGVjdHJvbkJyaWRnZS5zZXRBdHRhY2htZW50RG93bmxvYWRpbmdIYW5kbGVyKGZ1bmN0aW9uIChpZCwgcHJvZ3Jlc3MsIHByZXZpZXcpIHsKICAgICAgICBzdG9yZS5kaXNwYXRjaCh0aHJlYWRBdHRhY2htZW50RG93bmxvYWRQcm9ncmVzcyh7IGlkOiBpZCwgcHJvZ3Jlc3M6IHByb2dyZXNzLCBwcmV2aWV3OiBwcmV2aWV3IH0pKTsKICAgIH0pOwp9Ci8vIEhhbmRsZSBhdHRhY2htZW50IGRvd25sb2FkIGNvbXBsZXRlIGhhbmRsZXIKaWYgKHdpbmRvdy5QTUVsZWN0cm9uQnJpZGdlICYmIHdpbmRvdy5QTUVsZWN0cm9uQnJpZGdlLnNldEF0dGFjaG1lbnREb3dubG9hZENvbXBsZXRlSGFuZGxlcikgewogICAgd2luZG93LlBNRWxlY3Ryb25CcmlkZ2Uuc2V0QXR0YWNobWVudERvd25sb2FkQ29tcGxldGVIYW5kbGVyKGZ1bmN0aW9uIChpZCwgcHJldmlldykgewogICAgICAgIHN0b3JlLmRpc3BhdGNoKHRocmVhZEF0dGFjaG1lbnREb3dubG9hZFByb2dyZXNzKHsgaWQ6IGlkLCBwcm9ncmVzczogMSwgcHJldmlldzogcHJldmlldyB9KSk7CiAgICB9KTsKfQovLyBFbmFibGUgZWxlY3Ryb24gZXJyb3IgdG9hc3RzCmlmICh3aW5kb3cuUE1FbGVjdHJvbkJyaWRnZSAmJiB3aW5kb3cuUE1FbGVjdHJvbkJyaWRnZS5zZXRFcnJvclRvYXN0SGFuZGxlcikgewogICAgd2luZG93LlBNRWxlY3Ryb25CcmlkZ2Uuc2V0RXJyb3JUb2FzdEhhbmRsZXIoZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgc3RvcmUuZGlzcGF0Y2godG9hc3RTZXQoZXJyb3IpKTsKICAgIH0pOwp9Ci8vIEVuYWJsZSBOb3RpZmljYXRpb25zIHBlcm1pc3Npb24gb24gZWxlY3Ryb24gYXV0b21hdGljYWxseQppZiAoaXNFbGVjdHJvbiAmJiBOb3RpZmljYXRpb24ucGVybWlzc2lvbiAhPT0gJ2dyYW50ZWQnKSB7CiAgICBOb3RpZmljYXRpb24ucmVxdWVzdFBlcm1pc3Npb24oKTsKfQovLyBJbmplY3Qgd2luZG93IGZvY3VzIGV2ZW50cyBpbnRvIHJlZHV4CndpbmRvdy5vbmZvY3VzID0gZnVuY3Rpb24gKCkgewogICAgc3RvcmUuZGlzcGF0Y2god2luZG93Rm9jdXMobnVsbCkpOwp9Owp3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignb25saW5lJywgZnVuY3Rpb24gKCkgewogICAgc3RvcmUuZGlzcGF0Y2gob25saW5lU2V0KHRydWUpKTsKICAgIHN0b3JlLmRpc3BhdGNoKGFwcFN0YXR1c1NldCh7IHN0YXR1c1R5cGU6IFBvbHltYWlsU3RhdHVzVHlwZS5PbmxpbmUgfSkpOwp9KTsKd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ29mZmxpbmUnLCBmdW5jdGlvbiAoKSB7CiAgICBzdG9yZS5kaXNwYXRjaChvbmxpbmVTZXQoZmFsc2UpKTsKfSk7Ci8vIFJlbmRlciBBcHAKdmFyIGN1cnJlbnRseUxvZ2dlZEluID0gaXNMb2dnZWRJbigpOwp2YXIgZGJJbml0Q29tcGxldGUgPSBmYWxzZTsKdmFyIHJlYWN0UmVuZGVyQ29tcGxldGUgPSBmYWxzZTsKUmVhY3RET00ucmVuZGVyKChSZWFjdC5jcmVhdGVFbGVtZW50KEVycm9yQm91bmRhcnksIG51bGwsCiAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFByb3ZpZGVyLCB7IHN0b3JlOiBzdG9yZSB9LAogICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoV2luZG93c1RpdGxlQmFyUHJvdmlkZXIsIG51bGwsCiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQXBwLCBudWxsKSkpKSksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhcHAnKSwgZnVuY3Rpb24gKCkgewogICAgdmFyIF9hOwogICAgcmVhY3RSZW5kZXJDb21wbGV0ZSA9IHRydWU7CiAgICBpZiAoY3VycmVudGx5TG9nZ2VkSW4gJiYgIWRiSW5pdENvbXBsZXRlKSB7CiAgICAgICAgcmV0dXJuOwogICAgfQogICAgaWYgKChfYSA9IHdpbmRvdy5QTUVsZWN0cm9uQnJpZGdlKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuYXBwUmVhZHkpIHsKICAgICAgICB3aW5kb3cuUE1FbGVjdHJvbkJyaWRnZS5hcHBSZWFkeSgpOwogICAgfQp9KTsKLy8gTGlzdGVuZXIgZm9yIGRhcmsgbW9kZSB1cGRhdGVzIGFuZCB3aW5kb3dzIGVsZWN0cm9uIGJ1aWxkcwp1cGRhdGVUaGVtZShzdG9yZSk7CndpbmRvdy5tYXRjaE1lZGlhKCcocHJlZmVycy1jb2xvci1zY2hlbWU6IGRhcmspJykuYWRkTGlzdGVuZXIoZnVuY3Rpb24gKCkgeyByZXR1cm4gdXBkYXRlVGhlbWUoc3RvcmUpOyB9KTsKLy8gSW5pdCBEYgppbml0RGIoKQogICAgLnN1YnNjcmliZSh7CiAgICBjb21wbGV0ZTogZnVuY3Rpb24gKCkgewogICAgICAgIHZhciBfYTsKICAgICAgICBkYkluaXRDb21wbGV0ZSA9IHRydWU7CiAgICAgICAgc3RvcmUuZGlzcGF0Y2goZGJSZWFkeShudWxsKSk7CiAgICAgICAgaWYgKGN1cnJlbnRseUxvZ2dlZEluICYmIHJlYWN0UmVuZGVyQ29tcGxldGUgJiYgKChfYSA9IHdpbmRvdy5QTUVsZWN0cm9uQnJpZGdlKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuYXBwUmVhZHkpKSB7CiAgICAgICAgICAgIHdpbmRvdy5QTUVsZWN0cm9uQnJpZGdlLmFwcFJlYWR5KCk7CiAgICAgICAgfQogICAgfSwKICAgIGVycm9yOiBmdW5jdGlvbiAoZSkgewogICAgICAgIGNhcHR1cmVFeGNlcHRpb24oZSk7CiAgICAgICAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOm5vLWNvbnNvbGUKICAgICAgICBjb25zb2xlLmVycm9yKGUpOwogICAgICAgIC8vIFJlbmRlciBFcnJvciBTdGF0ZSwgU2luY2UgREIgRXJyb3IgT2NjdXJyZWQKICAgICAgICBSZWFjdERPTS5yZW5kZXIoUmVhY3QuY3JlYXRlRWxlbWVudChFcnJvclBhZ2UsIG51bGwpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYXBwJykpOwogICAgfSwKfSk7Cg=="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/index.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/index.tsx"],"names":[],"mappings":"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","sourcesContent":["// Flags for Development\n// NOTE: Must be false when merging\nconst enableReduxLogger = false; // output redux actions and state to console\nconst enableDbLogger = false; // output db op stats to console\nconst enableForceWorker = false; // forces worker to be a normal worker, and not a shared worker\nconst enableForceSearchDb = false; // forces turning on search db\nconst disableApiCorsOptimization = false; // disable CORS optimization for API requests\n\n// Polyfills\nimport 'whatwg-fetch';\n\n// Enable Sentry for production environments\nimport { init, captureException } from '@sentry/browser';\n\nif (process.env.NODE_ENV === 'production' && process.env.SENTRY_DSN !== '') {\n  init({\n    dsn: process.env.SENTRY_DSN,\n    release: process.env.SOURCE_VERSION,\n    environment: process.env.SENTRY_ENV,\n  });\n}\n\n// We need this import to be first as it has the reset styles, and typography setup\nimport './App.scss';\n\n// Imports\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createLogger } from 'redux-logger';\n\nimport { createStore, applyMiddleware } from 'redux';\n\nimport { Provider } from 'react-redux';\nimport { createEpicMiddleware } from 'redux-observable';\nimport { routerMiddleware } from 'react-router-redux';\n\nimport {\n  initDb, ClearCacheMechanism, setClearCacheMechanism, setAllowReconnect, enableForceDebug,\n} from '@src/lib/db';\n\n// Used to enable IndexedDB calls for debugging\nif (enableDbLogger) {\n  enableForceDebug();\n}\n\n// Force enable search db for debugging\nif (enableForceSearchDb) {\n  enableSearchDb({ enabled: true });\n}\n\n// Enable Electron Based Clear Cache\nconst bridgeBasedClearCache = !!window.PMElectronBridge?.clearCacheV2\n  && !!window.PMElectronBridge?.setClearCacheStatusHandler;\nif (bridgeBasedClearCache) {\n  setClearCacheMechanism(ClearCacheMechanism.ElectronBridge);\n}\n\nimport ducks from './ducks';\nimport epics from './epics';\n\nimport { StoreState, UTMParams, LoginToken, PolymailStatusType } from './types';\nimport { initialStateWithCachedData } from './lib/state';\nimport {\n  setToken, AUTH_TOKEN_NONE, setLoggedOutCallback, disableCorsOptimization, isLoggedIn,\n} from './api/base';\n\nif (disableApiCorsOptimization) {\n  disableCorsOptimization();\n}\n\nimport { dbReady, dbClearingCache } from './ducks/db';\nimport { appUpdateReady, onlineSet, appDefaultClient, appStatusSet } from '@src/ducks/app';\nimport { start } from './ducks/auth';\nimport { windowFocus } from './ducks/window';\n\nimport ErrorBoundary, { ErrorPage } from './components/ErrorBoundary/ErrorBoundary';\nimport { bridgeSyncStore } from './worker/bridge/store';\nimport { createBridgeMiddleware } from './worker/bridge/middleware';\nimport {\n  createActionDispatcherMiddleware,\n} from './lib/ActionDispatcher';\nimport { defaultDeps } from './lib/epic';\nimport browserHistory from './lib/browserHistory';\n\nimport App from './App';\nimport { setHotkeyPreference, createHotkeyMiddleware } from '@src/lib/hotkeys';\nimport { isElectron } from '@src/lib/electron';\nimport { toastSet, ConfirmationPositon, ConfirmationError } from '@src/ducks/toasts';\nimport { threadAttachmentDownloadProgress } from '@src/ducks/threads';\nimport { clearEverything } from './lib/auth';\nimport { getAuthTokenFromCookie, getNeedsTFAFromCookie, STANDARD_COOKIE_ATTRIBUTES } from './lib/cookies';\nimport { enableSearchDb } from './lib/device';\nimport { WindowsTitleBarProvider } from './components/Base/WindowsTitleBar';\nimport { updateTheme } from './lib/theme';\nimport Cookies from 'js-cookie';\nimport moment from 'moment';\n\n// Figure out token from cookies\nconst getToken = (): string => {\n  const token = getAuthTokenFromCookie();\n  if (token) {\n    return token;\n  }\n  return AUTH_TOKEN_NONE;\n};\n\n// Spawn a new worker\n// NOTE(SHAHAN): The SOURCE_VERSION is to workaround CDN caching issues\nlet worker: SharedWorker.SharedWorker | Worker;\n\n// tslint:disable-next-line:prefer-conditional-expression\nif ((window as any).SharedWorker !== undefined && !enableForceWorker) {\n  worker = new SharedWorker(`/worker.js?${process.env.SOURCE_VERSION}`);\n} else {\n  worker = new Worker(`/worker.js?${process.env.SOURCE_VERSION}`);\n}\n\nworker.onerror = (e) => {\n  captureException(e);\n\n  // tslint:disable-next-line:no-console\n  console.error(e.message, e);\n};\n\n// Get initial auth token\nconst initialToken = getToken();\nif (initialToken !== AUTH_TOKEN_NONE) {\n  setToken(initialToken);\n}\n\n// Setup logout callback\nsetLoggedOutCallback(() => {\n  clearEverything(store).subscribe({\n    error: (e) => {\n      // tslint:disable-next-line:no-console\n      console.error(e);\n      captureException(e);\n    },\n  });\n});\n\n// Setup Middleware\nconst middleware = [\n  routerMiddleware(browserHistory),\n  createBridgeMiddleware(worker),\n  createEpicMiddleware(epics, { dependencies: defaultDeps() }),\n  createActionDispatcherMiddleware(),\n  createHotkeyMiddleware(),\n];\n\n// Redux Logger shoud be last\nif (enableReduxLogger) {\n  middleware.push(createLogger({\n    // predicate: (getState, action) =>\n      // action.type === BILLING_COUPON_VALIDATE || action.type === BILLING_UPGRADE_COUPON_SET,\n    // action.type !== MAIL_COUNT_UPDATE\n    // && action.type !== WINDOW_FOCUS\n    // && action.type !== DEVICE_REGISTER\n    // && action.type !== INCREMENTAL_STATUS_TOGGLE\n    // && action.type !== APP_STATUS_SET,\n  }));\n}\n\n// Extract UTM props on first load so we can pass up to server\nconst utmParams: UTMParams = {};\nconst extractUtmParams = () => {\n  const cookieParams = Cookies.get('pmUtmParams');\n  const search = cookieParams || browserHistory.location.search;\n  if (search) {\n    const trimmed = search.trim().replace('?', '');\n    const searchParams = new URLSearchParams(trimmed);\n\n    const sourceParam = searchParams.get('utm_source');\n    if (sourceParam) {\n      utmParams.source = sourceParam;\n    }\n\n    const campaignParam = searchParams.get('utm_campaign');\n    if (campaignParam) {\n      utmParams.campaign = campaignParam;\n    }\n\n    const mediumParam = searchParams.get('utm_medium');\n    if (mediumParam) {\n      utmParams.medium = mediumParam;\n    }\n  }\n\n  const keys = Object.keys(utmParams);\n  if (utmParams && keys.length) {\n    localStorage.setItem('pmUtmParams', JSON.stringify(utmParams));\n  }\n};\n\nextractUtmParams();\n\n// Extract Platform Redirect\nlet redirectPlatform: string|undefined;\nconst extractRedirectPlatform = () => {\n  const search = browserHistory.location.search;\n  const urlParams = new URLSearchParams(search);\n  const redirectPlatformString = urlParams.get('redirect_platform');\n  const pmpt = urlParams.get('pmpt');\n  const ttl = urlParams.get('ttl');\n  if (redirectPlatformString) {\n    redirectPlatform = redirectPlatformString;\n    localStorage.setItem('redirectPlatform', JSON.stringify(redirectPlatform));\n  }\n\n  if (pmpt) {\n    // Set token\n    const token: LoginToken = {\n      public: pmpt,\n    };\n\n    // Set TTL\n    let expires: Date|undefined;\n    if (ttl && parseInt(ttl, undefined)) {\n      expires = moment().add(parseInt(ttl, undefined), 'seconds').toDate();\n    }\n\n    // Set Cookie\n    Cookies.set(\n      'pmlt',\n      token,\n      {\n        ...STANDARD_COOKIE_ATTRIBUTES,\n        expires,\n      },\n    );\n  }\n};\n\nextractRedirectPlatform();\n\n// Create Store\nconst store = createStore<StoreState>(\n  ducks,\n  initialStateWithCachedData(),\n  applyMiddleware(...middleware),\n);\n\n// Initialize Hotkeys\nsetHotkeyPreference(store.getState().preferences.hotkeys);\n\n// Hook worker into redux\nbridgeSyncStore(worker, store);\n\n// Trigger Initial Object Loads if have auth token, and not need TFA\nif (initialToken !== AUTH_TOKEN_NONE && !getNeedsTFAFromCookie()) {\n  store.dispatch(start(null));\n}\n\n// Enable mailto links on electron app\nif (window.PMElectronBridge && window.PMElectronBridge.setMailtoHandler) {\n  window.PMElectronBridge.setMailtoHandler((uri: string) => {\n    browserHistory.push(`/mail/all/compose?mailto=${encodeURIComponent(uri)}`);\n  });\n}\n\n// Enable default client handler on electron app\nif (window.PMElectronBridge && window.PMElectronBridge.setDefaultClientHandler) {\n  window.PMElectronBridge.setDefaultClientHandler((isDefault: boolean) => {\n    store.dispatch(appDefaultClient(isDefault));\n  });\n}\n\n// Trigger default client check on electron app\nif (window.PMElectronBridge?.triggerDefaultClientCheck) {\n  window.PMElectronBridge.triggerDefaultClientCheck();\n}\n\n// Enable navigation of electron app\nif (window.PMElectronBridge && window.PMElectronBridge.setNavigationHandler) {\n  window.PMElectronBridge.setNavigationHandler((url: string) => {\n    browserHistory.replace(url);\n  });\n}\n\n// Enable electron updates\nif (window.PMElectronBridge && window.PMElectronBridge.setUpdateReadyHandler) {\n  window.PMElectronBridge.setUpdateReadyHandler(() => {\n    store.dispatch(appUpdateReady(true));\n  });\n}\n\nlet tryDbResetRetries = 0;\n\nconst tryDbReset = () => {\n  initDb(true)\n    .subscribe({\n      next: () => {\n        setAllowReconnect(true);\n        store.dispatch(dbReady(null));\n        store.dispatch(dbClearingCache(false));\n\n        // Send succcess notification that cache has been cleared\n        setTimeout(\n          () => {\n            const clearCacheCopy = 'Cache has been successfully cleared!';\n            store.dispatch(toastSet(\n              new ConfirmationError(clearCacheCopy, true, ConfirmationPositon.TopCenter)),\n            );\n          },\n          3000,\n        );\n      },\n      error: (e) => {\n        captureException(e);\n\n        // tslint:disable-next-line: no-console\n        console.error(e);\n\n        // Retry connection\n        if (tryDbResetRetries < 2) {\n          tryDbResetRetries += 1;\n          tryDbReset();\n        } else {\n          // Show Error Boundary to allow user to refresh page\n          ReactDOM.render(\n            <ErrorPage />,\n            document.getElementById('app') as HTMLElement,\n          );\n        }\n      },\n    });\n};\n\n// Enable clear cache status\nif (window.PMElectronBridge && window.PMElectronBridge.setClearCacheStatusHandler) {\n  window.PMElectronBridge.setClearCacheStatusHandler((clearing: boolean, error?: Error) => {\n    // Handle error case\n    if (error) {\n      captureException(error);\n\n      // tslint:disable-next-line: no-console\n      console.error(error);\n\n      // Show error page\n      ReactDOM.render(\n        <ErrorPage />,\n        document.getElementById('app') as HTMLElement,\n      );\n      return;\n    }\n\n    // Otherwise update clearing / reset connection depending on status\n    if (clearing) {\n      setAllowReconnect(false);\n      store.dispatch(dbClearingCache(clearing));\n      return;\n    }\n\n    tryDbReset();\n  });\n}\n\n// Enable electron sync triggers (such as resuming from sleep)\nif (window.PMElectronBridge && window.PMElectronBridge.setShouldSyncHandler) {\n  window.PMElectronBridge.setShouldSyncHandler(() => {\n    store.dispatch(onlineSet(true));\n    store.dispatch(appStatusSet({ statusType: PolymailStatusType.Online }));\n  });\n}\n\n// Enable attachment download progress\nif (window.PMElectronBridge && window.PMElectronBridge.setAttachmentDownloadingHandler) {\n  window.PMElectronBridge.setAttachmentDownloadingHandler(\n    (id: string, progress: number, preview: boolean) => {\n      store.dispatch(threadAttachmentDownloadProgress({ id, progress, preview }));\n    });\n}\n\n// Handle attachment download complete handler\nif (window.PMElectronBridge && window.PMElectronBridge.setAttachmentDownloadCompleteHandler) {\n  window.PMElectronBridge.setAttachmentDownloadCompleteHandler(\n    (id: string, preview: boolean) => {\n      store.dispatch(threadAttachmentDownloadProgress({ id, progress: 1, preview }));\n    });\n}\n\n// Enable electron error toasts\nif (window.PMElectronBridge && window.PMElectronBridge.setErrorToastHandler) {\n  window.PMElectronBridge.setErrorToastHandler((error) => {\n    store.dispatch(toastSet(error));\n  });\n}\n\n// Enable Notifications permission on electron automatically\nif (isElectron && (Notification as any).permission !== 'granted') {\n  Notification.requestPermission();\n}\n\n// Inject window focus events into redux\nwindow.onfocus = () => {\n  store.dispatch(windowFocus(null));\n};\n\nwindow.addEventListener('online', () => {\n  store.dispatch(onlineSet(true));\n  store.dispatch(appStatusSet({ statusType: PolymailStatusType.Online }));\n});\n\nwindow.addEventListener('offline', () => {\n  store.dispatch(onlineSet(false));\n});\n\n// Render App\nconst currentlyLoggedIn = isLoggedIn();\nlet dbInitComplete = false;\nlet reactRenderComplete = false;\n\nReactDOM.render(\n  (<ErrorBoundary>\n    <Provider store={store}>\n      <WindowsTitleBarProvider>\n        <App />\n      </WindowsTitleBarProvider>\n    </Provider>\n  </ErrorBoundary>),\n  document.getElementById('app') as HTMLElement,\n  () => {\n    reactRenderComplete = true;\n    if (currentlyLoggedIn && !dbInitComplete) {\n      return;\n    }\n\n    if (window.PMElectronBridge?.appReady) {\n      window.PMElectronBridge.appReady();\n    }\n  },\n);\n\n// Listener for dark mode updates and windows electron builds\nupdateTheme(store);\nwindow.matchMedia('(prefers-color-scheme: dark)').addListener(() => updateTheme(store));\n\n// Init Db\ninitDb()\n  .subscribe({\n    complete: () => {\n      dbInitComplete = true;\n      store.dispatch(dbReady(null));\n\n      if (currentlyLoggedIn && reactRenderComplete && window.PMElectronBridge?.appReady) {\n        window.PMElectronBridge.appReady();\n      }\n    },\n    error: (e) => {\n      captureException(e);\n      // tslint:disable-next-line:no-console\n      console.error(e);\n\n      // Render Error State, Since DB Error Occurred\n      ReactDOM.render(\n        <ErrorPage />,\n        document.getElementById('app') as HTMLElement,\n      );\n    },\n  });\n"]}]}