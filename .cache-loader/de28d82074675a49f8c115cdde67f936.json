{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/LeftSidebar/components/MailTab/index.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/LeftSidebar/components/MailTab/index.tsx","mtime":1675280254021},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4JzsKaW1wb3J0IHsgc2VsZWN0RHJhZnRDb3VudCwgc2VsZWN0U2VuZExhdGVyQ291bnQsIHNlbGVjdE91dGJveENvdW50IH0gZnJvbSAnQHNyYy9kdWNrcy9tYWlsQ291bnRzJzsKaW1wb3J0IE1haWxUYWIgZnJvbSAnLi9NYWlsVGFiJzsKaW1wb3J0IHsgc2VsZWN0TGlzdFRhYnNXaXRoQ291bnQgfSBmcm9tICdAc3JjL2R1Y2tzL2xpc3RzJzsKaW1wb3J0IHsgbGVmdFNpZGViYXJUcmFzaENvbGxhcHNlLCBzZWxlY3RIYXNGYWlsaW5nRHJhZnQsIHNlbGVjdFNob3dDb2xsYXBzZWRMU0IsIH0gZnJvbSAnQHNyYy9kdWNrcy9sZWZ0U2lkZWJhcic7CnZhciBtYXBTdGF0ZVRvUHJvcHMgPSBmdW5jdGlvbiAoc3RhdGUpIHsgcmV0dXJuICh7CiAgICBkcmFmdENvdW50OiBzZWxlY3REcmFmdENvdW50KHN0YXRlKSwKICAgIG91dGJveENvdW50OiBzZWxlY3RPdXRib3hDb3VudChzdGF0ZSksCiAgICBzZW5kTGF0ZXJDb3VudDogc2VsZWN0U2VuZExhdGVyQ291bnQoc3RhdGUpLAogICAgbGlzdFRhYnM6IHNlbGVjdExpc3RUYWJzV2l0aENvdW50KHN0YXRlKSwKICAgIHRyYXNoQ29sbGFwc2VkOiBzdGF0ZS5sZWZ0U2lkZWJhci50cmFzaENvbGxhcHNlZCwKICAgIGFjY291bnRJbmJveENvdW50czogc3RhdGUubWFpbENvdW50cywKICAgIHNlbGVjdGVkQWNjb3VudDogc3RhdGUubGVmdFNpZGViYXIuc2VsZWN0ZWRBY2NvdW50LAogICAgZmVhdHVyZXM6IHN0YXRlLmZlYXR1cmVzLAogICAgZHJhZnRFcnJvckNvdW50OiBzZWxlY3RIYXNGYWlsaW5nRHJhZnQoc3RhdGUpLAogICAgY29sbGFwc2VkOiBzZWxlY3RTaG93Q29sbGFwc2VkTFNCKHN0YXRlKSwKfSk7IH07CnZhciBtYXBEaXNwYXRjaFRvUHJvcHMgPSBmdW5jdGlvbiAoZGlzcGF0Y2gpIHsgcmV0dXJuICh7CiAgICBjb2xsYXBzZVRyYXNoOiBmdW5jdGlvbiAoY29sbGFwc2UpIHsgcmV0dXJuIGRpc3BhdGNoKGxlZnRTaWRlYmFyVHJhc2hDb2xsYXBzZShjb2xsYXBzZSkpOyB9LAp9KTsgfTsKZXhwb3J0IGRlZmF1bHQgY29ubmVjdChtYXBTdGF0ZVRvUHJvcHMsIG1hcERpc3BhdGNoVG9Qcm9wcykoTWFpbFRhYik7Cg=="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/LeftSidebar/components/MailTab/index.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/LeftSidebar/components/MailTab/index.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAY,MAAM,aAAa,CAAC;AAEhD,OAAO,EAAE,gBAAgB,EAAE,oBAAoB,EAAE,iBAAiB,EAAE,MAAM,uBAAuB,CAAC;AAClG,OAAO,OAAsC,MAAM,WAAW,CAAC;AAC/D,OAAO,EAAE,uBAAuB,EAAE,MAAM,kBAAkB,CAAC;AAC3D,OAAO,EACL,wBAAwB,EAAE,qBAAqB,EAC/C,sBAAsB,GACvB,MAAM,wBAAwB,CAAC;AAEhC,IAAM,eAAe,GAAG,UAAC,KAAiB,IAAiB,OAAA,CAAC;IAC1D,UAAU,EAAE,gBAAgB,CAAC,KAAK,CAAC;IACnC,WAAW,EAAE,iBAAiB,CAAC,KAAK,CAAC;IACrC,cAAc,EAAE,oBAAoB,CAAC,KAAK,CAAC;IAC3C,QAAQ,EAAE,uBAAuB,CAAC,KAAK,CAAC;IACxC,cAAc,EAAE,KAAK,CAAC,WAAW,CAAC,cAAc;IAChD,kBAAkB,EAAE,KAAK,CAAC,UAAU;IACpC,eAAe,EAAE,KAAK,CAAC,WAAW,CAAC,eAAe;IAClD,QAAQ,EAAE,KAAK,CAAC,QAAQ;IACxB,eAAe,EAAE,qBAAqB,CAAC,KAAK,CAAC;IAC7C,SAAS,EAAE,sBAAsB,CAAC,KAAK,CAAC;CACzC,CAAC,EAXyD,CAWzD,CAAC;AAEH,IAAM,kBAAkB,GAAG,UAAC,QAA8B,IAAoB,OAAA,CAAC;IAC7E,aAAa,EAAE,UAAC,QAAiB,IAAK,OAAA,QAAQ,CAAC,wBAAwB,CAAC,QAAQ,CAAC,CAAC,EAA5C,CAA4C;CACnF,CAAC,EAF4E,CAE5E,CAAC;AAEH,eAAe,OAAO,CAAC,eAAe,EAAE,kBAAkB,CAAC,CAAC,OAAO,CAAC,CAAC","sourcesContent":["import { connect, Dispatch } from 'react-redux';\nimport { StoreState } from '@src/types';\nimport { selectDraftCount, selectSendLaterCount, selectOutboxCount } from '@src/ducks/mailCounts';\nimport MailTab, { StateProps, DispatchProps } from './MailTab';\nimport { selectListTabsWithCount } from '@src/ducks/lists';\nimport {\n  leftSidebarTrashCollapse, selectHasFailingDraft,\n  selectShowCollapsedLSB,\n} from '@src/ducks/leftSidebar';\n\nconst mapStateToProps = (state: StoreState): StateProps => ({\n  draftCount: selectDraftCount(state),\n  outboxCount: selectOutboxCount(state),\n  sendLaterCount: selectSendLaterCount(state),\n  listTabs: selectListTabsWithCount(state),\n  trashCollapsed: state.leftSidebar.trashCollapsed,\n  accountInboxCounts: state.mailCounts,\n  selectedAccount: state.leftSidebar.selectedAccount,\n  features: state.features,\n  draftErrorCount: selectHasFailingDraft(state),\n  collapsed: selectShowCollapsedLSB(state),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<StoreState>): DispatchProps => ({\n  collapseTrash: (collapse: boolean) => dispatch(leftSidebarTrashCollapse(collapse)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MailTab);\n"]}]}