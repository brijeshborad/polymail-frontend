{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/team.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/team.ts","mtime":1675280254059},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnOwppbXBvcnQgeyBBY3Rpb25TdGF0dXMgfSBmcm9tICdAc3JjL3R5cGVzL2luZGV4JzsKaW1wb3J0IHsgVEVBTV9GRVRDSCwgdGVhbUZldGNoLCBURUFNX1VQREFURSwgdGVhbVVwZGF0ZSwgVEVBTV9JTlZJVEVfQUNDRVBULCB0ZWFtSW52aXRlQWNjZXB0LCB9IGZyb20gJ0BzcmMvZHVja3MvdGVhbSc7CmltcG9ydCBicm93c2VySGlzdG9yeSBmcm9tICdAc3JjL2xpYi9icm93c2VySGlzdG9yeSc7CmltcG9ydCB7IHRvYXN0U2V0IH0gZnJvbSAnQHNyYy9kdWNrcy90b2FzdHMnOwp2YXIgdGVhbUludml0ZUFjY2VwdEVwaWMgPSBmdW5jdGlvbiAoYWN0aW9uJCwgc3RvcmUsIGRlcHMpIHsKICAgIHJldHVybiBhY3Rpb24kLm9mVHlwZShURUFNX0lOVklURV9BQ0NFUFQpCiAgICAgICAgLmZpbHRlcihmdW5jdGlvbiAoYWN0aW9uKSB7IHJldHVybiBhY3Rpb24uc3RhdHVzID09PSBBY3Rpb25TdGF0dXMuU3RhcnQ7IH0pCiAgICAgICAgLmZsYXRNYXAoZnVuY3Rpb24gKGFjdGlvbikgewogICAgICAgIHJldHVybiBkZXBzLnRlYW0uYWNjZXB0SW52aXRlKGFjdGlvbi5tZXRhKQogICAgICAgICAgICAubWFwKGZ1bmN0aW9uICh0ZWFtQm9keSkgeyByZXR1cm4gdGVhbUludml0ZUFjY2VwdChhY3Rpb24ubWV0YSwgdGVhbUJvZHkpOyB9KQogICAgICAgICAgICAuZG8oZnVuY3Rpb24gKCkgeyByZXR1cm4gYnJvd3Nlckhpc3RvcnkucHVzaCgnLycpOyB9KQogICAgICAgICAgICAuY2F0Y2goZnVuY3Rpb24gKGUpIHsgcmV0dXJuIE9ic2VydmFibGUubWVyZ2UoT2JzZXJ2YWJsZS5vZih0ZWFtSW52aXRlQWNjZXB0KGFjdGlvbi5tZXRhLCBlKSksIE9ic2VydmFibGUub2YodG9hc3RTZXQoZSkpKTsgfSk7CiAgICB9KTsKfTsKdmFyIHRlYW1HZXQgPSBmdW5jdGlvbiAoYWN0aW9uJCwgc3RvcmUsIGRlcHMpIHsKICAgIHJldHVybiBhY3Rpb24kLm9mVHlwZShURUFNX0ZFVENIKQogICAgICAgIC5maWx0ZXIoZnVuY3Rpb24gKGFjdGlvbikgeyByZXR1cm4gYWN0aW9uLnN0YXR1cyA9PT0gQWN0aW9uU3RhdHVzLlN0YXJ0OyB9KQogICAgICAgIC5mbGF0TWFwKGZ1bmN0aW9uIChhY3Rpb24pIHsKICAgICAgICByZXR1cm4gZGVwcy50ZWFtLmdldCgpCiAgICAgICAgICAgIC5tYXAoZnVuY3Rpb24gKHRlYW1Cb2R5KSB7IHJldHVybiB0ZWFtRmV0Y2goYWN0aW9uLm1ldGEsIHRlYW1Cb2R5KTsgfSkKICAgICAgICAgICAgLmNhdGNoKGZ1bmN0aW9uIChlKSB7IHJldHVybiBPYnNlcnZhYmxlLm9mKHRlYW1GZXRjaChhY3Rpb24ubWV0YSwgZSkpOyB9KTsKICAgIH0pOwp9Owp2YXIgdGVhbVVwZGF0ZUVwaWMgPSBmdW5jdGlvbiAoYWN0aW9uJCwgc3RvcmUsIGRlcHMpIHsKICAgIHJldHVybiBhY3Rpb24kLm9mVHlwZShURUFNX1VQREFURSkKICAgICAgICAuZmlsdGVyKGZ1bmN0aW9uIChhY3Rpb24pIHsgcmV0dXJuIGFjdGlvbi5zdGF0dXMgPT09IEFjdGlvblN0YXR1cy5TdGFydDsgfSkKICAgICAgICAuZmxhdE1hcChmdW5jdGlvbiAoYWN0aW9uKSB7CiAgICAgICAgcmV0dXJuIGRlcHMudGVhbS51cGRhdGUoYWN0aW9uLm1ldGEpCiAgICAgICAgICAgIC5tYXAoZnVuY3Rpb24gKHRlYW0pIHsgcmV0dXJuIHRlYW1VcGRhdGUoYWN0aW9uLm1ldGEsIHRlYW0pOyB9KQogICAgICAgICAgICAuY2F0Y2goZnVuY3Rpb24gKGUpIHsgcmV0dXJuIE9ic2VydmFibGUub2YodGVhbVVwZGF0ZShhY3Rpb24ubWV0YSwgZSkpOyB9KTsKICAgIH0pOwp9OwpleHBvcnQgZGVmYXVsdCBbdGVhbUdldCwgdGVhbVVwZGF0ZUVwaWMsIHRlYW1JbnZpdGVBY2NlcHRFcGljXTsK"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/team.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/team.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,MAAM,CAAC;AAGlC,OAAO,EAAsB,YAAY,EAAQ,MAAM,kBAAkB,CAAC;AAE1E,OAAO,EACL,UAAU,EAAE,SAAS,EACrB,WAAW,EAAE,UAAU,EAAE,kBAAkB,EAC3C,gBAAgB,GACjB,MAAM,iBAAiB,CAAC;AAKzB,OAAO,cAAc,MAAM,yBAAyB,CAAC;AACrD,OAAO,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAE7C,IAAM,oBAAoB,GAEtB,UAAC,OAAO,EAAE,KAAK,EAAE,IAAI;IACzB,OAAA,OAAO,CAAC,MAAM,CAAC,kBAAkB,CAAC;SAChC,MAAM,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,MAAM,KAAK,YAAY,CAAC,KAAK,EAApC,CAAoC,CAAC;SACtD,OAAO,CAAC,UAAC,MAAiE;QACzE,OAAA,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC;aAChC,GAAG,CAAC,UAAC,QAAmC,IAAK,OAAA,gBAAgB,CAAC,MAAM,CAAC,IAAI,EAAE,QAAQ,CAAC,EAAvC,CAAuC,CAAC;aACrF,EAAE,CAAC,cAAM,OAAA,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,EAAxB,CAAwB,CAAC;aAClC,KAAK,CAAC,UAAC,CAAQ,IAAK,OAAA,UAAU,CAAC,KAAK,CACpC,UAAU,CAAC,EAAE,CAAC,gBAAgB,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAC/C,UAAU,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAC1B,EAHoB,CAGpB,CAAC;IANJ,CAMI,CACL;AAVF,CAUE,CAAC;AAEH,IAAM,OAAO,GAAqD,UAAC,OAAO,EAAE,KAAK,EAAE,IAAI;IACtF,OAAA,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC;SACxB,MAAM,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,MAAM,KAAK,YAAY,CAAC,KAAK,EAApC,CAAoC,CAAC;SACtD,OAAO,CAAC,UAAA,MAAM;QACb,OAAA,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE;aACZ,GAAG,CAAC,UAAC,QAAkB,IAAK,OAAA,SAAS,CAAC,MAAM,CAAC,IAAI,EAAE,QAAQ,CAAC,EAAhC,CAAgC,CAAC;aAC7D,KAAK,CAAC,UAAC,CAAQ,IAAK,OAAA,UAAU,CAAC,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAxC,CAAwC,CAAC;IAFhE,CAEgE,CACjE;AANF,CAME,CAAC;AAEJ,IAAM,cAAc,GAClB,UAAC,OAAO,EAAE,KAAK,EAAE,IAAI;IACnB,OAAA,OAAO,CAAC,MAAM,CAAC,WAAW,CAAC;SACxB,MAAM,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,MAAM,KAAK,YAAY,CAAC,KAAK,EAApC,CAAoC,CAAC;SACtD,OAAO,CAAC,UAAA,MAAM;QACb,OAAA,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;aAC1B,GAAG,CAAC,UAAA,IAAI,IAAI,OAAA,UAAU,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,EAA7B,CAA6B,CAAC;aAC1C,KAAK,CAAC,UAAC,CAAQ,IAAK,OAAA,UAAU,CAAC,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAzC,CAAyC,CAAC;IAFjE,CAEiE,CAClE;AANH,CAMG,CAAC;AAER,eAAe,CAAC,OAAO,EAAE,cAAc,EAAE,oBAAoB,CAAC,CAAC","sourcesContent":["import { Observable } from 'rxjs';\nimport { Epic } from 'redux-observable';\n\nimport { StoreState, Action, ActionStatus, Team } from '@src/types/index';\n\nimport {\n  TEAM_FETCH, teamFetch, TeamUpdateMeta,\n  TEAM_UPDATE, teamUpdate, TEAM_INVITE_ACCEPT,\n  teamInviteAccept,\n} from '@src/ducks/team';\n\nimport { TeamBody, TeamInviteSuccessResponse } from '@src/api/team';\nimport { Deps } from '@src/lib/epic';\nimport { TeamInviteValidateMeta } from '@src/ducks/teamMembers';\nimport browserHistory from '@src/lib/browserHistory';\nimport { toastSet } from '@src/ducks/toasts';\n\nconst teamInviteAcceptEpic: Epic<\n  Action<TeamInviteValidateMeta|Error|null, TeamInviteSuccessResponse|null>, StoreState, Deps\n> = (action$, store, deps) =>\naction$.ofType(TEAM_INVITE_ACCEPT)\n .filter(action => action.status === ActionStatus.Start)\n .flatMap((action: Action<TeamInviteValidateMeta, TeamInviteSuccessResponse>) =>\n   deps.team.acceptInvite(action.meta)\n     .map((teamBody: TeamInviteSuccessResponse) => teamInviteAccept(action.meta, teamBody))\n     .do(() => browserHistory.push('/'))\n     .catch((e: Error) => Observable.merge(\n      Observable.of(teamInviteAccept(action.meta, e)),\n      Observable.of(toastSet(e)),\n     )),\n );\n\nconst teamGet: Epic<Action<string, TeamBody>, StoreState, Deps> = (action$, store, deps) =>\n action$.ofType(TEAM_FETCH)\n  .filter(action => action.status === ActionStatus.Start)\n  .flatMap(action =>\n    deps.team.get()\n      .map((teamBody: TeamBody) => teamFetch(action.meta, teamBody))\n      .catch((e: Error) => Observable.of(teamFetch(action.meta, e))),\n  );\n\nconst teamUpdateEpic: Epic<Action<TeamUpdateMeta, Team>, StoreState, Deps> =\n  (action$, store, deps) =>\n    action$.ofType(TEAM_UPDATE)\n      .filter(action => action.status === ActionStatus.Start)\n      .flatMap(action =>\n        deps.team.update(action.meta)\n          .map(team => teamUpdate(action.meta, team))\n          .catch((e: Error) => Observable.of(teamUpdate(action.meta, e))),\n      );\n\nexport default [teamGet, teamUpdateEpic, teamInviteAcceptEpic];\n"]}]}