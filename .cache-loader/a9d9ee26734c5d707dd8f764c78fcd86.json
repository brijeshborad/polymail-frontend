{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/api/billing.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/api/billing.ts","mtime":1675280253979},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnOwppbXBvcnQgeyBqc29uUmVxdWVzdCwgYmxhbmtSZXF1ZXN0IH0gZnJvbSAnLi9iYXNlJzsKaW1wb3J0IHsgY3JlYXRlQmlsbGluZyB9IGZyb20gJ0BzcmMvbW9ja3MvYmlsbGluZyc7CnZhciBCaWxsaW5nQ2xpZW50ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkgewogICAgZnVuY3Rpb24gQmlsbGluZ0NsaWVudCgpIHsKICAgIH0KICAgIEJpbGxpbmdDbGllbnQucHJvdG90eXBlLmdldCA9IGZ1bmN0aW9uICgpIHsKICAgICAgICByZXR1cm4ganNvblJlcXVlc3QoewogICAgICAgICAgICBtZXRob2Q6ICdHRVQnLAogICAgICAgICAgICByb3V0ZTogIi92MS9tZS9iaWxsaW5nIiwKICAgICAgICB9KTsKICAgIH07CiAgICBCaWxsaW5nQ2xpZW50LnByb3RvdHlwZS5jcmVhdGUgPSBmdW5jdGlvbiAoYmlsbGluZykgewogICAgICAgIHJldHVybiBqc29uUmVxdWVzdCh7CiAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLAogICAgICAgICAgICByb3V0ZTogIi92MS9tZS9iaWxsaW5nIiwKICAgICAgICAgICAgYm9keTogYmlsbGluZywKICAgICAgICB9KTsKICAgIH07CiAgICBCaWxsaW5nQ2xpZW50LnByb3RvdHlwZS51cGRhdGUgPSBmdW5jdGlvbiAoYmlsbGluZykgewogICAgICAgIHJldHVybiBqc29uUmVxdWVzdCh7CiAgICAgICAgICAgIG1ldGhvZDogJ1BBVENIJywKICAgICAgICAgICAgcm91dGU6ICIvdjEvbWUvYmlsbGluZyIsCiAgICAgICAgICAgIGJvZHk6IGJpbGxpbmcsCiAgICAgICAgfSk7CiAgICB9OwogICAgQmlsbGluZ0NsaWVudC5wcm90b3R5cGUudXBkYXRlQ2FyZCA9IGZ1bmN0aW9uICh0b2tlbikgewogICAgICAgIHJldHVybiBqc29uUmVxdWVzdCh7CiAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLAogICAgICAgICAgICByb3V0ZTogIi92MS9tZS9iaWxsaW5nL3VwZGF0ZUNhcmQiLAogICAgICAgICAgICBib2R5OiB7IHRva2VuOiB0b2tlbiB9LAogICAgICAgIH0pOwogICAgfTsKICAgIEJpbGxpbmdDbGllbnQucHJvdG90eXBlLmNhbmNlbCA9IGZ1bmN0aW9uICgpIHsKICAgICAgICByZXR1cm4ganNvblJlcXVlc3QoewogICAgICAgICAgICBtZXRob2Q6ICdQT1NUJywKICAgICAgICAgICAgcm91dGU6ICIvdjEvbWUvYmlsbGluZy9jYW5jZWwiLAogICAgICAgIH0pOwogICAgfTsKICAgIEJpbGxpbmdDbGllbnQucHJvdG90eXBlLmNhbmNlbGxhdGlvbkZlZWRiYWNrID0gZnVuY3Rpb24gKGZlZWRiYWNrKSB7CiAgICAgICAgcmV0dXJuIGJsYW5rUmVxdWVzdCh7CiAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLAogICAgICAgICAgICByb3V0ZTogIi92MS9tZS9iaWxsaW5nL2NhbmNlbGxhdGlvbkZlZWRiYWNrIiwKICAgICAgICAgICAgYm9keTogZmVlZGJhY2ssCiAgICAgICAgfSk7CiAgICB9OwogICAgQmlsbGluZ0NsaWVudC5wcm90b3R5cGUudmFsaWRhdGVDb3Vwb24gPSBmdW5jdGlvbiAoYm9keSkgewogICAgICAgIHJldHVybiBqc29uUmVxdWVzdCh7CiAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLAogICAgICAgICAgICByb3V0ZTogIi92MS9tZS9iaWxsaW5nL3ZhbGlkYXRlQ291cG9uIiwKICAgICAgICAgICAgYm9keTogYm9keSwKICAgICAgICB9KQogICAgICAgICAgICAuY2F0Y2goZnVuY3Rpb24gKGUpIHsKICAgICAgICAgICAgaWYgKGUuY29kZSA9PT0gNDA0KSB7CiAgICAgICAgICAgICAgICByZXR1cm4gT2JzZXJ2YWJsZS5vZihmYWxzZSk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGhyb3cgZTsKICAgICAgICB9KTsKICAgIH07CiAgICByZXR1cm4gQmlsbGluZ0NsaWVudDsKfSgpKTsKZXhwb3J0IHsgQmlsbGluZ0NsaWVudCB9OwpleHBvcnQgdmFyIG1vY2tCaWxsaW5nQ2xpZW50ID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gKHsKICAgIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gT2JzZXJ2YWJsZS5vZihjcmVhdGVCaWxsaW5nKCkpOyB9LAogICAgY3JlYXRlOiBmdW5jdGlvbiAoYmlsbGluZykgeyByZXR1cm4gT2JzZXJ2YWJsZS5vZihjcmVhdGVCaWxsaW5nKCkpOyB9LAogICAgdXBkYXRlOiBmdW5jdGlvbiAoYmlsbGluZykgeyByZXR1cm4gT2JzZXJ2YWJsZS5vZihjcmVhdGVCaWxsaW5nKCkpOyB9LAogICAgdXBkYXRlQ2FyZDogZnVuY3Rpb24gKHRva2VuKSB7IHJldHVybiBPYnNlcnZhYmxlLm9mKGNyZWF0ZUJpbGxpbmcoKSk7IH0sCiAgICBjYW5jZWw6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIE9ic2VydmFibGUub2YoY3JlYXRlQmlsbGluZygpKTsgfSwKICAgIGNhbmNlbGxhdGlvbkZlZWRiYWNrOiBmdW5jdGlvbiAoZmVlZGJhY2spIHsgcmV0dXJuIE9ic2VydmFibGUub2YobnVsbCk7IH0sCiAgICB2YWxpZGF0ZUNvdXBvbjogZnVuY3Rpb24gKGJvZHkpIHsgcmV0dXJuIE9ic2VydmFibGUub2YoeyBjb3Vwb25QZXJjZW50OiAyNSB9KTsgfSwKfSk7IH07Cg=="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/api/billing.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/api/billing.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,MAAM,CAAC;AAKlC,OAAO,EAAE,WAAW,EAAE,YAAY,EAAY,MAAM,QAAQ,CAAC;AAC7D,OAAO,EAAE,aAAa,EAAE,MAAM,oBAAoB,CAAC;AAyBnD;IAAA;IA6DA,CAAC;IA5DC,2BAAG,GAAH;QACE,OAAO,WAAW,CAAC;YACjB,MAAM,EAAE,KAAK;YACb,KAAK,EAAE,gBAAgB;SACxB,CAAC,CAAC;IACL,CAAC;IAED,8BAAM,GAAN,UAAO,OAA0B;QAC/B,OAAO,WAAW,CAAC;YACjB,MAAM,EAAE,MAAM;YACd,KAAK,EAAE,gBAAgB;YACvB,IAAI,EAAE,OAAO;SACd,CAAC,CAAC;IACL,CAAC;IAED,8BAAM,GAAN,UAAO,OAAqC;QAC1C,OAAO,WAAW,CAAC;YACjB,MAAM,EAAE,OAAO;YACf,KAAK,EAAE,gBAAgB;YACvB,IAAI,EAAE,OAAO;SACd,CAAC,CAAC;IACL,CAAC;IAED,kCAAU,GAAV,UAAW,KAAa;QACtB,OAAO,WAAW,CAAC;YACjB,MAAM,EAAE,MAAM;YACd,KAAK,EAAE,2BAA2B;YAClC,IAAI,EAAE,EAAE,KAAK,OAAA,EAAE;SAChB,CAAC,CAAC;IACL,CAAC;IAED,8BAAM,GAAN;QACE,OAAO,WAAW,CAAC;YACjB,MAAM,EAAE,MAAM;YACd,KAAK,EAAE,uBAAuB;SAC/B,CAAC,CAAC;IACL,CAAC;IAED,4CAAoB,GAApB,UAAqB,QAAyC;QAC5D,OAAO,YAAY,CAAC;YAClB,MAAM,EAAE,MAAM;YACd,KAAK,EAAE,qCAAqC;YAC5C,IAAI,EAAE,QAAQ;SACf,CAAC,CAAC;IACL,CAAC;IAED,sCAAc,GAAd,UAAe,IAAsB;QACnC,OAAO,WAAW,CAAC;YACjB,MAAM,EAAE,MAAM;YACd,KAAK,EAAE,+BAA+B;YACtC,IAAI,MAAA;SACL,CAAC;aACD,KAAK,CAAC,UAAC,CAAC;YACP,IAAK,CAAc,CAAC,IAAI,KAAK,GAAG,EAAE;gBAChC,OAAO,UAAU,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;aAC7B;YAED,MAAM,CAAC,CAAC;QACV,CAAC,CAAC,CAAC;IACL,CAAC;IACH,oBAAC;AAAD,CAAC,AA7DD,IA6DC;;AAED,MAAM,CAAC,IAAM,iBAAiB,GAAG,cAAkB,OAAA,CAAC;IAClD,GAAG,EAAE,cAAM,OAAA,UAAU,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC,EAA9B,CAA8B;IACzC,MAAM,EAAE,UAAA,OAAO,IAAI,OAAA,UAAU,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC,EAA9B,CAA8B;IACjD,MAAM,EAAE,UAAA,OAAO,IAAI,OAAA,UAAU,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC,EAA9B,CAA8B;IACjD,UAAU,EAAE,UAAA,KAAK,IAAI,OAAA,UAAU,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC,EAA9B,CAA8B;IACnD,MAAM,EAAE,cAAM,OAAA,UAAU,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC,EAA9B,CAA8B;IAC5C,oBAAoB,EAAE,UAAA,QAAQ,IAAI,OAAA,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,EAAnB,CAAmB;IACrD,cAAc,EAAE,UAAA,IAAI,IAAI,OAAA,UAAU,CAAC,EAAE,CAAC,EAAE,aAAa,EAAE,EAAE,EAAE,CAAC,EAApC,CAAoC;CAC7D,CAAC,EARiD,CAQjD,CAAC","sourcesContent":["import { Observable } from 'rxjs';\nimport { Partial } from '@src/types';\nimport {\n  Billing, BillingSubscription, BillingCoupon, BillingCouponKey,\n} from '@src/types/billing';\nimport { jsonRequest, blankRequest, ApiError } from './base';\nimport { createBilling } from '@src/mocks/billing';\n\nexport interface BillingAPI {\n  get(): Observable<Billing>;\n  create(billing: BillingCreateBody): Observable<Billing>;\n  update(billing: Partial<BillingSubscription>): Observable<Billing>;\n  updateCard(token: string): Observable<Billing>;\n  cancel(): Observable<Billing>;\n  cancellationFeedback(feedback: BillingCancellationFeedbackBody): Observable<null>;\n  validateCoupon(body: BillingCouponKey): Observable<BillingCoupon>;\n}\n\nexport type BillingCreateBody =\n  Partial<BillingSubscription> & CardBody &\n  { navigateTo?: string };\n\nexport interface BillingCancellationFeedbackBody {\n  reason: string;\n  feedback?: string;\n}\n\nexport interface CardBody {\n  token: string;\n}\n\nexport class BillingClient implements BillingAPI {\n  get(): Observable<Billing> {\n    return jsonRequest({\n      method: 'GET',\n      route: `/v1/me/billing`,\n    });\n  }\n\n  create(billing: BillingCreateBody): Observable<Billing> {\n    return jsonRequest({\n      method: 'POST',\n      route: `/v1/me/billing`,\n      body: billing,\n    });\n  }\n\n  update(billing: Partial<BillingSubscription>): Observable<Billing> {\n    return jsonRequest({\n      method: 'PATCH',\n      route: `/v1/me/billing`,\n      body: billing,\n    });\n  }\n\n  updateCard(token: string): Observable<Billing> {\n    return jsonRequest({\n      method: 'POST',\n      route: `/v1/me/billing/updateCard`,\n      body: { token },\n    });\n  }\n\n  cancel(): Observable<Billing> {\n    return jsonRequest({\n      method: 'POST',\n      route: `/v1/me/billing/cancel`,\n    });\n  }\n\n  cancellationFeedback(feedback: BillingCancellationFeedbackBody): Observable<null> {\n    return blankRequest({\n      method: 'POST',\n      route: `/v1/me/billing/cancellationFeedback`,\n      body: feedback,\n    });\n  }\n\n  validateCoupon(body: BillingCouponKey): Observable<BillingCoupon> {\n    return jsonRequest({\n      method: 'POST',\n      route: `/v1/me/billing/validateCoupon`,\n      body,\n    })\n    .catch((e) => {\n      if ((e as ApiError).code === 404) {\n        return Observable.of(false);\n      }\n\n      throw e;\n    });\n  }\n}\n\nexport const mockBillingClient = (): BillingAPI => ({\n  get: () => Observable.of(createBilling()),\n  create: billing => Observable.of(createBilling()),\n  update: billing => Observable.of(createBilling()),\n  updateCard: token => Observable.of(createBilling()),\n  cancel: () => Observable.of(createBilling()),\n  cancellationFeedback: feedback => Observable.of(null),\n  validateCoupon: body => Observable.of({ couponPercent: 25 }),\n});\n"]}]}