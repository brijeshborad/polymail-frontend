{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/Form/ConnectProvider/ConnectProvider.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/Form/ConnectProvider/ConnectProvider.tsx","mtime":1675280254005},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/Form/ConnectProvider/ConnectProvider.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/Form/ConnectProvider/ConnectProvider.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { Account, AccountType, Features } from '@src/types';\nimport { Billing } from '@src/types/billing';\nimport ProviderItem from './components/ProviderItem';\nimport NavigationHeader from '@src/routes/Settings/components/NavigationHeader';\n\nimport Fastmail from '@src/assets/ProviderLogos/Fastmail@3x.png';\nimport Google from '@src/assets/ProviderLogos/Google@3x.png';\nimport iCloud from '@src/assets/ProviderLogos/iCloud@3x.png';\nimport Office365 from '@src/assets/ProviderLogos/Office365@3x.png';\nimport Outlook from '@src/assets/ProviderLogos/Outlook@3x.png';\nimport Yahoo from '@src/assets/ProviderLogos/Yahoo@3x.png';\n\nimport Confirm, { Props as ConfirmProps } from '@src/components/Base/Confirm';\nimport './ConnectProvider.scss';\nimport browserHistory from '@src/lib/browserHistory';\nimport UpgradePrompt from '@src/components/Base/UpgradePrompt/UpgradePrompt';\nimport { accountLimitCopy } from '@src/lib/models/billing';\nimport { MAX_ACCOUNT_LIMIT } from '@src/lib/account';\nimport { AmplitudeEvents, logAmplitudeEvent } from '@src/lib/amplitude-analytics';\nimport { capitalize } from 'lodash';\n\nconst PROVIDERS = [\n  {\n    type: 'google',\n    logo: Google,\n    accountType: AccountType.Google,\n    width: '80px',\n  },\n  {\n    type: 'microsoftGraph',\n    logo: Office365,\n    accountType: AccountType.Microsoft,\n    width: '80px',\n  },\n  {\n    type: 'microsoftGraph',\n    logo: Outlook,\n    accountType: AccountType.Microsoft,\n    width: '80px',\n  },\n  {\n    type: 'icloud',\n    logo: iCloud,\n    accountType: AccountType.iCloud,\n    width: '80px',\n  },\n  {\n    type: 'yahoo',\n    logo: Yahoo,\n    accountType: AccountType.IMAP,\n    width: '80px',\n    disabled: false,\n  },\n  {\n    type: 'fastmail',\n    logo: Fastmail,\n    accountType: AccountType.IMAP,\n    width: '80px',\n  },\n];\n\nexport interface Props {\n  domain: string;\n}\n\nexport interface StateProps {\n  features: Features;\n  accounts: Account[];\n  domain: string;\n  billing?: Billing;\n}\n\nexport interface State {\n  showUpgrade?: boolean;\n  confirmProps?: ConfirmProps;\n}\n\nexport interface DispatchProps {\n  selectProvider: (provider: AccountType) => void;\n  signout: () => void;\n  toastSet: (toast: Error) => void;\n}\n\nclass ConnectProvider extends React.PureComponent<StateProps & DispatchProps, State> {\n  upgradePrompt: UpgradePrompt;\n\n  constructor(props: StateProps & DispatchProps) {\n    super();\n    this.state = {};\n  }\n\n  handleUpgradeRef = (ref: UpgradePrompt) => {\n    this.upgradePrompt = ref;\n  }\n\n  handleButtonClick = (provider: string) => {\n    // Show Upgrade Prompt\n    const { features, accounts } = this.props;\n    const showPrompt = features.accounts && accounts.length > features.accounts;\n\n    // Show Special dialogue when max account limit is reached\n    if (showPrompt && accounts.length === MAX_ACCOUNT_LIMIT) {\n      const confirmProps: ConfirmProps = {\n        title: 'You\\'ve reached the maximum number of accounts',\n        message: 'You can add a maximum number of 20 accounts to Polymail. Please remove an existing account before adding a new one',\n        confirmCopy: 'Ok',\n        onConfirm: () => {\n          this.setState({ confirmProps: undefined });\n        },\n      };\n\n      this.setState({ confirmProps });\n      return;\n    }\n\n    if (showPrompt) {\n      this.upgradePrompt.show();\n      this.setState({ showUpgrade: true });\n      return;\n    }\n    logAmplitudeEvent(AmplitudeEvents.ConnectAnEmailAccount, { details: provider });\n\n    switch (provider) {\n      case AccountType.Google:\n      case AccountType.Microsoft:\n        this.props.selectProvider(provider);\n        break;\n      case AccountType.iCloud:\n        browserHistory.push(`${this.props.domain}/icloud`);\n        break;\n      case 'yahoo':\n        browserHistory.push(`${this.props.domain}/yahoo`);\n        break;\n      case 'fastmail':\n        browserHistory.push(`${this.props.domain}/fastmail`);\n        break;\n      default:\n        this.props.toastSet(new Error(`Provider ${capitalize(provider)} not supported`));\n        break;\n    }\n  }\n\n  handleBackPress = () => {\n    browserHistory.goBack();\n  }\n\n  handleCustomProvider = () => {\n    browserHistory.push(`${this.props.domain}/imap`);\n  }\n\n  render() {\n    const { accounts, signout, billing } = this.props;\n    const { confirmProps } = this.state;\n    let title = 'Connect your email';\n    let description = 'This should be your primary work email. You can add more accounts later.';\n\n    if (!!accounts.length) {\n      title = 'Add Account';\n      description = 'Select your email provider:';\n    }\n    return (\n      <div className=\"login-connect-provider\">\n        {!!accounts.length &&\n          <NavigationHeader\n            title=\"Accounts\"\n            onBack={this.handleBackPress}\n          />\n        }\n        {confirmProps && (\n          <Confirm\n            {...confirmProps}\n          />\n        )}\n        <UpgradePrompt\n          ref={this.handleUpgradeRef}\n          title=\"Upgrade your Plan to add more accounts\"\n          description={accountLimitCopy(billing)}\n          buttonCopy={'Upgrade Plan'}\n          lightbox\n        />\n        <div className=\"main\">\n          <div className=\"prompt\">\n            <div className=\"title\">\n              {title}\n            </div>\n            <div className=\"description\">\n            {description}\n            </div>\n          </div>\n          <div className=\"providers\">\n            {PROVIDERS\n              .map(provider =>\n                <ProviderItem\n                  key={provider.logo}\n                  onClick={this.handleButtonClick}\n                  provider={provider}\n                  disabled={provider.disabled}\n                />,\n            )}\n          </div>\n          <div className=\"custom\">\n            <button onClick={this.handleCustomProvider}>\n              I have a different email provider\n            </button>\n          </div>\n\n          {!accounts.length &&\n            <div className=\"signout\">\n              <button onClick={signout}>\n                Sign Out\n              </button>\n            </div>\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ConnectProvider;\n"]}]}