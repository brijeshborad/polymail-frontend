{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/Form/RecipientsEditor/RecipientsEditor.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/Form/RecipientsEditor/RecipientsEditor.tsx","mtime":1675280254007},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/Form/RecipientsEditor/RecipientsEditor.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/Form/RecipientsEditor/RecipientsEditor.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Editor,\n  EditorState,\n  convertFromRaw,\n  CompositeDecorator,\n  ContentBlock,\n  ContentState,\n  getDefaultKeyBinding,\n  SelectionState,\n  RawDraftContentState,\n  DraftHandleValue,\n} from 'draft-js';\n\nimport { debounce, isEqual, last, difference } from 'lodash';\nimport { parseOneAddress } from 'email-addresses';\nimport { addressToEmail, parseAddress } from '@src/lib/address';\nimport { Contact, KeyCode, ContactGroup } from '@src/types';\n\nimport EmailToken from './components/EmailToken';\nimport ContactTypeaheadPopover from './components/ContactTypeaheadPopover';\n\nimport './RecipientsEditor.scss';\n\nexport const enum EditorType {\n  To = 'to',\n  Bcc = 'bcc',\n  Cc = 'cc',\n  Event = 'event',\n}\n\nexport interface Props {\n  recipients: string[];\n  id: EditorType;\n  typeaheadContacts?: Array<Contact|ContactGroup>;\n  focused: boolean;\n\n  onRecipientsChange: (list: string, recipients: string[]) => void;\n  onContactGroupAdd: (list: string, contactGroup: ContactGroup) => void;\n  getContact?: (email: string) => Contact;\n  onSearch?: (id: EditorType) => void;\n  onTabPress?: () => void;\n  onShiftTabPress?: () => void;\n  onFocus?: (type: EditorType) => void;\n  onBlur?: () => void;\n}\n\ninterface State {\n  editorState: EditorState;\n  startRecipient?: number;\n  popoverShown: boolean;\n  selectedPopoverIndex: number;\n}\n\nexport interface DispatchProps {\n  searchContactTypeahead: (query: string) => void;\n  clearContactTypeahead: () => void;\n  selectContact: (email: string) => void;\n}\n\nclass RecipientsEditor extends React.PureComponent<Props & DispatchProps, State>  {\n  static defaultProps = {\n    recipients: [],\n  };\n  private compositeDecorator: CompositeDecorator;\n  private debounced: any;\n  private popover: ContactTypeaheadPopover;\n  private timeout: NodeJS.Timer;\n  private editor: Editor;\n  private potentialRecipient?: string;\n\n  constructor() {\n    super();\n\n    this.compositeDecorator = new CompositeDecorator([\n      {\n        strategy: this.handleStrategy,\n        component: EmailToken,\n      },\n    ]);\n\n    this.debounced = debounce(this.contactTypeahead, 300);\n\n    this.state = {\n      editorState: EditorState.createEmpty(),\n      popoverShown: false,\n      selectedPopoverIndex: 0,\n    };\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props) {\n    const { recipients } = this.props;\n\n    if (difference(nextProps.recipients, recipients).length > 0) {\n      const block = convertFromRaw(this.createRawContentState(nextProps.recipients));\n      const editor = EditorState.createWithContent(block, this.compositeDecorator);\n      this.setState({\n        editorState: nextProps.focused ? EditorState.moveFocusToEnd(editor) : editor,\n      });\n    }\n\n    const editorText = this.state.editorState.getCurrentContent().getPlainText();\n    if (!nextProps.typeaheadContacts || nextProps.typeaheadContacts.length === 0 ||\n      !nextProps.focused\n    ) {\n      this.popover.hide();\n    } else if (nextProps.focused && !!editorText) {\n      this.popover.show();\n    }\n  }\n\n  componentDidMount() {\n    const { recipients, focused } = this.props;\n\n    if (recipients.length) {\n      const block = convertFromRaw(this.createRawContentState(recipients));\n      const editor = EditorState.createWithContent(block, this.compositeDecorator);\n      this.setState({ editorState: focused ? EditorState.moveFocusToEnd(editor) : editor });\n    }\n  }\n\n  hasFocus = () => {\n    return this.state.editorState.getSelection().getHasFocus();\n  }\n\n  handleStrategy = (contentBlock: ContentBlock, callback: any, contentState: ContentState) => {\n    contentBlock.findEntityRanges(\n      (character) => {\n        const entityKey = character.getEntity();\n        if (entityKey === null) {\n          return false;\n        }\n        return contentState.getEntity(entityKey).getType() === 'TOKEN';\n      },\n      callback,\n    );\n  }\n\n  createRawContentState = (addresses: string[]): RawDraftContentState => {\n    const { getContact } = this.props;\n    let text = '';\n    const entityRanges: any[] = [];\n    let length;\n    let offset;\n    let key;\n    let contact;\n    let data;\n    const entityMap = {};\n\n    addresses.map((address: string, index: number) => {\n      length = address.length;\n      offset = text.length;\n      text += address;\n      key = index;\n\n      if (getContact) {\n        contact = getContact(addressToEmail(address));\n        data = {\n          email: contact.email,\n          photoUrl: contact.photoUrl,\n          fullName: contact.fullName,\n          index,\n        };\n      } else {\n        data = { email: addressToEmail(address) };\n      }\n\n      entityMap[key] = {\n        type: 'TOKEN',\n        mutability: 'IMMUTABLE',\n        data,\n      };\n      entityRanges.push({ key, offset, length });\n    });\n\n    return {\n      blocks: [{\n        key: '',\n        depth: 0,\n        inlineStyleRanges: [],\n        text,\n        type: 'unstyled',\n        entityRanges,\n      }],\n      entityMap,\n    };\n  }\n\n  keyBinding = (e: React.KeyboardEvent<HTMLElement>): string => {\n    if (e.keyCode === KeyCode.Enter && this.state.popoverShown) {\n      return 'new-email-from-popover';\n    }\n\n    if (e.keyCode === KeyCode.Enter) {\n      return 'new-email';\n    }\n\n    if (e.keyCode === KeyCode.Comma && !e.shiftKey) {\n      this.setPotentialRecipient();\n      if (this.potentialRecipient && parseOneAddress(this.potentialRecipient)) {\n        return 'new-email';\n      }\n    }\n\n    if (e.keyCode === KeyCode.Up) {\n      const handled = this.handleUpArrow(e);\n      if (handled) {\n        return 'pm-up-arrow';\n      }\n    }\n\n    if (e.keyCode === KeyCode.Down) {\n      const handled = this.handleDownArrow(e);\n      if (handled) {\n        return 'pm-down-arrow';\n      }\n    }\n\n    if (e.keyCode === KeyCode.Tab) {\n      const handled = this.handleTabPress(e);\n      if (handled) {\n        return 'pm-down-arrow';\n      }\n    }\n\n    return getDefaultKeyBinding(e) || '';\n  }\n\n  setPotentialRecipient = () => {\n    const { editorState } = this.state;\n    const contentState = editorState.getCurrentContent();\n    const text = contentState.getPlainText();\n    const block = contentState.getLastBlock();\n    const cursorPosition = editorState.getSelection().getFocusOffset() - 1;\n\n    let i;\n    let entity;\n    for (i = cursorPosition; i >= 0; i -= 1) {\n      entity = block.getEntityAt(i);\n      if (entity) {\n        break;\n      }\n    }\n\n    const start = i + 1;\n    const end = cursorPosition + 1;\n    this.potentialRecipient = cursorPosition >= start ? text.slice(start, end) : undefined;\n  }\n\n  addRecipientByCursorPosition = () => {\n    const { getContact } = this.props;\n\n    if (!this.potentialRecipient) {\n      this.setPotentialRecipient();\n    }\n\n    if (this.potentialRecipient && getContact) {\n      this.addRecipient(getContact(this.potentialRecipient));\n    } else {\n      this.updateRecipients();\n    }\n\n    this.potentialRecipient = '';\n    return 'handled';\n  }\n\n  addRecipient = (contact: Contact) => {\n    const { id, onRecipientsChange } = this.props;\n    const { startRecipient } = this.state;\n    let newRecipients;\n    const recipients: string[] = this.getCurrentEntities();\n\n    if (startRecipient !== undefined) {\n      newRecipients = recipients\n        .slice(0, startRecipient + 1)\n        .concat([`${contact.fullName} <${contact.email}>`]);\n\n      if (startRecipient !== recipients.length - 1) {\n        newRecipients = newRecipients.concat(recipients.slice(startRecipient + 1));\n      }\n    } else {\n      newRecipients = [`${contact.fullName} <${contact.email}>`].concat(recipients);\n    }\n\n    onRecipientsChange(id, newRecipients);\n    this.setState({ startRecipient: undefined });\n  }\n\n  addContactGroup = (contactGroup: ContactGroup) => {\n    const { id, onContactGroupAdd } = this.props;\n    onContactGroupAdd(id, contactGroup);\n    this.setState({ startRecipient: undefined });\n  }\n\n  getCurrentEntities = () => {\n    const { editorState } = this.state;\n    const entities: string[] = [];\n\n    const contentState = editorState.getCurrentContent();\n    contentState.getLastBlock().findEntityRanges(\n      (character) => {\n        const entityKey = character.getEntity();\n        if (entityKey === null) {\n          return false;\n        }\n\n        return contentState.getEntity(entityKey).getType() === 'TOKEN';\n      },\n      (start: number, end: number) => {\n        entities.push(contentState.getPlainText().slice(start, end));\n      },\n    );\n\n    return entities;\n  }\n\n  updateRecipients = () => {\n    const { id, onRecipientsChange, recipients } = this.props;\n    const currentRecipients = this.getCurrentEntities();\n\n    if (!isEqual(recipients, currentRecipients)) {\n      onRecipientsChange(id, currentRecipients);\n    }\n  }\n\n  handleKeyCommand = (command: string) => {\n    const { typeaheadContacts } = this.props;\n    const { selectedPopoverIndex } = this.state;\n\n    switch (command)  {\n      case 'new-email-from-popover': {\n        if (typeaheadContacts && typeaheadContacts.length > selectedPopoverIndex) {\n          this.handleContactSelect(typeaheadContacts[selectedPopoverIndex]);\n          return 'handled';\n        }\n        break;\n      }\n      case 'new-email': {\n        this.addRecipientByCursorPosition();\n        return 'handled';\n      }\n      case 'pm-up-arrow':\n      case 'pm-down-arrow':\n      case 'pm-tab':\n        return 'handled';\n      default:\n        return 'not-handled';\n    }\n\n    return 'not-handled';\n  }\n\n  contactTypeahead = (editorState: EditorState) => {\n    const contentState = editorState.getCurrentContent();\n    const text = contentState.getPlainText();\n    const block = contentState.getLastBlock();\n    const cursorPosition = editorState.getSelection().getFocusOffset() - 1;\n\n    let i;\n    let entity;\n    let startRecipient;\n    for (i = cursorPosition; i >= 0; i -= 1) {\n      entity = block.getEntityAt(i);\n      if (entity) {\n        startRecipient = contentState.getEntity(entity).getData().index;\n        break;\n      }\n    }\n\n    let k;\n    for (k = cursorPosition; k < text.length; k += 1) {\n      entity = block.getEntityAt(k);\n      if (entity) {\n        break;\n      }\n    }\n\n    const start = i + 1;\n    const end = k === text.length - 1 ? k + 1 : k;\n    const query = end > start ? text.slice(start, end) : undefined;\n    if (query) {\n      this.setState(\n        {\n          startRecipient,\n        },\n        () => {\n          this.props.searchContactTypeahead(query);\n          if (this.props.onSearch) {\n            this.props.onSearch(this.props.id);\n          }\n        },\n      );\n    } else {\n      this.debounced.cancel();\n      this.props.clearContactTypeahead();\n    }\n  }\n\n  selectEntity = (entityKey: string, callback: any, contentState: ContentState) => {\n    contentState.getLastBlock().findEntityRanges(\n      (character) => {\n        const key = character.getEntity();\n        if (entityKey.length && key === entityKey) {\n          contentState.mergeEntityData(key, { selected: true });\n          return true;\n        }\n\n        if (key) {\n          contentState.mergeEntityData(key, { selected: false });\n        }\n\n        return false;\n      },\n      callback,\n    );\n\n    return contentState;\n  }\n\n  // onChange gets called after onBlur as well\n  handleEditorChange = (editorState: EditorState) => {\n    const oldEditorState = this.state.editorState;\n    const focused = editorState.getSelection().getHasFocus();\n    const prevCursorPosition = oldEditorState.getSelection().getAnchorOffset();\n    const cursorPosition = editorState.getSelection().getAnchorOffset();\n    const contentState = editorState.getCurrentContent();\n    const entityKey = contentState.getLastBlock().getEntityAt(\n      prevCursorPosition >= cursorPosition && cursorPosition ?\n        cursorPosition - 1 : cursorPosition,\n    );\n    const blockKey = contentState.getBlockMap().last().getKey();\n    const firstFocus = !this.state.editorState.getSelection().getHasFocus() &&\n      editorState.getSelection().getHasFocus();\n    let newContentState: ContentState = this.selectEntity(\n      '',\n      undefined,\n      contentState,\n    );\n    let newEditorState: EditorState = editorState;\n    const deleteKey = editorState.getLastChangeType() === 'backspace-character';\n\n    if (focused || this.state.popoverShown) {\n      let selection = editorState.getSelection();\n\n      if (entityKey && !firstFocus && !deleteKey) {\n        newContentState = this.selectEntity(\n          entityKey,\n          (start: number, end: number) => {\n            selection = new SelectionState({\n              anchorKey: blockKey,\n              anchorOffset: start,\n              focusKey: blockKey,\n              focusOffset: end,\n            });\n          },\n          contentState,\n        );\n      }\n\n      this.debounced(editorState);\n      newEditorState = EditorState.forceSelection(\n        EditorState\n          .createWithContent(newContentState, this.compositeDecorator),\n        selection,\n      );\n\n      if (firstFocus) {\n        newEditorState = EditorState.moveFocusToEnd(newEditorState);\n      }\n    } else if (!focused) {\n      newEditorState = EditorState.createWithContent(newContentState, this.compositeDecorator);\n      this.popover.hide();\n      this.props.clearContactTypeahead();\n      this.addRecipientByCursorPosition();\n\n      if (this.props.onBlur) {\n        this.props.onBlur();\n      }\n    }\n\n    this.setState({ editorState: newEditorState }, this.updateRecipients);\n  }\n\n  handleEditorPaste = (\n    text: string,\n  ): DraftHandleValue => {\n    const { onRecipientsChange, id, selectContact } = this.props;\n    const recipients = text.split(/,|;/);\n    const recipient = !!recipients.length && parseAddress(last(recipients)!);\n\n    if (recipient && recipient.email) {\n      selectContact(recipient.email);\n    }\n    onRecipientsChange(id, this.props.recipients.concat(recipients));\n\n    return 'handled';\n  }\n\n  handleContactSelect = (contact: Contact|ContactGroup) => {\n    const { clearContactTypeahead, selectContact } = this.props;\n\n    // check if contact model\n    if ((contact as Contact).email) {\n      selectContact((contact as Contact).email);\n      this.addRecipient(contact as Contact);\n    } else {\n      this.addContactGroup(contact as ContactGroup);\n    }\n\n    this.debounced.cancel();\n    clearContactTypeahead();\n  }\n\n  handlePopoverChange = (index: number) => {\n    this.setState({ selectedPopoverIndex: index });\n  }\n\n  handleRef = (ref: ContactTypeaheadPopover) => {\n    this.popover = ref;\n  }\n\n  handlePopoverShow = () => {\n    this.setState({ popoverShown: true });\n  }\n\n  handlePopoverHide = () => {\n    this.setState({ popoverShown: false });\n  }\n\n  handleUpArrow = (e: React.KeyboardEvent<HTMLElement>) => {\n    if (this.state.popoverShown) {\n      this.popover.onUpArrow();\n      return true;\n    }\n\n    return false;\n  }\n\n  handleDownArrow = (e: React.KeyboardEvent<HTMLElement>) => {\n    if (this.state.popoverShown) {\n      this.popover.onDownArrow();\n      return true;\n    }\n\n    return false;\n  }\n\n  handleTabPress = (e: React.KeyboardEvent<HTMLElement>) => {\n    const { onTabPress, onShiftTabPress, typeaheadContacts } = this.props;\n    const { selectedPopoverIndex } = this.state;\n    let handled = false;\n\n    if (this.state.popoverShown) {\n      if (typeaheadContacts && typeaheadContacts.length > selectedPopoverIndex) {\n        this.handleContactSelect(typeaheadContacts[selectedPopoverIndex]);\n        handled = true;\n      }\n    } else {\n      this.addRecipientByCursorPosition();\n\n      if (!e.shiftKey && onTabPress) {\n        onTabPress();\n        handled = true;\n      } else if (onShiftTabPress) {\n        onShiftTabPress();\n        handled = true;\n      }\n    }\n\n    return handled;\n  }\n\n  focus = () => {\n    if (this.editor) {\n      clearTimeout(this.timeout);\n      this.timeout = global.setTimeout(\n        () => {\n          let editorState = this.state.editorState;\n          editorState = EditorState.moveFocusToEnd(editorState);\n          this.setState(\n            {\n              editorState,\n            },\n            () => this.handleFocus(),\n          );\n        },\n        0,\n      );\n    }\n  }\n\n  handleFocus = () => {\n    const { onFocus, id } = this.props;\n    if (onFocus) {\n      onFocus(id);\n    }\n  }\n\n  handleEditorRef = (ref: Editor) => {\n    this.editor = ref;\n  }\n\n  render() {\n    const { typeaheadContacts } = this.props;\n\n    return (\n      <div className=\"recipients-editor\">\n        <Editor\n          ref={this.handleEditorRef}\n          editorState={this.state.editorState}\n          onChange={this.handleEditorChange}\n          handleKeyCommand={this.handleKeyCommand}\n          keyBindingFn={this.keyBinding}\n          handlePastedText={this.handleEditorPaste}\n          onFocus={this.handleFocus}\n        />\n        <ContactTypeaheadPopover\n          contacts={typeaheadContacts || []}\n          onSelect={this.handleContactSelect}\n          ref={this.handleRef}\n          onShow={this.handlePopoverShow}\n          onHide={this.handlePopoverHide}\n          onChange={this.handlePopoverChange}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RecipientsEditor;\n"]}]}