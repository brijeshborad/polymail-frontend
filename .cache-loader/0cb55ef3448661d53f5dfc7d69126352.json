{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/LeftSidebar/components/MailTab/components/Section/MailHeader/AccountChooserPopover/index.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/LeftSidebar/components/MailTab/components/Section/MailHeader/AccountChooserPopover/index.tsx","mtime":1675280254019},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgTGVmdFNpZGViYXJDb3VudCB9IGZyb20gJ0BzcmMvdHlwZXMnOwppbXBvcnQgQWNjb3VudENob29zZXJQb3BvdmVyIGZyb20gJy4vQWNjb3VudENob29zZXJQb3BvdmVyJzsKaW1wb3J0IHsgc2VsZWN0QWxsTWFpbGJveENvdW50IH0gZnJvbSAnQHNyYy9kdWNrcy9tYWlsQ291bnRzJzsKaW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4JzsKdmFyIG1hcFN0YXRlVG9Qcm9wcyA9IGZ1bmN0aW9uIChzdGF0ZSwgb3duUHJvcHMpIHsKICAgIHZhciBjb3VudHMgPSB7fTsKICAgIHN0YXRlLmFjY291bnRzLm1hcChmdW5jdGlvbiAoYWNjb3VudCkgewogICAgICAgIGlmIChzdGF0ZS5tYWlsQ291bnRzW2FjY291bnQuaWRdKSB7CiAgICAgICAgICAgIGNvdW50c1thY2NvdW50LmlkXSA9CiAgICAgICAgICAgICAgICBzdGF0ZS5wcmVmZXJlbmNlcy5sZWZ0U2lkZWJhckNvdW50ID09PSBMZWZ0U2lkZWJhckNvdW50LkFsbCA/CiAgICAgICAgICAgICAgICAgICAgc3RhdGUubWFpbENvdW50c1thY2NvdW50LmlkXS5pbmJveFJlYWQgKyBzdGF0ZS5tYWlsQ291bnRzW2FjY291bnQuaWRdLmluYm94VW5yZWFkIDoKICAgICAgICAgICAgICAgICAgICBzdGF0ZS5tYWlsQ291bnRzW2FjY291bnQuaWRdLmluYm94VW5yZWFkOwogICAgICAgIH0KICAgIH0pOwogICAgdmFyIGFsbE1haWxDb3VudHMgPSBzZWxlY3RBbGxNYWlsYm94Q291bnQoc3RhdGUpOwogICAgY291bnRzLmFsbCA9IHN0YXRlLnByZWZlcmVuY2VzLmxlZnRTaWRlYmFyQ291bnQgPT09IExlZnRTaWRlYmFyQ291bnQuQWxsID8KICAgICAgICBhbGxNYWlsQ291bnRzLmluYm94UmVhZCArIGFsbE1haWxDb3VudHMuaW5ib3hVbnJlYWQgOgogICAgICAgIGFsbE1haWxDb3VudHMuaW5ib3hVbnJlYWQ7CiAgICByZXR1cm4gewogICAgICAgIGNvdW50czogY291bnRzLAogICAgfTsKfTsKZXhwb3J0IGRlZmF1bHQgY29ubmVjdChtYXBTdGF0ZVRvUHJvcHMsIG51bGwsIG51bGwsIHsgd2l0aFJlZjogdHJ1ZSB9KShBY2NvdW50Q2hvb3NlclBvcG92ZXIpOwo="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/LeftSidebar/components/MailTab/components/Section/MailHeader/AccountChooserPopover/index.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/LeftSidebar/components/MailTab/components/Section/MailHeader/AccountChooserPopover/index.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAc,gBAAgB,EAAE,MAAM,YAAY,CAAC;AAC1D,OAAO,qBAAgC,MAAM,yBAAyB,CAAC;AACvE,OAAO,EAAE,qBAAqB,EAAE,MAAM,uBAAuB,CAAC;AAC9D,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AAEtC,IAAM,eAAe,GAAG,UAAC,KAAiB,EAAE,QAAe;IACzD,IAAM,MAAM,GAA6B,EAAE,CAAC;IAC5C,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAC,OAAO;QACzB,IAAI,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;YAChC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC;gBAChB,KAAK,CAAC,WAAW,CAAC,gBAAgB,KAAK,gBAAgB,CAAC,GAAG,CAAC,CAAC;oBAC7D,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,GAAG,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC;oBACnF,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,WAAW,CAAC;SAC5C;IACH,CAAC,CAAC,CAAC;IACH,IAAM,aAAa,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;IACnD,MAAM,CAAC,GAAG,GAAG,KAAK,CAAC,WAAW,CAAC,gBAAgB,KAAK,gBAAgB,CAAC,GAAG,CAAC,CAAC;QACxE,aAAa,CAAC,SAAS,GAAG,aAAa,CAAC,WAAW,CAAC,CAAC;QACrD,aAAa,CAAC,WAAW,CAAC;IAE5B,OAAO;QACL,MAAM,QAAA;KACP,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,OAAO,CAAC,eAAe,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,qBAAqB,CAAC,CAAC","sourcesContent":["import { StoreState, LeftSidebarCount } from '@src/types';\nimport AccountChooserPopover, { Props } from './AccountChooserPopover';\nimport { selectAllMailboxCount } from '@src/ducks/mailCounts';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = (state: StoreState, ownProps: Props): any => {\n  const counts: { [id: string]: number } = {};\n  state.accounts.map((account) => {\n    if (state.mailCounts[account.id]) {\n      counts[account.id] =\n        state.preferences.leftSidebarCount === LeftSidebarCount.All ?\n        state.mailCounts[account.id].inboxRead + state.mailCounts[account.id].inboxUnread :\n        state.mailCounts[account.id].inboxUnread;\n    }\n  });\n  const allMailCounts = selectAllMailboxCount(state);\n  counts.all = state.preferences.leftSidebarCount === LeftSidebarCount.All ?\n    allMailCounts.inboxRead + allMailCounts.inboxUnread :\n    allMailCounts.inboxUnread;\n\n  return {\n    counts,\n  };\n};\n\nexport default connect(mapStateToProps, null, null, { withRef: true })(AccountChooserPopover);\n"]}]}