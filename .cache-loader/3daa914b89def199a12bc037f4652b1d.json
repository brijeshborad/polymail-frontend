{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/api/filters.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/api/filters.ts","mtime":1675280253980},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkgewogICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHsKICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHsKICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTsKICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKQogICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07CiAgICAgICAgfQogICAgICAgIHJldHVybiB0OwogICAgfTsKICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9OwppbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7CmltcG9ydCB7IGpzb25SZXF1ZXN0LCBibGFua1JlcXVlc3QgfSBmcm9tICcuL2Jhc2UnOwppbXBvcnQgeyBjcmVhdGVGaWx0ZXIgfSBmcm9tICdAc3JjL21vY2tzL2ZpbHRlcnMnOwp2YXIgRmlsdGVyQ2xpZW50ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkgewogICAgZnVuY3Rpb24gRmlsdGVyQ2xpZW50KCkgewogICAgfQogICAgRmlsdGVyQ2xpZW50LnByb3RvdHlwZS5jcmVhdGUgPSBmdW5jdGlvbiAobWV0YSkgewogICAgICAgIHJldHVybiBqc29uUmVxdWVzdCh7CiAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLAogICAgICAgICAgICByb3V0ZTogIi92MS9maWx0ZXJzIiwKICAgICAgICAgICAgYm9keTogX19hc3NpZ24oe30sIG1ldGEpLAogICAgICAgIH0pOwogICAgfTsKICAgIEZpbHRlckNsaWVudC5wcm90b3R5cGUudXBkYXRlID0gZnVuY3Rpb24gKGZpbHRlcikgewogICAgICAgIHJldHVybiBqc29uUmVxdWVzdCh7CiAgICAgICAgICAgIG1ldGhvZDogJ1BBVENIJywKICAgICAgICAgICAgcm91dGU6ICIvdjEvZmlsdGVycy8iICsgZmlsdGVyLmlkLAogICAgICAgICAgICBib2R5OiBmaWx0ZXIsCiAgICAgICAgfSk7CiAgICB9OwogICAgRmlsdGVyQ2xpZW50LnByb3RvdHlwZS5kZWxldGUgPSBmdW5jdGlvbiAoZmlsdGVyKSB7CiAgICAgICAgcmV0dXJuIGJsYW5rUmVxdWVzdCh7CiAgICAgICAgICAgIG1ldGhvZDogJ0RFTEVURScsCiAgICAgICAgICAgIHJvdXRlOiAiL3YxL2ZpbHRlcnMvIiArIGZpbHRlciwKICAgICAgICB9KTsKICAgIH07CiAgICBGaWx0ZXJDbGllbnQucHJvdG90eXBlLmxpc3QgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgcmV0dXJuIGpzb25SZXF1ZXN0KHsKICAgICAgICAgICAgbWV0aG9kOiAnR0VUJywKICAgICAgICAgICAgcm91dGU6ICcvdjEvZmlsdGVycycsCiAgICAgICAgfSk7CiAgICB9OwogICAgcmV0dXJuIEZpbHRlckNsaWVudDsKfSgpKTsKZXhwb3J0IHsgRmlsdGVyQ2xpZW50IH07CmV4cG9ydCBmdW5jdGlvbiBtb2NrRmlsdGVyQ2xpZW50KCkgewogICAgcmV0dXJuIHsKICAgICAgICBjcmVhdGU6IGZ1bmN0aW9uIChtZXRhKSB7IHJldHVybiBPYnNlcnZhYmxlLm9mKG1ldGEpOyB9LAogICAgICAgIHVwZGF0ZTogZnVuY3Rpb24gKGxpc3QpIHsgcmV0dXJuIE9ic2VydmFibGUub2YobGlzdCk7IH0sCiAgICAgICAgZGVsZXRlOiBmdW5jdGlvbiAobGlzdCkgeyByZXR1cm4gT2JzZXJ2YWJsZS5vZihudWxsKTsgfSwKICAgICAgICBsaXN0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBPYnNlcnZhYmxlLm9mKFsKICAgICAgICAgICAgY3JlYXRlRmlsdGVyKHsgaWQ6ICdmaXJzdCcgfSksCiAgICAgICAgICAgIGNyZWF0ZUZpbHRlcih7IGlkOiAnc2Vjb25kJyB9KSwKICAgICAgICBdKTsgfSwKICAgIH07Cn0K"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/api/filters.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/api/filters.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,MAAM,CAAC;AAGlC,OAAO,EAAE,WAAW,EAAE,YAAY,EAAE,MAAM,QAAQ,CAAC;AACnD,OAAO,EAAE,YAAY,EAAE,MAAM,oBAAoB,CAAC;AASlD;IAAA;IAgCA,CAAC;IA/BC,6BAAM,GAAN,UAAO,IAAY;QACjB,OAAO,WAAW,CAAC;YACjB,MAAM,EAAE,MAAM;YACd,KAAK,EAAE,aAAa;YACpB,IAAI,eACC,IAAI,CACR;SACF,CAAC,CAAC;IACL,CAAC;IAED,6BAAM,GAAN,UAAO,MAAc;QACnB,OAAO,WAAW,CAAC;YACjB,MAAM,EAAE,OAAO;YACf,KAAK,EAAE,iBAAe,MAAM,CAAC,EAAI;YACjC,IAAI,EAAE,MAAM;SACb,CAAC,CAAC;IACL,CAAC;IAED,6BAAM,GAAN,UAAO,MAAc;QACnB,OAAO,YAAY,CAAC;YAClB,MAAM,EAAE,QAAQ;YAChB,KAAK,EAAE,iBAAe,MAAQ;SAC/B,CAAC,CAAC;IACL,CAAC;IAED,2BAAI,GAAJ;QACE,OAAO,WAAW,CAAC;YACjB,MAAM,EAAE,KAAK;YACb,KAAK,EAAE,aAAa;SACrB,CAAC,CAAC;IACL,CAAC;IACH,mBAAC;AAAD,CAAC,AAhCD,IAgCC;;AAED,MAAM,UAAU,gBAAgB;IAC9B,OAAO;QACL,MAAM,EAAE,UAAC,IAAY,IAAK,OAAA,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,EAAnB,CAAmB;QAC7C,MAAM,EAAE,UAAC,IAAY,IAAK,OAAA,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,EAAnB,CAAmB;QAC7C,MAAM,EAAE,UAAC,IAAY,IAAK,OAAA,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,EAAnB,CAAmB;QAC7C,IAAI,EAAE,cAAM,OAAA,UAAU,CAAC,EAAE,CAAC;YACxB,YAAY,CAAC,EAAE,EAAE,EAAE,OAAO,EAAE,CAAC;YAC7B,YAAY,CAAC,EAAE,EAAE,EAAE,QAAQ,EAAE,CAAC;SAC/B,CAAC,EAHU,CAGV;KACH,CAAC;AACJ,CAAC","sourcesContent":["import { Observable } from 'rxjs';\n\nimport { Filter } from '@src/types/filters';\nimport { jsonRequest, blankRequest } from './base';\nimport { createFilter } from '@src/mocks/filters';\n\nexport interface FilterAPI {\n  create(name: Filter): Observable<Filter>;\n  update(filter: Filter): Observable<Filter>;\n  delete(filter: string): Observable<null>;\n  list(): Observable<Filter[]>;\n}\n\nexport class FilterClient implements FilterAPI {\n  create(meta: Filter): Observable<Filter> {\n    return jsonRequest({\n      method: 'POST',\n      route: `/v1/filters`,\n      body: {\n        ...meta,\n      },\n    });\n  }\n\n  update(filter: Filter): Observable<Filter> {\n    return jsonRequest({\n      method: 'PATCH',\n      route: `/v1/filters/${filter.id}`,\n      body: filter,\n    });\n  }\n\n  delete(filter: string): Observable<null> {\n    return blankRequest({\n      method: 'DELETE',\n      route: `/v1/filters/${filter}`,\n    });\n  }\n\n  list(): Observable<Filter[]> {\n    return jsonRequest({\n      method: 'GET',\n      route: '/v1/filters',\n    });\n  }\n}\n\nexport function mockFilterClient(): FilterAPI {\n  return {\n    create: (meta: Filter) => Observable.of(meta),\n    update: (list: Filter) => Observable.of(list),\n    delete: (list: string) => Observable.of(null),\n    list: () => Observable.of([\n      createFilter({ id: 'first' }),\n      createFilter({ id: 'second' }),\n    ]),\n  };\n}\n"]}]}