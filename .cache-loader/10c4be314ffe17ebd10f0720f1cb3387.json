{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/ThreadDetail/components/Cell/ExpandedCell/components/ContactCardPopover/index.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/ThreadDetail/components/Cell/ExpandedCell/components/ContactCardPopover/index.tsx","mtime":1675280254038},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4JzsKaW1wb3J0IHsgc2VsZWN0Q29udGFjdCwgY29udGFjdEdldCB9IGZyb20gJ0BzcmMvZHVja3MvY29udGFjdHMnOwppbXBvcnQgeyBkcmFmdENyZWF0ZUNvbmZpZ3VyYXRpb24gfSBmcm9tICdAc3JjL2R1Y2tzL2RyYWZ0cyc7CmltcG9ydCBDb250YWN0Q2FyZFBvcG92ZXIgZnJvbSAnLi9Db250YWN0Q2FyZFBvcG92ZXInOwppbXBvcnQgeyByaWdodFNpZGViYXJUYWJTZWxlY3QsIHJpZ2h0U2lkZWJhclNob3dDb250YWN0IH0gZnJvbSAnQHNyYy9kdWNrcy9yaWdodFNpZGViYXInOwppbXBvcnQgeyBnZXREaXNwbGF5TmFtZSB9IGZyb20gJ0BzcmMvbGliL2FkZHJlc3MnOwp2YXIgbWFwU3RhdGVUb1Byb3BzID0gZnVuY3Rpb24gKHN0YXRlLCBvd25Qcm9wcykgewogICAgdmFyIGNvbnRhY3QgPSBzZWxlY3RDb250YWN0KHN0YXRlLCBvd25Qcm9wcy5jb250YWN0RW1haWwpOwogICAgcmV0dXJuIHsKICAgICAgICBjb250YWN0OiBjb250YWN0LAogICAgICAgIGNvbnRhY3ROYW1lOiBnZXREaXNwbGF5TmFtZShjb250YWN0LCBzdGF0ZS5tZS5kYXRhKSwKICAgICAgICBjb250YWN0UGhvdG9Vcmw6IGNvbnRhY3QucGhvdG9VcmwsCiAgICB9Owp9Owp2YXIgbWFwRGlzcGF0Y2hUb1Byb3BzID0gZnVuY3Rpb24gKGRpc3BhdGNoKSB7IHJldHVybiAoewogICAgc2VsZWN0Q29udGFjdDogZnVuY3Rpb24gKGVtYWlsKSB7IHJldHVybiBkaXNwYXRjaChyaWdodFNpZGViYXJTaG93Q29udGFjdChlbWFpbCkpOyB9LAogICAgY3JlYXRlRHJhZnQ6IGZ1bmN0aW9uIChjb25maWd1cmF0aW9uLCByZWNpcGllbnRzKSB7CiAgICAgICAgcmV0dXJuIGRpc3BhdGNoKGRyYWZ0Q3JlYXRlQ29uZmlndXJhdGlvbih7CiAgICAgICAgICAgIGNvbmZpZ3VyYXRpb246IGNvbmZpZ3VyYXRpb24sCiAgICAgICAgICAgIHJlY2lwaWVudHM6IHJlY2lwaWVudHMsCiAgICAgICAgfSkpOwogICAgfSwKICAgIHNlbGVjdFJpZ2h0U2lkZWJhclRhYjogZnVuY3Rpb24gKHJzYlRhYiwgcnNiU3ViVGFiKSB7CiAgICAgICAgcmV0dXJuIGRpc3BhdGNoKHJpZ2h0U2lkZWJhclRhYlNlbGVjdCh7IHJzYlRhYjogcnNiVGFiLCByc2JTdWJUYWI6IHJzYlN1YlRhYiB9KSk7CiAgICB9LAogICAgZ2V0Q29udGFjdDogZnVuY3Rpb24gKGVtYWlsKSB7IHJldHVybiBkaXNwYXRjaChjb250YWN0R2V0KGVtYWlsKSk7IH0sCn0pOyB9OwpleHBvcnQgZGVmYXVsdCBjb25uZWN0KG1hcFN0YXRlVG9Qcm9wcywgbWFwRGlzcGF0Y2hUb1Byb3BzLCBudWxsLCB7IHdpdGhSZWY6IHRydWUgfSkoQ29udGFjdENhcmRQb3BvdmVyKTsK"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/ThreadDetail/components/Cell/ExpandedCell/components/ContactCardPopover/index.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/ThreadDetail/components/Cell/ExpandedCell/components/ContactCardPopover/index.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAY,MAAM,aAAa,CAAC;AAEhD,OAAO,EAAE,aAAa,EAAE,UAAU,EAAE,MAAM,qBAAqB,CAAC;AAChE,OAAO,EAAE,wBAAwB,EAAE,MAAM,mBAAmB,CAAC;AAI7D,OAAO,kBAA4C,MAAM,sBAAsB,CAAC;AAChF,OAAO,EAAE,qBAAqB,EAAE,uBAAuB,EAAE,MAAM,yBAAyB,CAAC;AACzF,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAC;AAElD,IAAM,eAAe,GAAG,UAAC,KAAiB,EAAE,QAAe;IACzD,IAAM,OAAO,GAAG,aAAa,CAAC,KAAK,EAAE,QAAQ,CAAC,YAAY,CAAC,CAAC;IAE5D,OAAO;QACL,OAAO,SAAA;QACP,WAAW,EAAE,cAAc,CAAC,OAAO,EAAE,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC;QACnD,eAAe,EAAE,OAAO,CAAC,QAAQ;KAClC,CAAC;AACJ,CAAC,CAAC;AAEF,IAAM,kBAAkB,GAAG,UAAC,QAA8B,IAAoB,OAAA,CAAC;IAC7E,aAAa,EAAE,UAAC,KAAa,IAAK,OAAA,QAAQ,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC,EAAxC,CAAwC;IAC1E,WAAW,EAAE,UAAC,aAA4B,EAAE,UAAoB;QAC9D,OAAA,QAAQ,CAAC,wBAAwB,CAAC;YAChC,aAAa,eAAA;YACb,UAAU,YAAA;SACX,CAAC,CAAC;IAHH,CAGG;IACL,qBAAqB,EAAE,UAAC,MAAuB,EAAE,SAA6B;QAC5E,OAAA,QAAQ,CAAC,qBAAqB,CAAC,EAAE,MAAM,QAAA,EAAE,SAAS,WAAA,EAAE,CAAC,CAAC;IAAtD,CAAsD;IACxD,UAAU,EAAE,UAAC,KAAa,IAAK,OAAA,QAAQ,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,EAA3B,CAA2B;CAC3D,CAAC,EAV4E,CAU5E,CAAC;AAEH,eAAe,OAAO,CACpB,eAAe,EACf,kBAAkB,EAClB,IAAI,EACJ,EAAE,OAAO,EAAE,IAAI,EAAE,CAClB,CAAC,kBAAkB,CAAC,CAAC","sourcesContent":["import { connect, Dispatch } from 'react-redux';\n\nimport { selectContact, contactGet } from '@src/ducks/contacts';\nimport { draftCreateConfiguration } from '@src/ducks/drafts';\nimport { Configuration } from '@src/lib/draft';\nimport { StoreState } from '@src/types';\nimport { RightSidebarTab, RightSidebarSubTab } from '@src/types/rightSidebar';\nimport ContactCardPopover, { Props, DispatchProps } from './ContactCardPopover';\nimport { rightSidebarTabSelect, rightSidebarShowContact } from '@src/ducks/rightSidebar';\nimport { getDisplayName } from '@src/lib/address';\n\nconst mapStateToProps = (state: StoreState, ownProps: Props): any => {\n  const contact = selectContact(state, ownProps.contactEmail);\n\n  return {\n    contact,\n    contactName: getDisplayName(contact, state.me.data),\n    contactPhotoUrl: contact.photoUrl,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<StoreState>): DispatchProps => ({\n  selectContact: (email: string) => dispatch(rightSidebarShowContact(email)),\n  createDraft: (configuration: Configuration, recipients: string[]) =>\n    dispatch(draftCreateConfiguration({\n      configuration,\n      recipients,\n    })),\n  selectRightSidebarTab: (rsbTab: RightSidebarTab, rsbSubTab: RightSidebarSubTab) =>\n    dispatch(rightSidebarTabSelect({ rsbTab, rsbSubTab })),\n  getContact: (email: string) => dispatch(contactGet(email)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  null,\n  { withRef: true },\n)(ContactCardPopover);\n"]}]}