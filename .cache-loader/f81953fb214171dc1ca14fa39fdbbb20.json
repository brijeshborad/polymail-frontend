{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/css-loader/dist/cjs.js??ref--7-2!/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/sass-loader/dist/cjs.js??ref--7-3!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/MessageTemplates/routes/MessageTemplateChooser/MessageTemplateChooser.scss","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/MessageTemplates/routes/MessageTemplateChooser/MessageTemplateChooser.scss","mtime":1675280254083},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/styles/helpers.scss","mtime":1675280254121},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/styles/colors.scss","mtime":1675280254121},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/styles/typography.scss","mtime":1675280254121},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/styles/mixins.scss","mtime":1675280254121},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/css-loader/dist/cjs.js","mtime":1675365393897},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/sass-loader/dist/cjs.js","mtime":1675365391315}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIpKHRydWUpOwovLyBNb2R1bGUKZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsICIubWVzc2FnZS10ZW1wbGF0ZS1jaG9vc2VyIHtcbiAgYW5pbWF0aW9uOiBmYWRlLWluIDAuMnMgZWFzZS1pbi1vdXQgMHMgMTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuLnRoZW1lLWxpZ2h0IC5tZXNzYWdlLXRlbXBsYXRlLWNob29zZXIge1xuICBib3JkZXItcmlnaHQ6ICNmMmY1ZjggMXB4IHNvbGlkO1xufVxuLnRoZW1lLWRhcmsgLm1lc3NhZ2UtdGVtcGxhdGUtY2hvb3NlciB7XG4gIGJvcmRlci1yaWdodDogIzJDMkMyQyAxcHggc29saWQ7XG59XG4ubWVzc2FnZS10ZW1wbGF0ZS1jaG9vc2VyID4gLm5ldyB7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgY29sb3I6ICMwNzljZWY7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cbi5tZXNzYWdlLXRlbXBsYXRlLWNob29zZXIgPiAubmV3ID4gLmNvbnRhaW5lciB7XG4gIHBhZGRpbmc6IDI0cHggMjBweDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbn1cbi50aGVtZS1saWdodCAubWVzc2FnZS10ZW1wbGF0ZS1jaG9vc2VyID4gLm5ldyA+IC5jb250YWluZXIge1xuICBib3JkZXItYm90dG9tOiAjZjJmNWY4IDFweCBzb2xpZDtcbn1cbi50aGVtZS1kYXJrIC5tZXNzYWdlLXRlbXBsYXRlLWNob29zZXIgPiAubmV3ID4gLmNvbnRhaW5lciB7XG4gIGJvcmRlci1ib3R0b206ICMyQzJDMkMgMXB4IHNvbGlkO1xufVxuLm1lc3NhZ2UtdGVtcGxhdGUtY2hvb3NlciA+IC5uZXcgPiAuY29udGFpbmVyID4gLmljb24ge1xuICBtYXJnaW4tcmlnaHQ6IDhweDtcbn1cbi5tZXNzYWdlLXRlbXBsYXRlLWNob29zZXIgPiAubmV3ID4gLmNvbnRhaW5lciA+IC5pY29uIHBhdGgge1xuICBmaWxsOiAjMDc5Y2VmO1xufVxuLnRoZW1lLWxpZ2h0IC5tZXNzYWdlLXRlbXBsYXRlLWNob29zZXIgPiAubmV3ID4gLmNvbnRhaW5lcjpob3ZlciB7XG4gIGJhY2tncm91bmQ6IHdoaXRlc21va2U7XG59XG4udGhlbWUtZGFyayAubWVzc2FnZS10ZW1wbGF0ZS1jaG9vc2VyID4gLm5ldyA+IC5jb250YWluZXI6aG92ZXIge1xuICBiYWNrZ3JvdW5kOiAjMjkyOTI5O1xufVxuLm1lc3NhZ2UtdGVtcGxhdGUtY2hvb3NlciA+IC50YWJsZSB7XG4gIG92ZXJmbG93LXk6IHNjcm9sbDtcbn1cbi5tZXNzYWdlLXRlbXBsYXRlLWNob29zZXIgPiAudGFibGUuc2hvdWxkLXVwZ3JhZGUgPiAubmV3ID4gLmNvbnRhaW5lciwgLm1lc3NhZ2UtdGVtcGxhdGUtY2hvb3NlciA+IC50YWJsZS5zaG91bGQtdXBncmFkZSA+IC50ZW1wbGF0ZSA+IC5jb250YWluZXIge1xuICBmaWx0ZXI6IGJsdXIoNXB4KTtcbn1cbi5tZXNzYWdlLXRlbXBsYXRlLWNob29zZXIgPiAudGFibGUgPiAubmF2aWdhdGlvbi1oZWFkZXIge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuLm1lc3NhZ2UtdGVtcGxhdGUtY2hvb3NlciA+IC50YWJsZSA+IC50ZW1wbGF0ZSB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cbi5tZXNzYWdlLXRlbXBsYXRlLWNob29zZXIgPiAudGFibGUgPiAudGVtcGxhdGUgPiAuY29udGFpbmVyIHtcbiAgcGFkZGluZzogMTNweDtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cbi50aGVtZS1saWdodCAubWVzc2FnZS10ZW1wbGF0ZS1jaG9vc2VyID4gLnRhYmxlID4gLnRlbXBsYXRlID4gLmNvbnRhaW5lciB7XG4gIGJvcmRlci1ib3R0b206ICNmMmY1ZjggMXB4IHNvbGlkO1xufVxuLnRoZW1lLWRhcmsgLm1lc3NhZ2UtdGVtcGxhdGUtY2hvb3NlciA+IC50YWJsZSA+IC50ZW1wbGF0ZSA+IC5jb250YWluZXIge1xuICBib3JkZXItYm90dG9tOiAjMkMyQzJDIDFweCBzb2xpZDtcbn1cbi50aGVtZS1saWdodCAubWVzc2FnZS10ZW1wbGF0ZS1jaG9vc2VyID4gLnRhYmxlID4gLnRlbXBsYXRlID4gLmNvbnRhaW5lci5zZWxlY3RlZCB7XG4gIGJhY2tncm91bmQ6IHJnYmEoMjMyLCAyNDMsIDI1NSwgMC41KTtcbn1cbi50aGVtZS1kYXJrIC5tZXNzYWdlLXRlbXBsYXRlLWNob29zZXIgPiAudGFibGUgPiAudGVtcGxhdGUgPiAuY29udGFpbmVyLnNlbGVjdGVkIHtcbiAgYmFja2dyb3VuZDogcmdiYSg1NCwgNTQsIDU0LCAwLjcpO1xufVxuLnRoZW1lLWxpZ2h0IC5tZXNzYWdlLXRlbXBsYXRlLWNob29zZXIgPiAudGFibGUgPiAudGVtcGxhdGUgPiAuY29udGFpbmVyOmhvdmVyIHtcbiAgYmFja2dyb3VuZDogd2hpdGVzbW9rZTtcbn1cbi50aGVtZS1kYXJrIC5tZXNzYWdlLXRlbXBsYXRlLWNob29zZXIgPiAudGFibGUgPiAudGVtcGxhdGUgPiAuY29udGFpbmVyOmhvdmVyIHtcbiAgYmFja2dyb3VuZDogIzI5MjkyOTtcbn1cbi5tZXNzYWdlLXRlbXBsYXRlLWNob29zZXIgPiAudGFibGUgPiAudGVtcGxhdGUgPiAuY29udGFpbmVyID4gLnByb2ZpbGUtcGljIHtcbiAgd2lkdGg6IDI0cHg7XG4gIGhlaWdodDogMjRweDtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBtYXJnaW4tcmlnaHQ6IDEwcHg7XG59XG4udGhlbWUtbGlnaHQgLm1lc3NhZ2UtdGVtcGxhdGUtY2hvb3NlciA+IC50YWJsZSA+IC50ZW1wbGF0ZSA+IC5jb250YWluZXIgPiAucHJvZmlsZS1waWMge1xuICBiYWNrZ3JvdW5kOiAjZjJmNWY4O1xufVxuLnRoZW1lLWRhcmsgLm1lc3NhZ2UtdGVtcGxhdGUtY2hvb3NlciA+IC50YWJsZSA+IC50ZW1wbGF0ZSA+IC5jb250YWluZXIgPiAucHJvZmlsZS1waWMge1xuICBiYWNrZ3JvdW5kOiAjMkMyQzJDO1xufVxuLm1lc3NhZ2UtdGVtcGxhdGUtY2hvb3NlciA+IC50YWJsZSA+IC50ZW1wbGF0ZSA+IC5jb250YWluZXIgPiAuY29udGVudC1jb2x1bW4ge1xuICB3aWR0aDogOTAlO1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuLm1lc3NhZ2UtdGVtcGxhdGUtY2hvb3NlciA+IC50YWJsZSA+IC50ZW1wbGF0ZSA+IC5jb250YWluZXIgPiAuY29udGVudC1jb2x1bW4gPiAudGl0bGUge1xuICBmbGV4OiAxO1xuICBmb250LXNpemU6IDEzcHg7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIG1hcmdpbi1ib3R0b206IDNweDtcbn1cbi50aGVtZS1saWdodCAubWVzc2FnZS10ZW1wbGF0ZS1jaG9vc2VyID4gLnRhYmxlID4gLnRlbXBsYXRlID4gLmNvbnRhaW5lciA+IC5jb250ZW50LWNvbHVtbiA+IC50aXRsZSB7XG4gIGNvbG9yOiAjNDQ0NDQ0O1xufVxuLnRoZW1lLWRhcmsgLm1lc3NhZ2UtdGVtcGxhdGUtY2hvb3NlciA+IC50YWJsZSA+IC50ZW1wbGF0ZSA+IC5jb250YWluZXIgPiAuY29udGVudC1jb2x1bW4gPiAudGl0bGUge1xuICBjb2xvcjogI2U4ZThlODtcbn1cbi5tZXNzYWdlLXRlbXBsYXRlLWNob29zZXIgPiAudGFibGUgPiAudGVtcGxhdGUgPiAuY29udGFpbmVyID4gLmNvbnRlbnQtY29sdW1uID4gLnN1YnRpdGxlIHtcbiAgZm9udC1zaXplOiAxMnB4O1xuICBsaW5lLWhlaWdodDogMS4xNztcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgaGVpZ2h0OiAxNnB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbn1cbi50aGVtZS1saWdodCAubWVzc2FnZS10ZW1wbGF0ZS1jaG9vc2VyID4gLnRhYmxlID4gLnRlbXBsYXRlID4gLmNvbnRhaW5lciA+IC5jb250ZW50LWNvbHVtbiA+IC5zdWJ0aXRsZSB7XG4gIGNvbG9yOiAjN2U4ZjlmO1xufVxuLnRoZW1lLWRhcmsgLm1lc3NhZ2UtdGVtcGxhdGUtY2hvb3NlciA+IC50YWJsZSA+IC50ZW1wbGF0ZSA+IC5jb250YWluZXIgPiAuY29udGVudC1jb2x1bW4gPiAuc3VidGl0bGUge1xuICBjb2xvcjogI0FBQUFBQTtcbn1cbi5tZXNzYWdlLXRlbXBsYXRlLWNob29zZXIgPiAudGFibGUgPiAudGVtcGxhdGUgPiAuY29udGFpbmVyID4gLmxvY2sge1xuICBtYXJnaW4tbGVmdDogYXV0bztcbiAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xufVxuLm1lc3NhZ2UtdGVtcGxhdGUtY2hvb3NlciA+IC50YWJsZSA+IC51cGdyYWRlLWNvbnRhaW5lciB7XG4gIGxlZnQ6IGNhbGMoNTAlIC0gMjAwcHgpO1xuICB0b3A6IGNhbGMoNTAlIC0gMjAwcHgpO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuLm1lc3NhZ2UtdGVtcGxhdGUtY2hvb3NlciA+IC50YWJsZSA+IC51cGdyYWRlLWNvbnRhaW5lciA+IC51cGdyYWRlLXByb21wdCB7XG4gIHRvcDogMzBweDtcbiAgYW5pbWF0aW9uOiBmYWRlLWluIDAuMnMgZWFzZS1pbi1vdXQgMHMgMTtcbiAgZGlzcGxheTogZmxleDtcbiAgd2lkdGg6IDMwMHB4O1xuICByaWdodDogYXV0bztcbn1cbi50aGVtZS1saWdodCAubWVzc2FnZS10ZW1wbGF0ZS1jaG9vc2VyID4gLnRhYmxlID4gLnVwZ3JhZGUtY29udGFpbmVyID4gLnVwZ3JhZGUtcHJvbXB0IHtcbiAgYm9yZGVyOiAjYzlkNGUwIDFweCBzb2xpZDtcbn1cbi50aGVtZS1kYXJrIC5tZXNzYWdlLXRlbXBsYXRlLWNob29zZXIgPiAudGFibGUgPiAudXBncmFkZS1jb250YWluZXIgPiAudXBncmFkZS1wcm9tcHQge1xuICBib3JkZXI6ICMyRTJFMkUgMXB4IHNvbGlkO1xufSIsICIiLHsidmVyc2lvbiI6Mywic291cmNlcyI6WyIvVXNlcnMvYW5kcmV3c2FtYm95L0Rlc2t0b3AvR2l0L3BvbHltYWlsL3dlYmFwcC9zcmMvcm91dGVzL01lc3NhZ2VUZW1wbGF0ZXMvcm91dGVzL01lc3NhZ2VUZW1wbGF0ZUNob29zZXIvTWVzc2FnZVRlbXBsYXRlQ2hvb3Nlci5zY3NzIiwiL1VzZXJzL2FuZHJld3NhbWJveS9EZXNrdG9wL0dpdC9wb2x5bWFpbC93ZWJhcHAvc3JjL3N0eWxlcy9taXhpbnMuc2NzcyIsIk1lc3NhZ2VUZW1wbGF0ZUNob29zZXIuc2NzcyIsIi9Vc2Vycy9hbmRyZXdzYW1ib3kvRGVza3RvcC9HaXQvcG9seW1haWwvd2ViYXBwL3NyYy9zdHlsZXMvdHlwb2dyYXBoeS5zY3NzIiwiL1VzZXJzL2FuZHJld3NhbWJveS9EZXNrdG9wL0dpdC9wb2x5bWFpbC93ZWJhcHAvc3JjL3N0eWxlcy9jb2xvcnMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQzBKRSx3Q0FBQTtFRHhKQSxZQUFBO0VBRUEsYUFBQTtFQUNBLHNCQUFBO0FFRkY7QURVSTtFRFYwQiwrQkFBQTtBRUc5QjtBRE9JO0VEVjBCLCtCQUFBO0FFTTlCO0FGRkU7RUFDRSxlQUFBO0VBQ0QsZ0JHRkk7RUhHSixnQkFBQTtFQUNBLGNJSks7RUpLSixxQkFBQTtBRUlKO0FGRkk7RUFDRSxrQkFBQTtFQUVBLG1CQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0FFR047QURUSTtFREc4QixnQ0FBQTtBRVNsQztBRFpJO0VERzhCLGdDQUFBO0FFWWxDO0FGUE07RUFDRSxpQkFBQTtBRVNSO0FGUFE7RUFDRSxhSWxCRjtBRjJCUjtBRHJCSTtFRGlCZ0Msc0JBQUE7QUVPcEM7QUR4Qkk7RURpQmdDLG1CQUFBO0FFVXBDO0FGTEU7RUFDRSxrQkFBQTtBRU9KO0FGSkk7RUFDRSxpQkFBQTtBRU1OO0FGRkU7RUFDRSxnQkFBQTtBRUlKO0FGREU7RUFDRSxxQkFBQTtBRUdKO0FGREk7RUFDRSxhQUFBO0VBRUEsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsbUJBQUE7QUVFTjtBRDdDSTtFRHdDOEIsZ0NBQUE7QUVRbEM7QURoREk7RUR3QzhCLGdDQUFBO0FFV2xDO0FEbkRJO0VEOENnQyxvQ0FBQTtBRVFwQztBRHRESTtFRDhDZ0MsaUNBQUE7QUVXcEM7QUR6REk7RURrRGdDLHNCQUFBO0FFVXBDO0FENURJO0VEa0RnQyxtQkFBQTtBRWFwQztBRlZNO0VBQ0UsV0FBQTtFQUNBLFlBQUE7RUFDQSxrQkFBQTtFQUVBLGtCQUFBO0FFV1I7QURyRUk7RUR5RGdDLG1CQUFBO0FFZXBDO0FEeEVJO0VEeURnQyxtQkFBQTtBRWtCcEM7QUZkTTtFQUNFLFVBQUE7RUFDQSxnQkFBQTtBRWdCUjtBRmRRO0VBQ0UsT0FBQTtFQUNBLGVBQUE7RUFDRCxnQkc1RUE7RUg2RUEsZ0JBQUE7RUFFQyxrQkFBQTtBRWVWO0FEdEZJO0VEc0VpQyxjQUFBO0FFbUJyQztBRHpGSTtFRHNFaUMsY0FBQTtBRXNCckM7QUZsQlE7RUFDRSxlQUFBO0VBQ0QsaUJBQUE7RUFDQSxnQkFBQTtFQUVDLFlBQUE7RUFDQSxnQkFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7QUVtQlY7QURyR0k7RUQ4RWlDLGNBQUE7QUUwQnJDO0FEeEdJO0VEOEVpQyxjQUFBO0FFNkJyQztBRnJCTTtFQUNFLGlCQUFBO0VBQ0Esa0JBQUE7QUV1QlI7QUZsQkU7RUFDRSx1QkFBQTtFQUNBLHNCQUFBO0VBQ0Esa0JBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtFQUNBLGFBQUE7RUFDQSx1QkFBQTtBRW9CSjtBRmxCSTtFQUNFLFNBQUE7RUNzQ0osd0NBQUE7RURuQ0ksYUFBQTtFQUNBLFlBQUE7RUFDQSxXQUFBO0FFbUJOO0FEL0hJO0VEeUc4Qix5QkFBQTtBRXlCbEM7QURsSUk7RUR5RzhCLHlCQUFBO0FFNEJsQyIsImZpbGUiOiJNZXNzYWdlVGVtcGxhdGVDaG9vc2VyLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0ICdoZWxwZXJzJztcblxuLm1lc3NhZ2UtdGVtcGxhdGUtY2hvb3NlciB7XG4gIEBpbmNsdWRlIGZhZGUtaW4oMC4ycyk7XG4gIGhlaWdodDogMTAwJTtcbiAgQGluY2x1ZGUgdGhlbWlmeSgkdGhlbWVzKSB7IGJvcmRlci1yaWdodDogdGhlbWVkKCdsb3dDb250cmFzdEJvcmRlcicpOyB9O1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuXG4gID4gLm5ldyB7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICBcdGZvbnQtd2VpZ2h0OiAkYm9sZDtcbiAgXHR0ZXh0LWFsaWduOiBsZWZ0O1xuICBcdGNvbG9yOiAkYXp1cmU7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuXG4gICAgPiAuY29udGFpbmVyIHtcbiAgICAgIHBhZGRpbmc6IDI0cHggMjBweDtcbiAgICAgIEBpbmNsdWRlIHRoZW1pZnkoJHRoZW1lcykgeyBib3JkZXItYm90dG9tOiB0aGVtZWQoJ2xvd0NvbnRyYXN0Qm9yZGVyJyk7IH07XG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG5cbiAgICAgID4gLmljb24ge1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IDhweDtcblxuICAgICAgICBwYXRoIHtcbiAgICAgICAgICBmaWxsOiAkYXp1cmU7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgJjpob3ZlciB7XG4gICAgICAgIEBpbmNsdWRlIHRoZW1pZnkoJHRoZW1lcykgeyBiYWNrZ3JvdW5kOiB0aGVtZWQoJ2hpZ2hDb250cmFzdEhvdmVyJyk7IH07XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgPiAudGFibGUge1xuICAgIG92ZXJmbG93LXk6IHNjcm9sbDtcblxuICAgICYuc2hvdWxkLXVwZ3JhZGUge1xuICAgID4gLm5ldyA+IC5jb250YWluZXIsID4gLnRlbXBsYXRlID4gLmNvbnRhaW5lciB7XG4gICAgICBmaWx0ZXI6IGJsdXIoNXB4KTtcbiAgICB9XG4gIH1cblxuICA+IC5uYXZpZ2F0aW9uLWhlYWRlciB7XG4gICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgfVxuXG4gID4gLnRlbXBsYXRlIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG5cbiAgICA+IC5jb250YWluZXIge1xuICAgICAgcGFkZGluZzogMTNweDtcbiAgICAgIEBpbmNsdWRlIHRoZW1pZnkoJHRoZW1lcykgeyBib3JkZXItYm90dG9tOiB0aGVtZWQoJ2xvd0NvbnRyYXN0Qm9yZGVyJyk7IH07XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cbiAgICAgICYuc2VsZWN0ZWQge1xuICAgICAgICBAaW5jbHVkZSB0aGVtaWZ5KCR0aGVtZXMpIHsgYmFja2dyb3VuZDogdGhlbWVkKCd0aHJlYWRIb3ZlcicpOyB9O1xuICAgICAgfVxuXG4gICAgICAmOmhvdmVyIHtcbiAgICAgICAgQGluY2x1ZGUgdGhlbWlmeSgkdGhlbWVzKSB7IGJhY2tncm91bmQ6IHRoZW1lZCgnaGlnaENvbnRyYXN0SG92ZXInKTsgfTtcbiAgICAgIH1cblxuICAgICAgPiAucHJvZmlsZS1waWMge1xuICAgICAgICB3aWR0aDogMjRweDtcbiAgICAgICAgaGVpZ2h0OiAyNHB4O1xuICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgICAgIEBpbmNsdWRlIHRoZW1pZnkoJHRoZW1lcykgeyBiYWNrZ3JvdW5kOiB0aGVtZWQoJ2xvd0NvbnRyYXN0Qm9yZGVyQ29sb3InKTsgfTtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xuICAgICAgfVxuXG4gICAgICA+IC5jb250ZW50LWNvbHVtbiB7XG4gICAgICAgIHdpZHRoOiA5MCU7XG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG5cbiAgICAgICAgPiAudGl0bGUge1xuICAgICAgICAgIGZsZXg6IDE7XG4gICAgICAgICAgZm9udC1zaXplOiAxM3B4O1xuICAgICAgICBcdGZvbnQtd2VpZ2h0OiAkbWVkaXVtO1xuICAgICAgICBcdHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICAgIFx0QGluY2x1ZGUgdGhlbWlmeSgkdGhlbWVzKSB7IGNvbG9yOiB0aGVtZWQoJ3ByaW1hcnlUZXh0Q29sb3InKTsgfTtcbiAgICAgICAgICBtYXJnaW4tYm90dG9tOiAzcHg7XG4gICAgICAgIH1cblxuICAgICAgICA+IC5zdWJ0aXRsZSB7XG4gICAgICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgICAgICBcdGxpbmUtaGVpZ2h0OiAxLjE3O1xuICAgICAgICBcdHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICAgIFx0QGluY2x1ZGUgdGhlbWlmeSgkdGhlbWVzKSB7IGNvbG9yOiB0aGVtZWQoJ3NlY29uZGFyeVRleHRDb2xvcicpOyB9O1xuICAgICAgICAgIGhlaWdodDogMTZweDtcbiAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICAgICAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgPiAubG9jayB7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgPiAudXBncmFkZS1jb250YWluZXIge1xuICAgIGxlZnQ6IGNhbGMoNTAlIC0gMjAwcHgpO1xuICAgIHRvcDogY2FsYyg1MCUgLSAyMDBweCk7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXG4gICAgPiAudXBncmFkZS1wcm9tcHQge1xuICAgICAgdG9wOiAzMHB4O1xuICAgICAgQGluY2x1ZGUgZmFkZS1pbigwLjJzKTtcbiAgICAgIEBpbmNsdWRlIHRoZW1pZnkoJHRoZW1lcykgeyBib3JkZXI6IHRoZW1lZCgnaGlnaENvbnRyYXN0Qm9yZGVyQ29sb3InKSAxcHggc29saWQ7IH07XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgd2lkdGg6IDMwMHB4O1xuICAgICAgcmlnaHQ6IGF1dG87XG4gICAgfVxuICB9XG4gIH1cbn1cbiIsIkBmdW5jdGlvbiB0aGVtZWQoJGtleSkge1xuICBAcmV0dXJuIG1hcC1nZXQoJHRoZW1lLW1hcCwgJGtleSk7XG59XG5cbkBtaXhpbiBhcHAtZHJhZ2dhYmxlKCkge1xuICAtd2Via2l0LWFwcC1yZWdpb246IGRyYWc7XG5cbiAgLnRoZW1lLXdpbmRvd3MgJiB7XG4gICAgLXdlYmtpdC1hcHAtcmVnaW9uOiBuby1kcmFnO1xuICB9XG59XG5cbkBtaXhpbiB0aGVtaWZ5KCR0aGVtZXM6ICR0aGVtZXMpIHtcbiAgQGVhY2ggJHRoZW1lLCAkbWFwIGluICR0aGVtZXMge1xuXG4gICAgLnRoZW1lLSN7JHRoZW1lfSAmIHtcbiAgICAgICR0aGVtZS1tYXA6ICgpICFnbG9iYWw7XG4gICAgICBAZWFjaCAka2V5LCAkc3VibWFwIGluICRtYXAge1xuICAgICAgICAkdmFsdWU6IG1hcC1nZXQobWFwLWdldCgkdGhlbWVzLCAkdGhlbWUpLCAnI3ska2V5fScpO1xuICAgICAgICAkdGhlbWUtbWFwOiBtYXAtbWVyZ2UoJHRoZW1lLW1hcCwgKCRrZXk6ICR2YWx1ZSkpICFnbG9iYWw7XG4gICAgICB9XG5cbiAgICAgIEBjb250ZW50O1xuICAgICAgJHRoZW1lLW1hcDogbnVsbCAhZ2xvYmFsO1xuICAgIH1cblxuICB9XG59XG5cbkBtaXhpbiB0aGVtaWZ5Qm9keSgkdGhlbWVzOiAkdGhlbWVzKSB7XG4gIEBlYWNoICR0aGVtZSwgJG1hcCBpbiAkdGhlbWVzIHtcblxuICAgICYudGhlbWUtI3skdGhlbWV9IHtcbiAgICAgICR0aGVtZS1tYXA6ICgpICFnbG9iYWw7XG4gICAgICBAZWFjaCAka2V5LCAkc3VibWFwIGluICRtYXAge1xuICAgICAgICAkdmFsdWU6IG1hcC1nZXQobWFwLWdldCgkdGhlbWVzLCAkdGhlbWUpLCAnI3ska2V5fScpO1xuICAgICAgICAkdGhlbWUtbWFwOiBtYXAtbWVyZ2UoJHRoZW1lLW1hcCwgKCRrZXk6ICR2YWx1ZSkpICFnbG9iYWw7XG4gICAgICB9XG5cbiAgICAgIEBjb250ZW50O1xuICAgICAgJHRoZW1lLW1hcDogbnVsbCAhZ2xvYmFsO1xuICAgIH1cblxuICB9XG59XG5cbkBtaXhpbiB0aGVtaWZ5U2luZ2xlKCRtb2RlLCAkdGhlbWVzOiAkdGhlbWVzKSB7XG4gIEBlYWNoICR0aGVtZSwgJG1hcCBpbiAkdGhlbWVzIHtcbiAgICBAaWYgJG1vZGUgPT0gJHRoZW1lIHtcbiAgICAgIC50aGVtZS0jeyR0aGVtZX0gJiB7XG4gICAgICAgICR0aGVtZS1tYXA6ICgpICFnbG9iYWw7XG4gICAgICAgIEBlYWNoICRrZXksICRzdWJtYXAgaW4gJG1hcCB7XG4gICAgICAgICAgJHZhbHVlOiBtYXAtZ2V0KG1hcC1nZXQoJHRoZW1lcywgJHRoZW1lKSwgJyN7JGtleX0nKTtcbiAgICAgICAgICAkdGhlbWUtbWFwOiBtYXAtbWVyZ2UoJHRoZW1lLW1hcCwgKCRrZXk6ICR2YWx1ZSkpICFnbG9iYWw7XG4gICAgICAgIH1cblxuICAgICAgICBAY29udGVudDtcbiAgICAgICAgJHRoZW1lLW1hcDogbnVsbCAhZ2xvYmFsO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5AbWl4aW4gYm91bmNlLXBpeGVscygkcGl4ZWxzKSB7XG4gIEBrZXlmcmFtZXMgYm91bmNlLXBpeGVscyB7XG4gICAgMCUgeyB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLSRwaXhlbHMpIH1cbiAgICA1MCUgeyB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoJHBpeGVscykgfVxuICAgIDEwMCUgeyB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLSRwaXhlbHMpIH1cbiAgfVxuICBhbmltYXRpb246IGJvdW5jZS1waXhlbHMgMnMgZWFzZS1pbi1vdXQgaW5maW5pdGU7XG59XG5cbkBtaXhpbiBmb3JjZS1ncHUoKSB7XG4gIC13ZWJraXQtYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICAtbW96LWJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDEpO1xuICAtbXMtdHJhbnNmb3JtOiBzY2FsZSgxKTtcbiAgLW1vei10cmFuc2Zvcm06IHNjYWxlKDEpO1xuICBiYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG4gIHRyYW5zZm9ybTogc2NhbGUoMSk7XG59XG5cbkBtaXhpbiBibHVyKCRwaXhlbHMpIHtcbiAgLXdlYmtpdC1maWx0ZXI6IGJsdXIoJHBpeGVscyk7XG4gIC1tb3otZmlsdGVyOiBibHVyKCRwaXhlbHMpO1xuICAtby1maWx0ZXI6IGJsdXIoJHBpeGVscyk7XG4gIC1tcy1maWx0ZXI6IGJsdXIoJHBpeGVscyk7XG4gIGZpbHRlcjogYmx1cigkcGl4ZWxzKTtcbn1cblxuQG1peGluIGVuYWJsZS1zZWxlY3Rpb24oKSB7XG4gIC13ZWJraXQtdG91Y2gtY2FsbG91dDogYXV0bzsgLyogaU9TIFNhZmFyaSAqL1xuICAtd2Via2l0LXVzZXItc2VsZWN0OiB0ZXh0OyAvKiBTYWZhcmkgKi9cbiAgLWtodG1sLXVzZXItc2VsZWN0OiB0ZXh0OyAvKiBLb25xdWVyb3IgSFRNTCAqL1xuICAtbW96LXVzZXItc2VsZWN0OiB0ZXh0OyAvKiBGaXJlZm94ICovXG4gIC1tcy11c2VyLXNlbGVjdDogdGV4dDsgLyogSW50ZXJuZXQgRXhwbG9yZXIvRWRnZSAqL1xuICB1c2VyLXNlbGVjdDogdGV4dDtcbiAgLXdlYmtpdC1hcHAtcmVnaW9uOiBuby1kcmFnO1xuICBjdXJzb3I6IGF1dG87XG59XG5cbkBtaXhpbiBkaXNhYmxlLXNlbGVjdGlvbigpIHtcbiAgLXdlYmtpdC10b3VjaC1jYWxsb3V0OiBub25lOyAvKiBpT1MgU2FmYXJpICovXG4gIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7IC8qIFNhZmFyaSAqL1xuICAta2h0bWwtdXNlci1zZWxlY3Q6IG5vbmU7IC8qIEtvbnF1ZXJvciBIVE1MICovXG4gIC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7IC8qIEZpcmVmb3ggKi9cbiAgLW1zLXVzZXItc2VsZWN0OiBub25lOyAvKiBJbnRlcm5ldCBFeHBsb3Jlci9FZGdlICovXG4gIHVzZXItc2VsZWN0OiBub25lO1xuICBjdXJzb3I6IGRlZmF1bHQ7XG59XG5cbkBtaXhpbiBlbmFibGUtZm9udC1zbW9vdGhpbmcoKSB7XG4gIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xuICAtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlO1xufVxuXG5AbWl4aW4gZGlzYWJsZS1mb250LXNtb290aGluZygpIHtcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYXV0bztcbiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGF1dG87XG59XG5cbkBtaXhpbiB0cnVuY2F0ZS1hdCgkbGluZXMpIHtcbiAgLy8gZWxsaXBzaXNcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XG4gIHdvcmQtYnJlYWs6IGJyZWFrLWFsbDtcblxuICAvLyBtdWx0aWxpbmUgZWxsaXBzZXMgZm9yIHdlYmtpdCBicm93c2Vyc1xuICAvLyBhbGwgb3RoZXIgYnJvd3NlcnMgd2lsbCBsaW1pdCB0byAxIGxpbmUsXG4gIC8vICAgYnV0IG5vdCBnZXQgZWxsaXBzaXNcbiAgQGlmICRsaW5lcyA+IDEge1xuICAgIC13ZWJraXQtbGluZS1jbGFtcDogJGxpbmVzO1xuICAgIC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7XG4gICAgLy8gTk9URShTSEFIQU4pOiBUaGUgZm9sbG93aW5nIGJyZWFrcyB0aGUgLi4uIGluIG5vbi13ZWJraXQgYnJvd3NlcnNcbiAgICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICB9XG59XG5cbkBtaXhpbiBkcm9wLXJpZ2h0KCRzZWNvbmRzKSB7XG4gIGFuaW1hdGlvbjogZHJvcC1yaWdodCAkc2Vjb25kcyBlYXNlLWluLW91dCAwcyAxO1xufVxuXG5AbWl4aW4gZHJvcC1pbigkc2Vjb25kcykge1xuICBhbmltYXRpb246IGRyb3AtaW4gJHNlY29uZHMgZWFzZS1pbi1vdXQgMHMgMTtcbn1cblxuQG1peGluIGV4cGFuZC12ZXJ0aWNhbCgkc2Vjb25kcykge1xuICB0cmFuc2Zvcm0tb3JpZ2luOiB0b3A7XG4gIGFuaW1hdGlvbjogZXhwYW5kLXZlcnRpY2FsICRzZWNvbmRzIGVhc2UtaW4tb3V0IDBzIDE7XG59XG5cbkBtaXhpbiBmYWRlLWluKCRzZWNvbmRzKSB7XG4gIGFuaW1hdGlvbjogZmFkZS1pbiAkc2Vjb25kcyBlYXNlLWluLW91dCAwcyAxO1xufVxuXG5AbWl4aW4gZmFkZS1vdXQoJHNlY29uZHMpIHtcbiAgYW5pbWF0aW9uOiBmYWRlLW91dCAkc2Vjb25kcyBlYXNlLWluLW91dCAwcyAxO1xuICBhbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkcztcbn1cblxuQG1peGluIGV4cGFuZCgkc2Vjb25kcykge1xuICBhbmltYXRpb246IGV4cGFuZCAkc2Vjb25kcyBlYXNlLWluLW91dCAwcyAxO1xufVxuXG5AbWl4aW4gYnJvd3Nlci1kZWZhdWx0cygpIHtcbiAgQGluY2x1ZGUgZGlzYWJsZS1mb250LXNtb290aGluZygpO1xuICBsaW5lLWhlaWdodDogaW5pdGlhbDtcblxuICAqIHtcbiAgICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgICBsZXR0ZXItc3BhY2luZzogaW5pdGlhbDtcbiAgfVxuXG4gIGIsIHN0cm9uZyB7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIH1cblxuICBoMSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgZm9udC1zaXplOiAyZW07XG4gICAgbWFyZ2luLXRvcDogMC42N2VtO1xuICAgIG1hcmdpbi1ib3R0b206IDAuNjdlbTtcbiAgICBtYXJnaW4tbGVmdDogMDtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIH1cblxuICBoMiB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgZm9udC1zaXplOiAxLjVlbTtcbiAgICBtYXJnaW4tdG9wOiAwLjgzZW07XG4gICAgbWFyZ2luLWJvdHRvbTogMC44M2VtO1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgfVxuXG4gIGgzIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBmb250LXNpemU6IDEuMTdlbTtcbiAgICBtYXJnaW4tdG9wOiAxZW07XG4gICAgbWFyZ2luLWJvdHRvbTogMWVtO1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgfVxuXG4gIGg0IHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBmb250LXNpemU6IDFlbTtcbiAgICBtYXJnaW4tdG9wOiAxLjMzZW07XG4gICAgbWFyZ2luLWJvdHRvbTogMS4zM2VtO1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgfVxuXG4gIGg1IHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBmb250LXNpemU6IC44M2VtO1xuICAgIG1hcmdpbi10b3A6IDEuNjdlbTtcbiAgICBtYXJnaW4tYm90dG9tOiAxLjY3ZW07XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICB9XG5cbiAgaDYge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGZvbnQtc2l6ZTogLjY3ZW07XG4gICAgbWFyZ2luLXRvcDogMi4zM2VtO1xuICAgIG1hcmdpbi1ib3R0b206IDIuMzNlbTtcbiAgICBtYXJnaW4tbGVmdDogMDtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIH1cblxuICBwIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW4tdG9wOiAxZW07XG4gICAgbWFyZ2luLWJvdHRvbTogMWVtO1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgfVxufVxuIiwiLm1lc3NhZ2UtdGVtcGxhdGUtY2hvb3NlciB7XG4gIGFuaW1hdGlvbjogZmFkZS1pbiAwLjJzIGVhc2UtaW4tb3V0IDBzIDE7XG4gIGhlaWdodDogMTAwJTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cbi50aGVtZS1saWdodCAubWVzc2FnZS10ZW1wbGF0ZS1jaG9vc2VyIHtcbiAgYm9yZGVyLXJpZ2h0OiAjZjJmNWY4IDFweCBzb2xpZDtcbn1cbi50aGVtZS1kYXJrIC5tZXNzYWdlLXRlbXBsYXRlLWNob29zZXIge1xuICBib3JkZXItcmlnaHQ6ICMyQzJDMkMgMXB4IHNvbGlkO1xufVxuLm1lc3NhZ2UtdGVtcGxhdGUtY2hvb3NlciA+IC5uZXcge1xuICBmb250LXNpemU6IDE0cHg7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIGNvbG9yOiAjMDc5Y2VmO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG4ubWVzc2FnZS10ZW1wbGF0ZS1jaG9vc2VyID4gLm5ldyA+IC5jb250YWluZXIge1xuICBwYWRkaW5nOiAyNHB4IDIwcHg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG59XG4udGhlbWUtbGlnaHQgLm1lc3NhZ2UtdGVtcGxhdGUtY2hvb3NlciA+IC5uZXcgPiAuY29udGFpbmVyIHtcbiAgYm9yZGVyLWJvdHRvbTogI2YyZjVmOCAxcHggc29saWQ7XG59XG4udGhlbWUtZGFyayAubWVzc2FnZS10ZW1wbGF0ZS1jaG9vc2VyID4gLm5ldyA+IC5jb250YWluZXIge1xuICBib3JkZXItYm90dG9tOiAjMkMyQzJDIDFweCBzb2xpZDtcbn1cbi5tZXNzYWdlLXRlbXBsYXRlLWNob29zZXIgPiAubmV3ID4gLmNvbnRhaW5lciA+IC5pY29uIHtcbiAgbWFyZ2luLXJpZ2h0OiA4cHg7XG59XG4ubWVzc2FnZS10ZW1wbGF0ZS1jaG9vc2VyID4gLm5ldyA+IC5jb250YWluZXIgPiAuaWNvbiBwYXRoIHtcbiAgZmlsbDogIzA3OWNlZjtcbn1cbi50aGVtZS1saWdodCAubWVzc2FnZS10ZW1wbGF0ZS1jaG9vc2VyID4gLm5ldyA+IC5jb250YWluZXI6aG92ZXIge1xuICBiYWNrZ3JvdW5kOiB3aGl0ZXNtb2tlO1xufVxuLnRoZW1lLWRhcmsgLm1lc3NhZ2UtdGVtcGxhdGUtY2hvb3NlciA+IC5uZXcgPiAuY29udGFpbmVyOmhvdmVyIHtcbiAgYmFja2dyb3VuZDogIzI5MjkyOTtcbn1cbi5tZXNzYWdlLXRlbXBsYXRlLWNob29zZXIgPiAudGFibGUge1xuICBvdmVyZmxvdy15OiBzY3JvbGw7XG59XG4ubWVzc2FnZS10ZW1wbGF0ZS1jaG9vc2VyID4gLnRhYmxlLnNob3VsZC11cGdyYWRlID4gLm5ldyA+IC5jb250YWluZXIsIC5tZXNzYWdlLXRlbXBsYXRlLWNob29zZXIgPiAudGFibGUuc2hvdWxkLXVwZ3JhZGUgPiAudGVtcGxhdGUgPiAuY29udGFpbmVyIHtcbiAgZmlsdGVyOiBibHVyKDVweCk7XG59XG4ubWVzc2FnZS10ZW1wbGF0ZS1jaG9vc2VyID4gLnRhYmxlID4gLm5hdmlnYXRpb24taGVhZGVyIHtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cbi5tZXNzYWdlLXRlbXBsYXRlLWNob29zZXIgPiAudGFibGUgPiAudGVtcGxhdGUge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG4ubWVzc2FnZS10ZW1wbGF0ZS1jaG9vc2VyID4gLnRhYmxlID4gLnRlbXBsYXRlID4gLmNvbnRhaW5lciB7XG4gIHBhZGRpbmc6IDEzcHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG4udGhlbWUtbGlnaHQgLm1lc3NhZ2UtdGVtcGxhdGUtY2hvb3NlciA+IC50YWJsZSA+IC50ZW1wbGF0ZSA+IC5jb250YWluZXIge1xuICBib3JkZXItYm90dG9tOiAjZjJmNWY4IDFweCBzb2xpZDtcbn1cbi50aGVtZS1kYXJrIC5tZXNzYWdlLXRlbXBsYXRlLWNob29zZXIgPiAudGFibGUgPiAudGVtcGxhdGUgPiAuY29udGFpbmVyIHtcbiAgYm9yZGVyLWJvdHRvbTogIzJDMkMyQyAxcHggc29saWQ7XG59XG4udGhlbWUtbGlnaHQgLm1lc3NhZ2UtdGVtcGxhdGUtY2hvb3NlciA+IC50YWJsZSA+IC50ZW1wbGF0ZSA+IC5jb250YWluZXIuc2VsZWN0ZWQge1xuICBiYWNrZ3JvdW5kOiByZ2JhKDIzMiwgMjQzLCAyNTUsIDAuNSk7XG59XG4udGhlbWUtZGFyayAubWVzc2FnZS10ZW1wbGF0ZS1jaG9vc2VyID4gLnRhYmxlID4gLnRlbXBsYXRlID4gLmNvbnRhaW5lci5zZWxlY3RlZCB7XG4gIGJhY2tncm91bmQ6IHJnYmEoNTQsIDU0LCA1NCwgMC43KTtcbn1cbi50aGVtZS1saWdodCAubWVzc2FnZS10ZW1wbGF0ZS1jaG9vc2VyID4gLnRhYmxlID4gLnRlbXBsYXRlID4gLmNvbnRhaW5lcjpob3ZlciB7XG4gIGJhY2tncm91bmQ6IHdoaXRlc21va2U7XG59XG4udGhlbWUtZGFyayAubWVzc2FnZS10ZW1wbGF0ZS1jaG9vc2VyID4gLnRhYmxlID4gLnRlbXBsYXRlID4gLmNvbnRhaW5lcjpob3ZlciB7XG4gIGJhY2tncm91bmQ6ICMyOTI5Mjk7XG59XG4ubWVzc2FnZS10ZW1wbGF0ZS1jaG9vc2VyID4gLnRhYmxlID4gLnRlbXBsYXRlID4gLmNvbnRhaW5lciA+IC5wcm9maWxlLXBpYyB7XG4gIHdpZHRoOiAyNHB4O1xuICBoZWlnaHQ6IDI0cHg7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xufVxuLnRoZW1lLWxpZ2h0IC5tZXNzYWdlLXRlbXBsYXRlLWNob29zZXIgPiAudGFibGUgPiAudGVtcGxhdGUgPiAuY29udGFpbmVyID4gLnByb2ZpbGUtcGljIHtcbiAgYmFja2dyb3VuZDogI2YyZjVmODtcbn1cbi50aGVtZS1kYXJrIC5tZXNzYWdlLXRlbXBsYXRlLWNob29zZXIgPiAudGFibGUgPiAudGVtcGxhdGUgPiAuY29udGFpbmVyID4gLnByb2ZpbGUtcGljIHtcbiAgYmFja2dyb3VuZDogIzJDMkMyQztcbn1cbi5tZXNzYWdlLXRlbXBsYXRlLWNob29zZXIgPiAudGFibGUgPiAudGVtcGxhdGUgPiAuY29udGFpbmVyID4gLmNvbnRlbnQtY29sdW1uIHtcbiAgd2lkdGg6IDkwJTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cbi5tZXNzYWdlLXRlbXBsYXRlLWNob29zZXIgPiAudGFibGUgPiAudGVtcGxhdGUgPiAuY29udGFpbmVyID4gLmNvbnRlbnQtY29sdW1uID4gLnRpdGxlIHtcbiAgZmxleDogMTtcbiAgZm9udC1zaXplOiAxM3B4O1xuICBmb250LXdlaWdodDogNTAwO1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICBtYXJnaW4tYm90dG9tOiAzcHg7XG59XG4udGhlbWUtbGlnaHQgLm1lc3NhZ2UtdGVtcGxhdGUtY2hvb3NlciA+IC50YWJsZSA+IC50ZW1wbGF0ZSA+IC5jb250YWluZXIgPiAuY29udGVudC1jb2x1bW4gPiAudGl0bGUge1xuICBjb2xvcjogIzQ0NDQ0NDtcbn1cbi50aGVtZS1kYXJrIC5tZXNzYWdlLXRlbXBsYXRlLWNob29zZXIgPiAudGFibGUgPiAudGVtcGxhdGUgPiAuY29udGFpbmVyID4gLmNvbnRlbnQtY29sdW1uID4gLnRpdGxlIHtcbiAgY29sb3I6ICNlOGU4ZTg7XG59XG4ubWVzc2FnZS10ZW1wbGF0ZS1jaG9vc2VyID4gLnRhYmxlID4gLnRlbXBsYXRlID4gLmNvbnRhaW5lciA+IC5jb250ZW50LWNvbHVtbiA+IC5zdWJ0aXRsZSB7XG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgbGluZS1oZWlnaHQ6IDEuMTc7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIGhlaWdodDogMTZweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG59XG4udGhlbWUtbGlnaHQgLm1lc3NhZ2UtdGVtcGxhdGUtY2hvb3NlciA+IC50YWJsZSA+IC50ZW1wbGF0ZSA+IC5jb250YWluZXIgPiAuY29udGVudC1jb2x1bW4gPiAuc3VidGl0bGUge1xuICBjb2xvcjogIzdlOGY5Zjtcbn1cbi50aGVtZS1kYXJrIC5tZXNzYWdlLXRlbXBsYXRlLWNob29zZXIgPiAudGFibGUgPiAudGVtcGxhdGUgPiAuY29udGFpbmVyID4gLmNvbnRlbnQtY29sdW1uID4gLnN1YnRpdGxlIHtcbiAgY29sb3I6ICNBQUFBQUE7XG59XG4ubWVzc2FnZS10ZW1wbGF0ZS1jaG9vc2VyID4gLnRhYmxlID4gLnRlbXBsYXRlID4gLmNvbnRhaW5lciA+IC5sb2NrIHtcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogMTBweDtcbn1cbi5tZXNzYWdlLXRlbXBsYXRlLWNob29zZXIgPiAudGFibGUgPiAudXBncmFkZS1jb250YWluZXIge1xuICBsZWZ0OiBjYWxjKDUwJSAtIDIwMHB4KTtcbiAgdG9wOiBjYWxjKDUwJSAtIDIwMHB4KTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cbi5tZXNzYWdlLXRlbXBsYXRlLWNob29zZXIgPiAudGFibGUgPiAudXBncmFkZS1jb250YWluZXIgPiAudXBncmFkZS1wcm9tcHQge1xuICB0b3A6IDMwcHg7XG4gIGFuaW1hdGlvbjogZmFkZS1pbiAwLjJzIGVhc2UtaW4tb3V0IDBzIDE7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIHdpZHRoOiAzMDBweDtcbiAgcmlnaHQ6IGF1dG87XG59XG4udGhlbWUtbGlnaHQgLm1lc3NhZ2UtdGVtcGxhdGUtY2hvb3NlciA+IC50YWJsZSA+IC51cGdyYWRlLWNvbnRhaW5lciA+IC51cGdyYWRlLXByb21wdCB7XG4gIGJvcmRlcjogI2M5ZDRlMCAxcHggc29saWQ7XG59XG4udGhlbWUtZGFyayAubWVzc2FnZS10ZW1wbGF0ZS1jaG9vc2VyID4gLnRhYmxlID4gLnVwZ3JhZGUtY29udGFpbmVyID4gLnVwZ3JhZGUtcHJvbXB0IHtcbiAgYm9yZGVyOiAjMkUyRTJFIDFweCBzb2xpZDtcbn0iLCIvLyBpZiB0aGUgZm9sbG93aW5nIGlzIHVwZGF0ZWQsIHNob3VsZCBhbHNvIHVwZGF0ZSBgbGliL3R5cG9ncmFwaHkudHNgXG4kZGVmYXVsdEZvbnQ6IC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCxcbiAgXCJTZWdvZSBVSVwiLCBcIlJvYm90b1wiLCBcIk94eWdlblwiLCBcIlVidW50dVwiLCBcIkNhbnRhcmVsbFwiLFxuICBcIkZpcmEgU2Fuc1wiLCBcIkRyb2lkIFNhbnNcIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLFxuICBzYW5zLXNlcmlmO1xuXG4kcmVndWxhcjogNDAwO1xuJG1lZGl1bTogNTAwO1xuJHNlbWlib2xkOiA2MDA7XG4kYm9sZDogNzAwO1xuIiwiLy8gTGlnaHQgVGhlbWVzIFNBU1MgdmFyc1xuJHdoaXRlOiAjZmZmZmZmO1xuJHNub3c6ICNmYWZhZmE7XG4kY2hhcmNvYWw6ICM0NDQ0NDQ7XG4kZ3JheTogI2M5ZDRlMDtcbiRzaWx2ZXI6ICM3ZThmOWY7XG4kbGFiZWw6ICNkMzQ3YWU7XG4kaW5ib3g6ICM0N2RmZjU7XG4kbWlkbmlnaHQ6ICMyNDJlNDQ7XG4kYXp1cmU6ICMwNzljZWY7XG4kcmVhZExhdGVyOiAjZmZhMDU3O1xuJGFyY2hpdmU6ICM4N2VjYmI7XG4kdHJhc2g6ICNmZjZiN2M7XG4kc3RhcjogI2ZmZGYzMjtcbiRzZW5kTGF0ZXI6ICMxMDk3ZGQ7XG4kZm9sbG93VXA6ICNmNjRiODE7XG4kZXJyb3I6ICNlNzRjM2M7XG4kY29tcG9zZUhvdmVyOiAjNEVENkVCO1xuJGxzYkNlbGxIb3ZlcjogIzQzNGY2NztcbiRsc2JDZWxsU2VsZWN0ZWQ6ICMzMzNlNTU7XG4kbGlnaHRHcmF5OiAjZjJmNWY4O1xuJGRhcmtCbHVlOiAjMmM3MWMxO1xuJG1lZGl1bUdyZWVuOiAjMGVjMzZiO1xuJGJvcmRlckdyYXk6ICNlZWVlZWU7XG4kaWNlQmx1ZTogI2U4ZjNmZjtcbiRjb21wbGV0ZWRHcmF5OiAjYWZiYmM4O1xuJGdyYXlIb3ZlcjogZGFya2VuKCR3aGl0ZSwgNCUpO1xuJHRocmVhZEhvdmVyOiByZ2JhKCRpY2VCbHVlLCAuNSk7XG4kdGhyZWFkU2VsZWN0ZWQ6ICRpY2VCbHVlO1xuJGNvbW1lbnRCb2R5OiByZ2JhKDAsIDE3MCwgMjU1LCAwLjEpO1xuJGJsYWNrOiAjMDAwMDAwO1xuXG4kZmFjZWJvb2s6ICM1YTdhYzc7XG4kdHdpdHRlcjogIzViYmNlYztcbiRhbmdlbExpc3Q6ICMwMDAwMDA7XG4kbGlua2VkSW46ICMwMDdiYjU7XG5cbiRib3hTaGFkb3c6IDJweCAycHggNHB4IDAgcmdiYSgxMjUsIDE0MywgMTYwLCAwLjUpO1xuJGdyYXlCb3JkZXI6IHNvbGlkIDJweCAkYm9yZGVyR3JheTtcbiRsaWdodEdyYXlCb3JkZXI6ICRsaWdodEdyYXkgMXB4IHNvbGlkO1xuJHNlcXVlbmNlTWF4V2lkdGg6IDEwNDBweDtcblxuLy8gQ29uc3RhbnRzIChOb3QgY2hhbmdlZCBieSB0aGVtZSlcbiR0cnVlV2hpdGU6ICNmZmZmZmY7XG4kdHJ1ZURhcms6ICMxMjEyMTI7XG5cbi8vIExpZ2h0IFRoZW1lcyBTQVNTIHZhcnNcbiRkYXJrUHJpbWFyeVRleHQ6ICNlOGU4ZTg7XG4kZGFya1NlY29uZGFyeVRleHQ6ICNBQUFBQUE7XG5cbiRkYXJrOiAnZGFyayc7XG4kbGlnaHQ6ICdsaWdodCc7XG5cbi8vIFRoZW1pZmllZCBDb2xvcnNcbiR0aGVtZXM6IChcbiAgJGxpZ2h0OiAoXG4gICAgdHJ1ZURhcms6ICR0cnVlRGFyayxcbiAgICB0cnVlV2hpdGU6ICNmYWZhZmEsXG4gICAgdW5zZXQ6ICd1bnNldCcsXG4gICAgdHJhbnNwYXJlbnRDb2xvcjogdHJhbnNwYXJlbnQsXG4gICAgcHJpbWFyeUFjY2VudDogJGF6dXJlLFxuXG4gICAgLy8gTWFpbiBBcHBcbiAgICBwcmltYXJ5VGV4dENvbG9yOiAkY2hhcmNvYWwsXG4gICAgc2Vjb25kYXJ5VGV4dENvbG9yOiAkc2lsdmVyLFxuICAgIHRlcnRpYXJ5VGV4dENvbG9yOiAkZ3JheSxcblxuICAgIC8vIEJhY2tncm91bmQgQ29sb3JzXG4gICAgcHJpbWFyeUJhY2tncm91bmRDb2xvcjogJHdoaXRlLFxuICAgIHNlY29uZGFyeUJhY2tncm91bmRDb2xvcjogJHNub3csXG4gICAgdGVydGlhcnlCYWNrZ3JvdW5kQ29sb3I6ICR3aGl0ZSxcbiAgICBwcmltYXJ5Q29udHJhc3RCb3JkZXJDb2xvcjogJGxpZ2h0R3JheSxcbiAgICBzZWNvbmRhcnlDb250cmFzdEJvcmRlckNvbG9yOiAkbGlnaHRHcmF5LFxuXG4gICAgLy8gTGVmdCBTaWRlYmFyXG4gICAgbHNiQmFja2dyb3VuZENvbG9yOiAkbWlkbmlnaHQsXG4gICAgbHNiSGVhZGVyQ29sb3I6ICRncmF5LFxuXG4gICAgLy8gQm9yZGVyc1xuICAgIGxvd0NvbnRyYXN0Qm9yZGVyOiAkbGlnaHRHcmF5IDFweCBzb2xpZCxcbiAgICBsb3dDb250cmFzdEJvcmRlckNvbG9yOiAkbGlnaHRHcmF5LFxuICAgIGhpZ2hDb250cmFzdEJvcmRlcjogJGdyYXkgMnB4IHNvbGlkLFxuICAgIGhpZ2hDb250cmFzdEJvcmRlckNvbG9yOiAkZ3JheSxcbiAgICBib3hTaGFkb3c6ICRib3hTaGFkb3csXG5cbiAgICAvLyBBY2NlbnRzXG4gICAgbG93Q29udHJhc3RBY2NlbnQ6IHJnYmEoMjQyLCAyNDUsIDI0OCwgMC41KSxcblxuICAgIC8vIEhvdmVyc1xuICAgIGhpZ2hDb250cmFzdEhvdmVyOiAkZ3JheUhvdmVyLFxuXG4gICAgZ3JheTogJGdyYXksXG4gICAgZ3JheVRleHQ6ICRncmF5LFxuICAgIG1pZG5pZ2h0OiAkbWlkbmlnaHQsXG4gICAgaWNlQmx1ZTogJGljZUJsdWUsXG4gICAgdGhyZWFkSG92ZXI6IHJnYmEoJGljZUJsdWUsIDAuNSksXG4gICAgYm9yZGVyR3JheTogJGxpZ2h0R3JheSxcbiAgICB0aHJlYWRTZWxlY3RlZDogJGljZUJsdWUsXG4gICAgbGlnaHRHcmF5Qm9yZGVyOiAkbGlnaHRHcmF5IDFweCBzb2xpZCxcbiAgICBncmF5SG92ZXI6ICRncmF5SG92ZXIsXG5cbiAgKSxcbiAgJGRhcms6IChcbiAgICAvLyBDb25zdGFudHMgdGhhdCBkbyBub3QgY2hhbmdlXG4gICAgdHJ1ZVdoaXRlOiAjZmFmYWZhLFxuICAgIHRydWVEYXJrOiAkdHJ1ZURhcmssXG4gICAgcHJpbWFyeUFjY2VudDogJGF6dXJlLFxuICAgIHRyYW5zcGFyZW50Q29sb3I6IHRyYW5zcGFyZW50LFxuICAgIHVuc2V0OiAndW5zZXQnLFxuXG4gICAgLy8gTWFpbiBBcHBcbiAgICBwcmltYXJ5VGV4dENvbG9yOiAkZGFya1ByaW1hcnlUZXh0LFxuICAgIHNlY29uZGFyeVRleHRDb2xvcjogJGRhcmtTZWNvbmRhcnlUZXh0LFxuICAgIHRlcnRpYXJ5VGV4dENvbG9yOiAjNzc3Nzc3LFxuICAgIHByaW1hcnlCYWNrZ3JvdW5kQ29sb3I6ICMyMTIxMjEsXG4gICAgc2Vjb25kYXJ5QmFja2dyb3VuZENvbG9yOiAjMjMyMzIzLFxuICAgIHRlcnRpYXJ5QmFja2dyb3VuZENvbG9yOiAjMjUyNTI1LFxuICAgIHNlY29uZGFyeUNvbnRyYXN0Qm9yZGVyQ29sb3I6IGxpZ2h0ZW4oIzEyMTIxMiwgMTAlKSxcbiAgICBjb250cmFzdGVkQm9yZGVyQ29sb3I6IGxpZ2h0ZW4oIzEyMTIxMiwgMTAlKSxcblxuICAgIC8vIExlZnQgU2lkZWJhclxuICAgIGxzYkJhY2tncm91bmRDb2xvcjogIzI1MjUyNSxcbiAgICBsc2JIZWFkZXJDb2xvcjogZGFya2VuKCNmYWZhZmEsIDEwJSksXG5cbiAgICAvLyBCb3JkZXJzXG4gICAgbG93Q29udHJhc3RCb3JkZXI6ICMyQzJDMkMgMXB4IHNvbGlkLFxuICAgIGxvd0NvbnRyYXN0Qm9yZGVyQ29sb3I6ICMyQzJDMkMsXG4gICAgaGlnaENvbnRyYXN0Qm9yZGVyOiAjMkUyRTJFIDJweCBzb2xpZCxcbiAgICBoaWdoQ29udHJhc3RCb3JkZXJDb2xvcjogIzJFMkUyRSxcbiAgICBib3hTaGFkb3c6IDJweCAycHggNHB4IDAgIzEyMTIxMixcblxuICAgIC8vIEFjY2VudHNcbiAgICBsb3dDb250cmFzdEFjY2VudDogcmdiYSg3NywgNzcsIDc3LCAwLjEzMiksXG5cbiAgICAvLyBIb3ZlcnNcbiAgICBoaWdoQ29udHJhc3RIb3ZlcjogbGlnaHRlbihsaWdodGVuKCMwRjBGMEYsIDUlKSwgNSUpLFxuXG4gICAgZ3JheTogbGlnaHRlbigjMEYwRjBGLCAxNSUpLFxuICAgIG1pZG5pZ2h0OiBsaWdodGVuKCMwRjBGMEYsIDEwJSksXG4gICAgaWNlQmx1ZTogbGlnaHRlbigjMEYwRjBGLCA3JSksXG4gICAgYm9yZGVyR3JheTogbGlnaHRlbigjMEYwRjBGLCAxMCUpLFxuICAgIHRocmVhZEhvdmVyOiByZ2JhKCMzNjM2MzYsIDAuNyksXG4gICAgdGhyZWFkU2VsZWN0ZWQ6IHJnYmEoIzM2MzYzNiwgMC41KSxcbiAgICBsaWdodEdyYXlCb3JkZXI6ICMyQzJDMkMgMXB4IHNvbGlkLFxuICAgIGdyYXlUZXh0OiAjZmFmYWZhLFxuICAgIGdyYXlIb3ZlcjogIzJFMkUyRSxcbiAgKSxcbik7XG4iXX1dKTsK"}]}