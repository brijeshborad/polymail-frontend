{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/db.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/db.ts","mtime":1675280254048},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkgewogICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHsKICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHsKICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTsKICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKQogICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07CiAgICAgICAgfQogICAgICAgIHJldHVybiB0OwogICAgfTsKICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9Owp2YXIgX2EsIF9iLCBfYzsKaW1wb3J0IHsgY3JlYXRlIH0gZnJvbSAnQHNyYy9saWIvcmVkdXgnOwppbXBvcnQgeyBpbml0aWFsU3RhdGVXaXRoQ2FjaGVkRGF0YSB9IGZyb20gJ0BzcmMvbGliL3N0YXRlJzsKaW1wb3J0IHsgcmVzb3VyY2VPayB9IGZyb20gJ0BzcmMvbGliL3Jlc291cmNlJzsKZXhwb3J0IHZhciBEQl9SRUFEWSA9IChfYSA9IGNyZWF0ZSgnREJfUkVBRFknLCB7CiAgICBzdGFydDogZnVuY3Rpb24gKHN0YXRlKSB7IHJldHVybiAoX19hc3NpZ24oX19hc3NpZ24oe30sIHN0YXRlKSwgeyBkYlJlYWR5OiB0cnVlIH0pKTsgfSwKfSksIF9hLnR5cGUpLCBkYlJlYWR5ID0gX2EuYWN0aW9uLCBkYlJlYWR5UmVkdWNlciA9IF9hLnJlZHVjZXI7CmV4cG9ydCB2YXIgREJfQ0xFQVIgPSAoX2IgPSBjcmVhdGUoJ0RCX0NMRUFSJywgewogICAgc3RhcnQ6IGZ1bmN0aW9uIChzdGF0ZSkgewogICAgICAgIHJldHVybiBzdGF0ZTsKICAgIH0sCiAgICBzdWNjZXNzOiBmdW5jdGlvbiAoc3RhdGUsIG1ldGEsIHBheWxvYWQpIHsKICAgICAgICBpZiAod2luZG93LlBNRWxlY3Ryb25CcmlkZ2UgJiYgd2luZG93LlBNRWxlY3Ryb25CcmlkZ2UuY2xlYXJDYWNoZSkgewogICAgICAgICAgICB3aW5kb3cuUE1FbGVjdHJvbkJyaWRnZS5jbGVhckNhY2hlKCk7CiAgICAgICAgfQogICAgICAgIHJldHVybiBzdGF0ZTsKICAgIH0sCn0pLCBfYi50eXBlKSwgZGJDbGVhciA9IF9iLmFjdGlvbiwgZGJDbGVhclJlZHVjZXIgPSBfYi5yZWR1Y2VyOwovLyBOT1RFKFNISU4pOiBTZXJ2ZXJzaWRlIGNsZWFyIGNhY2hlIHJlcXVpcmVzIGNsaWNraW5nIG9uIG1haWxib3ggKG1heSB3YW50IHRvIGVtaXQgZXZlbnRzKQpleHBvcnQgdmFyIERCX0NMRUFSSU5HX0NBQ0hFID0gKF9jID0gY3JlYXRlKCdEQl9DTEVBUklOR19DQUNIRScsIHsKICAgIHN0YXJ0OiBmdW5jdGlvbiAoc3RhdGUsIG1ldGEpIHsgcmV0dXJuIChfX2Fzc2lnbihfX2Fzc2lnbih7fSwgaW5pdGlhbFN0YXRlV2l0aENhY2hlZERhdGEoKSksIHsgY2xlYXJpbmdDYWNoZTogbWV0YSwgdG9hc3Q6IHN0YXRlLnRvYXN0LCByaWdodFNpZGViYXI6IHN0YXRlLnJpZ2h0U2lkZWJhciwgbGVmdFNpZGViYXI6IHN0YXRlLmxlZnRTaWRlYmFyLCBtYWlsYm94OiBfX2Fzc2lnbihfX2Fzc2lnbih7fSwgc3RhdGUubWFpbGJveCksIHsgaHlkcmF0ZUNvdW50OiAoc3RhdGUubWFpbGJveC5oeWRyYXRlQ291bnQgfHwgMCkgKyAxIH0pLCBtYWlsYm94VGhyZWFkczogcmVzb3VyY2VPayhbXSkgfSkpOyB9LAp9KSwgX2MudHlwZSksIGRiQ2xlYXJpbmdDYWNoZSA9IF9jLmFjdGlvbiwgZENsZWFyaW5nQ2FjaGVSZWR1Y2VyID0gX2MucmVkdWNlcjsKZXhwb3J0IGRlZmF1bHQgWwogICAgZGJSZWFkeVJlZHVjZXIsCiAgICBkYkNsZWFyUmVkdWNlciwKICAgIGRDbGVhcmluZ0NhY2hlUmVkdWNlciwKXTsK"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/db.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/db.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,gBAAgB,CAAC;AACxC,OAAO,EAAE,0BAA0B,EAAE,MAAM,gBAAgB,CAAC;AAC5D,OAAO,EAAE,UAAU,EAAE,MAAM,mBAAmB,CAAC;AAE/C,MAAM,CACJ,IAAA;;YAAc,EACd,mBAAe,EACf,2BAAuB,CAMtB;AAEH,MAAM,CACJ,IAAA;;;;;;;;;;YAAc,EACd,mBAAe,EACf,2BAAuB,CAWtB;AAEH,4FAA4F;AAC5F,MAAM,CACJ,IAAA;;YAAuB,EACvB,2BAAuB,EACvB,kCAA8B,CAc7B;AAEH,eAAe;IACb,cAAc;IACd,cAAc;IACd,qBAAqB;CACtB,CAAC","sourcesContent":["import { create } from '@src/lib/redux';\nimport { initialStateWithCachedData } from '@src/lib/state';\nimport { resourceOk } from '@src/lib/resource';\n\nexport const {\n  type: DB_READY,\n  action: dbReady,\n  reducer: dbReadyReducer,\n} = create<null, null>('DB_READY', {\n  start: state => ({\n    ...state,\n    dbReady: true,\n  }),\n});\n\nexport const {\n  type: DB_CLEAR,\n  action: dbClear,\n  reducer: dbClearReducer,\n} = create<null, null>('DB_CLEAR', {\n  start: (state) => {\n    return state;\n  },\n  success: (state, meta, payload) => {\n    if (window.PMElectronBridge && window.PMElectronBridge.clearCache) {\n      window.PMElectronBridge.clearCache();\n    }\n    return state;\n  },\n});\n\n// NOTE(SHIN): Serverside clear cache requires clicking on mailbox (may want to emit events)\nexport const {\n  type: DB_CLEARING_CACHE,\n  action: dbClearingCache,\n  reducer: dClearingCacheReducer,\n} = create<boolean, null>('DB_CLEARING_CACHE', {\n  start: (state, meta) => ({\n    ...initialStateWithCachedData(),\n    clearingCache: meta,\n    toast: state.toast,\n    rightSidebar: state.rightSidebar,\n    leftSidebar: state.leftSidebar,\n    mailbox: {\n      ...state.mailbox,\n      hydrateCount: (state.mailbox.hydrateCount || 0) + 1,\n    },\n    mailboxThreads: resourceOk([]),\n  }),\n});\n\nexport default [\n  dbReadyReducer,\n  dbClearReducer,\n  dClearingCacheReducer,\n];\n"]}]}