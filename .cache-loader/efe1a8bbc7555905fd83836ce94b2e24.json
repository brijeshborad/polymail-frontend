{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/Form/RecipientsEditor/index.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/Form/RecipientsEditor/index.tsx","mtime":1675280254007},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4JzsKaW1wb3J0IHsgY29udGFjdFR5cGVhaGVhZCwgY29udGFjdFR5cGVhaGVhZENsZWFyLCBzZWxlY3RDb250YWN0LCBjb250YWN0U2VsZWN0LCB9IGZyb20gJ0BzcmMvZHVja3MvY29udGFjdHMnOwppbXBvcnQgUmVjaXBpZW50c0VkaXRvciBmcm9tICcuL1JlY2lwaWVudHNFZGl0b3InOwp2YXIgbWFwU3RhdGVUb1Byb3BzID0gZnVuY3Rpb24gKHN0YXRlLCBvd25Qcm9wcykgeyByZXR1cm4gKHsKICAgIHR5cGVhaGVhZENvbnRhY3RzOiBzdGF0ZS50eXBlYWhlYWRDb250YWN0cywKICAgIGdldENvbnRhY3Q6IGZ1bmN0aW9uIChlbWFpbCkgeyByZXR1cm4gc2VsZWN0Q29udGFjdChzdGF0ZSwgZW1haWwpOyB9LAp9KTsgfTsKdmFyIG1hcERpc3BhdGNoVG9Qcm9wcyA9IGZ1bmN0aW9uIChkaXNwYXRjaCkgeyByZXR1cm4gKHsKICAgIHNlYXJjaENvbnRhY3RUeXBlYWhlYWQ6IGZ1bmN0aW9uIChxdWVyeSkgeyByZXR1cm4gZGlzcGF0Y2goY29udGFjdFR5cGVhaGVhZChxdWVyeSkpOyB9LAogICAgY2xlYXJDb250YWN0VHlwZWFoZWFkOiBmdW5jdGlvbiAoKSB7IHJldHVybiBkaXNwYXRjaChjb250YWN0VHlwZWFoZWFkQ2xlYXIoKSk7IH0sCiAgICBzZWxlY3RDb250YWN0OiBmdW5jdGlvbiAoZW1haWwpIHsgcmV0dXJuIGRpc3BhdGNoKGNvbnRhY3RTZWxlY3QoZW1haWwpKTsgfSwKfSk7IH07CmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QobWFwU3RhdGVUb1Byb3BzLCBtYXBEaXNwYXRjaFRvUHJvcHMsIG51bGwsIHsgd2l0aFJlZjogdHJ1ZSB9KShSZWNpcGllbnRzRWRpdG9yKTsK"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/Form/RecipientsEditor/index.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/Form/RecipientsEditor/index.tsx"],"names":[],"mappings":"AAEA,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AAGtC,OAAO,EACL,gBAAgB,EAAE,qBAAqB,EAAE,aAAa,EAAE,aAAa,GACtE,MAAM,qBAAqB,CAAC;AAE7B,OAAO,gBAA0C,MAAM,oBAAoB,CAAC;AAE5E,IAAM,eAAe,GAAG,UAAC,KAAiB,EAAE,QAAe,IAAY,OAAA,CAAC;IACtE,iBAAiB,EAAE,KAAK,CAAC,iBAAiB;IAC1C,UAAU,EAAE,UAAC,KAAa,IAAK,OAAA,aAAa,CAAC,KAAK,EAAE,KAAK,CAAC,EAA3B,CAA2B;CACnD,CAAA,EAH8D,CAG9D,CAAC;AAEV,IAAM,kBAAkB,GAAG,UAAC,QAA8B,IAAoB,OAAA,CAAC;IAC7E,sBAAsB,EAAE,UAAA,KAAK,IAAI,OAAA,QAAQ,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,EAAjC,CAAiC;IAClE,qBAAqB,EAAE,cAAM,OAAA,QAAQ,CAAC,qBAAqB,EAAE,CAAC,EAAjC,CAAiC;IAC9D,aAAa,EAAE,UAAA,KAAK,IAAI,OAAA,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,EAA9B,CAA8B;CACvD,CAAC,EAJ4E,CAI5E,CAAC;AAEH,eAAe,OAAO,CACpB,eAAe,EAAE,kBAAkB,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAC7D,CAAC,gBAAgB,CAAC,CAAC","sourcesContent":["import { Dispatch } from 'redux';\n\nimport { connect } from 'react-redux';\nimport { StoreState } from '@src/types';\n\nimport {\n  contactTypeahead, contactTypeaheadClear, selectContact, contactSelect,\n} from '@src/ducks/contacts';\n\nimport RecipientsEditor, { Props, DispatchProps } from './RecipientsEditor';\n\nconst mapStateToProps = (state: StoreState, ownProps: Props): Props => ({\n  typeaheadContacts: state.typeaheadContacts,\n  getContact: (email: string) => selectContact(state, email),\n} as any);\n\nconst mapDispatchToProps = (dispatch: Dispatch<StoreState>): DispatchProps => ({\n  searchContactTypeahead: query => dispatch(contactTypeahead(query)),\n  clearContactTypeahead: () => dispatch(contactTypeaheadClear()),\n  selectContact: email => dispatch(contactSelect(email)),\n});\n\nexport default connect(\n  mapStateToProps, mapDispatchToProps, null, { withRef: true },\n)(RecipientsEditor);\n"]}]}