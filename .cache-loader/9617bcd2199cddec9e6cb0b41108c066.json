{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/contact.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/contact.ts","mtime":1675280254062},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/contact.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/contact.ts"],"names":[],"mappings":"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","sourcesContent":["import { Observable } from 'rxjs';\nimport { uniq } from 'lodash';\n\nimport Cache, { prefixKeyRange, Stores } from './db';\nimport { fnv1a32, fnv1a64hex } from './crypt';\nimport {\n  Contact,\n  ContactGroup,\n  Company,\n  PhysicalAddress,\n  Phone,\n  PhoneType,\n  Social,\n  ContactType,\n  EventRecipient,\n  EventRecipientType,\n} from '@src/types';\nimport { extractDomainFromEmail } from '@src/lib/address';\n\nconst COLORS = [\n  'a155a0',\n  '009ad9',\n  'fdaf16',\n  '8dd8f8',\n  'f05749',\n  '63ada0',\n  'f5864f',\n  'b1d35e',\n];\n\nfunction avatarColor(email: string): string {\n  const hash = fnv1a32(email);\n  const i = hash % COLORS.length;\n  return COLORS[i];\n}\n\nexport function defaultContact(\n  email: string, givenName: string = '', familyName: string = '',\n): Contact {\n  return applyContactDefaults({\n    email: email.trim().toLowerCase(),\n    givenName,\n    familyName,\n  } as any);\n}\n\nexport function generatePhotoUrl(\n  email: string,\n  firstName: string = '',\n  lastName: string = '',\n): string {\n  // cleanup variables\n  const lowerEmail = email.trim().toLowerCase();\n  const firstNameClean = firstName.trim();\n  const lastNameClean = lastName.trim();\n\n  // make initials\n  let initials = '';\n  if (firstNameClean.length > 0) {\n    initials = firstNameClean[0].toUpperCase();\n  }\n  if (lastNameClean.length > 0) {\n    initials += lastNameClean[0].toUpperCase();\n  }\n  // clean out '#' and '?' characters\n  initials = initials.replace(/#/g, '');\n  initials = initials.replace(/\\?/g, '');\n\n  if (initials.length === 0 && lowerEmail.length) {\n    initials = lowerEmail[0].toUpperCase();\n  }\n\n  return `${process.env.API_URL}/v1/avatars/initials/${initials}/${avatarColor(lowerEmail)}`;\n}\n\n// should not be exported, helper used by applyContactDefaults\nfunction cleanupContact(contact: Contact): Contact {\n  // cleanup variables\n  const fullNameClean = contact.fullName.trim();\n  const lowerEmail = contact.email.trim().toLowerCase();\n  const givenNameClean = contact.givenName.trim();\n  const familyNameClean = contact.familyName.trim();\n\n  // make initials\n  let initials = '';\n\n  // Start trying from full name\n  if (initials.length === 0 && fullNameClean.length) {\n    const words = fullNameClean.split(' ');\n\n    // Start Initial\n    if (words.length > 0) {\n      const firstWord = words[0];\n      if (firstWord.length > 0) {\n        initials = firstWord[0].toUpperCase();\n      }\n    }\n\n    if (words.length > 1) {\n      const lastWord = words[words.length - 1];\n      if (lastWord.length > 0) {\n        initials += lastWord[0].toUpperCase();\n      }\n    }\n  }\n\n  // Update from parts of name if cannot derive from full name\n  if (initials.length === 0) {\n    if (givenNameClean.length > 0) {\n      initials = givenNameClean[0].toUpperCase();\n    }\n    if (familyNameClean.length > 0) {\n      initials += familyNameClean[0].toUpperCase();\n    }\n  }\n\n  // clean out '#' and '?' characters\n  initials = initials.replace(/#/g, '');\n  initials = initials.replace(/\\?/g, '');\n\n  if (initials.length === 0 && lowerEmail.length) {\n    initials = lowerEmail[0].toUpperCase();\n  }\n\n  let fullName = contact.fullName;\n  if (fullName.length === 0) {\n    fullName = `${givenNameClean} ${familyNameClean}`.trim();\n  }\n\n  const punctuationWhiteSpace = /[\\s;,\\-()]/;\n  const fullNameTokens = fullName.split(punctuationWhiteSpace).map(t => t.toLowerCase());\n\n  const searchIndex: string[] = uniq([\n    lowerEmail,\n    givenNameClean,\n    familyNameClean,\n    fullName,\n    ...fullNameTokens,\n    extractDomainFromEmail(lowerEmail) || '',\n  ].filter(value => value !== '').map(value => value.toLowerCase()));\n\n  const photoUrl = contact.photoUrl ||\n    `${process.env.API_URL}/v1/avatars/initials/${initials}/${avatarColor(lowerEmail)}`;\n\n  return {\n    ...contact,\n    id: contact.id || fnv1a64hex(lowerEmail),\n    email: lowerEmail,\n    givenName: givenNameClean,\n    familyName: familyNameClean,\n    fullName,\n    photoUrl,\n    searchIndex,\n  };\n}\n\nexport function applyContactDefaults(contact: Contact): Contact {\n  // need to truncate time for testing\n  let date = new Date();\n  date = new Date(date.getFullYear(), date.getMonth(), date.getDay());\n\n  const newContact = {\n    created: date,\n    updated: date,\n    type: ContactType.Default,\n    gender: '',\n    firstMet: '',\n    bio: '',\n    location: '',\n    organizationTitle: '',\n    organization: '',\n    website: '',\n    addresses: [],\n    phoneNumbers: [],\n    socialMedia: [],\n    groups: [],\n    salutation: '',\n    user: '',\n    email: '',\n    givenName: '',\n    familyName: '',\n    fullName: '',\n    searchIndex: [],\n    photoUrl: '',\n    ...contact,\n  };\n\n  if (!(newContact.created instanceof Date) && (typeof newContact.created === 'string')) {\n    newContact.created = new Date(newContact.created);\n  }\n  if (!(newContact.updated instanceof Date) && (typeof newContact.updated === 'string')) {\n    newContact.updated = new Date(newContact.updated);\n  }\n\n  if (!(newContact.lastSent instanceof Date) && (typeof newContact.lastSent === 'string')) {\n    newContact.lastSent = new Date(newContact.lastSent);\n  }\n\n  newContact.addresses = newContact.addresses.map(address => applyPhysicalAddressDefaults(address));\n  newContact.phoneNumbers = newContact.phoneNumbers.map(phone => applyPhoneDefaults(phone));\n  newContact.socialMedia = newContact.socialMedia.map(social => applySocialDefaults(social));\n\n  if (newContact.company) {\n    newContact.company = applyCompanyDefaults(newContact.company);\n    newContact.company.socialMedia = newContact.company.socialMedia\n      .map(social => applySocialDefaults(social));\n  }\n\n  return cleanupContact(newContact);\n}\n\nfunction applyPhysicalAddressDefaults(address: any): PhysicalAddress {\n  return {\n    type: '',\n    street: '',\n    city: '',\n    region: '',\n    postcode: '',\n    country: '',\n    ...address,\n  };\n}\n\nfunction applyPhoneDefaults(phone: Phone): Phone {\n  return {\n    type: PhoneType.Main,\n    number: '',\n    ...phone,\n  };\n}\n\nfunction applySocialDefaults(social: Social): Social {\n  return {\n    username: '',\n    url: '',\n    ...social,\n  };\n}\n\nfunction applyCompanyDefaults(company: Company): Company {\n  return {\n    name: '',\n    website: '',\n    description: '',\n    socialMedia: [],\n    employees: 0,\n    raised: 0,\n    annualRevenue: 0,\n    marketCap: 0,\n    ...company,\n  };\n}\n\nexport function computeContact(contacts: Contact[]) {\n  if (contacts.length === 0) {\n    return;\n  }\n\n  if (contacts.length === 1) {\n    return { ...contacts[0], type: ContactType.Cache };\n  }\n\n  if (contacts.length === 2) {\n    const teamContact = contacts.filter(contact => contact.team)[0];\n    const personalContact = contacts.filter(contact => !contact.team)[0];\n\n    return {\n      ...personalContact,\n      ...teamContact,\n      type: ContactType.Cache,\n    };\n  }\n\n  return;\n}\n\nexport function applyContactGroupDefaults(group: ContactGroup): ContactGroup {\n  const newGroup = {\n    name: '',\n    ...group,\n  };\n\n  // Handle parsing dates\n  if (!(newGroup.created instanceof Date) && (typeof newGroup.created === 'string')) {\n    newGroup.created = new Date(newGroup.created);\n  }\n  if (!(newGroup.updated instanceof Date) && (typeof newGroup.updated === 'string')) {\n    newGroup.updated = new Date(newGroup.updated);\n  }\n  return newGroup;\n}\n\nexport function searchContacts(query: string, limit?: number): Observable<Contact[]> {\n  const prefix = query.trim().toLowerCase();\n\n  // don't run query empty, this causes everything to be returned\n  if (prefix === '') {\n    return Observable.of([]);\n  }\n\n  const range = prefixKeyRange(prefix);\n  return Cache.listIndex(Stores.Contacts, 'search', range, false, limit);\n}\n\nexport const searchContactsByDomain = (domain: string): Observable<Contact[]> => {\n  const lowercased = domain.trim().toLowerCase();\n\n  if (lowercased === '') {\n    return Observable.of([]);\n  }\n\n  return Cache.listIndex(\n    Stores.Contacts,\n    'email',\n    undefined,\n    false,\n    undefined,\n    (c: Contact) => c.email.indexOf(domain) > -1,\n  );\n};\n\nexport const searchContactGroups = (query: string): Observable<ContactGroup[]> => {\n  const lowerCaseQuery = query.toLowerCase();\n  return Cache.list(\n    Stores.ContactGroups,\n    (contactGroup) => {\n      if (!lowerCaseQuery) {\n        return false;\n      }\n      if (\n        contactGroup.name && contactGroup.name.toLowerCase().includes(lowerCaseQuery)\n      ) {\n        return true;\n      }\n      return false;\n    },\n  );\n};\n\nexport const getContactsByContactGroup = (contactGroup: string): Observable<Contact[]>  => {\n  return Cache.list(\n    Stores.Contacts,\n    contact => contact.groups.indexOf(contactGroup) !== -1,\n  );\n};\n\nexport const getContactsByRecipientType = (recipients: EventRecipient[]) => {\n  return Cache.list(\n    Stores.Contacts,\n    (contact: Contact) =>\n      recipients\n        .filter((recipient) => {\n          if (recipient.type === EventRecipientType.Contact) {\n            return recipient.identifier === contact.email;\n          }\n\n          return contact.groups.indexOf(recipient.identifier) !== -1;\n        }).length > 0,\n  );\n};\n\nexport const mergeEnrichedContact = (enriched: Contact, existing: Contact): Contact => {\n  const final = { ...enriched };\n  let revertedNames = false;\n\n  if (final.fullName.length === 0 && existing.fullName.length > 0) {\n    final.fullName = existing.fullName;\n    revertedNames = true;\n  }\n\n  if (final.givenName.length === 0 && existing.givenName.length > 0) {\n    final.givenName = existing.givenName;\n    revertedNames = true;\n  }\n\n  if (final.familyName.length === 0 && existing.familyName.length > 0) {\n    final.familyName = existing.familyName;\n    revertedNames = true;\n  }\n\n  // Replace photo url if values changed for name and photo url is of generated kind\n  if (revertedNames) {\n    const generatedPhotoUrl = generatePhotoUrl(\n      enriched.email,\n      enriched.givenName,\n      enriched.familyName,\n    );\n    if (generatedPhotoUrl === enriched.photoUrl) {\n      final.photoUrl = existing.photoUrl;\n    }\n  }\n\n  return final;\n};\n\nexport const listContactsByEmail = (email: string): Observable<Contact[]> => {\n  const descending = true;\n  const MAX_CONTACT_SIZE = 2;\n\n  return Cache.listIndex<Contact>(\n    Stores.Contacts,\n    'email',\n    IDBKeyRange.only(email),\n    descending,\n    MAX_CONTACT_SIZE,\n  );\n};\n"]}]}