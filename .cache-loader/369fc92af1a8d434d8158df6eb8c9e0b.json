{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/api/sharedThreads.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/api/sharedThreads.ts","mtime":1675280253981},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/api/sharedThreads.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/api/sharedThreads.ts"],"names":[],"mappings":"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","sourcesContent":["import { Observable } from 'rxjs';\nimport { Thread, MessageBody, Draft } from '@src/types';\nimport {\n  SharedThread,\n  SharedTeamInfo,\n  SharedThreadActivityType,\n} from '@src/types/sharedThreads';\nimport { jsonRequest, blankRequest } from '@src/api/base';\nimport { createSharedThread } from '@src/mocks/sharedThreads';\nimport { createThread } from '@src/mocks/threads';\nimport { computeThread } from '@src/lib/thread';\nimport { createMessageBodies } from '@src/mocks/messageBodies';\nimport { createTeam, createTeamMember } from '@src/mocks/teams';\nimport { computeSharedThread } from '@src/lib/sharedThread';\nimport { AsanaTask } from '@src/types/asana';\nimport { SharedThreadAsanaTaskCreateBody, SharedThreadCreateMeta } from '@src/ducks/sharedThreads';\nimport { createAsanaTask } from '@src/mocks/asana';\nimport { applyAsanaTaskDefaults } from '@src/lib/models/asana';\nimport { computeMessageBody } from '@src/lib/models/messageBodies';\nimport { createDraft } from '@src/mocks/drafts';\nimport { defaultDraft } from '@src/lib/draft';\n\nexport interface SharedThreadAPI {\n  list(offset?: string): Observable<SharedThread[]>;\n  create(meta: SharedThreadCreateMeta): Observable<SharedThread>;\n  messageLink(id: string, message: string): Observable<string>;\n  update(sharedThread: SharedThread): Observable<SharedThread>;\n  get(id: string): Observable<SharedThread>;\n  delete(id: string): Observable<null>;\n  fetchOriginal(id: string): Observable<Thread>;\n  getMessageBodies(id: string, thread: Thread): Observable<MessageBody[]>;\n  getTeamInfo(sharedThread: string): Observable<SharedTeamInfo>;\n  getAsanaTasks(sharedThread: string): Observable<AsanaTask[]>;\n  createAsanaTask(\n    sharedThread: string, task: SharedThreadAsanaTaskCreateBody,\n  ): Observable<AsanaTask>;\n  createActivity(\n    sharedThread: string,\n    type: SharedThreadActivityType,\n    user: string,\n    ttl?: number,\n  ): Observable<null>;\n  listDrafts(sharedThread: string): Observable<Draft[]>;\n  getDraft(sharedThread: string, draft: string): Observable<Draft>;\n}\n\nexport class SharedThreadClient implements SharedThreadAPI {\n  list(offset?: string): Observable<SharedThread[]> {\n    return jsonRequest({\n      method: 'GET',\n      route: offset ? `/v1/sharedThreads?id=${offset}` : '/v1/sharedThreads',\n    })\n    .map(threads => threads.map(computeSharedThread));\n  }\n\n  create(meta: SharedThreadCreateMeta): Observable<SharedThread> {\n    return jsonRequest({\n      method: 'POST',\n      route: '/v1/sharedThreads',\n      body: {\n        thread: meta.thread,\n        draft: meta.draft,\n        permissions: meta.permissions,\n      },\n    })\n    .map(sharedThread => computeSharedThread(sharedThread));\n  }\n  get(id: string): Observable<SharedThread> {\n    return jsonRequest({\n      method: 'GET',\n      route: `/v1/sharedThreads/${id}`,\n      disableCorsOptimization: true,\n    })\n    .map(thread => computeSharedThread(thread));\n  }\n  update(meta: SharedThread): Observable<SharedThread> {\n    return jsonRequest({\n      method: 'PATCH',\n      route: `/v1/sharedThreads/${meta.id}`,\n      body: meta,\n    })\n    .map(thread => computeSharedThread(thread));\n  }\n  delete(meta: string): Observable<null> {\n    return blankRequest({\n      method: 'DELETE',\n      route: `/v1/sharedThreads/${meta}`,\n    });\n  }\n  fetchOriginal(id: string): Observable<Thread> {\n    return jsonRequest({\n      method: 'GET',\n      route: `/v1/sharedThreads/${id}/original`,\n      disableCorsOptimization: true,\n    }).map(thread => computeThread(thread, id));\n  }\n  getMessageBodies(id: string, thread: Thread): Observable<MessageBody[]> {\n    return jsonRequest({\n      method: 'POST',\n      route: `/v1/sharedThreads/${id}/batch/messageBodies`,\n      disableCorsOptimization: true,\n      body: {\n        requests: thread.messages.map(m => ({\n          account: thread.account,\n          thread: thread.id,\n          message: m.id,\n        })),\n      },\n    })\n    .map(responses => responses.map((resp: any) => resp.body))\n    .map(bodies => bodies.map((b: MessageBody) => computeMessageBody(b)));\n  }\n  getTeamInfo(sharedThread: string): Observable<SharedTeamInfo> {\n    return jsonRequest({\n      method: 'GET',\n      route: `/v1/sharedThreads/${sharedThread}/team`,\n      disableCorsOptimization: true,\n    });\n  }\n  messageLink(id: string, message: string): Observable<string> {\n    return jsonRequest({\n      method: 'POST',\n      route: `/v1/sharedThreads/${id}/messages/${encodeURIComponent(message)}/shortLink`,\n    })\n    .map(response => response.url);\n  }\n\n  getAsanaTasks(sharedThread: string): Observable<AsanaTask[]> {\n    return jsonRequest({\n      method: 'GET',\n      route: `/v1/sharedThreads/${sharedThread}/asanaTasks`,\n      disableCorsOptimization: true,\n    })\n    .map(tasks => tasks.map(applyAsanaTaskDefaults));\n  }\n\n  createAsanaTask(\n    sharedThread: string, task: SharedThreadAsanaTaskCreateBody,\n  ): Observable<AsanaTask> {\n    return jsonRequest({\n      method: 'POST',\n      route: `/v1/sharedThreads/${sharedThread}/asanaTasks`,\n      body: task,\n    })\n    .map(t => applyAsanaTaskDefaults(t));\n  }\n\n  createActivity(\n    sharedThread: string,\n    type: SharedThreadActivityType,\n    user: string,\n    ttl?: number,\n  ): Observable<null> {\n    return blankRequest({\n      method: 'POST',\n      route: `/v1/sharedThreads/${sharedThread}/activity`,\n      disableCorsOptimization: true,\n      body: {\n        type,\n        user,\n        ttl,\n      },\n    });\n  }\n\n  listDrafts(\n    sharedThread: string,\n  ): Observable<Draft[]> {\n    return jsonRequest({\n      method: 'GET',\n      route: `/v1/sharedThreads/${sharedThread}/drafts`,\n      disableCorsOptimization: true,\n    })\n    .map(drafts => drafts.map((d: Draft) => defaultDraft(d)));\n  }\n\n  getDraft(\n    sharedThread: string,\n    draft: string,\n  ): Observable<Draft> {\n    return jsonRequest({\n      method: 'GET',\n      route: `/v1/sharedThreads/${sharedThread}/drafts/${draft}`,\n      disableCorsOptimization: true,\n    }).map((d: Draft) => defaultDraft(d));\n  }\n}\n\nexport function mockSharedThreadClient(): SharedThreadAPI {\n  return {\n    list: () => Observable.of([]),\n    create: () => Observable.of(createSharedThread()),\n    get: () => Observable.of(createSharedThread()),\n    update: meta => Observable.of(meta),\n    delete: meta => Observable.of(null),\n    fetchOriginal: () => Observable.of(createThread()),\n    getMessageBodies: () => Observable.of(createMessageBodies(createThread())),\n    getTeamInfo: () => Observable.of({\n      team: createTeam(),\n      members: [createTeamMember()],\n    }),\n    messageLink: (id: string, message: string) => Observable.of(id + message),\n    getAsanaTasks: (id: string) => Observable.of([createAsanaTask()]),\n    createAsanaTask: (id: string, body: SharedThreadAsanaTaskCreateBody) =>\n      Observable.of(createAsanaTask()),\n    createActivity: () => Observable.of(null),\n    listDrafts: (id: string) => Observable.of([createDraft('test')]),\n    getDraft: () => Observable.of(createDraft('test')),\n  };\n}\n"]}]}