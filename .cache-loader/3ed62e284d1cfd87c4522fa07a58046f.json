{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/api/drafts.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/api/drafts.ts","mtime":1675280253979},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/api/drafts.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/api/drafts.ts"],"names":[],"mappings":"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","sourcesContent":["import { Observable } from 'rxjs';\nimport moment from 'moment';\n\nimport { Draft, Attachment } from '@src/types';\nimport { jsonRequest, blankRequest } from './base';\nimport {\n  defaultDraft,\n  generateOptimisticSendMeta,\n} from '@src/lib/draft';\nimport { createDraft } from '@src/mocks/drafts';\nimport { createAttachment } from '@src/mocks/attachments';\nimport { CloudFileClient } from '@src/api/cloudFile';\nimport { DraftSendMeta, DraftSendOptimisticMeta } from '@src/ducks/drafts';\nimport { now } from '@src/lib/datetime';\n\ntype DraftAPISendMeta = Pick<DraftSendMeta, 'delay' | 'draft' | 'scheduled' >;\nexport interface DraftAPI {\n  get(id: string): Observable<Draft>;\n  list(from?: string): Observable<Draft[]>;\n  listIncr(to?: string): Observable<Draft[]>;\n  update(draft: Draft): Observable<Draft>;\n  create(draft: Draft): Observable<Draft>;\n  delete(draft: string): Observable<null>;\n  send(draft: DraftAPISendMeta, delay?: number): Observable<Draft>;\n  uploadAttachment(\n    draft: string,\n    attachment: string,\n    file: File,\n    inline: boolean,\n    cloud: boolean,\n  ): Observable<Attachment|number>;\n  uploadTemplateAttachment(draft: string, attachment: Attachment): Observable<Attachment>;\n  removeAttachment(draft: string, attachment: string): Observable<null>;\n  applyForwardAttachments(\n    draft: string,\n    thread: string,\n    message: string,\n    account: string,\n  ): Observable<Attachment[]>;\n  sendNow(draft: string): Observable<Draft>;\n  generateOptimistic(draft: DraftSendMeta, attachments: Attachment[]): DraftSendOptimisticMeta;\n}\n\nexport class DraftClient implements DraftAPI {\n  get(id: string): Observable<Draft> {\n    return jsonRequest({\n      method: 'GET',\n      route: `/v1/drafts/${encodeURIComponent(id)}`,\n    })\n    .map(draft => defaultDraft(draft));\n  }\n\n  list(from?: string): Observable<Draft[]> {\n    return jsonRequest({\n      method: 'GET',\n      route: from ? `/v1/drafts?from=${from}` : '/v1/drafts',\n    })\n    .map((drafts: Draft[]) => drafts.map(draft => defaultDraft(draft)));\n  }\n\n  listIncr(to?: string): Observable<Draft[]> {\n    return jsonRequest({\n      method: 'GET',\n      route: to ? `/v1/drafts?to=${to}` : '/v1/drafts',\n    })\n    .map((drafts: Draft[]) => drafts.map(draft => defaultDraft(draft)));\n  }\n\n  update(draft: Draft): Observable<Draft> {\n    return jsonRequest({\n      method: 'PATCH',\n      route: `/v1/drafts/${draft.id}`,\n      body: draft,\n    }).map(newDraft => defaultDraft(newDraft));\n  }\n\n  create(draft: Draft): Observable<Draft> {\n    return jsonRequest({\n      method: 'POST',\n      route: `/v1/drafts`,\n      body: draft,\n    }).map(newDraft => defaultDraft(newDraft));\n  }\n\n  delete(draft: string): Observable<null> {\n    return blankRequest({\n      method: 'DELETE',\n      route: `/v1/drafts/${draft}`,\n    });\n  }\n\n  send(meta: DraftAPISendMeta): Observable<Draft> {\n    interface Body {\n      delay?: number;\n      scheduled?: string;\n    }\n    const body: Body = {};\n    if (meta.delay !== undefined) {\n      body.delay = meta.delay;\n    }\n\n    if (meta.scheduled) {\n      body.scheduled = moment(meta.scheduled).toISOString();\n    }\n\n    return jsonRequest({\n      method: 'POST',\n      route: `/v2/drafts/${meta.draft.id}/send`,\n      body,\n    }).map(newDraft => defaultDraft(newDraft));\n  }\n\n  undoSend(draft: Draft): Observable<Draft> {\n    return jsonRequest({\n      method: 'POST',\n      route: `/v1/drafts/${draft.id}/cancelSend`,\n    }).map(retrieved => defaultDraft(retrieved));\n  }\n\n  uploadAttachment(\n    draft: string,\n    attachment: string,\n    file: File,\n    inline: boolean,\n    cloud: boolean,\n  ): Observable<Attachment|number> {\n    return new CloudFileClient().uploadWithProgress(file)\n      .flatMap((f) => {\n        if (typeof f === 'number') {\n          return Observable.of(f);\n        }\n\n        return jsonRequest({\n          method: 'POST',\n          route: `/v1/drafts/${draft}/attachments`,\n          body: {\n            id: attachment,\n            filename: file.name,\n            ...f,\n            inline,\n            cloud,\n          },\n        });\n      },\n    );\n  }\n\n  uploadTemplateAttachment(\n    draft: string,\n    attachment: Attachment,\n  ): Observable<Attachment> {\n    return jsonRequest({\n      method: 'POST',\n      route: `/v1/drafts/${draft}/attachments`,\n      body: attachment,\n    });\n  }\n\n  removeAttachment(draft: string, attachment: string): Observable<null> {\n    return blankRequest({\n      method: 'DELETE',\n      route: `/v1/drafts/${draft}/attachments/${attachment}`,\n    });\n  }\n\n  applyForwardAttachments(\n    draft: string,\n    thread: string,\n    message: string,\n    account: string,\n  ): Observable<Attachment[]> {\n    return jsonRequest({\n      method: 'POST',\n      route: `/v2/drafts/${draft}/attachments/append`,\n      body: ({ thread, message, account }),\n    });\n  }\n\n  sendNow(\n    draft: string,\n  ): Observable<Draft> {\n    return jsonRequest({\n      method: 'POST',\n      route: `/v1/drafts/${draft}/sendNow`,\n    }).map(d => defaultDraft(d));\n  }\n\n  generateOptimistic(\n    meta: DraftSendMeta,\n    attachments: Attachment[],\n  ): DraftSendOptimisticMeta {\n    return generateOptimisticSendMeta(meta, attachments);\n  }\n}\n\nexport function mockDraftClient(): DraftAPI {\n  return {\n    get: (id: string) => Observable.of(createDraft(id)),\n    list: (from?: string) => Observable.of([]),\n    listIncr: (to?: string) => Observable.of([]),\n    update: (draft: Draft) => Observable.of(draft),\n    create: (draft: Draft) => Observable.of(draft),\n    delete: (draft: string) => Observable.of(null),\n    send: (meta: DraftAPISendMeta) => Observable.of(meta.draft),\n    uploadAttachment: (\n      draft: string,\n      attachment: string,\n      file: File,\n      inline: boolean,\n      cloud: boolean,\n    ) => Observable.of(createAttachment()),\n    uploadTemplateAttachment: (\n      draft: string,\n      attachment: Attachment,\n    ) => Observable.of(attachment),\n    removeAttachment: (draft: string, attachment: string) => Observable.of(null),\n    applyForwardAttachments: (\n      draft: string,\n      thread: string,\n      message: string,\n      account: string,\n    ) => Observable.of([]),\n    sendNow: draft => Observable.of(createDraft()),\n    generateOptimistic: (m, a) => {\n      const optimistic = ({\n        ...generateOptimisticSendMeta(m, a),\n      });\n\n      return {\n        ...optimistic,\n        meta: {\n          ...optimistic.meta,\n          draft: {\n            ...optimistic.meta.draft,\n            cancelBy: now().toDate(),\n            cancelByTtl: 30000,\n          },\n        },\n      };\n    },\n  };\n}\n"]}]}