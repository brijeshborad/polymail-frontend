{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Security/Security.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Security/Security.tsx","mtime":1675280254109},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Security/Security.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Security/Security.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport NavigationHeader from '@src/routes/Settings/components/NavigationHeader';\nimport DropdownCell from '@src/routes/Settings/components/DropdownCell';\nimport ToggleCell from '@src/routes/Settings/components/ToggleCell';\nimport { Account, Me, TwoFactorAuthenticationStatus, TeamMembers, Team } from '@src/types';\nimport './Security.scss';\nimport Confirm, { Props as ConfirmProps } from '@src/components/Base/Confirm';\nimport PasswordConfirm, {\n  Props as PasswordConfirmProps,\n} from '@src/components/Base/PasswordConfirm/PasswordConfirm';\nimport PhoneNumberPopover from './components/PhoneNumberPopover/PhoneNumberPopover';\nimport { MeTfaSetMeta } from '@src/ducks/me';\nimport TfaCodePopover from './components/TfaCodePopover/TfaCodePopover';\nimport browserHistory from '@src/lib/browserHistory';\n\nexport interface StateProps {\n  accounts: Account[];\n  me?: Me;\n  tfaPasswordConfirmed?: boolean;\n  isMobile?: boolean;\n  collapsedMobile?: boolean;\n  isTeamAdmin?: boolean;\n  teamMembers?: TeamMembers;\n  team?: Team;\n}\n\nexport interface DispatchProps {\n  logoutAll: () => void;\n  resetPassword: (email: string) => void;\n  updateMe: (me: Me) => void;\n  setTfa: (meta: MeTfaSetMeta) => void;\n  unsetTfa: (password: string) => void;\n  validateTfaCode: (code: string) => void;\n  collapseLsb: (collapse: boolean) => void;\n  deleteMe: () => void;\n  setToast: (message: Error|null) => void;\n}\n\ninterface State {\n  password?: string;\n  confirmProps?: ConfirmProps;\n  passwordConfirmProps?: PasswordConfirmProps;\n  showPhoneNumberPopover: boolean;\n  showTfaCodePopover: boolean;\n  phoneNumber?: string;\n  confirmDeleteValue?: string;\n  isDeleting: boolean;\n}\n\nclass Security extends React.PureComponent<StateProps & DispatchProps, State> {\n  constructor() {\n    super();\n\n    this.state = {\n      showPhoneNumberPopover: false,\n      showTfaCodePopover: false,\n      isDeleting: false,\n    };\n  }\n\n  // TODO(SHIN): Handle case for entering bad phone number after incompleted 2fa flow.\n  // Case 1: Existing 2fa then bad password\n  // Case 2: Existing 2fa, changed phone, bad password\n  // Case 3: Existing 2fa, bad phone, right password\n  UNSAFE_componentWillReceiveProps(nextProps: StateProps & DispatchProps) {\n    if (!nextProps.me || !nextProps.me.tfa) {\n      return;\n    }\n\n    if (nextProps.me && nextProps.me.tfa &&\n      nextProps.me.tfa.status === TwoFactorAuthenticationStatus.Verified &&\n      this.state.showTfaCodePopover) {\n      this.setState({ showTfaCodePopover: false });\n    }\n\n    if (this.props.me && this.props.me.tfa &&\n      nextProps.me.tfa.phone === this.props.me.tfa.phone) {\n      return;\n    }\n\n    if (nextProps.me.tfa.phone &&\n      nextProps.me.tfa.status === TwoFactorAuthenticationStatus.Unverified) {\n      this.setState({ showTfaCodePopover: true });\n    }\n  }\n\n  handleUpdatedLoginEmailSelect = (value: string, index: number) => {\n    const { me, updateMe } = this.props;\n    if (!me) {\n      return;\n    }\n\n    const passwordConfirmProps: PasswordConfirmProps = {\n      title: 'Enter your password',\n      message: `To change email to ${value}, please enter your Polymail password`,\n      onContinue: (password: string) => {\n        this.setState({ passwordConfirmProps: undefined });\n        if (me) {\n          updateMe({\n            ...me,\n            email: value,\n            password,\n          });\n        }\n      },\n      onCancel: () => this.setState({ passwordConfirmProps: undefined }),\n    };\n\n    this.setState({ passwordConfirmProps });\n  }\n\n  handleTwoFactorAuthToggle = () => {\n    const { me, unsetTfa } = this.props;\n    if (!me) {\n      return;\n    }\n\n    if (me.tfa && me.tfa.status === TwoFactorAuthenticationStatus.Verified) {\n      const passwordConfirmProps: PasswordConfirmProps = {\n        title: 'Enter your password',\n        message: `To disable two factor authentication, please enter your Polymail password.`,\n        onContinue: (password: string) => {\n          unsetTfa(password);\n          this.setState({\n            password,\n            passwordConfirmProps: undefined,\n          });\n        },\n        continueCopy: 'Disable',\n        onCancel: () => this.setState({ passwordConfirmProps: undefined }),\n      };\n\n      this.setState({ passwordConfirmProps });\n    } else {\n      this.setState({ showPhoneNumberPopover: true });\n    }\n  }\n\n  accountEmails = () => {\n    const { me, accounts } = this.props;\n    const emails = accounts.map(account => account.email);\n    if (me && emails.indexOf(me.email) === -1) {\n      emails.push(me.email);\n    }\n    return emails;\n  }\n\n  handleChangePassword = (e: React.MouseEvent<HTMLElement>) => {\n    const { me, resetPassword } = this.props;\n    if (!me) {\n      return;\n    }\n\n    const confirmProps: ConfirmProps = {\n      title: 'Resetting Password',\n      message: `A link to reset your password will be sent to ${me.email}`,\n      confirmCopy: 'Send Link',\n      onConfirm: () => {\n        this.setState({ confirmProps: undefined });\n        if (me) {\n          resetPassword(me.email);\n        }\n      },\n      onCancel: () => this.setState({ confirmProps: undefined }),\n    };\n\n    this.setState({ confirmProps });\n  }\n\n  handlePhoneNumberPopoverCancel = () => {\n    this.setState({ showPhoneNumberPopover: false });\n  }\n\n  handlePhoneNumberPopoverContinue = (phone: string) => {\n    const { setTfa } = this.props;\n\n    const passwordConfirmProps: PasswordConfirmProps = {\n      title: 'Enter your password',\n      message: `To enable two factor authentication, please enter your Polymail password.`,\n      onContinue: (password: string) => {\n        setTfa({ phone, password });\n        this.setState({\n          passwordConfirmProps: undefined,\n          showTfaCodePopover: true,\n          phoneNumber: phone,\n        });\n      },\n      onCancel: () => this.setState({ passwordConfirmProps: undefined }),\n    };\n\n    this.setState({ passwordConfirmProps, showPhoneNumberPopover: false });\n  }\n\n  handleTfaCodePopoverCancel = () => {\n    this.setState({ showTfaCodePopover: false });\n  }\n\n  handleTfaCodePopoverContinue = (code: string) => {\n    const { validateTfaCode } = this.props;\n\n    validateTfaCode(code);\n  }\n\n  handleTfaCodePopoverResend = () => {\n    const { setTfa } = this.props;\n    const { phoneNumber, password } = this.state;\n\n    // Try recreating\n    if (!!phoneNumber && !!password) {\n      setTfa({ phone: phoneNumber, password });\n      return;\n    }\n\n    // Otherwise go back to phoneNumber send\n    if (!!phoneNumber) {\n      this.setState({ showTfaCodePopover: false });\n      this.handlePhoneNumberPopoverContinue(phoneNumber);\n      return;\n    }\n\n    // Otherwise go back to phone number popover\n    this.setState({\n      showTfaCodePopover: false,\n      showPhoneNumberPopover: true,\n    });\n  }\n\n  handleTfaCodePopoverChangePhone = () => {\n    this.setState({\n      showPhoneNumberPopover: true,\n      showTfaCodePopover: false,\n    });\n  }\n\n  handleDeleteInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ confirmDeleteValue: e.currentTarget.value });\n  }\n\n  handleDeleteConfirm = () => {\n    const { deleteMe, setToast } = this.props;\n\n    if (this.state.confirmDeleteValue && this.state.confirmDeleteValue.toUpperCase() === 'DELETE') {\n      deleteMe();\n      setToast(new Error('Deleting Account'));\n      this.setState({ confirmProps: undefined });\n    } else {\n      setToast(new Error('Invalid confirmation code'));\n    }\n  }\n\n  handleDelete = () => {\n    const { isTeamAdmin, teamMembers, team } = this.props;\n\n    let message: string;\n    let confirmProps: ConfirmProps;\n\n    const handleCancel = () => this.setState({ confirmProps: undefined });\n\n    const handleContinue = () => {\n      message = 'To irreversibly delete your Polymail account and all'\n        + ' associated data and cancel your subscription, type'\n        + ' DELETE below';\n      confirmProps = {\n        title: 'Confirm Delete Account',\n        message,\n        confirmCopy: 'Confirm',\n        onConfirm: this.handleDeleteConfirm,\n        onCancel: handleCancel,\n      };\n\n      this.setState({ confirmProps, isDeleting: true });\n    };\n\n    // Only will be admin even if he has no team members\n    // so we must check if he has team members or not to proceed\n    const hasNoTeamMembers = teamMembers && Object.values(teamMembers).length <= 1;\n\n    // user can only delete his account if they are not the team admin\n    const onlyMe = isTeamAdmin && hasNoTeamMembers;\n    // or if there's other admins in the team\n    const severalAdmins = team && team.admins.length > 1;\n\n    if (onlyMe || severalAdmins || !isTeamAdmin) {\n      message = 'This will completely and irreversibly delete your '\n      + 'account and all your Polymail data, such as activity '\n      + 'tracking, scheduled emails, etc., and cancel your '\n      + 'subscription. Would you like to continue?';\n      confirmProps = {\n        title: 'Delete Polymail Account',\n        message,\n        confirmCopy: 'Continue and Delete',\n        extraClassName: 'delete-account',\n        onConfirm: handleContinue,\n        onCancel: handleCancel,\n      };\n    } else {\n      message = 'Before you delete your Polymail account, assign'\n      + ' another team member as an Admin or remove all other'\n      + ' members from your team.';\n      confirmProps = {\n        title: 'Assign a Team Admin to Delete',\n        message,\n        confirmCopy: 'View Team',\n        onConfirm: () => browserHistory.push('/settings/team'),\n        onCancel: handleCancel,\n      };\n    }\n\n    this.setState({ confirmProps, isDeleting: false });\n  }\n\n  render() {\n    const accountEmails = this.accountEmails();\n    const { me, logoutAll, tfaPasswordConfirmed } = this.props;\n    const {\n      confirmProps,\n      passwordConfirmProps,\n      showPhoneNumberPopover,\n      showTfaCodePopover,\n      phoneNumber,\n      isDeleting,\n    } = this.state;\n\n    if (!me) {\n      return null;\n    }\n\n    const {\n      email,\n      tfa,\n    } = me;\n\n    const deleteInputProps = {\n      value: this.state.confirmDeleteValue,\n      placeholder: 'Type DELETE to continue',\n      onChange: this.handleDeleteInputChange,\n    };\n\n    let tfaSubtitle = 'Requires you to enter both your password and a ' +\n      'code sent to your phone in order to sign in.';\n\n    if (tfa && !!tfa.phone && tfa.status === TwoFactorAuthenticationStatus.Verified) {\n      tfaSubtitle = 'A Two-factor verification code will be sent to your mobile number ending in '\n      + tfa.phone.slice(-4) + ' when logging in';\n    }\n\n    return (\n      <div className=\"security\">\n        {confirmProps &&\n          <Confirm\n            {...confirmProps}\n            input={isDeleting ? deleteInputProps : undefined}\n          />\n        }\n        {passwordConfirmProps && <PasswordConfirm {...passwordConfirmProps} />}\n        {showPhoneNumberPopover && <PhoneNumberPopover\n          onCancel={this.handlePhoneNumberPopoverCancel}\n          onContinue={this.handlePhoneNumberPopoverContinue}\n        />}\n        {showTfaCodePopover && !!phoneNumber && !!tfa && tfaPasswordConfirmed &&\n          <TfaCodePopover\n            onCancel={this.handleTfaCodePopoverCancel}\n            onContinue={this.handleTfaCodePopoverContinue}\n            onResend={this.handleTfaCodePopoverResend}\n            onChangePhone={this.handleTfaCodePopoverChangePhone}\n            phone={phoneNumber}\n          />\n        }\n        <NavigationHeader\n          title=\"Security\"\n          isMobile={this.props.isMobile}\n          collapsedMobile={this.props.collapsedMobile}\n          collapseLsb={this.props.collapseLsb}\n        />\n        <div className=\"main\">\n          <ToggleCell\n            title=\"Two-factor authentication\"\n            subtitle={tfaSubtitle}\n            onToggle={this.handleTwoFactorAuthToggle}\n            on={!!tfa && tfa.status === TwoFactorAuthenticationStatus.Verified}\n          />\n          <DropdownCell\n            title=\"Email address\"\n            subtitle=\"The email address you sign in to your Polymail account with.\"\n            onSelect={this.handleUpdatedLoginEmailSelect}\n            values={accountEmails}\n            startIndex={accountEmails.indexOf(email)}\n          />\n          <div className=\"button-cell\">\n            <div className=\"left-column\">\n              <h4 className=\"title\">Change password</h4>\n              <h5 className=\"subtitle\">\n                Change the password you sign in to your Polymail account with.\n              </h5>\n            </div>\n            <button className=\"action change-password\" onClick={this.handleChangePassword}>\n              Change password\n            </button>\n          </div>\n          <div className=\"button-cell\">\n            <div className=\"left-column\">\n              <h4 className=\"title\">Sign out of Polymail on all devices</h4>\n              <h5 className=\"subtitle\">\n                Sign out from Polymail on all devices you’re logged in with.\n              </h5>\n            </div>\n            <button className=\"action sign-out\" onClick={logoutAll}>\n              Sign out of all devices\n            </button>\n          </div>\n          <div className=\"button-cell delete-account\">\n            <div className=\"left-column\">\n              <h4 className=\"title\">Delete Polymail Account</h4>\n              <h5 className=\"subtitle\">\n                Irreversibly delete all of your Polymail data, emails, templates, etc.\n              </h5>\n            </div>\n            <button className=\"action delete-account\" onClick={this.handleDelete}>\n              Delete Polymail Account\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Security;\n"]}]}