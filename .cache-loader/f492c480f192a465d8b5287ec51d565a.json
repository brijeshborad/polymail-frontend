{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/LeftSidebar/components/MailTab/components/Section/CollapsedNavigationSection/CollapsedNavigationSection.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/LeftSidebar/components/MailTab/components/Section/CollapsedNavigationSection/CollapsedNavigationSection.tsx","mtime":1675280254018},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/LeftSidebar/components/MailTab/components/Section/CollapsedNavigationSection/CollapsedNavigationSection.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/LeftSidebar/components/MailTab/components/Section/CollapsedNavigationSection/CollapsedNavigationSection.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport { compact, cloneDeep } from 'lodash';\nimport ListMenu from '../Item/ListMenu';\nimport { Tab, Account, List, ListStatus } from '@src/types';\n\nimport { descendants, recursivelyRenamedLists } from '@src/lib/mailbox';\nimport { Props as ConfirmProps } from '@src/components/Base/Confirm';\nimport './CollapsedNavigationSection.scss';\nimport Search from '@src/components/Icons/Search.svg';\nimport { CollapsedSectionItem } from '../Item/CollapsedSectionItem/CollapsedSectionItem';\n\nexport interface Props {\n  title: string;\n  selectedTab: string;\n  tabs: Tab[];\n  selectedAccount: Account;\n}\n\nexport interface StateProps {\n  collapsed: boolean;\n}\n\nexport interface DispatchProps {\n  updateList: (list: List) => void;\n  deleteList: (list: List) => void;\n  createList: (name: string) => void;\n  collapseLists: (collapse: boolean) => void;\n  showNavigationCenter: () => void;\n  setToast: (msg: Error) => void;\n}\n\n// Internal state for account/title\ninterface State {\n  expandedKeys: { [id: string]: boolean; };\n  confirmProps?: ConfirmProps;\n  showMenu?: boolean;\n}\n\n// LeftSidebar Section\nclass CollapsedNavigationSection extends React.PureComponent<\n  Props & DispatchProps & StateProps, State\n> {\n  menu: ListMenu;\n\n  constructor() {\n    super();\n\n    this.state = { expandedKeys: {} };\n  }\n\n  UNSAFE_componentWillMount() {\n    const { tabs } = this.props;\n    const expandedKeys = {};\n\n    tabs.forEach((tab) => {\n      // Set expandable keys\n      if (tab.list && tab.listLevel === 0) {\n        expandedKeys[tab.list.id] = false;\n      }\n    });\n\n    this.setState({\n      expandedKeys,\n    });\n  }\n\n  handleRef = (menu: ListMenu) => {\n    this.menu = menu;\n  }\n\n  // Identify which tabs to display\n  displayedTabs = (tabs: Tab[]) => {\n    const { expandedKeys } = this.state;\n\n    return tabs.filter((tab) => {\n      if (tab.listLevel === 0) {\n        return true;\n      }\n\n      if (tab.parentList && expandedKeys[tab.parentList]) {\n        return true;\n      }\n\n      return false;\n\n    });\n  }\n\n  toggleItemExpansion = (key: string) => {\n    const { tabs } = this.props;\n    const expandedKeys = cloneDeep(this.state.expandedKeys);\n    const expanded = !expandedKeys[key];\n\n    // When closing, close all expanded lists\n    if (!expanded) {\n      const lists = compact(tabs.map(tab => tab.list));\n      const matchedTab = tabs.filter(tab => tab.list && tab.list.id === key)[0];\n      const descendantLists = matchedTab && matchedTab.list && descendants(matchedTab.list, lists);\n      if (descendantLists && descendantLists.length) {\n        descendantLists.forEach((list) => {\n          if (expandedKeys[list.id]) {\n            expandedKeys[list.id] = false;\n          }\n        });\n      }\n    }\n    expandedKeys[key] = !expandedKeys[key];\n    this.setState({ expandedKeys });\n  }\n\n  handleCollapse = () => {\n    const { collapseLists, collapsed } = this.props;\n\n    collapseLists(!collapsed);\n  }\n\n  // Handles updating list and all descendant lists\n  // Handle grandson name updates\n  handleListUpdate = (oldList: List, newName: string) => {\n    const { updateList, setToast } = this.props;\n\n    // Do not allow if list status is not ok\n    if (oldList.status !== ListStatus.Ok) {\n      setToast(new Error('This label is currently updating, please wait and try again later!'));\n      return;\n    }\n\n    // Grab matched tabs\n    const tabs = cloneDeep(this.props.tabs);\n\n    const updatedLists = recursivelyRenamedLists(oldList, newName, tabs);\n\n    // Do not allow if list status is not ok\n    if (updatedLists && updatedLists.filter(l => l.status !== ListStatus.Ok).length) {\n      setToast(new Error('This label is currently updating, please wait and try again later!'));\n      return;\n    }\n\n    if (updatedLists && updatedLists.length) {\n      updatedLists.forEach(l => updateList(l));\n    }\n  }\n\n  handleListCreate = (name: string) => {\n    const { createList } = this.props;\n    if (createList) {\n      createList(name);\n    }\n  }\n\n  handleListDelete = (list: List) => {\n    const { deleteList, setToast } = this.props;\n\n    const confirmProps: ConfirmProps = {\n      title: 'Are you sure you want to delete this Label?',\n      message: 'This label and all its sublabels will be removed. Any '\n        + 'emails contained in these labels will be moved into Archive. '\n        + 'This cannot be undone',\n      confirmCopy: 'Delete',\n      onConfirm: () => {\n        this.setState({ confirmProps: undefined });\n\n        // Grab matched tabs\n        const tabs = cloneDeep(this.props.tabs);\n        const matchedTab = tabs.filter(t => t.list && t.list.id === list.id)[0];\n        if (!matchedTab) {\n          return;\n        }\n\n        // Grab any descendant lists\n        const listLevel = matchedTab.listLevel || 0;\n        const lists = compact(tabs\n          .filter(t => t && t.listLevel && t.listLevel > listLevel || false)\n          .map(t => t && t.list),\n        );\n\n        // Grab matched list\n        const matched = tabs.map(t => t.list).filter(l => l && l.id === list.id)[0];\n        if (!matched) {\n          return;\n        }\n\n        // Gather descendants and call deletes for all lists\n        const descendantLists = descendants(matched, lists);\n        const deleteLists = [...descendantLists, list];\n\n        // Do not allow if list status is not ok\n        if (deleteLists.filter(l => l.status !== ListStatus.Ok).length) {\n          setToast(new Error('This label is currently updating, please wait and try again later!'));\n          return;\n        }\n\n        if (deleteList) {\n          deleteLists.forEach(l => deleteList(l));\n        }\n      },\n      onCancel: () => this.setState({ confirmProps: undefined }),\n    };\n\n    this.setState({ confirmProps });\n  }\n\n  handleListMenu = (e: React.MouseEvent<HTMLElement>) => {\n    e.stopPropagation();\n    e.preventDefault();\n    this.setState(\n      { showMenu: true },\n      () => {\n        this.menu.toggle();\n      },\n    );\n  }\n\n  handleMenuHide = () => {\n    this.setState({ showMenu: false });\n  }\n\n  handleNavigationClick = () => {\n    const { showNavigationCenter } = this.props;\n    showNavigationCenter();\n  }\n\n  render() {\n    const { collapsed } = this.props;\n\n    return (\n      <div className={classnames('collapsed-navigation-section', { collapsed })}>\n        {\n          <CollapsedSectionItem\n            key={'navigation'}\n            name={'Navigation'}\n            count={0}\n            className={'navigation'}\n            icon={<Search />}\n            selected={false}\n            onClick={this.handleNavigationClick}\n            isOnboarding={false}\n            notificationCount={false}\n            hotkey={'g'}\n          />\n        }\n      </div>\n    );\n  }\n}\n\nexport default CollapsedNavigationSection;\n"]}]}