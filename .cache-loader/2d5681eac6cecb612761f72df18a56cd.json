{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/RightSidebar/components/LinkExtractor/index.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/RightSidebar/components/LinkExtractor/index.ts","mtime":1675280254031},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IExpbmtFeHRyYWN0b3IgZnJvbSAnLi9MaW5rRXh0cmFjdG9yJzsKaW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4JzsKaW1wb3J0IHsgcmlnaHRTaWRlYmFyTGlua3NTZXQgfSBmcm9tICdAc3JjL2R1Y2tzL3JpZ2h0U2lkZWJhcic7CmltcG9ydCB7IHNlbGVjdE1lc3NhZ2VCb2RpZXMgfSBmcm9tICdAc3JjL2R1Y2tzL21lc3NhZ2VCb2RpZXMnOwp2YXIgbWFwU3RhdGVUb1Byb3BzID0gZnVuY3Rpb24gKHN0YXRlKSB7CiAgICB2YXIgX2E7CiAgICByZXR1cm4gewogICAgICAgIGxpbmtzOiBzdGF0ZS5yaWdodFNpZGViYXIubGlua3MgfHwgW10sCiAgICAgICAgc2VsZWN0ZWRUaHJlYWQ6IHN0YXRlLnNlbGVjdGVkVGhyZWFkLAogICAgICAgIGhhc0JvZGllczogISEoKF9hID0gc2VsZWN0TWVzc2FnZUJvZGllcyhzdGF0ZSwgc3RhdGUuc2VsZWN0ZWRUaHJlYWQgJiYgc3RhdGUuc2VsZWN0ZWRUaHJlYWQuaWQgfHwgJycpKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EubGVuZ3RoKSwKICAgIH07Cn07CnZhciBtYXBEaXNwYXRjaFRvUHJvcHMgPSBmdW5jdGlvbiAoZGlzcGF0Y2gpIHsgcmV0dXJuICh7CiAgICBleHRyYWN0TGlua3M6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGRpc3BhdGNoKHJpZ2h0U2lkZWJhckxpbmtzU2V0KG51bGwpKTsgfSwKfSk7IH07CmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QobWFwU3RhdGVUb1Byb3BzLCBtYXBEaXNwYXRjaFRvUHJvcHMpKExpbmtFeHRyYWN0b3IpOwo="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/RightSidebar/components/LinkExtractor/index.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/RightSidebar/components/LinkExtractor/index.ts"],"names":[],"mappings":"AAAA,OAAO,aAAuC,MAAM,iBAAiB,CAAC;AAEtE,OAAO,EAAE,OAAO,EAAY,MAAM,aAAa,CAAC;AAEhD,OAAO,EAAE,oBAAoB,EAAE,MAAM,yBAAyB,CAAC;AAC/D,OAAO,EAAE,mBAAmB,EAAE,MAAM,0BAA0B,CAAC;AAE/D,IAAM,eAAe,GAAG,UAAC,KAAiB;;IACxC,OAAO;QACL,KAAK,EAAE,KAAK,CAAC,YAAY,CAAC,KAAK,IAAI,EAAE;QACrC,cAAc,EAAE,KAAK,CAAC,cAAc;QACpC,SAAS,EAAE,CAAC,QAAC,mBAAmB,CAC9B,KAAK,EACL,KAAK,CAAC,cAAc,IAAI,KAAK,CAAC,cAAc,CAAC,EAAE,IAAI,EAAE,CACtD,0CAAE,MAAM,CAAA;KACV,CAAC;AACJ,CAAC,CAAC;AAEF,IAAM,kBAAkB,GAAG,UAAC,QAA8B,IAAoB,OAAA,CAAC;IAC7E,YAAY,EAAE,cAAM,OAAA,QAAQ,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,EAApC,CAAoC;CACzD,CAAC,EAF4E,CAE5E,CAAC;AAEH,eAAe,OAAO,CAAuB,eAAe,EAAE,kBAAkB,CAAC,CAAC,aAAa,CAAC,CAAC","sourcesContent":["import LinkExtractor, { Props, DispatchProps } from './LinkExtractor';\n\nimport { connect, Dispatch } from 'react-redux';\nimport { StoreState } from '@src/types';\nimport { rightSidebarLinksSet } from '@src/ducks/rightSidebar';\nimport { selectMessageBodies } from '@src/ducks/messageBodies';\n\nconst mapStateToProps = (state: StoreState): Props => {\n  return {\n    links: state.rightSidebar.links || [],\n    selectedThread: state.selectedThread,\n    hasBodies: !!selectMessageBodies(\n      state,\n      state.selectedThread && state.selectedThread.id || '',\n    )?.length,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<StoreState>): DispatchProps => ({\n  extractLinks: () => dispatch(rightSidebarLinksSet(null)),\n});\n\nexport default connect<Props, DispatchProps>(mapStateToProps, mapDispatchToProps)(LinkExtractor);\n"]}]}