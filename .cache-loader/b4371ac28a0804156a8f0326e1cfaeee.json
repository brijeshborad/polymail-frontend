{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/comments.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/comments.ts","mtime":1675280254055},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnOwppbXBvcnQgeyBBY3Rpb25TdGF0dXMgfSBmcm9tICdAc3JjL3R5cGVzL2luZGV4JzsKaW1wb3J0IHsgQ09NTUVOVF9DUkVBVEUsIGNvbW1lbnRDcmVhdGUsIENPTU1FTlRfTElTVCwgY29tbWVudExpc3QsIENPTU1FTlRfUkVBRCwgfSBmcm9tICdAc3JjL2R1Y2tzL2NvbW1lbnRzJzsKaW1wb3J0IHsgcmVjb3JkRXZlbnQsIFVzZXJFdmVudHMgfSBmcm9tICdAc3JjL2xpYi9hbmFseXRpY3MnOwp2YXIgY3JlYXRlQ29tbWVudEVwaWMgPSBmdW5jdGlvbiAoYWN0aW9uJCwgc3RvcmUsIGRlcHMpIHsKICAgIHJldHVybiBhY3Rpb24kLm9mVHlwZShDT01NRU5UX0NSRUFURSkKICAgICAgICAuZmlsdGVyKGZ1bmN0aW9uIChhY3Rpb24pIHsgcmV0dXJuIGFjdGlvbi5zdGF0dXMgPT09IEFjdGlvblN0YXR1cy5TdGFydDsgfSkKICAgICAgICAuZmxhdE1hcChmdW5jdGlvbiAoYWN0aW9uKSB7CiAgICAgICAgcmV0dXJuIGRlcHMuY29tbWVudHMuY3JlYXRlKGFjdGlvbi5tZXRhKQogICAgICAgICAgICAuZG8oZnVuY3Rpb24gKGNvbW1lbnQpIHsgcmV0dXJuIHJlY29yZEV2ZW50KFVzZXJFdmVudHMuQ29tbWVudFBvc3RlZCwgewogICAgICAgICAgICB0ZWFtOiBjb21tZW50LnRlYW0sCiAgICAgICAgICAgIHNoYXJlZFRocmVhZDogY29tbWVudC5zaGFyZWRUaHJlYWQsCiAgICAgICAgICAgIGNvbW1lbnQ6IGNvbW1lbnQuaWQsCiAgICAgICAgfSk7IH0pCiAgICAgICAgICAgIC5mbGF0TWFwKGZ1bmN0aW9uIChjb21tZW50KSB7CiAgICAgICAgICAgIHJldHVybiBPYnNlcnZhYmxlLmNvbmNhdChPYnNlcnZhYmxlLm9mKGNvbW1lbnRDcmVhdGUoYWN0aW9uLm1ldGEsIGNvbW1lbnQpKSwgT2JzZXJ2YWJsZS5vZihjb21tZW50TGlzdChjb21tZW50LnNoYXJlZFRocmVhZCkpKTsKICAgICAgICB9KQogICAgICAgICAgICAuY2F0Y2goZnVuY3Rpb24gKGVycikgeyByZXR1cm4gT2JzZXJ2YWJsZS5vZihjb21tZW50Q3JlYXRlKGFjdGlvbi5tZXRhLCBlcnIpKTsgfSk7CiAgICB9KTsKfTsKdmFyIGxpc3RDb21tZW50RXBpYyA9IGZ1bmN0aW9uIChhY3Rpb24kLCBzdG9yZSwgZGVwcykgewogICAgcmV0dXJuIGFjdGlvbiQub2ZUeXBlKENPTU1FTlRfTElTVCkKICAgICAgICAuZmlsdGVyKGZ1bmN0aW9uIChhY3Rpb24pIHsgcmV0dXJuIGFjdGlvbi5zdGF0dXMgPT09IEFjdGlvblN0YXR1cy5TdGFydDsgfSkKICAgICAgICAuZmxhdE1hcChmdW5jdGlvbiAoYWN0aW9uKSB7CiAgICAgICAgcmV0dXJuIGRlcHMuY29tbWVudHMubGlzdChhY3Rpb24ubWV0YSkKICAgICAgICAgICAgLm1hcChmdW5jdGlvbiAoY29tbWVudHMpIHsgcmV0dXJuIGNvbW1lbnRMaXN0KGFjdGlvbi5tZXRhLCBjb21tZW50cyk7IH0pCiAgICAgICAgICAgIC5jYXRjaChmdW5jdGlvbiAoZXJyKSB7IHJldHVybiBPYnNlcnZhYmxlLm9mKGNvbW1lbnRMaXN0KGFjdGlvbi5tZXRhLCBlcnIpKTsgfSk7CiAgICB9KTsKfTsKdmFyIHJlYWRDb21tZW50RXBpYyA9IGZ1bmN0aW9uIChhY3Rpb24kLCBzdG9yZSwgZGVwcykgewogICAgcmV0dXJuIGFjdGlvbiQub2ZUeXBlKENPTU1FTlRfUkVBRCkKICAgICAgICAuZmlsdGVyKGZ1bmN0aW9uIChhY3Rpb24pIHsgcmV0dXJuIGFjdGlvbi5zdGF0dXMgPT09IEFjdGlvblN0YXR1cy5TdGFydDsgfSkKICAgICAgICAuZmxhdE1hcChmdW5jdGlvbiAoYWN0aW9uKSB7CiAgICAgICAgcmV0dXJuIGRlcHMuY29tbWVudHMudXBkYXRlKGFjdGlvbi5tZXRhLnNoYXJlZFRocmVhZCwgYWN0aW9uLm1ldGEuY29tbWVudCwgYWN0aW9uLm1ldGEucmVhZCkKICAgICAgICAgICAgLm1hcChmdW5jdGlvbiAoKSB7IHJldHVybiBjb21tZW50TGlzdChhY3Rpb24ubWV0YS5zaGFyZWRUaHJlYWQpOyB9KTsKICAgIH0pOwp9OwpleHBvcnQgZGVmYXVsdCBbCiAgICBjcmVhdGVDb21tZW50RXBpYywKICAgIGxpc3RDb21tZW50RXBpYywKICAgIHJlYWRDb21tZW50RXBpYywKXTsK"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/comments.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/comments.ts"],"names":[],"mappings":"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","sourcesContent":["import { Observable } from 'rxjs';\nimport { Epic } from 'redux-observable';\nimport { StoreState, Action, ActionStatus } from '@src/types/index';\nimport { Comment } from '@src/types/sharedThreads';\nimport { Deps } from '@src/lib/epic';\nimport {\n  CommentCreateMeta,\n  COMMENT_CREATE,\n  commentCreate,\n  COMMENT_LIST,\n  commentList,\n  CommentReadMeta,\n  COMMENT_READ,\n} from '@src/ducks/comments';\nimport { recordEvent, UserEvents } from '@src/lib/analytics';\n\nconst createCommentEpic: Epic<Action<CommentCreateMeta|string, Comment|Comment[]>, StoreState, Deps>\n  = (action$, store, deps) =>\n    action$.ofType(COMMENT_CREATE)\n      .filter(action => action.status === ActionStatus.Start)\n      .flatMap((action: Action<CommentCreateMeta, Comment>) =>\n        deps.comments.create(action.meta)\n          .do(comment => recordEvent(UserEvents.CommentPosted, {\n            team: comment.team,\n            sharedThread: comment.sharedThread,\n            comment: comment.id,\n          }))\n          .flatMap(comment =>\n            Observable.concat(\n              Observable.of(commentCreate(action.meta, comment)),\n              Observable.of(commentList(comment.sharedThread)),\n            ),\n          )\n          .catch(err => Observable.of(commentCreate(action.meta, err))),\n      );\n\nconst listCommentEpic: Epic<Action<string, Comment[]>, StoreState, Deps>\n  = (action$, store, deps) =>\n    action$.ofType(COMMENT_LIST)\n      .filter(action => action.status === ActionStatus.Start)\n      .flatMap(action =>\n        deps.comments.list(action.meta)\n          .map(comments => commentList(action.meta, comments))\n          .catch(err => Observable.of(commentList(action.meta, err))),\n      );\n\nconst readCommentEpic:\n  Epic<Action<CommentReadMeta|string, null|Comment[]>, StoreState, Deps>\n  = (action$, store, deps) =>\n    action$.ofType(COMMENT_READ)\n      .filter(action => action.status === ActionStatus.Start)\n      .flatMap((action: Action<CommentReadMeta, null>) =>\n        deps.comments.update(action.meta.sharedThread, action.meta.comment, action.meta.read)\n          .map(() => commentList(action.meta.sharedThread)),\n      );\n\nexport default [\n  createCommentEpic,\n  listCommentEpic,\n  readCommentEpic,\n];\n"]}]}