{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/commit.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/commit.ts","mtime":1675280254062},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkgewogICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHsKICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHsKICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTsKICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKQogICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07CiAgICAgICAgfQogICAgICAgIHJldHVybiB0OwogICAgfTsKICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9OwppbXBvcnQgeyBUaHJlYWRCb3gsIENvbW1pdFN0YXR1cywgSGlzdG9yeU9iamVjdCwgRHJhZnRTdGF0dXMsIH0gZnJvbSAnQHNyYy90eXBlcyc7CmltcG9ydCB7IHRha2VSaWdodCB9IGZyb20gJ2xvZGFzaCc7CmltcG9ydCBDYWNoZSwgeyBTdG9yZXMgfSBmcm9tICdAc3JjL2xpYi9kYic7CmltcG9ydCB7IG5vdyB9IGZyb20gJy4vZGF0ZXRpbWUnOwpleHBvcnQgdmFyIGlzQW5pbWF0ZWQgPSBmdW5jdGlvbiAoY29tbWl0KSB7CiAgICB2YXIgX2E7CiAgICBpZiAoISEoKF9hID0gY29tbWl0LnBheWxvYWQpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5ib3gpKSB7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CiAgICByZXR1cm4gZmFsc2U7Cn07CmV4cG9ydCB2YXIgc3VibWl0Q29tbWl0ID0gZnVuY3Rpb24gKGNvbW1pdCkgewogICAgcmV0dXJuIENhY2hlLnNhdmUoU3RvcmVzLkNvbW1pdHMsIGNvbW1pdCk7Cn07CmV4cG9ydCB2YXIgY3JlYXRlVGhyZWFkQ29tbWl0ID0gZnVuY3Rpb24gKHRocmVhZCwgbWV0YSkgewogICAgdmFyIGJveCA9IG1ldGEuYm94LCB3aGVuID0gbWV0YS53aGVuLCByZWFkID0gbWV0YS5yZWFkLCBzdGFycmVkID0gbWV0YS5zdGFycmVkLCBsYWJlbCA9IG1ldGEubGFiZWwsIHdhaXRpbmcgPSBtZXRhLndhaXRpbmcsIG11dGVkID0gbWV0YS5tdXRlZDsKICAgIGlmIChsYWJlbCkgewogICAgICAgIHJldHVybiB0aHJlYWRMaXN0Q29tbWl0KHRocmVhZCwgbGFiZWwpOwogICAgfQogICAgaWYgKGJveCkgewogICAgICAgIGlmICh0aHJlYWQuYm94ID09PSBUaHJlYWRCb3guVHJhc2ggJiYgYm94ID09PSBUaHJlYWRCb3guVHJhc2gpIHsKICAgICAgICAgICAgcmV0dXJuIHRocmVhZERlbGV0ZUNvbW1pdCh0aHJlYWQuaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm4gdGhyZWFkTW92ZUNvbW1pdCh0aHJlYWQsIGJveCk7CiAgICB9CiAgICBpZiAod2hlbikgewogICAgICAgIHJldHVybiB0aHJlYWRMYXRlckNvbW1pdCh0aHJlYWQsIHdoZW4pOwogICAgfQogICAgaWYgKHJlYWQgIT09IHVuZGVmaW5lZCkgewogICAgICAgIHJldHVybiB0aHJlYWRSZWFkQ29tbWl0KHRocmVhZCwgcmVhZCk7CiAgICB9CiAgICBpZiAoc3RhcnJlZCAhPT0gdW5kZWZpbmVkKSB7CiAgICAgICAgcmV0dXJuIHRocmVhZFN0YXJDb21taXQodGhyZWFkLCBzdGFycmVkKTsKICAgIH0KICAgIGlmICh3YWl0aW5nICE9PSB1bmRlZmluZWQpIHsKICAgICAgICByZXR1cm4gdGhyZWFkV2FpdGluZ0NvbW1pdCh0aHJlYWQsIHdhaXRpbmcpOwogICAgfQogICAgaWYgKG11dGVkICE9PSB1bmRlZmluZWQpIHsKICAgICAgICByZXR1cm4gdGhyZWFkTXV0ZUNvbW1pdCh0aHJlYWQsIG11dGVkKTsKICAgIH0KICAgIHJldHVybjsKfTsKZXhwb3J0IHZhciB0aHJlYWRNdXRlQ29tbWl0ID0gZnVuY3Rpb24gKHRocmVhZCwgbXV0ZWQpIHsKICAgIHJldHVybiB0aHJlYWRVcGRhdGVDb21taXQoeyBpZDogdGhyZWFkLmlkLCBtdXRlZDogbXV0ZWQgfSwgZmFsc2UsIHRocmVhZC5hY2NvdW50KTsKfTsKZXhwb3J0IHZhciB0aHJlYWRMaXN0Q29tbWl0ID0gZnVuY3Rpb24gKHRocmVhZCwgbGFiZWxJZCkgewogICAgcmV0dXJuIHRocmVhZFVwZGF0ZUNvbW1pdCh7IGlkOiB0aHJlYWQuaWQsIGJveDogVGhyZWFkQm94Lkxpc3QsIGxpc3Q6IGxhYmVsSWQgfSwgdHJ1ZSwgdGhyZWFkLmFjY291bnQsIHRocmVhZFVuZG9QYXJhbXModGhyZWFkKSk7Cn07CmV4cG9ydCB2YXIgdGhyZWFkTW92ZUNvbW1pdCA9IGZ1bmN0aW9uICh0aHJlYWQsIGJveCkgewogICAgcmV0dXJuIHRocmVhZFVwZGF0ZUNvbW1pdCh7IGlkOiB0aHJlYWQuaWQsIGJveDogYm94IH0sIHRydWUsIHRocmVhZC5hY2NvdW50LCB0aHJlYWRVbmRvUGFyYW1zKHRocmVhZCkpOwp9OwpleHBvcnQgdmFyIHRocmVhZExhdGVyQ29tbWl0ID0gZnVuY3Rpb24gKHRocmVhZCwgd2hlbikgewogICAgcmV0dXJuIHRocmVhZFVwZGF0ZUNvbW1pdCh7IGlkOiB0aHJlYWQuaWQsIGJveDogVGhyZWFkQm94LkxhdGVyLCB3aGVuOiB3aGVuIH0sIHRydWUsIHRocmVhZC5hY2NvdW50LCB0aHJlYWRVbmRvUGFyYW1zKHRocmVhZCkpOwp9OwpleHBvcnQgdmFyIHRocmVhZFJlYWRDb21taXQgPSBmdW5jdGlvbiAodGhyZWFkLCByZWFkKSB7CiAgICAvLyBUT0RPKFNISU4pOiBDbGVhbmVyIHdheSB0byByZXByZXNlbnQgbWVzc2FnZXMKICAgIHZhciByZWFkcyA9IHJlYWQKICAgICAgICA/IHRocmVhZC5tZXNzYWdlcwogICAgICAgICAgICAuZmlsdGVyKGZ1bmN0aW9uIChtZXNzYWdlKSB7IHJldHVybiAhbWVzc2FnZS5yZWFkOyB9KQogICAgICAgICAgICAubWFwKGZ1bmN0aW9uIChtZXNzYWdlKSB7IHJldHVybiAoeyBpZDogbWVzc2FnZS5pZCwgcmVhZDogdHJ1ZSB9KTsgfSkKICAgICAgICA6IHRha2VSaWdodCh0aHJlYWQubWVzc2FnZXMsIDEpLm1hcChmdW5jdGlvbiAobWVzc2FnZSkgeyByZXR1cm4gKHsgaWQ6IG1lc3NhZ2UuaWQsIHJlYWQ6IGZhbHNlIH0pOyB9KTsKICAgIHJldHVybiB0aHJlYWRVcGRhdGVDb21taXQoeyBpZDogdGhyZWFkLmlkLCBtZXNzYWdlczogcmVhZHMgfSwgZmFsc2UsIHRocmVhZC5hY2NvdW50KTsKfTsKZXhwb3J0IHZhciB0aHJlYWRTdGFyQ29tbWl0ID0gZnVuY3Rpb24gKHRocmVhZCwgc3RhcikgewogICAgLy8gVE9ETyhTSElOKTogQ2xlYW5lciB3YXkgdG8gcmVwcmVzZW50IG1lc3NhZ2VzCiAgICB2YXIgc3RhcnMgPSBzdGFyCiAgICAgICAgPyB0YWtlUmlnaHQodGhyZWFkLm1lc3NhZ2VzLCAxKS5tYXAoZnVuY3Rpb24gKG1lc3NhZ2UpIHsgcmV0dXJuICh7IGlkOiBtZXNzYWdlLmlkLCBzdGFycmVkOiB0cnVlIH0pOyB9KQogICAgICAgIDogdGhyZWFkLm1lc3NhZ2VzCiAgICAgICAgICAgIC5maWx0ZXIoZnVuY3Rpb24gKG1lc3NhZ2UpIHsgcmV0dXJuIG1lc3NhZ2Uuc3RhcnJlZDsgfSkKICAgICAgICAgICAgLm1hcChmdW5jdGlvbiAobWVzc2FnZSkgeyByZXR1cm4gKHsgaWQ6IG1lc3NhZ2UuaWQsIHN0YXJyZWQ6IGZhbHNlIH0pOyB9KTsKICAgIHJldHVybiB0aHJlYWRVcGRhdGVDb21taXQoeyBpZDogdGhyZWFkLmlkLCBtZXNzYWdlczogc3RhcnMgfSwgZmFsc2UsIHRocmVhZC5hY2NvdW50KTsKfTsKZXhwb3J0IHZhciB0aHJlYWRXYWl0aW5nQ29tbWl0ID0gZnVuY3Rpb24gKHRocmVhZCwgd2FpdGluZykgewogICAgcmV0dXJuIHRocmVhZFVwZGF0ZUNvbW1pdCh7IGlkOiB0aHJlYWQuaWQsIHdhaXRpbmc6IHdhaXRpbmcgfSwgZmFsc2UsIHRocmVhZC5hY2NvdW50KTsKfTsKZXhwb3J0IHZhciB0aHJlYWRVbmRvUGFyYW1zID0gZnVuY3Rpb24gKHRocmVhZCkgeyByZXR1cm4gKHsKICAgIGJveDogdGhyZWFkLmJveCwKICAgIHdoZW46IHRocmVhZC53aGVuIHx8IG51bGwsCiAgICBsaXN0OiB0aHJlYWQubGlzdCB8fCAnJywKfSk7IH07CnZhciB0aHJlYWRVcGRhdGVDb21taXQgPSBmdW5jdGlvbiAodGhyZWFkLCB1bmRvYWJsZSwgYWNjb3VudCwgdW5kb1BhcmFtcykgewogICAgcmV0dXJuICh7CiAgICAgICAgY3JlYXRlZDogbm93KCkudG9EYXRlKCksCiAgICAgICAgc3RhdHVzOiBDb21taXRTdGF0dXMuUmVhZHksCiAgICAgICAgc3RvcmU6IFN0b3Jlcy5UaHJlYWRzLAogICAgICAgIHJlc291cmNlOiBIaXN0b3J5T2JqZWN0LlRocmVhZCwKICAgICAgICByZXNvdXJjZUlkOiB0aHJlYWQuaWQsCiAgICAgICAgcmVzb3VyY2VIYXNoOiB0aHJlYWQuaWQsCiAgICAgICAgdW5kb2FibGU6IHVuZG9hYmxlLAogICAgICAgIG1ldGhvZDogJ1BBVENIJywKICAgICAgICByb3V0ZTogIi92Mi90aHJlYWRzLyIgKyB0aHJlYWQuaWQsCiAgICAgICAgcGF5bG9hZDogdGhyZWFkLAogICAgICAgIHVuZG9QYXlsb2FkOiB1bmRvYWJsZSAmJiB1bmRvUGFyYW1zIHx8IHVuZGVmaW5lZCwKICAgICAgICBhY2NvdW50OiBhY2NvdW50LAogICAgfSk7Cn07CmV4cG9ydCB2YXIgdGhyZWFkRGVsZXRlQ29tbWl0ID0gZnVuY3Rpb24gKGlkKSB7CiAgICByZXR1cm4gKHsKICAgICAgICBjcmVhdGVkOiBub3coKS50b0RhdGUoKSwKICAgICAgICBzdGF0dXM6IENvbW1pdFN0YXR1cy5SZWFkeSwKICAgICAgICBzdG9yZTogU3RvcmVzLlRocmVhZHMsCiAgICAgICAgcmVzb3VyY2U6IEhpc3RvcnlPYmplY3QuVGhyZWFkLAogICAgICAgIHJlc291cmNlSWQ6IGlkLAogICAgICAgIHJlc291cmNlSGFzaDogaWQsCiAgICAgICAgdW5kb2FibGU6IGZhbHNlLAogICAgICAgIG1ldGhvZDogJ0RFTEVURScsCiAgICAgICAgcm91dGU6ICIvdjIvdGhyZWFkcy8iICsgaWQsCiAgICB9KTsKfTsKZXhwb3J0IHZhciBmaWxlVXBsb2FkTWV0YSA9IGZ1bmN0aW9uIChtZXRhKSB7CiAgICByZXR1cm4gKHsKICAgICAgICBpZDogbWV0YS5yZXNvdXJjZUlkICsgbWV0YS5hdHRhY2htZW50LAogICAgICAgIGNyZWF0ZWQ6IG5vdygpLnRvRGF0ZSgpLAogICAgICAgIHN0YXR1czogQ29tbWl0U3RhdHVzLlJlYWR5LAogICAgICAgIHN0b3JlOiBTdG9yZXMuRmlsZVVwbG9hZHMsCiAgICAgICAgcmVzb3VyY2VJZDogbWV0YS5yZXNvdXJjZUlkLAogICAgICAgIGF0dGFjaG1lbnRJZDogbWV0YS5hdHRhY2htZW50LAogICAgICAgIG1ldGE6IG1ldGEsCiAgICB9KTsKfTsKLy8gTk9URShTSElOKTogT24gZXJyb3IsIHdpbGwgc2V0IHJlaHlkcmF0ZU1ldGEuZXJyb3IgdG8gZXJyb3IKZXhwb3J0IHZhciBkcmFmdEZvcndhcmRBdHRhY2htZW50c0NvbW1pdCA9IGZ1bmN0aW9uIChtZXRhKSB7IHJldHVybiAoewogICAgY3JlYXRlZDogbm93KCkudG9EYXRlKCksCiAgICBzdGF0dXM6IENvbW1pdFN0YXR1cy5SZWFkeSwKICAgIHN0b3JlOiBTdG9yZXMuQ29tbWl0cywKICAgIHJlc291cmNlOiBIaXN0b3J5T2JqZWN0LkRyYWZ0QXR0YWNobWVudEFwcGVuZCwKICAgIHJlc291cmNlSWQ6IG1ldGEucmVzb3VyY2VJZCwKICAgIHJlc291cmNlSGFzaDogbWV0YS5yZXNvdXJjZUlkICsgJy1mb3J3YXJkYXBwZW5kJywKICAgIHVuZG9hYmxlOiBmYWxzZSwKICAgIG1ldGhvZDogJ1BPU1QnLAogICAgcm91dGU6ICIvdjIvZHJhZnRzLyIgKyBtZXRhLnJlc291cmNlSWQgKyAiL2F0dGFjaG1lbnRzL2FwcGVuZCIsCiAgICBwYXlsb2FkOiB7CiAgICAgICAgdGhyZWFkOiBtZXRhLnRocmVhZCwKICAgICAgICBhY2NvdW50OiBtZXRhLmFjY291bnQsCiAgICAgICAgbWVzc2FnZTogbWV0YS5tZXNzYWdlLAogICAgfSwKICAgIHJlaHlkcmF0ZU1ldGE6IF9fYXNzaWduKF9fYXNzaWduKHt9LCBtZXRhKSwgeyBmaWxlOiB1bmRlZmluZWQsIHRocmVhZDogbWV0YS50aHJlYWQsIGFjY291bnQ6IG1ldGEuYWNjb3VudCwgbWVzc2FnZTogbWV0YS5tZXNzYWdlIH0pLAp9KTsgfTsKLy8gTk9URShTSElOKTogSW1wb3J0YW50IHRvIGtlZXAgcmVzb3VyY2VIYXNoIHRvIHJlc291cmNlSWQgKyBhdHRhY2htZW50Ci8vIGZvciAoRmlsZVVwbG9hZFN5bmMuZmV0Y2hDb21taXQgaWRlbnRpZmllcikKLy8gTk9URShTSElOKTogT24gZXJyb3IsIHdpbGwgc2V0IHJlaHlkcmF0ZU1ldGEuZXJyb3IgdG8gZXJyb3IKZXhwb3J0IHZhciBkcmFmdEF0dGFjaG1lbnRBZGRDb21taXQgPSBmdW5jdGlvbiAobWV0YSkgewogICAgcmV0dXJuICh7CiAgICAgICAgY3JlYXRlZDogbm93KCkudG9EYXRlKCksCiAgICAgICAgc3RhdHVzOiAhIW1ldGEudGVtcGxhdGUgJiYgQ29tbWl0U3RhdHVzLlJlYWR5IHx8IENvbW1pdFN0YXR1cy5QZW5kaW5nLAogICAgICAgIHN0b3JlOiBTdG9yZXMuQ29tbWl0cywKICAgICAgICByZXNvdXJjZTogSGlzdG9yeU9iamVjdC5EcmFmdEF0dGFjaG1lbnQsCiAgICAgICAgcmVzb3VyY2VJZDogbWV0YS5yZXNvdXJjZUlkLAogICAgICAgIHJlc291cmNlSGFzaDogbWV0YS5yZXNvdXJjZUlkICsgbWV0YS5hdHRhY2htZW50LAogICAgICAgIHVuZG9hYmxlOiBmYWxzZSwKICAgICAgICBtZXRob2Q6ICdQT1NUJywKICAgICAgICByb3V0ZTogIi92MS9kcmFmdHMvIiArIG1ldGEucmVzb3VyY2VJZCArICIvYXR0YWNobWVudHMiLAogICAgICAgIHBheWxvYWQ6IHsKICAgICAgICAgICAgaWQ6IG1ldGEuYXR0YWNobWVudCwKICAgICAgICAgICAgZmlsZW5hbWU6IG1ldGEuZmlsZW5hbWUgfHwgbWV0YS5maWxlICYmIG1ldGEuZmlsZS5uYW1lIHx8ICd1bmtub3duIG5hbWUnLAogICAgICAgICAgICBpbmxpbmU6IG1ldGEuaW5saW5lLAogICAgICAgICAgICBjbG91ZDogbWV0YS5jbG91ZCwKICAgICAgICAgICAgdGVtcGxhdGU6IG1ldGEudGVtcGxhdGUsCiAgICAgICAgfSwKICAgICAgICByZWh5ZHJhdGVNZXRhOiBfX2Fzc2lnbihfX2Fzc2lnbih7fSwgbWV0YSksIHsgZmlsZTogdW5kZWZpbmVkLCBmaWxlbmFtZTogbWV0YS5maWxlbmFtZSB8fCBtZXRhLmZpbGUgJiYgbWV0YS5maWxlLm5hbWUsIGxlbmd0aDogbWV0YS5sZW5ndGggfHwgbWV0YS5maWxlICYmIG1ldGEuZmlsZS5zaXplIH0pLAogICAgfSk7Cn07CmV4cG9ydCB2YXIgZHJhZnRBdHRhY2htZW50RGVsZXRlQ29tbWl0ID0gZnVuY3Rpb24gKGRyYWZ0LCBhdHRhY2htZW50KSB7IHJldHVybiAoewogICAgY3JlYXRlZDogbm93KCkudG9EYXRlKCksCiAgICBzdGF0dXM6IENvbW1pdFN0YXR1cy5SZWFkeSwKICAgIHN0b3JlOiBTdG9yZXMuQ29tbWl0cywKICAgIHJlc291cmNlOiBIaXN0b3J5T2JqZWN0LkRyYWZ0QXR0YWNobWVudCwKICAgIHJlc291cmNlSWQ6IGRyYWZ0LAogICAgcmVzb3VyY2VIYXNoOiBkcmFmdCArIGF0dGFjaG1lbnQsCiAgICB1bmRvYWJsZTogZmFsc2UsCiAgICBtZXRob2Q6ICdERUxFVEUnLAogICAgcm91dGU6ICIvdjEvZHJhZnRzLyIgKyBkcmFmdCArICIvYXR0YWNobWVudHMvIiArIGF0dGFjaG1lbnQsCn0pOyB9OwovLyBTZXJpYWxpemVyIHBhdGNoZXMgc3RhdHVzIHRvIGRyYWZ0IGlmIHN0YWdlZApleHBvcnQgdmFyIGRyYWZ0Q3JlYXRlQ29tbWl0ID0gZnVuY3Rpb24gKGRyYWZ0KSB7CiAgICByZXR1cm4gKHsKICAgICAgICBjcmVhdGVkOiBub3coKS50b0RhdGUoKSwKICAgICAgICBzdGF0dXM6IENvbW1pdFN0YXR1cy5SZWFkeSwKICAgICAgICBzdG9yZTogU3RvcmVzLkRyYWZ0cywKICAgICAgICByZXNvdXJjZTogSGlzdG9yeU9iamVjdC5EcmFmdCwKICAgICAgICByZXNvdXJjZUlkOiBkcmFmdC5pZCwKICAgICAgICByZXNvdXJjZUhhc2g6IGRyYWZ0LmlkLAogICAgICAgIHVuZG9hYmxlOiBmYWxzZSwKICAgICAgICBtZXRob2Q6ICdQT1NUJywKICAgICAgICByb3V0ZTogIi92MS9kcmFmdHMiLAogICAgICAgIHBheWxvYWQ6IF9fYXNzaWduKF9fYXNzaWduKHt9LCBkcmFmdCksIHsgc3RhdHVzOiBkcmFmdC5zdGF0dXMgPT09IERyYWZ0U3RhdHVzLlN0YWdlZCA/IERyYWZ0U3RhdHVzLkRyYWZ0IDogZHJhZnQuc3RhdHVzIH0pLAogICAgfSk7Cn07Ci8vIFNlcmlhbGl6ZXIgcGF0Y2hlcyBzdGF0dXMgdG8gZHJhZnQgaWYgc3RhZ2VkCmV4cG9ydCB2YXIgZHJhZnRVcGRhdGVDb21taXQgPSBmdW5jdGlvbiAoZHJhZnQpIHsKICAgIHJldHVybiAoewogICAgICAgIGNyZWF0ZWQ6IG5vdygpLnRvRGF0ZSgpLAogICAgICAgIHN0YXR1czogQ29tbWl0U3RhdHVzLlJlYWR5LAogICAgICAgIHN0b3JlOiBTdG9yZXMuRHJhZnRzLAogICAgICAgIHJlc291cmNlOiBIaXN0b3J5T2JqZWN0LkRyYWZ0LAogICAgICAgIHJlc291cmNlSWQ6IGRyYWZ0LmlkLAogICAgICAgIHJlc291cmNlSGFzaDogZHJhZnQuaWQsCiAgICAgICAgdW5kb2FibGU6IGZhbHNlLAogICAgICAgIG1ldGhvZDogJ1BBVENIJywKICAgICAgICByb3V0ZTogIi92MS9kcmFmdHMvIiArIGRyYWZ0LmlkLAogICAgICAgIHBheWxvYWQ6IF9fYXNzaWduKF9fYXNzaWduKHt9LCBkcmFmdCksIHsgc3RhdHVzOiBkcmFmdC5zdGF0dXMgPT09IERyYWZ0U3RhdHVzLlN0YWdlZCA/IERyYWZ0U3RhdHVzLkRyYWZ0IDogZHJhZnQuc3RhdHVzIH0pLAogICAgfSk7Cn07CmV4cG9ydCB2YXIgZHJhZnREZWxldGVDb21taXQgPSBmdW5jdGlvbiAoaWQpIHsKICAgIHJldHVybiAoewogICAgICAgIGNyZWF0ZWQ6IG5vdygpLnRvRGF0ZSgpLAogICAgICAgIHN0YXR1czogQ29tbWl0U3RhdHVzLlJlYWR5LAogICAgICAgIHN0b3JlOiBTdG9yZXMuRHJhZnRzLAogICAgICAgIHJlc291cmNlOiBIaXN0b3J5T2JqZWN0LkRyYWZ0LAogICAgICAgIHJlc291cmNlSWQ6IGlkLAogICAgICAgIHJlc291cmNlSGFzaDogaWQsCiAgICAgICAgdW5kb2FibGU6IGZhbHNlLAogICAgICAgIG1ldGhvZDogJ0RFTEVURScsCiAgICAgICAgcm91dGU6ICIvdjEvZHJhZnRzLyIgKyBpZCwKICAgIH0pOwp9OwpleHBvcnQgdmFyIGRyYWZ0U2VuZENvbW1pdCA9IGZ1bmN0aW9uIChtZXRhKSB7CiAgICByZXR1cm4gKHsKICAgICAgICBjcmVhdGVkOiBub3coKS50b0RhdGUoKSwKICAgICAgICBzdGF0dXM6IENvbW1pdFN0YXR1cy5QZW5kaW5nLAogICAgICAgIHN0b3JlOiBTdG9yZXMuRHJhZnRzLAogICAgICAgIHJlc291cmNlOiBIaXN0b3J5T2JqZWN0LkRyYWZ0LAogICAgICAgIHJlc291cmNlSWQ6IG1ldGEuZHJhZnQuaWQsCiAgICAgICAgcmVzb3VyY2VIYXNoOiBtZXRhLmRyYWZ0LmlkICsgJy1zZW5kJywKICAgICAgICB1bmRvYWJsZTogZmFsc2UsCiAgICAgICAgbWV0aG9kOiAnUE9TVCcsCiAgICAgICAgcm91dGU6ICIvdjIvZHJhZnRzLyIgKyBtZXRhLmRyYWZ0LmlkICsgIi9zZW5kIiwKICAgICAgICBwYXlsb2FkOiBfX2Fzc2lnbihfX2Fzc2lnbih7fSwgbWV0YSksIHsgdmVyc2lvbjogbWV0YS5kcmFmdC52ZXJzaW9uLCBkcmFmdDogdW5kZWZpbmVkIH0pLAogICAgICAgIHJlaHlkcmF0ZU1ldGE6IG1ldGEsCiAgICB9KTsKfTsKZXhwb3J0IHZhciBkcmFmdFNlbmROb3dDb21taXQgPSBmdW5jdGlvbiAoZHJhZnQpIHsKICAgIHJldHVybiAoewogICAgICAgIGNyZWF0ZWQ6IG5vdygpLnRvRGF0ZSgpLAogICAgICAgIHN0YXR1czogQ29tbWl0U3RhdHVzLlBlbmRpbmcsCiAgICAgICAgc3RvcmU6IFN0b3Jlcy5EcmFmdHMsCiAgICAgICAgcmVzb3VyY2U6IEhpc3RvcnlPYmplY3QuRHJhZnQsCiAgICAgICAgcmVzb3VyY2VJZDogZHJhZnQuaWQsCiAgICAgICAgcmVzb3VyY2VIYXNoOiBkcmFmdC5pZCArICctc2VuZC1ub3cnLAogICAgICAgIHVuZG9hYmxlOiBmYWxzZSwKICAgICAgICBtZXRob2Q6ICdQT1NUJywKICAgICAgICByb3V0ZTogIi92MS9kcmFmdHMvIiArIGRyYWZ0LmlkICsgIi9zZW5kTm93IiwKICAgICAgICByZWh5ZHJhdGVNZXRhOiBkcmFmdCwKICAgIH0pOwp9OwovLyBGZXRjaCByZXRyaWV2ZXMgYSBwYWdlIG9mIGNvbW1pdHMgZnJvbSB0aGUgY29tbWl0IGxvZyB0byBwcm9jZXNzCmV4cG9ydCBmdW5jdGlvbiBmZXRjaFJlZnJlc2hDb21taXRzKCkgewogICAgdmFyIHJlZnJlc2hDb21taXRzID0gQ2FjaGUubGlzdChTdG9yZXMuQ29tbWl0cywgZnVuY3Rpb24gKGNvbW1pdCkgewogICAgICAgIHJldHVybiBbQ29tbWl0U3RhdHVzLlBlbmRpbmcsIENvbW1pdFN0YXR1cy5Qcm9jZXNzaW5nLCBDb21taXRTdGF0dXMuUmVhZHksIENvbW1pdFN0YXR1cy5FcnJvcl0KICAgICAgICAgICAgLmluZGV4T2YoY29tbWl0LnN0YXR1cykgPiAtMTsKICAgIH0pOwogICAgcmV0dXJuIHJlZnJlc2hDb21taXRzOwp9Cg=="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/commit.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/commit.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Commit,\n  ThreadBox,\n  CommitStatus,\n  Thread,\n  HistoryObject,\n  ThreadCommitMeta,\n  AttachmentMeta,\n  FileUploadMeta,\n  Waiting,\n  DraftStatus,\n  Draft,\n} from '@src/types';\nimport { takeRight } from 'lodash';\nimport Cache, { Stores } from '@src/lib/db';\nimport { Observable } from 'rxjs';\nimport { DraftSendMeta } from '@src/ducks/drafts';\nimport { now } from './datetime';\n\nexport const isAnimated = (commit: Commit): boolean => {\n  if (!!commit.payload?.box) {\n    return true;\n  }\n\n  return false;\n};\n\nexport const submitCommit = (commit: Commit): Observable<null> =>\n  Cache.save(Stores.Commits, commit);\n\nexport const createThreadCommit = (thread: Thread, meta: ThreadCommitMeta): Commit | undefined => {\n  const { box, when, read, starred, label, waiting, muted } = meta;\n\n  if (label) {\n    return threadListCommit(thread, label);\n  }\n\n  if (box) {\n    if (thread.box === ThreadBox.Trash && box === ThreadBox.Trash) {\n      return threadDeleteCommit(thread.id);\n    }\n\n    return threadMoveCommit(thread, box);\n  }\n\n  if (when) {\n    return threadLaterCommit(thread, when);\n  }\n\n  if (read !== undefined) {\n    return threadReadCommit(thread, read);\n  }\n\n  if (starred !== undefined) {\n    return threadStarCommit(thread, starred);\n  }\n\n  if (waiting !== undefined) {\n    return threadWaitingCommit(thread, waiting);\n  }\n\n  if (muted !== undefined) {\n    return threadMuteCommit(thread, muted);\n  }\n\n  return;\n};\n\nexport const threadMuteCommit = (thread: Thread, muted: boolean): Commit => {\n  return threadUpdateCommit(\n    { id: thread.id, muted },\n    false,\n    thread.account,\n  );\n};\n\nexport const threadListCommit = (thread: Thread, labelId: string): Commit => {\n  return threadUpdateCommit(\n    { id: thread.id, box: ThreadBox.List, list: labelId },\n    true,\n    thread.account,\n    threadUndoParams(thread),\n  );\n};\n\nexport const threadMoveCommit = (thread: Thread, box: ThreadBox): Commit => {\n  return threadUpdateCommit(\n    { id: thread.id, box },\n    true,\n    thread.account,\n    threadUndoParams(thread),\n  );\n};\n\nexport const threadLaterCommit = (thread: Thread, when: Date): Commit => {\n  return threadUpdateCommit(\n    { id: thread.id, box: ThreadBox.Later, when },\n    true,\n    thread.account,\n    threadUndoParams(thread),\n  );\n};\n\nexport const threadReadCommit = (thread: Thread, read: boolean): Commit => {\n\n  // TODO(SHIN): Cleaner way to represent messages\n  const reads = read\n    ? thread.messages\n        .filter(message => !message.read)\n        .map(message => ({ id: message.id, read: true }))\n    : takeRight(thread.messages, 1).map(message => ({ id: message.id, read: false }));\n\n  return threadUpdateCommit({ id: thread.id, messages: reads }, false, thread.account);\n};\n\nexport const threadStarCommit = (thread: Thread, star: boolean): Commit => {\n\n  // TODO(SHIN): Cleaner way to represent messages\n  const stars = star\n    ? takeRight(thread.messages, 1).map(message => ({ id: message.id, starred: true }))\n    : thread.messages\n        .filter(message => message.starred)\n        .map(message => ({ id: message.id, starred: false }));\n\n  return threadUpdateCommit({ id: thread.id, messages: stars }, false, thread.account);\n};\n\nexport const threadWaitingCommit = (thread: Thread, waiting: Waiting | null): Commit => {\n  return threadUpdateCommit(\n    { id: thread.id, waiting },\n    false,\n    thread.account,\n  );\n};\n\nexport const threadUndoParams = (thread: Thread) => ({\n  box: thread.box,\n  when: thread.when || null,\n  list: thread.list || '',\n});\n\nconst threadUpdateCommit = (\n  thread: any,\n  undoable: boolean,\n  account: string,\n  undoParams?: any,\n): Commit =>\n  ({\n    created: now().toDate(),\n    status: CommitStatus.Ready,\n    store: Stores.Threads,\n    resource: HistoryObject.Thread,\n    resourceId: thread.id,\n    resourceHash: thread.id,\n    undoable,\n    method: 'PATCH',\n    route: `/v2/threads/${thread.id}`,\n    payload: thread,\n    undoPayload: undoable && undoParams || undefined,\n    account,\n  });\n\nexport const threadDeleteCommit = (id: string): Commit =>\n  ({\n    created: now().toDate(),\n    status: CommitStatus.Ready,\n    store: Stores.Threads,\n    resource: HistoryObject.Thread,\n    resourceId: id,\n    resourceHash: id,\n    undoable: false,\n    method: 'DELETE',\n    route: `/v2/threads/${id}`,\n  });\n\nexport const fileUploadMeta = (meta: AttachmentMeta): FileUploadMeta =>\n  ({\n    id: meta.resourceId + meta.attachment,\n    created: now().toDate(),\n    status: CommitStatus.Ready,\n    store: Stores.FileUploads,\n    resourceId: meta.resourceId,\n    attachmentId: meta.attachment,\n    meta,\n  });\n\n// NOTE(SHIN): On error, will set rehydrateMeta.error to error\nexport const draftForwardAttachmentsCommit = (meta: AttachmentMeta): Commit => ({\n  created: now().toDate(),\n  status: CommitStatus.Ready,\n  store: Stores.Commits,\n  resource: HistoryObject.DraftAttachmentAppend,\n  resourceId: meta.resourceId,\n  resourceHash: meta.resourceId + '-forwardappend',\n  undoable: false,\n  method: 'POST',\n  route: `/v2/drafts/${meta.resourceId}/attachments/append`,\n  payload: {\n    thread: meta.thread,\n    account: meta.account,\n    message: meta.message,\n  },\n  rehydrateMeta: {\n    ...meta,\n    file: undefined,\n    thread: meta.thread,\n    account: meta.account,\n    message: meta.message,\n  },\n});\n\n// NOTE(SHIN): Important to keep resourceHash to resourceId + attachment\n// for (FileUploadSync.fetchCommit identifier)\n// NOTE(SHIN): On error, will set rehydrateMeta.error to error\nexport const draftAttachmentAddCommit = (meta: AttachmentMeta): Commit =>\n  ({\n    created: now().toDate(),\n    status: !!meta.template && CommitStatus.Ready || CommitStatus.Pending,\n    store: Stores.Commits,\n    resource: HistoryObject.DraftAttachment,\n    resourceId: meta.resourceId,\n    resourceHash: meta.resourceId + meta.attachment,\n    undoable: false,\n    method: 'POST',\n    route: `/v1/drafts/${meta.resourceId}/attachments`,\n    payload: {\n      id: meta.attachment,\n      filename: meta.filename || meta.file && meta.file.name || 'unknown name',\n      inline: meta.inline,\n      cloud: meta.cloud,\n      template: meta.template,\n    },\n    rehydrateMeta: {\n      ...meta,\n      file: undefined,\n      filename: meta.filename || meta.file && meta.file.name,\n      length: meta.length || meta.file && meta.file.size,\n    },\n  });\n\nexport const draftAttachmentDeleteCommit = (draft: string, attachment: string): Commit => ({\n  created: now().toDate(),\n  status: CommitStatus.Ready,\n  store: Stores.Commits,\n  resource: HistoryObject.DraftAttachment,\n  resourceId: draft,\n  resourceHash: draft + attachment,\n  undoable: false,\n  method: 'DELETE',\n  route: `/v1/drafts/${draft}/attachments/${attachment}`,\n});\n\n// Serializer patches status to draft if staged\nexport const draftCreateCommit = (draft: any): Commit =>\n  ({\n    created: now().toDate(),\n    status: CommitStatus.Ready,\n    store: Stores.Drafts,\n    resource: HistoryObject.Draft,\n    resourceId: draft.id,\n    resourceHash: draft.id,\n    undoable: false,\n    method: 'POST',\n    route: `/v1/drafts`,\n    payload: {\n      ...draft,\n      status: draft.status === DraftStatus.Staged ? DraftStatus.Draft : draft.status,\n    },\n  });\n\n// Serializer patches status to draft if staged\nexport const draftUpdateCommit = (draft: any): Commit =>\n  ({\n    created: now().toDate(),\n    status: CommitStatus.Ready,\n    store: Stores.Drafts,\n    resource: HistoryObject.Draft,\n    resourceId: draft.id,\n    resourceHash: draft.id,\n    undoable: false,\n    method: 'PATCH',\n    route: `/v1/drafts/${draft.id}`,\n    payload: {\n      ...draft,\n      status: draft.status === DraftStatus.Staged ? DraftStatus.Draft : draft.status,\n    },\n  });\n\nexport const draftDeleteCommit = (id: string): Commit =>\n  ({\n    created: now().toDate(),\n    status: CommitStatus.Ready,\n    store: Stores.Drafts,\n    resource: HistoryObject.Draft,\n    resourceId: id,\n    resourceHash: id,\n    undoable: false,\n    method: 'DELETE',\n    route: `/v1/drafts/${id}`,\n  });\n\nexport const draftSendCommit = (meta: DraftSendMeta): Commit =>\n  ({\n    created: now().toDate(),\n    status: CommitStatus.Pending,\n    store: Stores.Drafts,\n    resource: HistoryObject.Draft,\n    resourceId: meta.draft.id,\n    resourceHash: meta.draft.id + '-send',\n    undoable: false,\n    method: 'POST',\n    route: `/v2/drafts/${meta.draft.id}/send`,\n    payload: {\n      ...meta,\n      version: meta.draft.version,\n      draft: undefined,\n    },\n    rehydrateMeta: meta,\n  });\n\nexport const draftSendNowCommit = (draft: Draft): Commit =>\n  ({\n    created: now().toDate(),\n    status: CommitStatus.Pending,\n    store: Stores.Drafts,\n    resource: HistoryObject.Draft,\n    resourceId: draft.id,\n    resourceHash: draft.id + '-send-now',\n    undoable: false,\n    method: 'POST',\n    route: `/v1/drafts/${draft.id}/sendNow`,\n    rehydrateMeta: draft,\n  });\n\n// Fetch retrieves a page of commits from the commit log to process\nexport function fetchRefreshCommits(): Observable<Commit[]> {\n  const refreshCommits = Cache.list(Stores.Commits, (commit: Commit) => {\n    return [CommitStatus.Pending, CommitStatus.Processing, CommitStatus.Ready, CommitStatus.Error]\n      .indexOf(commit.status) > -1;\n  });\n\n  return refreshCommits;\n}\n"]}]}