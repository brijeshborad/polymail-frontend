{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/css-loader/dist/cjs.js??ref--7-2!/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/sass-loader/dist/cjs.js??ref--7-3!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Login/components/MagicLinkSuccess/MagicLinkSuccess.scss","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Login/components/MagicLinkSuccess/MagicLinkSuccess.scss","mtime":1675280254079},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/styles/helpers.scss","mtime":1675280254121},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/styles/colors.scss","mtime":1675280254121},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/styles/typography.scss","mtime":1675280254121},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/styles/mixins.scss","mtime":1675280254121},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/css-loader/dist/cjs.js","mtime":1675365393897},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/sass-loader/dist/cjs.js","mtime":1675365391315}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIpKHRydWUpOwovLyBNb2R1bGUKZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsICIubWFnaWMtbGluay1yZWRpcmVjdCA+IC5wcm9tcHQge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgY29sb3I6ICM3ZThmOWY7XG59XG4udGhlbWUtbGlnaHQgLm1hZ2ljLWxpbmstcmVkaXJlY3QgPiAucHJvbXB0IHtcbiAgY29sb3I6ICM3ZThmOWY7XG59XG4udGhlbWUtZGFyayAubWFnaWMtbGluay1yZWRpcmVjdCA+IC5wcm9tcHQge1xuICBjb2xvcjogI0FBQUFBQTtcbn1cbi5tYWdpYy1saW5rLXJlZGlyZWN0ID4gLnByb21wdCA+IC5tYWdpYy1saW5rLWxvYWRpbmcge1xuICBtYXJnaW46IDIwcHggMDtcbiAgYW5pbWF0aW9uOiBmYWRlLWluIDFzIGVhc2UtaW4tb3V0IDBzIDE7XG59XG4ubWFnaWMtbGluay1yZWRpcmVjdCA+IC5wcm9tcHQgPiAubWFnaWMtbGluay1sb2FkaW5nID4gLmxvYWRlci1hY3RpdmUge1xuICBkaXNwbGF5OiBibG9jaztcbn1cbi5tYWdpYy1saW5rLXJlZGlyZWN0ID4gLnByb21wdCA+IC5tYWdpYy1saW5rLWxvYWRpbmcgPiAubG9hZGVyLWFjdGl2ZSA+IC5jdXN0b20tbG9hZGVyLWlubmVyID4gZGl2IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzA3OWNlZjtcbn1cbi5tYWdpYy1saW5rLXJlZGlyZWN0ID4gLnByb21wdCA+IC50aXRsZSB7XG4gIGZvbnQtc2l6ZTogMjBweDtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgbGluZS1oZWlnaHQ6IDEuMjtcbn1cbi50aGVtZS1saWdodCAubWFnaWMtbGluay1yZWRpcmVjdCA+IC5wcm9tcHQgPiAudGl0bGUge1xuICBjb2xvcjogIzQ0NDQ0NDtcbn1cbi50aGVtZS1kYXJrIC5tYWdpYy1saW5rLXJlZGlyZWN0ID4gLnByb21wdCA+IC50aXRsZSB7XG4gIGNvbG9yOiAjZThlOGU4O1xufVxuLm1hZ2ljLWxpbmstcmVkaXJlY3QgPiAucHJvbXB0ID4gLmZhbGxiYWNrLXNlY3Rpb24ge1xuICBhbmltYXRpb246IGZhZGUtaW4gMXMgZWFzZS1pbi1vdXQgMHMgMTtcbiAgbWFyZ2luLXRvcDogNDBweDtcbn1cbi5tYWdpYy1saW5rLXJlZGlyZWN0ID4gLnByb21wdCA+IC5mYWxsYmFjay1zZWN0aW9uID4gLmRlc2NyaXB0aW9uID4gLmZhbGxiYWNrLWJ1dHRvbiB7XG4gIG1hcmdpbi10b3A6IDVweDtcbiAgY29sb3I6ICMwNzljZWY7XG59XG4ubWFnaWMtbGluay1yZWRpcmVjdCA+IC5wcm9tcHQgPiAuZmFsbGJhY2stc2VjdGlvbiA+IC5kZXNjcmlwdGlvbiA+IC5mYWxsYmFjay1idXR0b246aG92ZXIge1xuICBjb2xvcjogIzBkYTRmODtcbn1cbi5tYWdpYy1saW5rLXJlZGlyZWN0ID4gLnByb21wdCA+IC5kZXNjcmlwdGlvbiB7XG4gIG1hcmdpbi10b3A6IDEwcHg7XG4gIGxpbmUtaGVpZ2h0OiAxLjI5O1xufVxuLm1hZ2ljLWxpbmstcmVkaXJlY3QgPiAucHJvbXB0ID4gLmRpc2NsYWltZXIge1xuICBtYXJnaW4tdG9wOiA0MHB4O1xufVxuLm1hZ2ljLWxpbmstcmVkaXJlY3QgPiAucHJvbXB0ID4gLmRvd25sb2FkLXVybCB7XG4gIG1hcmdpbi10b3A6IDVweDtcbn1cbi5tYWdpYy1saW5rLXJlZGlyZWN0ID4gLnByb21wdCA+IC5kb3dubG9hZC11cmwgYSB7XG4gIGNvbG9yOiAjMDc5Y2VmO1xufVxuLm1hZ2ljLWxpbmstcmVkaXJlY3QgPiAucHJvbXB0ID4gLndlYmFwcC1zZWN0aW9uIHtcbiAgbWFyZ2luLXRvcDogNjBweDtcbn1cbi5tYWdpYy1saW5rLXJlZGlyZWN0ID4gLnByb21wdCA+IC53ZWJhcHAtc2VjdGlvbiBidXR0b24ge1xuICBjb2xvcjogIzA3OWNlZjtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG59XG4ubWFnaWMtbGluay1yZWRpcmVjdCA+IC5wcm9tcHQgPiAucmVzZW5kLWNvbnRhaW5lciB7XG4gIG1hcmdpbi10b3A6IDVweDtcbiAgZm9udC1zaXplOiAxMnB4O1xufVxuLm1hZ2ljLWxpbmstcmVkaXJlY3QgPiAucHJvbXB0ID4gLnJlc2VuZC1jb250YWluZXIgPiAucmVzZW5kLWNvZGUge1xuICBjb2xvcjogIzA3OWNlZjtcbiAgdHJhbnNpdGlvbjogMC4zcyBjb2xvciBlYXNlLWluLW91dDtcbn1cbi5tYWdpYy1saW5rLXJlZGlyZWN0ID4gLnByb21wdCA+IC5yZXNlbmQtY29udGFpbmVyID4gLnJlc2VuZC1jb2RlOmhvdmVyIHtcbiAgY29sb3I6ICMwNjhjZDY7XG59XG4ubWFnaWMtbGluay1yZWRpcmVjdCA+IGZvcm0gPiAuc3VibWl0LWJ1dHRvbiB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDQwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzA3OWNlZjtcbiAgY29sb3I6ICNmZmZmZmY7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgbGluZS1oZWlnaHQ6IDEuMjk7XG4gIG1hcmdpbi10b3A6IDMwcHg7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gIHRyYW5zaXRpb246IDAuMXMgYmFja2dyb3VuZC1jb2xvciBlYXNlLWluLW91dDtcbn1cbi5tYWdpYy1saW5rLXJlZGlyZWN0ID4gZm9ybSA+IC5zdWJtaXQtYnV0dG9uOmFjdGl2ZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwNjhjZDY7XG59XG4ubWFnaWMtbGluay1yZWRpcmVjdCA+IGZvcm0gPiAuc3VibWl0LWJ1dHRvbjpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMxN2E4Zjg7XG59XG4ubWFnaWMtbGluay1yZWRpcmVjdCA+IC5zaWduLW91dC1jb250YWluZXIge1xuICBtYXJnaW4tdG9wOiA4cHg7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xuICBmb250LXNpemU6IDEycHg7XG59XG4ubWFnaWMtbGluay1yZWRpcmVjdCA+IC5zaWduLW91dC1jb250YWluZXIgPiAuc2lnbi1vdXQge1xuICB0cmFuc2l0aW9uOiAwLjJzIGNvbG9yIGVhc2UtaW4tb3V0O1xufVxuLnRoZW1lLWxpZ2h0IC5tYWdpYy1saW5rLXJlZGlyZWN0ID4gLnNpZ24tb3V0LWNvbnRhaW5lciA+IC5zaWduLW91dCB7XG4gIGNvbG9yOiAjN2U4ZjlmO1xufVxuLnRoZW1lLWRhcmsgLm1hZ2ljLWxpbmstcmVkaXJlY3QgPiAuc2lnbi1vdXQtY29udGFpbmVyID4gLnNpZ24tb3V0IHtcbiAgY29sb3I6ICNBQUFBQUE7XG59XG4ubWFnaWMtbGluay1yZWRpcmVjdCA+IC5zaWduLW91dC1jb250YWluZXIgPiAuc2lnbi1vdXQ6aG92ZXIge1xuICBjb2xvcjogIzZmODI5NDtcbn0iLCAiIix7InZlcnNpb24iOjMsInNvdXJjZXMiOlsiL1VzZXJzL2FuZHJld3NhbWJveS9EZXNrdG9wL0dpdC9wb2x5bWFpbC93ZWJhcHAvc3JjL3JvdXRlcy9Mb2dpbi9jb21wb25lbnRzL01hZ2ljTGlua1N1Y2Nlc3MvTWFnaWNMaW5rU3VjY2Vzcy5zY3NzIiwiL1VzZXJzL2FuZHJld3NhbWJveS9EZXNrdG9wL0dpdC9wb2x5bWFpbC93ZWJhcHAvc3JjL3N0eWxlcy9jb2xvcnMuc2NzcyIsIk1hZ2ljTGlua1N1Y2Nlc3Muc2NzcyIsIi9Vc2Vycy9hbmRyZXdzYW1ib3kvRGVza3RvcC9HaXQvcG9seW1haWwvd2ViYXBwL3NyYy9zdHlsZXMvbWl4aW5zLnNjc3MiLCIvVXNlcnMvYW5kcmV3c2FtYm95L0Rlc2t0b3AvR2l0L3BvbHltYWlsL3dlYmFwcC9zcmMvc3R5bGVzL3R5cG9ncmFwaHkuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFJRTtFQUNFLGtCQUFBO0VBQ0EsbUJBQUE7RUFDQSxlQUFBO0VBQ0EsY0NISztBQ0FUO0FDVUk7RUhONEIsY0FBQTtBRURoQztBQ09JO0VITjRCLGNBQUE7QUVFaEM7QUZBSTtFQUNFLGNBQUE7RUdnSkosc0NBQUE7QUQ3SUY7QUZDUTtFQUNFLGNBQUE7QUVDVjtBRkVZO0VBQ0UseUJDWk47QUNZUjtBRk1JO0VBQ0UsZUFBQTtFQUNBLGdCSXJCSztFSnNCTCxnQkFBQTtBRUpOO0FDWEk7RUhnQjhCLGNBQUE7QUVGbEM7QUNkSTtFSGdCOEIsY0FBQTtBRUNsQztBRkVJO0VHMEhGLHNDQUFBO0VIeEhJLGdCQUFBO0FFQU47QUZHUTtFQUNFLGVBQUE7RUFDQSxjQ2hDRjtBQytCUjtBRkdVO0VBQ0UsY0FBQTtBRURaO0FGT0k7RUFDRSxnQkFBQTtFQUNBLGlCQUFBO0FFTE47QUZRSTtFQUNFLGdCQUFBO0FFTk47QUZTSTtFQUNFLGVBQUE7QUVQTjtBRlFNO0VBQ0UsY0NyREE7QUMrQ1I7QUZVSTtFQUNFLGdCQUFBO0FFUk47QUZVTTtFQUNFLGNDN0RBO0VEOERBLDBCQUFBO0FFUlI7QUZZSTtFQUNFLGVBQUE7RUFDQSxlQUFBO0FFVk47QUZZTztFQUNHLGNDdkVGO0VEd0VFLGtDQUFBO0FFVlY7QUZZVTtFQUNFLGNBQUE7QUVWWjtBRmdCRTtFQUNFLFdBQUE7RUFDQSxZQUFBO0VBQ0Esa0JBQUE7RUFDQSx5QkNyRkk7RURzRkosY0NwRFE7RURzRFIsZUFBQTtFQUNBLGdCSXpGRztFSjBGSCxpQkFBQTtFQUNBLGdCQUFBO0VBQ0EsbUJBQUE7RUFFQSw2Q0FBQTtBRWhCSjtBRmtCSTtFQUNFLHlCQUFBO0FFaEJOO0FGbUJJO0VBQ0UseUJBQUE7QUVqQk47QUZxQkU7RUFDRSxlQUFBO0VBQ0EsaUJBQUE7RUFDQSxlQUFBO0FFbkJKO0FGcUJNO0VBRUUsa0NBQUE7QUVwQlI7QUN0Rkk7RUh5R2dDLGNBQUE7QUVoQnBDO0FDekZJO0VIeUdnQyxjQUFBO0FFYnBDO0FGZ0JRO0VBQ0UsY0FBQTtBRWRWIiwiZmlsZSI6Ik1hZ2ljTGlua1N1Y2Nlc3Muc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgJ2hlbHBlcnMnO1xuXG4ubWFnaWMtbGluay1yZWRpcmVjdCB7XG5cbiAgPiAucHJvbXB0IHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgY29sb3I6ICRzaWx2ZXI7XG4gICAgQGluY2x1ZGUgdGhlbWlmeSgkdGhlbWVzKSB7IGNvbG9yOiB0aGVtZWQoJ3NlY29uZGFyeVRleHRDb2xvcicpOyB9O1xuXG4gICAgPiAubWFnaWMtbGluay1sb2FkaW5nIHtcbiAgICAgIG1hcmdpbjogMjBweCAwO1xuXG4gICAgICAgIEBpbmNsdWRlIGZhZGUtaW4oMS4wcyk7XG5cbiAgICAgICAgPiAubG9hZGVyLWFjdGl2ZSB7XG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7XG5cbiAgICAgICAgICA+IC5jdXN0b20tbG9hZGVyLWlubmVyIHtcbiAgICAgICAgICAgID4gZGl2IHtcbiAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGF6dXJlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgID4gLnRpdGxlIHtcbiAgICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICAgIGZvbnQtd2VpZ2h0OiAkc2VtaWJvbGQ7XG4gICAgICBsaW5lLWhlaWdodDogMS4yO1xuICAgICAgQGluY2x1ZGUgdGhlbWlmeSgkdGhlbWVzKSB7IGNvbG9yOiB0aGVtZWQoJ3ByaW1hcnlUZXh0Q29sb3InKTsgfTtcbiAgICB9XG5cbiAgICA+IC5mYWxsYmFjay1zZWN0aW9uIHtcbiAgICAgIEBpbmNsdWRlIGZhZGUtaW4oMS4wcyk7XG4gICAgICBtYXJnaW4tdG9wOiA0MHB4O1xuXG4gICAgICA+IC5kZXNjcmlwdGlvbiB7XG4gICAgICAgID4gLmZhbGxiYWNrLWJ1dHRvbiB7XG4gICAgICAgICAgbWFyZ2luLXRvcDogNXB4O1xuICAgICAgICAgIGNvbG9yOiAkYXp1cmU7XG5cbiAgICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgIGNvbG9yOiBsaWdodGVuKCRhenVyZSwgMyUpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgID4gLmRlc2NyaXB0aW9uIHtcbiAgICAgIG1hcmdpbi10b3A6IDEwcHg7XG4gICAgICBsaW5lLWhlaWdodDogMS4yOTtcbiAgICB9XG5cbiAgICA+IC5kaXNjbGFpbWVyIHtcbiAgICAgIG1hcmdpbi10b3A6IDQwcHg7XG4gICAgfVxuXG4gICAgPiAuZG93bmxvYWQtdXJsIHtcbiAgICAgIG1hcmdpbi10b3A6IDVweDtcbiAgICAgIGEge1xuICAgICAgICBjb2xvcjogJGF6dXJlO1xuICAgICAgfVxuICAgIH1cblxuICAgID4gLndlYmFwcC1zZWN0aW9uIHtcbiAgICAgIG1hcmdpbi10b3A6IDYwcHg7XG5cbiAgICAgIGJ1dHRvbiB7XG4gICAgICAgIGNvbG9yOiAkYXp1cmU7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAgICAgfVxuICAgIH1cblxuICAgID4gLnJlc2VuZC1jb250YWluZXIge1xuICAgICAgbWFyZ2luLXRvcDogNXB4O1xuICAgICAgZm9udC1zaXplOiAxMnB4O1xuXG4gICAgICAgPiAucmVzZW5kLWNvZGUge1xuICAgICAgICAgIGNvbG9yOiAkYXp1cmU7XG4gICAgICAgICAgdHJhbnNpdGlvbjogMC4zcyBjb2xvciBlYXNlLWluLW91dDtcblxuICAgICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgY29sb3I6IGRhcmtlbigkYXp1cmUsIDUlKTtcbiAgICAgICAgICB9XG4gICAgICAgfVxuICAgIH1cbiAgfVxuXG4gID4gZm9ybSA+IC5zdWJtaXQtYnV0dG9uIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDQwcHg7XG4gICAgYm9yZGVyLXJhZGl1czogM3B4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRhenVyZTtcbiAgICBjb2xvcjogJHRydWVXaGl0ZTtcblxuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBmb250LXdlaWdodDogJGJvbGQ7XG4gICAgbGluZS1oZWlnaHQ6IDEuMjk7XG4gICAgbWFyZ2luLXRvcDogMzBweDtcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuXG4gICAgdHJhbnNpdGlvbjogMC4xcyBiYWNrZ3JvdW5kLWNvbG9yIGVhc2UtaW4tb3V0O1xuXG4gICAgJjphY3RpdmUge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogZGFya2VuKCRhenVyZSwgNSUpO1xuICAgIH1cblxuICAgICY6aG92ZXIge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRlbigkYXp1cmUsIDUlKTtcbiAgICB9XG4gIH1cblxuICA+IC5zaWduLW91dC1jb250YWluZXIge1xuICAgIG1hcmdpbi10b3A6IDhweDtcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgICBmb250LXNpemU6IDEycHg7XG5cbiAgICAgID4gLnNpZ24tb3V0IHtcbiAgICAgICAgQGluY2x1ZGUgdGhlbWlmeSgkdGhlbWVzKSB7IGNvbG9yOiB0aGVtZWQoJ3NlY29uZGFyeVRleHRDb2xvcicpOyB9O1xuICAgICAgICB0cmFuc2l0aW9uOiAwLjJzIGNvbG9yIGVhc2UtaW4tb3V0O1xuXG4gICAgICAgICY6aG92ZXIge1xuICAgICAgICAgIGNvbG9yOiBkYXJrZW4oJHNpbHZlciwgNSUpO1xuICAgICAgICB9XG4gICAgICB9XG4gIH1cbn1cbiIsIi8vIExpZ2h0IFRoZW1lcyBTQVNTIHZhcnNcbiR3aGl0ZTogI2ZmZmZmZjtcbiRzbm93OiAjZmFmYWZhO1xuJGNoYXJjb2FsOiAjNDQ0NDQ0O1xuJGdyYXk6ICNjOWQ0ZTA7XG4kc2lsdmVyOiAjN2U4ZjlmO1xuJGxhYmVsOiAjZDM0N2FlO1xuJGluYm94OiAjNDdkZmY1O1xuJG1pZG5pZ2h0OiAjMjQyZTQ0O1xuJGF6dXJlOiAjMDc5Y2VmO1xuJHJlYWRMYXRlcjogI2ZmYTA1NztcbiRhcmNoaXZlOiAjODdlY2JiO1xuJHRyYXNoOiAjZmY2YjdjO1xuJHN0YXI6ICNmZmRmMzI7XG4kc2VuZExhdGVyOiAjMTA5N2RkO1xuJGZvbGxvd1VwOiAjZjY0YjgxO1xuJGVycm9yOiAjZTc0YzNjO1xuJGNvbXBvc2VIb3ZlcjogIzRFRDZFQjtcbiRsc2JDZWxsSG92ZXI6ICM0MzRmNjc7XG4kbHNiQ2VsbFNlbGVjdGVkOiAjMzMzZTU1O1xuJGxpZ2h0R3JheTogI2YyZjVmODtcbiRkYXJrQmx1ZTogIzJjNzFjMTtcbiRtZWRpdW1HcmVlbjogIzBlYzM2YjtcbiRib3JkZXJHcmF5OiAjZWVlZWVlO1xuJGljZUJsdWU6ICNlOGYzZmY7XG4kY29tcGxldGVkR3JheTogI2FmYmJjODtcbiRncmF5SG92ZXI6IGRhcmtlbigkd2hpdGUsIDQlKTtcbiR0aHJlYWRIb3ZlcjogcmdiYSgkaWNlQmx1ZSwgLjUpO1xuJHRocmVhZFNlbGVjdGVkOiAkaWNlQmx1ZTtcbiRjb21tZW50Qm9keTogcmdiYSgwLCAxNzAsIDI1NSwgMC4xKTtcbiRibGFjazogIzAwMDAwMDtcblxuJGZhY2Vib29rOiAjNWE3YWM3O1xuJHR3aXR0ZXI6ICM1YmJjZWM7XG4kYW5nZWxMaXN0OiAjMDAwMDAwO1xuJGxpbmtlZEluOiAjMDA3YmI1O1xuXG4kYm94U2hhZG93OiAycHggMnB4IDRweCAwIHJnYmEoMTI1LCAxNDMsIDE2MCwgMC41KTtcbiRncmF5Qm9yZGVyOiBzb2xpZCAycHggJGJvcmRlckdyYXk7XG4kbGlnaHRHcmF5Qm9yZGVyOiAkbGlnaHRHcmF5IDFweCBzb2xpZDtcbiRzZXF1ZW5jZU1heFdpZHRoOiAxMDQwcHg7XG5cbi8vIENvbnN0YW50cyAoTm90IGNoYW5nZWQgYnkgdGhlbWUpXG4kdHJ1ZVdoaXRlOiAjZmZmZmZmO1xuJHRydWVEYXJrOiAjMTIxMjEyO1xuXG4vLyBMaWdodCBUaGVtZXMgU0FTUyB2YXJzXG4kZGFya1ByaW1hcnlUZXh0OiAjZThlOGU4O1xuJGRhcmtTZWNvbmRhcnlUZXh0OiAjQUFBQUFBO1xuXG4kZGFyazogJ2RhcmsnO1xuJGxpZ2h0OiAnbGlnaHQnO1xuXG4vLyBUaGVtaWZpZWQgQ29sb3JzXG4kdGhlbWVzOiAoXG4gICRsaWdodDogKFxuICAgIHRydWVEYXJrOiAkdHJ1ZURhcmssXG4gICAgdHJ1ZVdoaXRlOiAjZmFmYWZhLFxuICAgIHVuc2V0OiAndW5zZXQnLFxuICAgIHRyYW5zcGFyZW50Q29sb3I6IHRyYW5zcGFyZW50LFxuICAgIHByaW1hcnlBY2NlbnQ6ICRhenVyZSxcblxuICAgIC8vIE1haW4gQXBwXG4gICAgcHJpbWFyeVRleHRDb2xvcjogJGNoYXJjb2FsLFxuICAgIHNlY29uZGFyeVRleHRDb2xvcjogJHNpbHZlcixcbiAgICB0ZXJ0aWFyeVRleHRDb2xvcjogJGdyYXksXG5cbiAgICAvLyBCYWNrZ3JvdW5kIENvbG9yc1xuICAgIHByaW1hcnlCYWNrZ3JvdW5kQ29sb3I6ICR3aGl0ZSxcbiAgICBzZWNvbmRhcnlCYWNrZ3JvdW5kQ29sb3I6ICRzbm93LFxuICAgIHRlcnRpYXJ5QmFja2dyb3VuZENvbG9yOiAkd2hpdGUsXG4gICAgcHJpbWFyeUNvbnRyYXN0Qm9yZGVyQ29sb3I6ICRsaWdodEdyYXksXG4gICAgc2Vjb25kYXJ5Q29udHJhc3RCb3JkZXJDb2xvcjogJGxpZ2h0R3JheSxcblxuICAgIC8vIExlZnQgU2lkZWJhclxuICAgIGxzYkJhY2tncm91bmRDb2xvcjogJG1pZG5pZ2h0LFxuICAgIGxzYkhlYWRlckNvbG9yOiAkZ3JheSxcblxuICAgIC8vIEJvcmRlcnNcbiAgICBsb3dDb250cmFzdEJvcmRlcjogJGxpZ2h0R3JheSAxcHggc29saWQsXG4gICAgbG93Q29udHJhc3RCb3JkZXJDb2xvcjogJGxpZ2h0R3JheSxcbiAgICBoaWdoQ29udHJhc3RCb3JkZXI6ICRncmF5IDJweCBzb2xpZCxcbiAgICBoaWdoQ29udHJhc3RCb3JkZXJDb2xvcjogJGdyYXksXG4gICAgYm94U2hhZG93OiAkYm94U2hhZG93LFxuXG4gICAgLy8gQWNjZW50c1xuICAgIGxvd0NvbnRyYXN0QWNjZW50OiByZ2JhKDI0MiwgMjQ1LCAyNDgsIDAuNSksXG5cbiAgICAvLyBIb3ZlcnNcbiAgICBoaWdoQ29udHJhc3RIb3ZlcjogJGdyYXlIb3ZlcixcblxuICAgIGdyYXk6ICRncmF5LFxuICAgIGdyYXlUZXh0OiAkZ3JheSxcbiAgICBtaWRuaWdodDogJG1pZG5pZ2h0LFxuICAgIGljZUJsdWU6ICRpY2VCbHVlLFxuICAgIHRocmVhZEhvdmVyOiByZ2JhKCRpY2VCbHVlLCAwLjUpLFxuICAgIGJvcmRlckdyYXk6ICRsaWdodEdyYXksXG4gICAgdGhyZWFkU2VsZWN0ZWQ6ICRpY2VCbHVlLFxuICAgIGxpZ2h0R3JheUJvcmRlcjogJGxpZ2h0R3JheSAxcHggc29saWQsXG4gICAgZ3JheUhvdmVyOiAkZ3JheUhvdmVyLFxuXG4gICksXG4gICRkYXJrOiAoXG4gICAgLy8gQ29uc3RhbnRzIHRoYXQgZG8gbm90IGNoYW5nZVxuICAgIHRydWVXaGl0ZTogI2ZhZmFmYSxcbiAgICB0cnVlRGFyazogJHRydWVEYXJrLFxuICAgIHByaW1hcnlBY2NlbnQ6ICRhenVyZSxcbiAgICB0cmFuc3BhcmVudENvbG9yOiB0cmFuc3BhcmVudCxcbiAgICB1bnNldDogJ3Vuc2V0JyxcblxuICAgIC8vIE1haW4gQXBwXG4gICAgcHJpbWFyeVRleHRDb2xvcjogJGRhcmtQcmltYXJ5VGV4dCxcbiAgICBzZWNvbmRhcnlUZXh0Q29sb3I6ICRkYXJrU2Vjb25kYXJ5VGV4dCxcbiAgICB0ZXJ0aWFyeVRleHRDb2xvcjogIzc3Nzc3NyxcbiAgICBwcmltYXJ5QmFja2dyb3VuZENvbG9yOiAjMjEyMTIxLFxuICAgIHNlY29uZGFyeUJhY2tncm91bmRDb2xvcjogIzIzMjMyMyxcbiAgICB0ZXJ0aWFyeUJhY2tncm91bmRDb2xvcjogIzI1MjUyNSxcbiAgICBzZWNvbmRhcnlDb250cmFzdEJvcmRlckNvbG9yOiBsaWdodGVuKCMxMjEyMTIsIDEwJSksXG4gICAgY29udHJhc3RlZEJvcmRlckNvbG9yOiBsaWdodGVuKCMxMjEyMTIsIDEwJSksXG5cbiAgICAvLyBMZWZ0IFNpZGViYXJcbiAgICBsc2JCYWNrZ3JvdW5kQ29sb3I6ICMyNTI1MjUsXG4gICAgbHNiSGVhZGVyQ29sb3I6IGRhcmtlbigjZmFmYWZhLCAxMCUpLFxuXG4gICAgLy8gQm9yZGVyc1xuICAgIGxvd0NvbnRyYXN0Qm9yZGVyOiAjMkMyQzJDIDFweCBzb2xpZCxcbiAgICBsb3dDb250cmFzdEJvcmRlckNvbG9yOiAjMkMyQzJDLFxuICAgIGhpZ2hDb250cmFzdEJvcmRlcjogIzJFMkUyRSAycHggc29saWQsXG4gICAgaGlnaENvbnRyYXN0Qm9yZGVyQ29sb3I6ICMyRTJFMkUsXG4gICAgYm94U2hhZG93OiAycHggMnB4IDRweCAwICMxMjEyMTIsXG5cbiAgICAvLyBBY2NlbnRzXG4gICAgbG93Q29udHJhc3RBY2NlbnQ6IHJnYmEoNzcsIDc3LCA3NywgMC4xMzIpLFxuXG4gICAgLy8gSG92ZXJzXG4gICAgaGlnaENvbnRyYXN0SG92ZXI6IGxpZ2h0ZW4obGlnaHRlbigjMEYwRjBGLCA1JSksIDUlKSxcblxuICAgIGdyYXk6IGxpZ2h0ZW4oIzBGMEYwRiwgMTUlKSxcbiAgICBtaWRuaWdodDogbGlnaHRlbigjMEYwRjBGLCAxMCUpLFxuICAgIGljZUJsdWU6IGxpZ2h0ZW4oIzBGMEYwRiwgNyUpLFxuICAgIGJvcmRlckdyYXk6IGxpZ2h0ZW4oIzBGMEYwRiwgMTAlKSxcbiAgICB0aHJlYWRIb3ZlcjogcmdiYSgjMzYzNjM2LCAwLjcpLFxuICAgIHRocmVhZFNlbGVjdGVkOiByZ2JhKCMzNjM2MzYsIDAuNSksXG4gICAgbGlnaHRHcmF5Qm9yZGVyOiAjMkMyQzJDIDFweCBzb2xpZCxcbiAgICBncmF5VGV4dDogI2ZhZmFmYSxcbiAgICBncmF5SG92ZXI6ICMyRTJFMkUsXG4gICksXG4pO1xuIiwiLm1hZ2ljLWxpbmstcmVkaXJlY3QgPiAucHJvbXB0IHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICBmb250LXNpemU6IDE0cHg7XG4gIGNvbG9yOiAjN2U4ZjlmO1xufVxuLnRoZW1lLWxpZ2h0IC5tYWdpYy1saW5rLXJlZGlyZWN0ID4gLnByb21wdCB7XG4gIGNvbG9yOiAjN2U4ZjlmO1xufVxuLnRoZW1lLWRhcmsgLm1hZ2ljLWxpbmstcmVkaXJlY3QgPiAucHJvbXB0IHtcbiAgY29sb3I6ICNBQUFBQUE7XG59XG4ubWFnaWMtbGluay1yZWRpcmVjdCA+IC5wcm9tcHQgPiAubWFnaWMtbGluay1sb2FkaW5nIHtcbiAgbWFyZ2luOiAyMHB4IDA7XG4gIGFuaW1hdGlvbjogZmFkZS1pbiAxcyBlYXNlLWluLW91dCAwcyAxO1xufVxuLm1hZ2ljLWxpbmstcmVkaXJlY3QgPiAucHJvbXB0ID4gLm1hZ2ljLWxpbmstbG9hZGluZyA+IC5sb2FkZXItYWN0aXZlIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG4ubWFnaWMtbGluay1yZWRpcmVjdCA+IC5wcm9tcHQgPiAubWFnaWMtbGluay1sb2FkaW5nID4gLmxvYWRlci1hY3RpdmUgPiAuY3VzdG9tLWxvYWRlci1pbm5lciA+IGRpdiB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwNzljZWY7XG59XG4ubWFnaWMtbGluay1yZWRpcmVjdCA+IC5wcm9tcHQgPiAudGl0bGUge1xuICBmb250LXNpemU6IDIwcHg7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjI7XG59XG4udGhlbWUtbGlnaHQgLm1hZ2ljLWxpbmstcmVkaXJlY3QgPiAucHJvbXB0ID4gLnRpdGxlIHtcbiAgY29sb3I6ICM0NDQ0NDQ7XG59XG4udGhlbWUtZGFyayAubWFnaWMtbGluay1yZWRpcmVjdCA+IC5wcm9tcHQgPiAudGl0bGUge1xuICBjb2xvcjogI2U4ZThlODtcbn1cbi5tYWdpYy1saW5rLXJlZGlyZWN0ID4gLnByb21wdCA+IC5mYWxsYmFjay1zZWN0aW9uIHtcbiAgYW5pbWF0aW9uOiBmYWRlLWluIDFzIGVhc2UtaW4tb3V0IDBzIDE7XG4gIG1hcmdpbi10b3A6IDQwcHg7XG59XG4ubWFnaWMtbGluay1yZWRpcmVjdCA+IC5wcm9tcHQgPiAuZmFsbGJhY2stc2VjdGlvbiA+IC5kZXNjcmlwdGlvbiA+IC5mYWxsYmFjay1idXR0b24ge1xuICBtYXJnaW4tdG9wOiA1cHg7XG4gIGNvbG9yOiAjMDc5Y2VmO1xufVxuLm1hZ2ljLWxpbmstcmVkaXJlY3QgPiAucHJvbXB0ID4gLmZhbGxiYWNrLXNlY3Rpb24gPiAuZGVzY3JpcHRpb24gPiAuZmFsbGJhY2stYnV0dG9uOmhvdmVyIHtcbiAgY29sb3I6ICMwZGE0Zjg7XG59XG4ubWFnaWMtbGluay1yZWRpcmVjdCA+IC5wcm9tcHQgPiAuZGVzY3JpcHRpb24ge1xuICBtYXJnaW4tdG9wOiAxMHB4O1xuICBsaW5lLWhlaWdodDogMS4yOTtcbn1cbi5tYWdpYy1saW5rLXJlZGlyZWN0ID4gLnByb21wdCA+IC5kaXNjbGFpbWVyIHtcbiAgbWFyZ2luLXRvcDogNDBweDtcbn1cbi5tYWdpYy1saW5rLXJlZGlyZWN0ID4gLnByb21wdCA+IC5kb3dubG9hZC11cmwge1xuICBtYXJnaW4tdG9wOiA1cHg7XG59XG4ubWFnaWMtbGluay1yZWRpcmVjdCA+IC5wcm9tcHQgPiAuZG93bmxvYWQtdXJsIGEge1xuICBjb2xvcjogIzA3OWNlZjtcbn1cbi5tYWdpYy1saW5rLXJlZGlyZWN0ID4gLnByb21wdCA+IC53ZWJhcHAtc2VjdGlvbiB7XG4gIG1hcmdpbi10b3A6IDYwcHg7XG59XG4ubWFnaWMtbGluay1yZWRpcmVjdCA+IC5wcm9tcHQgPiAud2ViYXBwLXNlY3Rpb24gYnV0dG9uIHtcbiAgY29sb3I6ICMwNzljZWY7XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xufVxuLm1hZ2ljLWxpbmstcmVkaXJlY3QgPiAucHJvbXB0ID4gLnJlc2VuZC1jb250YWluZXIge1xuICBtYXJnaW4tdG9wOiA1cHg7XG4gIGZvbnQtc2l6ZTogMTJweDtcbn1cbi5tYWdpYy1saW5rLXJlZGlyZWN0ID4gLnByb21wdCA+IC5yZXNlbmQtY29udGFpbmVyID4gLnJlc2VuZC1jb2RlIHtcbiAgY29sb3I6ICMwNzljZWY7XG4gIHRyYW5zaXRpb246IDAuM3MgY29sb3IgZWFzZS1pbi1vdXQ7XG59XG4ubWFnaWMtbGluay1yZWRpcmVjdCA+IC5wcm9tcHQgPiAucmVzZW5kLWNvbnRhaW5lciA+IC5yZXNlbmQtY29kZTpob3ZlciB7XG4gIGNvbG9yOiAjMDY4Y2Q2O1xufVxuLm1hZ2ljLWxpbmstcmVkaXJlY3QgPiBmb3JtID4gLnN1Ym1pdC1idXR0b24ge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiA0MHB4O1xuICBib3JkZXItcmFkaXVzOiAzcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwNzljZWY7XG4gIGNvbG9yOiAjZmZmZmZmO1xuICBmb250LXNpemU6IDE0cHg7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjI5O1xuICBtYXJnaW4tdG9wOiAzMHB4O1xuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICB0cmFuc2l0aW9uOiAwLjFzIGJhY2tncm91bmQtY29sb3IgZWFzZS1pbi1vdXQ7XG59XG4ubWFnaWMtbGluay1yZWRpcmVjdCA+IGZvcm0gPiAuc3VibWl0LWJ1dHRvbjphY3RpdmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDY4Y2Q2O1xufVxuLm1hZ2ljLWxpbmstcmVkaXJlY3QgPiBmb3JtID4gLnN1Ym1pdC1idXR0b246aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTdhOGY4O1xufVxuLm1hZ2ljLWxpbmstcmVkaXJlY3QgPiAuc2lnbi1vdXQtY29udGFpbmVyIHtcbiAgbWFyZ2luLXRvcDogOHB4O1xuICB0ZXh0LWFsaWduOiByaWdodDtcbiAgZm9udC1zaXplOiAxMnB4O1xufVxuLm1hZ2ljLWxpbmstcmVkaXJlY3QgPiAuc2lnbi1vdXQtY29udGFpbmVyID4gLnNpZ24tb3V0IHtcbiAgdHJhbnNpdGlvbjogMC4ycyBjb2xvciBlYXNlLWluLW91dDtcbn1cbi50aGVtZS1saWdodCAubWFnaWMtbGluay1yZWRpcmVjdCA+IC5zaWduLW91dC1jb250YWluZXIgPiAuc2lnbi1vdXQge1xuICBjb2xvcjogIzdlOGY5Zjtcbn1cbi50aGVtZS1kYXJrIC5tYWdpYy1saW5rLXJlZGlyZWN0ID4gLnNpZ24tb3V0LWNvbnRhaW5lciA+IC5zaWduLW91dCB7XG4gIGNvbG9yOiAjQUFBQUFBO1xufVxuLm1hZ2ljLWxpbmstcmVkaXJlY3QgPiAuc2lnbi1vdXQtY29udGFpbmVyID4gLnNpZ24tb3V0OmhvdmVyIHtcbiAgY29sb3I6ICM2ZjgyOTQ7XG59IiwiQGZ1bmN0aW9uIHRoZW1lZCgka2V5KSB7XG4gIEByZXR1cm4gbWFwLWdldCgkdGhlbWUtbWFwLCAka2V5KTtcbn1cblxuQG1peGluIGFwcC1kcmFnZ2FibGUoKSB7XG4gIC13ZWJraXQtYXBwLXJlZ2lvbjogZHJhZztcblxuICAudGhlbWUtd2luZG93cyAmIHtcbiAgICAtd2Via2l0LWFwcC1yZWdpb246IG5vLWRyYWc7XG4gIH1cbn1cblxuQG1peGluIHRoZW1pZnkoJHRoZW1lczogJHRoZW1lcykge1xuICBAZWFjaCAkdGhlbWUsICRtYXAgaW4gJHRoZW1lcyB7XG5cbiAgICAudGhlbWUtI3skdGhlbWV9ICYge1xuICAgICAgJHRoZW1lLW1hcDogKCkgIWdsb2JhbDtcbiAgICAgIEBlYWNoICRrZXksICRzdWJtYXAgaW4gJG1hcCB7XG4gICAgICAgICR2YWx1ZTogbWFwLWdldChtYXAtZ2V0KCR0aGVtZXMsICR0aGVtZSksICcjeyRrZXl9Jyk7XG4gICAgICAgICR0aGVtZS1tYXA6IG1hcC1tZXJnZSgkdGhlbWUtbWFwLCAoJGtleTogJHZhbHVlKSkgIWdsb2JhbDtcbiAgICAgIH1cblxuICAgICAgQGNvbnRlbnQ7XG4gICAgICAkdGhlbWUtbWFwOiBudWxsICFnbG9iYWw7XG4gICAgfVxuXG4gIH1cbn1cblxuQG1peGluIHRoZW1pZnlCb2R5KCR0aGVtZXM6ICR0aGVtZXMpIHtcbiAgQGVhY2ggJHRoZW1lLCAkbWFwIGluICR0aGVtZXMge1xuXG4gICAgJi50aGVtZS0jeyR0aGVtZX0ge1xuICAgICAgJHRoZW1lLW1hcDogKCkgIWdsb2JhbDtcbiAgICAgIEBlYWNoICRrZXksICRzdWJtYXAgaW4gJG1hcCB7XG4gICAgICAgICR2YWx1ZTogbWFwLWdldChtYXAtZ2V0KCR0aGVtZXMsICR0aGVtZSksICcjeyRrZXl9Jyk7XG4gICAgICAgICR0aGVtZS1tYXA6IG1hcC1tZXJnZSgkdGhlbWUtbWFwLCAoJGtleTogJHZhbHVlKSkgIWdsb2JhbDtcbiAgICAgIH1cblxuICAgICAgQGNvbnRlbnQ7XG4gICAgICAkdGhlbWUtbWFwOiBudWxsICFnbG9iYWw7XG4gICAgfVxuXG4gIH1cbn1cblxuQG1peGluIHRoZW1pZnlTaW5nbGUoJG1vZGUsICR0aGVtZXM6ICR0aGVtZXMpIHtcbiAgQGVhY2ggJHRoZW1lLCAkbWFwIGluICR0aGVtZXMge1xuICAgIEBpZiAkbW9kZSA9PSAkdGhlbWUge1xuICAgICAgLnRoZW1lLSN7JHRoZW1lfSAmIHtcbiAgICAgICAgJHRoZW1lLW1hcDogKCkgIWdsb2JhbDtcbiAgICAgICAgQGVhY2ggJGtleSwgJHN1Ym1hcCBpbiAkbWFwIHtcbiAgICAgICAgICAkdmFsdWU6IG1hcC1nZXQobWFwLWdldCgkdGhlbWVzLCAkdGhlbWUpLCAnI3ska2V5fScpO1xuICAgICAgICAgICR0aGVtZS1tYXA6IG1hcC1tZXJnZSgkdGhlbWUtbWFwLCAoJGtleTogJHZhbHVlKSkgIWdsb2JhbDtcbiAgICAgICAgfVxuXG4gICAgICAgIEBjb250ZW50O1xuICAgICAgICAkdGhlbWUtbWFwOiBudWxsICFnbG9iYWw7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbkBtaXhpbiBib3VuY2UtcGl4ZWxzKCRwaXhlbHMpIHtcbiAgQGtleWZyYW1lcyBib3VuY2UtcGl4ZWxzIHtcbiAgICAwJSB7IHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtJHBpeGVscykgfVxuICAgIDUwJSB7IHRyYW5zZm9ybTogdHJhbnNsYXRlWSgkcGl4ZWxzKSB9XG4gICAgMTAwJSB7IHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtJHBpeGVscykgfVxuICB9XG4gIGFuaW1hdGlvbjogYm91bmNlLXBpeGVscyAycyBlYXNlLWluLW91dCBpbmZpbml0ZTtcbn1cblxuQG1peGluIGZvcmNlLWdwdSgpIHtcbiAgLXdlYmtpdC1iYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG4gIC1tb3otYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMSk7XG4gIC1tcy10cmFuc2Zvcm06IHNjYWxlKDEpO1xuICAtbW96LXRyYW5zZm9ybTogc2NhbGUoMSk7XG4gIGJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgdHJhbnNmb3JtOiBzY2FsZSgxKTtcbn1cblxuQG1peGluIGJsdXIoJHBpeGVscykge1xuICAtd2Via2l0LWZpbHRlcjogYmx1cigkcGl4ZWxzKTtcbiAgLW1vei1maWx0ZXI6IGJsdXIoJHBpeGVscyk7XG4gIC1vLWZpbHRlcjogYmx1cigkcGl4ZWxzKTtcbiAgLW1zLWZpbHRlcjogYmx1cigkcGl4ZWxzKTtcbiAgZmlsdGVyOiBibHVyKCRwaXhlbHMpO1xufVxuXG5AbWl4aW4gZW5hYmxlLXNlbGVjdGlvbigpIHtcbiAgLXdlYmtpdC10b3VjaC1jYWxsb3V0OiBhdXRvOyAvKiBpT1MgU2FmYXJpICovXG4gIC13ZWJraXQtdXNlci1zZWxlY3Q6IHRleHQ7IC8qIFNhZmFyaSAqL1xuICAta2h0bWwtdXNlci1zZWxlY3Q6IHRleHQ7IC8qIEtvbnF1ZXJvciBIVE1MICovXG4gIC1tb3otdXNlci1zZWxlY3Q6IHRleHQ7IC8qIEZpcmVmb3ggKi9cbiAgLW1zLXVzZXItc2VsZWN0OiB0ZXh0OyAvKiBJbnRlcm5ldCBFeHBsb3Jlci9FZGdlICovXG4gIHVzZXItc2VsZWN0OiB0ZXh0O1xuICAtd2Via2l0LWFwcC1yZWdpb246IG5vLWRyYWc7XG4gIGN1cnNvcjogYXV0bztcbn1cblxuQG1peGluIGRpc2FibGUtc2VsZWN0aW9uKCkge1xuICAtd2Via2l0LXRvdWNoLWNhbGxvdXQ6IG5vbmU7IC8qIGlPUyBTYWZhcmkgKi9cbiAgLXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTsgLyogU2FmYXJpICovXG4gIC1raHRtbC11c2VyLXNlbGVjdDogbm9uZTsgLyogS29ucXVlcm9yIEhUTUwgKi9cbiAgLW1vei11c2VyLXNlbGVjdDogbm9uZTsgLyogRmlyZWZveCAqL1xuICAtbXMtdXNlci1zZWxlY3Q6IG5vbmU7IC8qIEludGVybmV0IEV4cGxvcmVyL0VkZ2UgKi9cbiAgdXNlci1zZWxlY3Q6IG5vbmU7XG4gIGN1cnNvcjogZGVmYXVsdDtcbn1cblxuQG1peGluIGVuYWJsZS1mb250LXNtb290aGluZygpIHtcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7XG59XG5cbkBtaXhpbiBkaXNhYmxlLWZvbnQtc21vb3RoaW5nKCkge1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhdXRvO1xuICAtbW96LW9zeC1mb250LXNtb290aGluZzogYXV0bztcbn1cblxuQG1peGluIHRydW5jYXRlLWF0KCRsaW5lcykge1xuICAvLyBlbGxpcHNpc1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gIHdvcmQtd3JhcDogYnJlYWstd29yZDtcbiAgd29yZC1icmVhazogYnJlYWstYWxsO1xuXG4gIC8vIG11bHRpbGluZSBlbGxpcHNlcyBmb3Igd2Via2l0IGJyb3dzZXJzXG4gIC8vIGFsbCBvdGhlciBicm93c2VycyB3aWxsIGxpbWl0IHRvIDEgbGluZSxcbiAgLy8gICBidXQgbm90IGdldCBlbGxpcHNpc1xuICBAaWYgJGxpbmVzID4gMSB7XG4gICAgLXdlYmtpdC1saW5lLWNsYW1wOiAkbGluZXM7XG4gICAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgICAvLyBOT1RFKFNIQUhBTik6IFRoZSBmb2xsb3dpbmcgYnJlYWtzIHRoZSAuLi4gaW4gbm9uLXdlYmtpdCBicm93c2Vyc1xuICAgIHdoaXRlLXNwYWNlOiBub3JtYWw7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIH1cbn1cblxuQG1peGluIGRyb3AtcmlnaHQoJHNlY29uZHMpIHtcbiAgYW5pbWF0aW9uOiBkcm9wLXJpZ2h0ICRzZWNvbmRzIGVhc2UtaW4tb3V0IDBzIDE7XG59XG5cbkBtaXhpbiBkcm9wLWluKCRzZWNvbmRzKSB7XG4gIGFuaW1hdGlvbjogZHJvcC1pbiAkc2Vjb25kcyBlYXNlLWluLW91dCAwcyAxO1xufVxuXG5AbWl4aW4gZXhwYW5kLXZlcnRpY2FsKCRzZWNvbmRzKSB7XG4gIHRyYW5zZm9ybS1vcmlnaW46IHRvcDtcbiAgYW5pbWF0aW9uOiBleHBhbmQtdmVydGljYWwgJHNlY29uZHMgZWFzZS1pbi1vdXQgMHMgMTtcbn1cblxuQG1peGluIGZhZGUtaW4oJHNlY29uZHMpIHtcbiAgYW5pbWF0aW9uOiBmYWRlLWluICRzZWNvbmRzIGVhc2UtaW4tb3V0IDBzIDE7XG59XG5cbkBtaXhpbiBmYWRlLW91dCgkc2Vjb25kcykge1xuICBhbmltYXRpb246IGZhZGUtb3V0ICRzZWNvbmRzIGVhc2UtaW4tb3V0IDBzIDE7XG4gIGFuaW1hdGlvbi1maWxsLW1vZGU6IGZvcndhcmRzO1xufVxuXG5AbWl4aW4gZXhwYW5kKCRzZWNvbmRzKSB7XG4gIGFuaW1hdGlvbjogZXhwYW5kICRzZWNvbmRzIGVhc2UtaW4tb3V0IDBzIDE7XG59XG5cbkBtaXhpbiBicm93c2VyLWRlZmF1bHRzKCkge1xuICBAaW5jbHVkZSBkaXNhYmxlLWZvbnQtc21vb3RoaW5nKCk7XG4gIGxpbmUtaGVpZ2h0OiBpbml0aWFsO1xuXG4gICoge1xuICAgIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICAgIGxldHRlci1zcGFjaW5nOiBpbml0aWFsO1xuICB9XG5cbiAgYiwgc3Ryb25nIHtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgfVxuXG4gIGgxIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBmb250LXNpemU6IDJlbTtcbiAgICBtYXJnaW4tdG9wOiAwLjY3ZW07XG4gICAgbWFyZ2luLWJvdHRvbTogMC42N2VtO1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgfVxuXG4gIGgyIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBmb250LXNpemU6IDEuNWVtO1xuICAgIG1hcmdpbi10b3A6IDAuODNlbTtcbiAgICBtYXJnaW4tYm90dG9tOiAwLjgzZW07XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICB9XG5cbiAgaDMge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGZvbnQtc2l6ZTogMS4xN2VtO1xuICAgIG1hcmdpbi10b3A6IDFlbTtcbiAgICBtYXJnaW4tYm90dG9tOiAxZW07XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICB9XG5cbiAgaDQge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGZvbnQtc2l6ZTogMWVtO1xuICAgIG1hcmdpbi10b3A6IDEuMzNlbTtcbiAgICBtYXJnaW4tYm90dG9tOiAxLjMzZW07XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICB9XG5cbiAgaDUge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGZvbnQtc2l6ZTogLjgzZW07XG4gICAgbWFyZ2luLXRvcDogMS42N2VtO1xuICAgIG1hcmdpbi1ib3R0b206IDEuNjdlbTtcbiAgICBtYXJnaW4tbGVmdDogMDtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIH1cblxuICBoNiB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgZm9udC1zaXplOiAuNjdlbTtcbiAgICBtYXJnaW4tdG9wOiAyLjMzZW07XG4gICAgbWFyZ2luLWJvdHRvbTogMi4zM2VtO1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgfVxuXG4gIHAge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIG1hcmdpbi10b3A6IDFlbTtcbiAgICBtYXJnaW4tYm90dG9tOiAxZW07XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICB9XG59XG4iLCIvLyBpZiB0aGUgZm9sbG93aW5nIGlzIHVwZGF0ZWQsIHNob3VsZCBhbHNvIHVwZGF0ZSBgbGliL3R5cG9ncmFwaHkudHNgXG4kZGVmYXVsdEZvbnQ6IC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCxcbiAgXCJTZWdvZSBVSVwiLCBcIlJvYm90b1wiLCBcIk94eWdlblwiLCBcIlVidW50dVwiLCBcIkNhbnRhcmVsbFwiLFxuICBcIkZpcmEgU2Fuc1wiLCBcIkRyb2lkIFNhbnNcIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLFxuICBzYW5zLXNlcmlmO1xuXG4kcmVndWxhcjogNDAwO1xuJG1lZGl1bTogNTAwO1xuJHNlbWlib2xkOiA2MDA7XG4kYm9sZDogNzAwO1xuIl19XSk7Cg=="}]}