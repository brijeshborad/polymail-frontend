{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/worker/bus.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/worker/bus.ts","mtime":1675280254123},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgT2JzZXJ2YWJsZSwgU3ViamVjdCB9IGZyb20gJ3J4anMnOwppbXBvcnQgeyBpc0xvZ2dlZEluIH0gZnJvbSAnQHNyYy9hcGkvYmFzZSc7Ci8vIEJ1cyBpcyBhIG1lc3NhZ2UgYnVzIHVzZWQgYnkgZW50aXRpZXMgaW5zaWRlIHRoZSB3b3JrZXIuCnZhciBidXMgPSBuZXcgU3ViamVjdCgpOwpleHBvcnQgdmFyIGdldEJ1cyA9IGZ1bmN0aW9uICgpIHsKICAgIHJldHVybiBidXM7Cn07CnZhciBnZW5lcmF0ZVJlcXVlc3RJZCA9IGZ1bmN0aW9uICgpIHsKICAgIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZQogICAgcmV0dXJuIE1hdGgucmFuZG9tKCk7Cn07CmV4cG9ydCB2YXIgQnVzRXZlbnROYW1lOwooZnVuY3Rpb24gKEJ1c0V2ZW50TmFtZSkgewogICAgQnVzRXZlbnROYW1lWyJDbGVhckFjY291bnRSZXNvdXJjZXMiXSA9ICJjbGVhckFjY291bnRSZXNvdXJjZXMiOwogICAgQnVzRXZlbnROYW1lWyJDbGVhckVycm9ycyJdID0gImNsZWFyRXJyb3JzIjsKICAgIEJ1c0V2ZW50TmFtZVsiQ2xlYXJSZXNvdXJjZVJlcXVlc3QiXSA9ICJjbGVhclJlc291cmNlUmVxdWVzdCI7CiAgICBCdXNFdmVudE5hbWVbIkNsZWFyUmVzb3VyY2VSZXNwb25zZSJdID0gImNsZWFyUmVzb3VyY2VSZXNwb25zZSI7CiAgICBCdXNFdmVudE5hbWVbIkNhbmNlbFN5bmMiXSA9ICJjYW5jZWxTeW5jIjsKICAgIEJ1c0V2ZW50TmFtZVsiSGlzdG9yeUNsZWFyQ2FjaGUiXSA9ICJoaXN0b3J5Q2xlYXJDYWNoZSI7CiAgICBCdXNFdmVudE5hbWVbIlRyaWdnZXJTeW5jIl0gPSAidHJpZ2dlclN5bmMiOwogICAgQnVzRXZlbnROYW1lWyJVbmRvTW92ZSJdID0gInVuZG9Nb3ZlIjsKICAgIEJ1c0V2ZW50TmFtZVsidXBkYXRlTGlzdFVucmVhZENvdW50Il0gPSAidXBkYXRlTGlzdFVucmVhZENvdW50IjsKICAgIEJ1c0V2ZW50TmFtZVsiVXBkYXRlVGVhbSJdID0gInVwZGF0ZVRlYW0iOwogICAgQnVzRXZlbnROYW1lWyJVcGRhdGVNYWlsQ291bnQiXSA9ICJ1cGRhdGVNYWlsQ291bnQiOwp9KShCdXNFdmVudE5hbWUgfHwgKEJ1c0V2ZW50TmFtZSA9IHt9KSk7Ci8vIGNsZWFyRXJyb3JzIGNsZWFycyBhbnkgZXJyb3IgYmFja29mZnMKdmFyIGNsZWFyRXJyb3JzID0gZnVuY3Rpb24gKCkgewogICAgYnVzLm5leHQoeyBuYW1lOiBCdXNFdmVudE5hbWUuQ2xlYXJFcnJvcnMgfSk7Cn07Ci8vIGNsZWFyUmVzb3VyY2VSZXF1ZXN0IHN1Ym1pdHMgYSBjbGVhciByZXNvdXJjZSByZXF1ZXN0CnZhciBjbGVhclJlc291cmNlUmVxdWVzdCA9IGZ1bmN0aW9uIChzdG9yZSwgdGVhbSkgewogICAgcmV0dXJuIE9ic2VydmFibGUuY3JlYXRlKGZ1bmN0aW9uIChvKSB7CiAgICAgICAgdmFyIHJlcXVlc3RJZCA9IGdlbmVyYXRlUmVxdWVzdElkKCk7CiAgICAgICAgdmFyIHMgPSBidXMuc3Vic2NyaWJlKGZ1bmN0aW9uIChldmVudCkgewogICAgICAgICAgICBpZiAoZXZlbnQubmFtZSA9PT0gQnVzRXZlbnROYW1lLkNsZWFyUmVzb3VyY2VSZXNwb25zZSAmJiBldmVudC5kYXRhLnJlcXVlc3RJZCA9PT0gcmVxdWVzdElkKSB7CiAgICAgICAgICAgICAgICBvLm5leHQobnVsbCk7CiAgICAgICAgICAgICAgICBvLmNvbXBsZXRlKCk7CiAgICAgICAgICAgICAgICBzLnVuc3Vic2NyaWJlKCk7CiAgICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgICBidXMubmV4dCh7IG5hbWU6IEJ1c0V2ZW50TmFtZS5DbGVhclJlc291cmNlUmVxdWVzdCwgZGF0YTogeyBzdG9yZTogc3RvcmUsIHJlcXVlc3RJZDogcmVxdWVzdElkLCB0ZWFtOiB0ZWFtIH0gfSk7CiAgICB9KTsKfTsKLy8gY2xlYXJSZXNvdXJjZVJlc3BvbnNlIHN1Ym1pdHMgYSBjbGVhciByZXNvdXJjZSByZXNwb25zZS4KdmFyIGNsZWFyUmVzb3VyY2VSZXNwb25zZSA9IGZ1bmN0aW9uIChyZXF1ZXN0SWQsIHRlYW0pIHsKICAgIGJ1cy5uZXh0KHsgbmFtZTogQnVzRXZlbnROYW1lLkNsZWFyUmVzb3VyY2VSZXNwb25zZSwgZGF0YTogeyByZXF1ZXN0SWQ6IHJlcXVlc3RJZCwgdGVhbTogdGVhbSB9IH0pOwp9OwovLyBjbGVhckFjY291bnRSZXNvdXJjZXMgY2xlYXJzIGFsbCByZXNvdXJjZSBmb3IgYSBwYXJ0aWN1bGFyIGFjY291bnQuCnZhciBjbGVhckFjY291bnRSZXNvdXJjZXMgPSBmdW5jdGlvbiAoc3RvcmUsIGFjY291bnQpIHsKICAgIGJ1cy5uZXh0KHsgbmFtZTogQnVzRXZlbnROYW1lLkNsZWFyQWNjb3VudFJlc291cmNlcywgZGF0YTogeyBzdG9yZTogc3RvcmUsIGFjY291bnQ6IGFjY291bnQgfSB9KTsKfTsKLy8gaGlzdG9yeUNsZWFyQ2FjaGUgY2xlYXJzIG91dCBhbGwgcmVzb3VyY2VzIGluIHRoZSBjYWNoZS4KLy8gVGhpcyBpcyB1c2VkIGJ5IEhpc3RvcnlTeW5jCnZhciBoaXN0b3J5Q2xlYXJDYWNoZSA9IGZ1bmN0aW9uICgpIHsKICAgIGJ1cy5uZXh0KHsgbmFtZTogQnVzRXZlbnROYW1lLkhpc3RvcnlDbGVhckNhY2hlIH0pOwp9OwovLyB0cmlnZ2VyU3luYyB0cmlnZ2VycyBzeW5jIGZvciBzcGVjaWZpZWQgd29ya2VyIG9yIGFsbCBzZXJ2aWNlcy4KdmFyIHRyaWdnZXJTeW5jID0gZnVuY3Rpb24gKHdvcmtlcklkLCBiYWNrdXBJbnRlcnZhbCkgewogICAgLy8gTk9URShTSEFIQU4pOiBEb24ndCB3YW50IHRvIHRyaWdnZXIgc3luYyBpZiBub3QgbG9nZ2VkIGluCiAgICAvLyBUaGlzIGlzIGFsc28gbmVlZGVkIG9uIHdvcmtlciBzdGFydCwgYmVjYXVzZSBhIHN5bmMgY2FuIHRyaWdnZXIKICAgIC8vICAgYmVmb3JlIHdvcmtlciByZWNlaXZlcyBhdXRoIHRva2VuLCB3aGljaCB3aWxsIGNhdXNlIGEgdXNlciB0byBiZSBsb2dnZWQKICAgIC8vICAgb3V0IGluIHRoZSB3b3JrZXIgYW5kIGNsZWFyIGNhY2hlCiAgICBpZiAoaXNMb2dnZWRJbigpKSB7CiAgICAgICAgYnVzLm5leHQoeyBuYW1lOiBCdXNFdmVudE5hbWUuVHJpZ2dlclN5bmMsIGRhdGE6IHsgd29ya2VySWQ6IHdvcmtlcklkLCBiYWNrdXBJbnRlcnZhbDogYmFja3VwSW50ZXJ2YWwgfSB9KTsKICAgIH0KfTsKdmFyIGNhbmNlbFN5bmMgPSBmdW5jdGlvbiAod29ya2VySWQpIHsKICAgIGJ1cy5uZXh0KHsgbmFtZTogQnVzRXZlbnROYW1lLkNhbmNlbFN5bmMsIGRhdGE6IHsgd29ya2VySWQ6IHdvcmtlcklkIH0gfSk7Cn07Ci8vIFVuZG8gbW92ZSB3aWxsIHJldmVyc2UgdGhlIGxhc3QgcmV2ZXJzaWJsZSBjb21taXQgZm9yIGEgYm94CnZhciB1bmRvTW92ZSA9IGZ1bmN0aW9uIChib3gpIHsKICAgIGJ1cy5uZXh0KHsgbmFtZTogQnVzRXZlbnROYW1lLlVuZG9Nb3ZlLCBkYXRhOiB7IGJveDogYm94IH0gfSk7Cn07Ci8vIFVwZGF0ZU1haWxDb3VudCB0cmlnZ2VycyB1cGRhdGluZyBtYWlsY291bnQgZm9yIHNwZWNpZmllZCBhY2NvdW50CnZhciB1cGRhdGVNYWlsQ291bnQgPSBmdW5jdGlvbiAoYWNjb3VudElkKSB7CiAgICBidXMubmV4dCh7IG5hbWU6IEJ1c0V2ZW50TmFtZS5VcGRhdGVNYWlsQ291bnQsIGRhdGE6IHsgYWNjb3VudElkOiBhY2NvdW50SWQgfSB9KTsKfTsKdmFyIHVwZGF0ZUxpc3RVbnJlYWRDb3VudCA9IGZ1bmN0aW9uIChhY2NvdW50SWQsIGxpc3QpIHsKICAgIGJ1cy5uZXh0KHsgbmFtZTogQnVzRXZlbnROYW1lLnVwZGF0ZUxpc3RVbnJlYWRDb3VudCwgZGF0YTogeyBhY2NvdW50SWQ6IGFjY291bnRJZCwgbGlzdDogbGlzdCB9IH0pOwp9OwovLyB1cGRhdGVUZWFtIHByb3BvZ2F0ZXMgdGVhbSBjaGFuZ2Ugb3IgcmVtb3ZhbCBldmVudHMuCnZhciB1cGRhdGVUZWFtID0gZnVuY3Rpb24gKHRlYW0pIHsKICAgIGJ1cy5uZXh0KHsgbmFtZTogQnVzRXZlbnROYW1lLlVwZGF0ZVRlYW0sIGRhdGE6IHsgdGVhbTogdGVhbSB9IH0pOwp9OwpleHBvcnQgZGVmYXVsdCB7CiAgICBjYW5jZWxTeW5jOiBjYW5jZWxTeW5jLAogICAgY2xlYXJBY2NvdW50UmVzb3VyY2VzOiBjbGVhckFjY291bnRSZXNvdXJjZXMsCiAgICBjbGVhckVycm9yczogY2xlYXJFcnJvcnMsCiAgICBjbGVhclJlc291cmNlUmVxdWVzdDogY2xlYXJSZXNvdXJjZVJlcXVlc3QsCiAgICBjbGVhclJlc291cmNlUmVzcG9uc2U6IGNsZWFyUmVzb3VyY2VSZXNwb25zZSwKICAgIGhpc3RvcnlDbGVhckNhY2hlOiBoaXN0b3J5Q2xlYXJDYWNoZSwKICAgIHRyaWdnZXJTeW5jOiB0cmlnZ2VyU3luYywKICAgIHVuZG9Nb3ZlOiB1bmRvTW92ZSwKICAgIHVwZGF0ZU1haWxDb3VudDogdXBkYXRlTWFpbENvdW50LAogICAgdXBkYXRlTGlzdFVucmVhZENvdW50OiB1cGRhdGVMaXN0VW5yZWFkQ291bnQsCiAgICB1cGRhdGVUZWFtOiB1cGRhdGVUZWFtLAp9Owo="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/worker/bus.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/worker/bus.ts"],"names":[],"mappings":"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","sourcesContent":["import { Observable, Observer, Subject } from 'rxjs';\nimport { ThreadBox } from '@src/types';\nimport { Stores } from '@src/lib/db';\nimport { isLoggedIn } from '@src/api/base';\n\n// Bus is a message bus used by entities inside the worker.\nconst bus = new Subject<BusEvent>();\n\nexport const getBus = (): Subject<BusEvent> => {\n  return bus;\n};\n\nexport interface BusEvent {\n  name: BusEventName;\n  data?: any;\n  requestId?: number;\n}\n\nconst generateRequestId = (): number => {\n  // tslint:disable-next-line\n  return Math.random();\n};\n\nexport enum BusEventName {\n  ClearAccountResources = 'clearAccountResources',\n  ClearErrors = 'clearErrors',\n  ClearResourceRequest = 'clearResourceRequest',\n  ClearResourceResponse = 'clearResourceResponse',\n  CancelSync = 'cancelSync',\n  HistoryClearCache = 'historyClearCache',\n  TriggerSync = 'triggerSync',\n  UndoMove = 'undoMove',\n  updateListUnreadCount = 'updateListUnreadCount',\n  UpdateTeam = 'updateTeam',\n  UpdateMailCount = 'updateMailCount',\n}\n\n// clearErrors clears any error backoffs\nconst clearErrors = () => {\n  bus.next({ name: BusEventName.ClearErrors });\n};\n\n// clearResourceRequest submits a clear resource request\nconst clearResourceRequest = (store: Stores, team?: string): Observable<null> => {\n  return Observable.create((o: Observer<null>) => {\n    const requestId = generateRequestId();\n    const s = bus.subscribe((event: BusEvent) => {\n      if (event.name === BusEventName.ClearResourceResponse && event.data.requestId === requestId) {\n        o.next(null);\n        o.complete();\n        s.unsubscribe();\n      }\n    });\n    bus.next({ name: BusEventName.ClearResourceRequest, data: { store, requestId, team } });\n  });\n};\n\n// clearResourceResponse submits a clear resource response.\nconst clearResourceResponse = (requestId: number, team?: string) => {\n  bus.next({ name: BusEventName.ClearResourceResponse, data: { requestId, team } });\n};\n\n// clearAccountResources clears all resource for a particular account.\nconst clearAccountResources = (store: Stores, account: string) => {\n  bus.next({ name: BusEventName.ClearAccountResources, data: { store, account } });\n};\n\n// historyClearCache clears out all resources in the cache.\n// This is used by HistorySync\nconst historyClearCache = () => {\n  bus.next({ name: BusEventName.HistoryClearCache });\n};\n\n// triggerSync triggers sync for specified worker or all services.\nconst triggerSync = (workerId?: string, backupInterval?: boolean) => {\n  // NOTE(SHAHAN): Don't want to trigger sync if not logged in\n  // This is also needed on worker start, because a sync can trigger\n  //   before worker receives auth token, which will cause a user to be logged\n  //   out in the worker and clear cache\n  if (isLoggedIn()) {\n    bus.next({ name: BusEventName.TriggerSync, data: { workerId, backupInterval } });\n  }\n};\n\nconst cancelSync = (workerId?: string) => {\n  bus.next({ name: BusEventName.CancelSync, data: { workerId } });\n};\n\n// Undo move will reverse the last reversible commit for a box\nconst undoMove = (box: ThreadBox) => {\n  bus.next({ name: BusEventName.UndoMove, data: { box } });\n};\n\n// UpdateMailCount triggers updating mailcount for specified account\nconst updateMailCount = (accountId: string) => {\n  bus.next({ name: BusEventName.UpdateMailCount, data: { accountId } });\n};\n\nconst updateListUnreadCount = (accountId: string, list: string) => {\n  bus.next({ name: BusEventName.updateListUnreadCount, data: { accountId, list } });\n};\n\n// updateTeam propogates team change or removal events.\nconst updateTeam = (team: string) => {\n  bus.next({ name: BusEventName.UpdateTeam, data: { team } });\n};\n\nexport default {\n  cancelSync,\n  clearAccountResources,\n  clearErrors,\n  clearResourceRequest,\n  clearResourceResponse,\n  historyClearCache,\n  triggerSync,\n  undoMove,\n  updateMailCount,\n  updateListUnreadCount,\n  updateTeam,\n};\n"]}]}