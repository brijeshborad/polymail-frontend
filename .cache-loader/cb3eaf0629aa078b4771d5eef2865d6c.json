{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/sequenceRecipients.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/sequenceRecipients.ts","mtime":1675280254058},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/sequenceRecipients.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/sequenceRecipients.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,OAAO,EACL,YAAY,GAIb,MAAM,YAAY,CAAC;AAIpB,OAAO,EAAE,UAAU,EAAE,MAAM,MAAM,CAAC;AAClC,OAAO,EACL,uBAAuB,EAAE,qBAAqB,EAC9C,yBAAyB,EAAE,uBAAuB,EAClD,yBAAyB,EAAE,uBAAuB,EAClD,yBAAyB,EAAE,uBAAuB,EAClD,uBAAuB,EAAE,yBAAyB,EAQlD,8BAA8B,EAC9B,2BAA2B,EAG3B,2BAA2B,EAC3B,8BAA8B,EAC9B,6BAA6B,EAC7B,2BAA2B,GAC5B,MAAM,+BAA+B,CAAC;AACvC,OAAO,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAE7C,OAAO,EAAE,4BAA4B,EAAE,MAAM,oCAAoC,CAAC;AAClF,OAAO,EAAE,WAAW,EAAE,UAAU,EAAE,MAAM,oBAAoB,CAAC;AAE7D,IAAM,yBAAyB,GAG3B,UAAC,OAAO,EAAE,KAAK,EAAE,IAAI;IACrB,OAAA,OAAO,CAAC,MAAM,CAAC,uBAAuB,CAAC;SACpC,MAAM,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,MAAM,KAAK,YAAY,CAAC,KAAK,EAApC,CAAoC,CAAC;SACtD,OAAO,CAAC,UAAA,MAAM;QACb,OAAA,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;aACtC,GAAG,CAAC,UAAA,MAAM,IAAI,OAAA,qBAAqB,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,EAA1C,CAA0C,CAAC;aACzD,KAAK,CAAC,UAAC,CAAQ,IAAK,OAAA,UAAU,CAAC,EAAE,CAAC,qBAAqB,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAApD,CAAoD,CAAC;IAF5E,CAE4E,CAC/E;AAND,CAMC,CAAC;AAEN,IAAM,2BAA2B,GAGV,UAAC,OAAO,EAAE,KAAK,EAAE,IAAI;IAC1C,OAAA,OAAO,CAAC,MAAM,CAAC,yBAAyB,CAAC;SACtC,MAAM,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,MAAM,KAAK,YAAY,CAAC,KAAK,EAApC,CAAoC,CAAC;SACtD,OAAO,CAAC,UAAC,MAA2E;QACnF,OAAA,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAC5B,MAAM,CAAC,IAAI,CAAC,QAAQ,EACpB,MAAM,CAAC,IAAI,CAAC,SAAS,EACrB,MAAM,CAAC,IAAI,CAAC,WAAW,EACvB,MAAM,CAAC,IAAI,CAAC,eAAe,EAC3B,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAC7B;aACE,OAAO,CAAC,UAAA,MAAM;YACb,OAAA,UAAU,CAAC,KAAK,CACd,UAAU,CAAC,EAAE,CAAC,uBAAuB,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAC5D;QAFD,CAEC,CACF;aACA,KAAK,CAAC,UAAA,KAAK,IAAI,OAAA,UAAU,CAAC,KAAK,CAC9B,UAAU,CAAC,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAC9B,UAAU,CAAC,EAAE,CAAC,uBAAuB,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAC3D,EAHe,CAGf,CAAC;IAfJ,CAeI,CACL;AAnBH,CAmBG,CAAC;AAEN,IAAM,2BAA2B,GAE3B,UAAC,OAAO,EAAE,KAAK,EAAE,IAAI;IACvB,OAAA,OAAO,CAAC,MAAM,CAAC,yBAAyB,CAAC;SACtC,MAAM,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,MAAM,KAAK,YAAY,CAAC,KAAK;WACjD,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,0BAA0B;WAC7C,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,0BAA2B,CAAC,UAAU;WACzD,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,0BAA2B,CAAC,OAAO,EAHzC,CAGyC,CAAC;SAC3D,OAAO,CAAC,UAAC,MAAgE;QACxE,IAAM,0BAA0B,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC,0BAA2B,CAAC;QAChF,IAAM,UAAU,GAAG,0BAA0B,CAAC,UAAU;aACrD,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,CAAC,CAAC,IAAI,EAAR,CAAQ,CAAC;aACrB,GAAG,CAAC,UAAC,CAA6C;YACjD,IAAM,SAAS,GAAG,EAAE,CAAC;YACrB,0BAA0B,CAAC,OAAO,CAAC,OAAO,CAAC,UAAC,CAAC;gBAC3C,IAAI,CAAC,CAAC,WAAW,EAAE,KAAK,OAAO,IAAI,CAAC,CAAC,WAAW,EAAE,KAAK,WAAW;oBAChE,CAAC,CAAC,WAAW,EAAE,KAAK,YAAY,IAAI,CAAC,CAAC,IAAI,EAAE;oBAC5C,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;iBAC5D;YACH,CAAC,CAAC,CAAC;YAEH,6BACK,CAAC,CAAC,IAAwC,KAC7C,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,WAAW,EAC/B,SAAS,WAAA,IACT;QACJ,CAAC,CAAC,CAAC;QAEL,OAAO,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC;YACpC,QAAQ,EAAE,MAAM,CAAC,IAAI,CAAC,QAAQ;YAC9B,UAAU,YAAA;SACX,CAAC;YACF,uCAAuC;aACpC,EAAE,CAAC;YACF,IAAM,KAAK,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;YAC/B,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;YACzB,WAAW,CAAC,UAAU,CAAC,0BAA0B,EAAE;gBACjD,QAAQ,EAAE,MAAM,CAAC,IAAI,CAAC,QAAQ;gBAC9B,KAAK,EAAE,UAAU,CAAC,MAAM;gBACxB,IAAI,EAAE,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC;oBAClC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI;oBACnC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAK,CAAC,IAAI;aAC5C,CAAC,CAAC;QACL,CAAC,CAAC;aACD,GAAG,CAAC,UAAA,MAAM,IAAI,OAAA,uBAAuB,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,EAA5C,CAA4C,CAAC;aAC3D,KAAK,CAAC,UAAC,CAAQ,IAAK,OAAA,UAAU,CAAC,KAAK,CACnC,UAAU,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAC1B,UAAU,CAAC,EAAE,CAAC,uBAAuB,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CACvD,EAHoB,CAGpB,CAAC,CAAC;IACP,CAAC,CACF;AA/CD,CA+CC,CAAC;AAEN,IAAM,2BAA2B,GAE7B,UAAC,OAAO,EAAE,KAAK,EAAE,IAAI;IACvB,OAAA,OAAO,CAAC,MAAM,CAAC,yBAAyB,CAAC;SACtC,MAAM,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,MAAM,KAAK,YAAY,CAAC,KAAK,EAApC,CAAoC,CAAC;SACtD,OAAO,CAAC,UAAC,MAAoD;QAC5D,OAAA,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;aACxC,GAAG,CAAC,UAAA,MAAM,IAAI,OAAA,uBAAuB,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,EAA5C,CAA4C,CAAC;aAC3D,KAAK,CAAC,UAAC,CAAQ,IAAK,OAAA,UAAU,CAAC,KAAK,CACnC,UAAU,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAC1B,UAAU,CAAC,EAAE,CAAC,uBAAuB,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CACvD,EAHoB,CAGpB,CAAC;IALJ,CAKI,CACL;AATH,CASG,CAAC;AAEN,IAAM,+BAA+B,GAEjC,UAAC,OAAO,EAAE,KAAK,EAAE,IAAI;IACvB,OAAA,OAAO,CAAC,MAAM,CAAC,6BAA6B,CAAC;SAC1C,MAAM,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,MAAM,KAAK,YAAY,CAAC,KAAK,EAApC,CAAoC,CAAC;SACtD,OAAO,CAAC,UAAC,MAAoD;QAC5D,OAAA,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC;aAC5C,GAAG,CAAC,UAAA,MAAM,IAAI,OAAA,2BAA2B,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,EAAhD,CAAgD,CAAC;aAC/D,KAAK,CAAC,UAAC,CAAQ,IAAK,OAAA,UAAU,CAAC,KAAK,CACnC,UAAU,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAC1B,UAAU,CAAC,EAAE,CAAC,2BAA2B,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAC3D,EAHoB,CAGpB,CAAC;IALJ,CAKI,CACL;AATH,CASG,CAAC;AAEN,IAAM,2BAA2B,GAE7B,UAAC,OAAO,EAAE,KAAK,EAAE,IAAI;IACvB,OAAA,OAAO,CAAC,MAAM,CAAC,yBAAyB,CAAC;SACtC,MAAM,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,MAAM,KAAK,YAAY,CAAC,KAAK,EAApC,CAAoC,CAAC;SACtD,OAAO,CAAC,UAAA,MAAM;QACb,OAAA,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;aACxC,OAAO,CAAC,UAAA,MAAM;YACb,OAAA,UAAU,CAAC,KAAK,CACd,UAAU,CAAC,EAAE,CAAC,uBAAuB,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EACzD,UAAU,CAAC,EAAE,CAAC,4BAA4B,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAC/D;QAHD,CAGC,CACF;aACA,KAAK,CAAC,UAAC,CAAC;YACP,2BAA2B;YAC3B,IAAI,CAAa,IAAI,CAAC,CAAC,IAAI,KAAK,GAAG,EAAE;gBACnC,OAAO,UAAU,CAAC,KAAK,CACrB,UAAU,CAAC,EAAE,CAAC,uBAAuB,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EACzD,UAAU,CAAC,EAAE,CAAC,4BAA4B,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAC/D,CAAC;aACH;YAED,MAAM,CAAC,CAAC;QACV,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,CAAQ,IAAK,OAAA,UAAU,CAAC,KAAK,CACnC,UAAU,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAC1B,UAAU,CAAC,EAAE,CAAC,uBAAuB,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CACvD,EAHoB,CAGpB,CAAC;IArBJ,CAqBI,CACL;AAzBH,CAyBG,CAAC;AAEN,IAAM,+BAA+B,GAGnC,UAAC,OAAO,EAAE,KAAK,EAAE,IAAI;IACnB,OAAA,OAAO,CAAC,MAAM,CAAC,8BAA8B,CAAC;SAC3C,MAAM,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,MAAM,KAAK,YAAY,CAAC,KAAK;QACpD,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,gBAAgB;QACnC,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,0BAA0B;QAC7C,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,0BAA2B,CAAC,GAAG,EAHlC,CAGkC,CAAC;SACpD,OAAO,CAAC,UAAC,MAAqD;QAC7D,IAAM,QAAQ,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC,gBAAiB,CAAC;QACpD,IAAM,KAAK,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC,0BAA2B,CAAC;QAC3D,OAAO,UAAU,CAAC,MAAM,CACtB,UAAU,CAAC,EAAE,CAAC,uBAAuB,CAAC;YACpC,QAAQ,UAAA;YACR,SAAS,EAAE,KAAK,CAAC,GAAI;YACrB,WAAW,EAAE,MAAM,CAAC,IAAI,CAAC,KAAK;YAC9B,gBAAgB,EAAE,MAAM,CAAC,IAAI,CAAC,UAAU;YACxC,eAAe,EAAE,MAAM,CAAC,IAAI,CAAC,SAAS;SACvC,CAAC,CAAC,EACH,UAAU,CAAC,EAAE,CAAC,2BAA2B,CACvC,MAAM,CAAC,IAAI,EAAE,IAAI,CAClB,CAAC,CACH;aACA,KAAK,CAAC,UAAC,CAAQ,IAAK,OAAA,UAAU,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAA1B,CAA0B,CAAC,CAAC;IACnD,CAAC,CAAC;AArBJ,CAqBI,CAAC;AAET,IAAM,+BAA+B,GAGjC,UAAC,OAAO,EAAE,KAAK,EAAE,IAAI;IACrB,OAAA,OAAO,CAAC,MAAM,CAAC,8BAA8B,CAAC;SAC3C,MAAM,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,MAAM,KAAK,YAAY,CAAC,KAAK;QACpD,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,gBAAgB,IAAI,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAD7C,CAC6C,CAAC;SAC/D,OAAO,CAAC,UAAA,MAAM;QACb,OAAA,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC;YAC/B,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK;YAClC,UAAU,EAAE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU;YAC5C,SAAS,EAAE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS;YAC1C,QAAQ,EAAE,KAAK,CAAC,QAAQ,EAAE,CAAC,gBAAiB;YAC5C,SAAS,EAAE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS;SAC3C,CAAC;aACD,GAAG,CAAC,UAAA,MAAM,IAAI,OAAA,2BAA2B,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,EAAhD,CAAgD,CAAC;IAPhE,CAOgE,CACjE;AAZH,CAYG,CAAC;AAER,eAAe;IACb,2BAA2B;IAC3B,2BAA2B;IAC3B,yBAAyB;IACzB,2BAA2B;IAC3B,2BAA2B;IAC3B,+BAA+B;IAC/B,+BAA+B;IAC/B,+BAA+B;CAChC,CAAC","sourcesContent":["import {\n  ActionStatus,\n  Action,\n  StoreState,\n  Resource,\n} from '@src/types';\nimport { SequenceRecipient } from '@src/types/sequences';\nimport { Epic } from 'redux-observable';\nimport { Deps } from '@src/lib/epic';\nimport { Observable } from 'rxjs';\nimport {\n  SEQUENCE_RECIPIENT_LIST, sequenceRecipientList,\n  SEQUENCE_RECIPIENT_DELETE, sequenceRecipientDelete,\n  SEQUENCE_RECIPIENT_UPLOAD, sequenceRecipientUpload,\n  SEQUENCE_RECIPIENT_UPDATE, sequenceRecipientUpdate,\n  sequenceRecipientCreate, SEQUENCE_RECIPIENT_CREATE,\n  SequenceRecipientUploadMeta,\n  SequenceRecipientUpdateMeta,\n  SequenceRecipientUploadPayload,\n  SequenceRecipientListMeta,\n  SequenceRecipientDeleteMeta,\n  SequenceRecipientCreateMeta,\n  SequenceRecipientHeadersAddMeta,\n  SEQUENCE_RECIPIENT_HEADERS_ADD,\n  sequenceRecipientHeadersAdd,\n  SequenceRecipientCreateRecipient,\n  SequenceRecipientTempUpdateMeta,\n  sequenceRecipientTempUpdate,\n  SEQUENCE_RECIPIENT_TEMP_UPDATE,\n  SEQUENCE_RECIPIENT_REACTIVATE,\n  sequenceRecipientReactivate,\n} from '@src/ducks/sequenceRecipients';\nimport { toastSet } from '@src/ducks/toasts';\nimport { ApiError } from '@src/api/base';\nimport { sequenceStageRecipientDelete } from '@src/ducks/sequenceStageRecipients';\nimport { recordEvent, UserEvents } from '@src/lib/analytics';\n\nconst sequenceRecipientListEpic: Epic<Action<\n  SequenceRecipientListMeta, SequenceRecipient[]\n>, StoreState, Deps>\n  = (action$, store, deps) =>\n    action$.ofType(SEQUENCE_RECIPIENT_LIST)\n      .filter(action => action.status === ActionStatus.Start)\n      .flatMap(action =>\n        deps.sequenceRecipients.list(action.meta)\n          .map(result => sequenceRecipientList(action.meta, result))\n          .catch((e: Error) => Observable.of(sequenceRecipientList(action.meta, e))),\n    );\n\nconst sequenceRecipientUploadEpic: Epic<Action<\nSequenceRecipientUploadMeta|Error|null,\nSequenceRecipientUploadPayload|null\n>, StoreState, Deps> = (action$, store, deps) =>\n  action$.ofType(SEQUENCE_RECIPIENT_UPLOAD)\n    .filter(action => action.status === ActionStatus.Start)\n    .flatMap((action: Action<SequenceRecipientUploadMeta, SequenceRecipientUploadPayload>) =>\n      deps.sequenceRecipients.upload(\n        action.meta.sequence,\n        action.meta.cloudFile,\n        action.meta.emailHeader,\n        action.meta.givenNameHeader,\n        action.meta.familyNameHeader,\n      )\n        .flatMap(result =>\n          Observable.merge(\n            Observable.of(sequenceRecipientUpload(action.meta, result)),\n          ),\n        )\n        .catch(error => Observable.merge(\n          Observable.of(toastSet(error)),\n          Observable.of(sequenceRecipientUpload(action.meta, error)),\n        )),\n    );\n\nconst sequenceRecipientCreateEpic: Epic<\n  Action<SequenceRecipientCreateMeta | any, SequenceRecipient[] | any>, StoreState, Deps\n  > = (action$, store, deps) =>\n    action$.ofType(SEQUENCE_RECIPIENT_CREATE)\n      .filter(action => action.status === ActionStatus.Start\n        && !!store.getState().sequenceRecipientsAddState\n        && !!store.getState().sequenceRecipientsAddState!.recipients\n        && !!store.getState().sequenceRecipientsAddState!.headers)\n      .flatMap((action: Action<SequenceRecipientCreateMeta, SequenceRecipient[]>) => {\n        const sequenceRecipientsAddState = store.getState().sequenceRecipientsAddState!;\n        const recipients = sequenceRecipientsAddState.recipients\n          .filter(r => !!r.data)\n          .map((r: Resource<SequenceRecipientCreateRecipient>) => {\n            const variables = {};\n            sequenceRecipientsAddState.headers.forEach((h) => {\n              if (h.toLowerCase() !== 'email' && h.toLowerCase() !== 'last name' &&\n                h.toLowerCase() !== 'first name' && r.data) {\n                variables[h] = r.data.variables ? r.data.variables[h] : '';\n              }\n            });\n\n            return {\n              ...r.data as SequenceRecipientCreateRecipient,\n              paused: action.meta.addAsPaused,\n              variables,\n            };\n          });\n\n        return deps.sequenceRecipients.create({\n          sequence: action.meta.sequence,\n          recipients,\n        })\n        // Log Sequence Recipient Upload events\n          .do(() => {\n            const state = store.getState();\n            const meta = action.meta;\n            recordEvent(UserEvents.SequenceRecipientsUploaded, {\n              sequence: action.meta.sequence,\n              count: recipients.length,\n              team: state.sequences[meta.sequence] &&\n                state.sequences[meta.sequence].data &&\n                state.sequences[meta.sequence].data!.team,\n            });\n          })\n          .map(result => sequenceRecipientCreate(action.meta, result))\n          .catch((e: Error) => Observable.merge(\n            Observable.of(toastSet(e)),\n            Observable.of(sequenceRecipientCreate(action.meta, e)),\n          ));\n      },\n    );\n\nconst sequenceRecipientUpdateEpic: Epic<\nAction<SequenceRecipientUpdateMeta|any, SequenceRecipient|null>, StoreState, Deps\n> = (action$, store, deps) =>\n  action$.ofType(SEQUENCE_RECIPIENT_UPDATE)\n    .filter(action => action.status === ActionStatus.Start)\n    .flatMap((action: Action<SequenceRecipient, SequenceRecipient>) =>\n      deps.sequenceRecipients.update(action.meta)\n        .map(result => sequenceRecipientUpdate(action.meta, result))\n        .catch((e: Error) => Observable.merge(\n          Observable.of(toastSet(e)),\n          Observable.of(sequenceRecipientUpdate(action.meta, e)),\n        )),\n    );\n\nconst sequenceRecipientReactivateEpic: Epic<\nAction<SequenceRecipientUpdateMeta|any, SequenceRecipient|null>, StoreState, Deps\n> = (action$, store, deps) =>\n  action$.ofType(SEQUENCE_RECIPIENT_REACTIVATE)\n    .filter(action => action.status === ActionStatus.Start)\n    .flatMap((action: Action<SequenceRecipient, SequenceRecipient>) =>\n      deps.sequenceRecipients.reactivate(action.meta)\n        .map(result => sequenceRecipientReactivate(action.meta, result))\n        .catch((e: Error) => Observable.merge(\n          Observable.of(toastSet(e)),\n          Observable.of(sequenceRecipientReactivate(action.meta, e)),\n        )),\n    );\n\nconst sequenceRecipientDeleteEpic: Epic<\nAction<SequenceRecipientDeleteMeta|any, null>, StoreState, Deps\n> = (action$, store, deps) =>\n  action$.ofType(SEQUENCE_RECIPIENT_DELETE)\n    .filter(action => action.status === ActionStatus.Start)\n    .flatMap(action =>\n      deps.sequenceRecipients.delete(action.meta)\n        .flatMap(result =>\n          Observable.merge(\n            Observable.of(sequenceRecipientDelete(action.meta, null)),\n            Observable.of(sequenceStageRecipientDelete(action.meta, null)),\n          ),\n        )\n        .catch((e) => {\n          // handle 404 as completion\n          if (e as ApiError && e.code === 404) {\n            return Observable.merge(\n              Observable.of(sequenceRecipientDelete(action.meta, null)),\n              Observable.of(sequenceStageRecipientDelete(action.meta, null)),\n            );\n          }\n\n          throw e;\n        })\n        .catch((e: Error) => Observable.merge(\n          Observable.of(toastSet(e)),\n          Observable.of(sequenceRecipientDelete(action.meta, e)),\n        )),\n    );\n\nconst sequenceRecipientHeadersAddEpic: Epic<Action<\n  SequenceRecipientHeadersAddMeta| SequenceRecipientUploadMeta | Error | null, any\n>, StoreState, Deps> =\n  (action$, store, deps) =>\n    action$.ofType(SEQUENCE_RECIPIENT_HEADERS_ADD)\n      .filter(action => action.status === ActionStatus.Start &&\n        !!store.getState().selectedSequence &&\n        !!store.getState().sequenceRecipientsAddState &&\n        !!store.getState().sequenceRecipientsAddState!.csv)\n      .flatMap((action: Action<SequenceRecipientHeadersAddMeta, null>) => {\n        const sequence = store.getState().selectedSequence!;\n        const state = store.getState().sequenceRecipientsAddState!;\n        return Observable.concat(\n          Observable.of(sequenceRecipientUpload({\n            sequence,\n            cloudFile: state.csv!,\n            emailHeader: action.meta.email,\n            familyNameHeader: action.meta.familyName,\n            givenNameHeader: action.meta.givenName,\n          })),\n          Observable.of(sequenceRecipientHeadersAdd(\n            action.meta, null,\n          )),\n        )\n        .catch((e: Error) => Observable.of(toastSet(e)));\n      });\n\nconst sequenceRecipientTempUpdateEpic: Epic<Action<\n  SequenceRecipientTempUpdateMeta, SequenceRecipient\n>, StoreState, Deps>\n  = (action$, store, deps) =>\n    action$.ofType(SEQUENCE_RECIPIENT_TEMP_UPDATE)\n      .filter(action => action.status === ActionStatus.Start &&\n        !!store.getState().selectedSequence && !!action.meta.validate)\n      .flatMap(action =>\n        deps.sequenceRecipients.validate({\n          email: action.meta.recipient.email,\n          familyName: action.meta.recipient.familyName,\n          givenName: action.meta.recipient.givenName,\n          sequence: store.getState().selectedSequence!,\n          variables: action.meta.recipient.variables,\n        })\n        .map(result => sequenceRecipientTempUpdate(action.meta, result)),\n      );\n\nexport default [\n  sequenceRecipientCreateEpic,\n  sequenceRecipientUploadEpic,\n  sequenceRecipientListEpic,\n  sequenceRecipientDeleteEpic,\n  sequenceRecipientUpdateEpic,\n  sequenceRecipientHeadersAddEpic,\n  sequenceRecipientTempUpdateEpic,\n  sequenceRecipientReactivateEpic,\n];\n"]}]}