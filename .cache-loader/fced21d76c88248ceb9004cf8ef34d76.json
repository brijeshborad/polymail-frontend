{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Sequences/routes/SequenceDetail/SequenceSettings/SequenceSettings.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Sequences/routes/SequenceDetail/SequenceSettings/SequenceSettings.tsx","mtime":1675280254087},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Sequences/routes/SequenceDetail/SequenceSettings/SequenceSettings.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Sequences/routes/SequenceDetail/SequenceSettings/SequenceSettings.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,MAAM,MAAM,iBAAiB,CAAC;AAGrC,OAAO,EAAY,qBAAqB,EAAE,MAAM,sBAAsB,CAAC;AAEvE,OAAO,yBAAyB,CAAC;AACjC,OAAO,QAAQ,MAAM,wCAAwC,CAAC;AAC9D,OAAO,QAAQ,MAAM,+BAA+B,CAAC;AACrD,OAAO,EAAE,MAAM,EAAE,MAAM,QAAQ,CAAC;AAChC,OAAO,OAAkC,MAAM,8BAA8B,CAAC;AAqB9E,IAAM,QAAQ,GAAG;IACf,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE;IACzB,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,EAAE;IAC1B,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,EAAE;IAC1B,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE;IAC3B,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE;IACzB,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE;IACzB,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE;CAC1B,CAAC;AAEF,IAAM,eAAe,GAAG,CAAC,qBAAqB,CAAC,KAAK,EAAE,qBAAqB,CAAC,IAAI,CAAC,CAAC;AAElF;IAA+B,oCAE9B;IACC,0BAAY,KAA4D;QAAxE,YACE,iBAAO,SASR;QAED,mBAAa,GAAG;YACd,IAAM,KAAK,GAAG,MAAM,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YACtC,IAAM,UAAU,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;YAClD,IAAM,MAAM,GAAG,EAAE,CAAC;YAElB,OAAO,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;gBACjC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;gBAC3B,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;aACtB;YAED,OAAO,MAAM,CAAC;QAChB,CAAC,CAAA;QAED,6BAAuB,GAAG,UAAC,CAAyC;YAC5D,IAAA,gBAAyC,EAAvC,kCAAc,EAAE,sBAAuB,CAAC;YAChD,IAAM,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,MAAM,IAAK,CAAC,CAAC,MAAc,CAAC,IAAI,CAAC;YACpD,IAAM,MAAM,GAAG,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,IAAI,KAAK,GAAG,EAAd,CAAc,CAAC,CAAC;YAEzD,IAAI,MAAM,IAAI,QAAQ,IAAI,QAAQ,CAAC,IAAI,EAAE;gBACvC,IAAM,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBACjE,cAAc,uBACT,QAAQ,CAAC,IAAI,KAChB,UAAU,EAAE,IAAI,CAAC,CAAC;wBAChB,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,KAAK,MAAM,CAAC,KAAK,EAAlB,CAAkB,CAAC,CAAC,CAAC;wBAC1D,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAClD,CAAC;aACJ;QACH,CAAC,CAAA;QAED,4BAAsB,GAAG,UAAC,KAAa,EAAE,KAAa;YAC9C,IAAA,gBAAyC,EAAvC,kCAAc,EAAE,sBAAuB,CAAC;YACxC,IAAA,6CAAe,CAAgB;YACvC,IAAM,IAAI,GAAG,eAAe,CAAC,KAAK,CAAC,CAAC;YAEpC,IAAI,QAAQ,IAAI,QAAQ,CAAC,IAAI,EAAE;gBAC7B,IAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,SAAS,CAAC,CAAC;gBAC/D,IAAI,0BAA0B,GAAG,QAAQ,CAAC,IAAI,CAAC,0BAA0B,CAAC;gBAE1E,IAAI,QAAQ,GAAG,0BAA0B,EAAE;oBACzC,0BAA0B,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;iBACjD;gBAED,cAAc,uBACT,QAAQ,CAAC,IAAI,KAChB,yBAAyB,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,SAAS,CAAC,EACxE,0BAA0B,4BAAA,IAC1B,CAAC;aACJ;QACH,CAAC,CAAA;QAED,4BAAsB,GAAG,UAAC,KAAa,EAAE,KAAa;YAC9C,IAAA,gBAAyC,EAAvC,kCAAc,EAAE,sBAAuB,CAAC;YACxC,IAAA,6CAAe,CAAgB;YACvC,IAAM,IAAI,GAAG,eAAe,CAAC,KAAK,CAAC,CAAC;YAEpC,IAAI,QAAQ,IAAI,QAAQ,CAAC,IAAI,EAAE;gBAC7B,IAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,SAAS,CAAC,GAAG,CAAC,CAAC;gBACpE,IAAI,yBAAyB,GAAG,QAAQ,CAAC,IAAI,CAAC,yBAAyB,CAAC;gBAExE,IAAI,SAAS,GAAG,yBAAyB,EAAE;oBACzC,yBAAyB,GAAG,CAAC,CAAC;iBAC/B;gBAED,cAAc,uBACT,QAAQ,CAAC,IAAI,KAChB,0BAA0B,EAAE,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAClF,yBAAyB,2BAAA,IACzB,CAAC;aACJ;QACH,CAAC,CAAA;QAED,0BAAoB,GAAG,UAAC,KAAa,EAAE,KAAa;YAC5C,IAAA,gBAAyC,EAAvC,kCAAc,EAAE,sBAAuB,CAAC;YACxC,IAAA,uDAAoB,CAAgB;YAC5C,IAAI,QAAQ,IAAI,QAAQ,CAAC,IAAI,EAAE;gBAC7B,IAAM,YAAY,GAAG;oBACnB,IAAI,QAAQ,IAAI,QAAQ,CAAC,IAAI,EAAE;wBAC7B,cAAc,uBACT,QAAQ,CAAC,IAAI,KAChB,UAAU,EAAE,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC,IAC/B,CAAC;wBACH,KAAI,CAAC,QAAQ,CAAC,EAAE,YAAY,EAAE,SAAS,EAAE,CAAC,CAAC;qBAC5C;gBACH,CAAC,CAAC;gBAEF,IAAI,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE;oBAClD,IAAM,OAAO,GAAG,mEAAmE;0BAC/E,oEAAoE,CAAC;oBACzE,IAAM,wBAAsB,GAAG,oBAAoB,IAAI,oBAAoB,CAAC,UAAU;wBACpF,oBAAoB,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,CAAC;oBAC3C,IAAM,YAAY,GAAiB;wBACjC,KAAK,EAAE,2BAA2B;wBAClC,OAAO,SAAA;wBACP,WAAW,EAAE,SAAS;wBACtB,UAAU,EAAE,QAAQ;wBACpB,SAAS,EAAE,YAAY;wBACvB,QAAQ,EAAE,cAAM,OAAA,KAAI,CAAC,QAAQ,CAAC;4BAC5B,YAAY,EAAE,SAAS;4BACvB,oBAAoB,wBACf,KAAI,CAAC,KAAK,CAAC,oBAAoB,KAClC,UAAU,EAAE,wBAAsB,GACnC;yBACF,CAAC,EANc,CAMd;qBACH,CAAC;oBACF,KAAI,CAAC,QAAQ,CAAC,EAAE,YAAY,cAAA,EAAE,CAAC,CAAC;iBACjC;qBAAM;oBACL,cAAc,uBACT,QAAQ,CAAC,IAAI,KAChB,UAAU,EAAE,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC,IAC/B,CAAC;iBACJ;aACF;QACH,CAAC,CAAA;QAED,6BAAuB,GAAG,UAAC,KAAa,EAAE,KAAa;YAC/C,IAAA,gBAAmD,EAAjD,kCAAc,EAAE,sBAAQ,EAAE,sBAAuB,CAAC;YAE1D,IAAI,QAAQ,IAAI,QAAQ,CAAC,IAAI,IAAI,QAAQ,IAAI,KAAK,KAAK,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE;gBAChF,cAAc,uBACT,QAAQ,CAAC,IAAI,KAChB,OAAO,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,IAC3B,CAAC;aACJ;QACH,CAAC,CAAA;QAED,+BAAyB,GAAG,UAAC,KAAa,EAAE,KAAa;YACjD,IAAA,gBAAyC,EAAvC,kCAAc,EAAE,sBAAuB,CAAC;YAChD,IAAI,QAAQ,IAAI,QAAQ,CAAC,IAAI,EAAE;gBAC7B,cAAc,uBACT,QAAQ,CAAC,IAAI,KAChB,aAAa,EAAE,eAAe,CAAC,KAAK,CAAC,IACrC,CAAC;aACJ;QACH,CAAC,CAAA;QAED,2BAAqB,GAAG,UAAC,SAAgC;YACvD,QAAQ,SAAS,EAAE;gBACjB,KAAK,qBAAqB,CAAC,IAAI;oBAC7B,OAAO,uBAAuB,CAAC;gBACjC,KAAK,qBAAqB,CAAC,KAAK;oBAC9B,OAAO,+BAA+B,CAAC;gBACzC;oBACE,OAAO,SAAS,CAAC;aACpB;QACH,CAAC,CAAA;QAzJC,KAAI,CAAC,KAAK,GAAG;YACX,eAAe,EAAE,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gBACtD,KAAI,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,EAAE;YAC3B,eAAe,EAAE,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gBACtD,KAAI,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,EAAE;YAC3B,oBAAoB,EAAE,EAAE;SACzB,CAAC;;IACJ,CAAC;IAoJD,iCAAM,GAAN;QAAA,iBAqHC;QApHO,IAAA,eAAmC,EAAjC,sBAAQ,EAAE,sBAAuB,CAAC;QACpC,IAAA,eAAqF,EAAnF,oCAAe,EAAE,oCAAe,EAAE,8BAAY,EAAE,8CAAmC,CAAC;QAC5F,IAAM,SAAS,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;QAEtD,IAAI,CAAC,QAAQ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;YAC/B,OAAO,6BAAK,SAAS,EAAC,mBAAmB,GAAG,CAAC;SAC9C;QACK,IAAA,kBAAmF,EAAjF,wDAAyB,EAAE,0DAA0B,EAAE,sBAA0B,CAAC;QAC1F,IAAM,cAAc,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;QACtD,IAAM,UAAU,GAAG,eAAe,CAAC,SAAS,CAC1C,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,SAAS,CAAC,KAAK,yBAAyB,EAAxE,CAAwE,CAC9E,CAAC;QACF,IAAM,UAAU,GAAG,eAAe,CAAC,SAAS,CAC1C,UAAA,CAAC;YACC,OAAA,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,SAAS,CAAC;gBAC1C,CAAC,0BAA0B,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;QADjD,CACiD,CACpD,CAAC;QAEF,IAAM,aAAa,GAAG,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,KAAK,EAAP,CAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;QAExE,OAAO,CACL,6BAAK,SAAS,EAAC,mBAAmB;YAC/B,YAAY;gBACX,oBAAC,OAAO,eACF,YAAY,EAChB;YAEH,aAAa,IAAI,6BAAK,SAAS,EAAC,cAAc;gBAC7C,4CAAkB;gBAClB,6BAAK,SAAS,EAAC,iBAAiB;oBAC9B,oBAAC,QAAQ,IACP,EAAE,EAAC,sBAAsB,EACzB,MAAM,EAAE,aAAa,EACrB,QAAQ,EAAE,IAAI,CAAC,uBAAuB,EACtC,UAAU,EAAE,aAAa,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,GAC5D,CACE,CACF;YACN,6BAAK,SAAS,EAAC,YAAY;gBACzB,kDAAwB;gBACxB,6BAAK,SAAS,EAAC,UAAU,kFAEnB;gBACN,6BAAK,SAAS,EAAC,UAAU,IACtB,QAAQ,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CACjB,6BAAK,SAAS,EAAC,KAAK,EAAC,GAAG,EAAE,CAAC,CAAC,IAAI;oBAC9B,oBAAC,QAAQ,IACP,SAAS,EAAE,CAAC,CAAC,IAAI,EACjB,OAAO,EAAE,QAAQ,CAAC,IAAK,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAC1D,QAAQ,EAAE,KAAI,CAAC,uBAAuB,GACtC;oBACF,8BAAM,SAAS,EAAC,OAAO,IAAE,CAAC,CAAC,IAAI,CAAQ,CACnC,CACP,EATkB,CASlB,CAAC,CACE;gBACN,6BAAK,SAAS,EAAC,OAAO;oBACpB,oBAAC,QAAQ,IACP,EAAE,EAAC,oCAAoC,EACvC,MAAM,EAAE,eAAe,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAlB,CAAkB,CAAC,EACpD,QAAQ,EAAE,IAAI,CAAC,sBAAsB,EACrC,KAAK,EAAE,eAAe,CAAC,UAAU,CAAC,IAAI,eAAe,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,EAClF,UAAU,EAAE,UAAU,GACtB;oBACF,uCAAe;oBACf,oBAAC,QAAQ,IACP,EAAE,EAAC,qCAAqC,EACxC,MAAM,EAAE,eAAe,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAlB,CAAkB,CAAC,EACpD,QAAQ,EAAE,IAAI,CAAC,sBAAsB,EACrC,KAAK,EAAE,eAAe,CAAC,UAAU,CAAC,IAAI,eAAe,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,EAClF,UAAU,EAAE,UAAU,GACtB,CACE;gBACN,6BAAK,SAAS,EAAC,aAAa;sDAEzB,MAAI,QAAQ,cAAS,cAAc,CAAC,MAAM,CAAC,GAAG,CAAC,MAAG;wBAC/C,CACF;YACN,6BAAK,SAAS,EAAC,gBAAgB;gBAC7B,iDAAuB;gBACvB,6BAAK,SAAS,EAAC,UAAU,+FAEnB;gBACN,6BAAK,SAAS,EAAC,+BAA+B;oBAC5C,oBAAC,QAAQ,IACP,EAAE,EAAC,wBAAwB,EAC3B,MAAM,EAAE,eAAe,CAAC,GAAG,CAAC,UAAA,EAAE,IAAI,OAAA,KAAI,CAAC,qBAAqB,CAAC,EAAE,CAAC,EAA9B,CAA8B,CAAC,EACjE,QAAQ,EAAE,IAAI,CAAC,yBAAyB,EACxC,UAAU,EAAE,eAAe,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,EACvE,YAAY,EAAE,oBAAoB,IAAI,oBAAoB,CAAC,aAAa,GACxE,CACE,CACF;YACN,6BAAK,SAAS,EAAC,aAAa;gBAC1B,mDAAyB;gBACzB,6BAAK,SAAS,EAAC,UAAU;;oBAEvB,2BACE,IAAI,EAAC,+EAA+E,EACpF,MAAM,EAAC,QAAQ,uCAGb,CACA;gBACN,6BAAK,SAAS,EAAC,eAAe;oBAC5B,oBAAC,QAAQ,IACP,EAAE,EAAC,qBAAqB,EACxB,MAAM,EAAE,SAAS,EACjB,QAAQ,EAAE,IAAI,CAAC,oBAAoB,EACnC,UAAU,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,IAAI,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC,EAC3E,YAAY,EAAE,oBAAoB,IAAI,oBAAoB,CAAC,UAAU,GACrE;oBACF,qDAA6B,CACzB,CACF,CACF,CACP,CAAC;IACJ,CAAC;IACH,uBAAC;AAAD,CAAC,AAvRD,CAA+B,KAAK,CAAC,aAAa,GAuRjD;AAED,eAAe,gBAAgB,CAAC","sourcesContent":["import React from 'react';\nimport moment from 'moment-timezone';\nimport { Moment } from 'moment';\nimport { Resource, Account } from '@src/types';\nimport { Sequence, SequenceStopCondition } from '@src/types/sequences';\n\nimport './SequenceSettings.scss';\nimport Checkbox from '@src/components/Form/Checkbox/Checkbox';\nimport Dropdown from '@src/components/Form/Dropdown';\nimport { concat } from 'lodash';\nimport Confirm, { Props as ConfirmProps } from '@src/components/Base/Confirm';\nimport { RouteComponentProps } from 'react-router';\n\nexport interface StateProps {\n  sequence?: Resource<Sequence>;\n  accounts?: Account[];\n}\n\nexport interface DispatchProps {\n  updateSequence: (sequence: Sequence) => void;\n}\n\ninterface State {\n  lowerTimeValues: Moment[];\n  upperTimeValues: Moment[];\n  confirmProps?: ConfirmProps;\n  dropdownResetCounter: {\n    [dropdownKey: string]: number;\n  };\n}\n\nconst WEEKDAYS = [\n  { name: 'Mon', index: 1 },\n  { name: 'Tues', index: 2 },\n  { name: 'Weds', index: 3 },\n  { name: 'Thurs', index: 4 },\n  { name: 'Fri', index: 5 },\n  { name: 'Sat', index: 6 },\n  { name: 'Sun', index: 0 },\n];\n\nconst STOP_CONDITIONS = [SequenceStopCondition.Reply, SequenceStopCondition.None];\n\nclass SequenceSettings extends React.PureComponent<\n  StateProps & DispatchProps & RouteComponentProps<any>, State\n> {\n  constructor(props: StateProps & DispatchProps & RouteComponentProps<any>) {\n    super();\n\n    this.state = {\n      lowerTimeValues: props.sequence && props.sequence.data ?\n        this.getTimeValues() : [],\n      upperTimeValues: props.sequence && props.sequence.data ?\n        this.getTimeValues() : [],\n      dropdownResetCounter: {},\n    };\n  }\n\n  getTimeValues = () => {\n    const start = moment().startOf('day');\n    const comparison = start.clone().add(24, 'hours');\n    const values = [];\n\n    while (start.isBefore(comparison)) {\n      values.push(start.clone());\n      start.add(1, 'hour');\n    }\n\n    return values;\n  }\n\n  handleDayCheckboxChange = (e: React.SyntheticEvent<HTMLInputElement>) => {\n    const { updateSequence, sequence } = this.props;\n    const day = e && e.target && (e.target as any).name;\n    const dayObj = day && WEEKDAYS.find(w => w.name === day);\n\n    if (dayObj && sequence && sequence.data) {\n      const isOn = sequence.data.daysOfWeek.indexOf(dayObj.index) >= 0;\n      updateSequence({\n        ...sequence.data,\n        daysOfWeek: isOn ?\n          sequence.data.daysOfWeek.filter(d => d !== dayObj.index) :\n          concat(sequence.data.daysOfWeek, [dayObj.index]),\n      });\n    }\n  }\n\n  handleLowerBoundSelect = (value: string, index: number) => {\n    const { updateSequence, sequence } = this.props;\n    const { lowerTimeValues } = this.state;\n    const time = lowerTimeValues[index];\n\n    if (sequence && sequence.data) {\n      const newAfter = time.diff(moment().startOf('day'), 'seconds');\n      let beforeSecondsSinceMidnight = sequence.data.beforeSecondsSinceMidnight;\n\n      if (newAfter > beforeSecondsSinceMidnight) {\n        beforeSecondsSinceMidnight = (60 * 60 * 24) - 1;\n      }\n\n      updateSequence({\n        ...sequence.data,\n        afterSecondsSinceMidnight: time.diff(moment().startOf('day'), 'seconds'),\n        beforeSecondsSinceMidnight,\n      });\n    }\n  }\n\n  handleUpperBoundSelect = (value: string, index: number) => {\n    const { updateSequence, sequence } = this.props;\n    const { upperTimeValues } = this.state;\n    const time = upperTimeValues[index];\n\n    if (sequence && sequence.data) {\n      const newBefore = time.diff(moment().startOf('day'), 'seconds') - 1;\n      let afterSecondsSinceMidnight = sequence.data.afterSecondsSinceMidnight;\n\n      if (newBefore < afterSecondsSinceMidnight) {\n        afterSecondsSinceMidnight = 0;\n      }\n\n      updateSequence({\n        ...sequence.data,\n        beforeSecondsSinceMidnight: newBefore > 0 ? newBefore : newBefore + (60 * 60 * 24),\n        afterSecondsSinceMidnight,\n      });\n    }\n  }\n\n  handleDailyMaxSelect = (value: string, index: number) => {\n    const { updateSequence, sequence } = this.props;\n    const { dropdownResetCounter } = this.state;\n    if (sequence && sequence.data) {\n      const handleUpdate = () => {\n        if (sequence && sequence.data) {\n          updateSequence({\n            ...sequence.data,\n            dailyLimit: parseInt(value, 10),\n          });\n          this.setState({ confirmProps: undefined });\n        }\n      };\n\n      if (parseInt(value, 10) > sequence.data.dailyLimit) {\n        const message = 'This may cause you to exceed your email provider\\'s rate limits. '\n          + 'Please check your provider\\'s daily send limits before proceeding.';\n        const dropdownResetIncrement = dropdownResetCounter && dropdownResetCounter.dailyLimit &&\n          dropdownResetCounter.dailyLimit + 1 || 1;\n        const confirmProps: ConfirmProps = {\n          title: 'Increase Daily Send Limit',\n          message,\n          confirmCopy: 'Confirm',\n          cancelCopy: 'Cancel',\n          onConfirm: handleUpdate,\n          onCancel: () => this.setState({\n            confirmProps: undefined,\n            dropdownResetCounter: {\n              ...this.state.dropdownResetCounter,\n              dailyLimit: dropdownResetIncrement,\n            },\n          }),\n        };\n        this.setState({ confirmProps });\n      } else {\n        updateSequence({\n          ...sequence.data,\n          dailyLimit: parseInt(value, 10),\n        });\n      }\n    }\n  }\n\n  handleSenderEmailSelect = (value: string, index: number) => {\n    const { updateSequence, sequence, accounts } = this.props;\n\n    if (sequence && sequence.data && accounts && value !== sequence.data.senderEmail) {\n      updateSequence({\n        ...sequence.data,\n        account: accounts[index].id,\n      });\n    }\n  }\n\n  handleStopConditionSelect = (value: string, index: number) => {\n    const { updateSequence, sequence } = this.props;\n    if (sequence && sequence.data) {\n      updateSequence({\n        ...sequence.data,\n        stopCondition: STOP_CONDITIONS[index],\n      });\n    }\n  }\n\n  labelForStopCondition = (condition: SequenceStopCondition) => {\n    switch (condition) {\n      case SequenceStopCondition.None:\n        return 'Received all messages';\n      case SequenceStopCondition.Reply:\n        return 'After responding to a message';\n      default:\n        return 'Unknown';\n    }\n  }\n\n  render() {\n    const { sequence, accounts } = this.props;\n    const { lowerTimeValues, upperTimeValues, confirmProps, dropdownResetCounter } = this.state;\n    const maxValues = ['100', '200', '300', '400', '500'];\n\n    if (!sequence || !sequence.data) {\n      return <div className=\"sequence-settings\" />;\n    }\n    const { afterSecondsSinceMidnight, beforeSecondsSinceMidnight, timeZone } = sequence.data;\n    const timezoneMoment = moment.tz([2012, 0], timeZone);\n    const lowerIndex = lowerTimeValues.findIndex(\n      t => t.diff(moment().startOf('day'), 'seconds') === afterSecondsSinceMidnight,\n    );\n    const upperIndex = upperTimeValues.findIndex(\n      t =>\n        t.diff(moment().startOf('day'), 'seconds') ===\n        (beforeSecondsSinceMidnight + 1) % (60 * 60 * 24),\n    );\n\n    const accountEmails = accounts ? accounts.map(a => a.email) : undefined;\n\n    return (\n      <div className=\"sequence-settings\">\n        {confirmProps &&\n          <Confirm\n            {...confirmProps}\n          />\n        }\n        {accountEmails && <div className=\"sender-email\">\n          <h5>Send From</h5>\n          <div className=\"account-chooser\">\n            <Dropdown\n              id=\"senderEmail-dropdown\"\n              values={accountEmails}\n              onSelect={this.handleSenderEmailSelect}\n              startIndex={accountEmails.indexOf(sequence.data.senderEmail)}\n            />\n          </div>\n        </div>}\n        <div className=\"send-times\">\n          <h5>Delivery Window</h5>\n          <div className=\"subtitle\">\n            Choose days and times that messages from this Sequence should be delivered.\n          </div>\n          <div className=\"weekdays\">\n            {WEEKDAYS.map(d => (\n              <div className=\"day\" key={d.name}>\n                <Checkbox\n                  inputName={d.name}\n                  checked={sequence.data!.daysOfWeek.indexOf(d.index) !== -1}\n                  onChange={this.handleDayCheckboxChange}\n                />\n                <span className=\"label\">{d.name}</span>\n              </div>\n            ))}\n          </div>\n          <div className=\"times\">\n            <Dropdown\n              id=\"afterSecondsSinceMidnight-dropdown\"\n              values={lowerTimeValues.map(m => m.format('h:mm a'))}\n              onSelect={this.handleLowerBoundSelect}\n              value={lowerTimeValues[lowerIndex] && lowerTimeValues[lowerIndex].format('h:mm a')}\n              startIndex={lowerIndex}\n            />\n            <span>to</span>\n            <Dropdown\n              id=\"beforeSecondsSinceMidnight-dropdown\"\n              values={upperTimeValues.map(m => m.format('h:mm a'))}\n              onSelect={this.handleUpperBoundSelect}\n              value={upperTimeValues[upperIndex] && upperTimeValues[upperIndex].format('h:mm a')}\n              startIndex={upperIndex}\n            />\n          </div>\n          <div className=\"description\">\n            Messages will be delievered on\n            {` ${timeZone} (GMT ${timezoneMoment.format('Z')})`}.\n          </div>\n        </div>\n        <div className=\"stop-condition\">\n          <h5>Stop Condition</h5>\n          <div className=\"subtitle\">\n            Choose a condition for your recipients to exit the sequence and stop receiving messages.\n          </div>\n          <div className=\"stop-condition-action-section\">\n            <Dropdown\n              id=\"stopcondition-dropdown\"\n              values={STOP_CONDITIONS.map(sc => this.labelForStopCondition(sc))}\n              onSelect={this.handleStopConditionSelect}\n              startIndex={STOP_CONDITIONS.indexOf((sequence.data.stopCondition)) || 0}\n              resetCounter={dropdownResetCounter && dropdownResetCounter.stopCondition}\n            />\n          </div>\n        </div>\n        <div className=\"daily-email\">\n          <h5>Daily Send Limit</h5>\n          <div className=\"subtitle\">\n            Choose the maximum number of messages that should be sent from this Sequence each day.\n            <a\n              href=\"http://help.polymail.io/general-questions/what-are-email-provider-rate-limits\"\n              target=\"_blank\"\n            >\n              Learn about provider send limits\n            </a>\n          </div>\n          <div className=\"email-maximum\">\n            <Dropdown\n              id=\"dailyLimit-dropdown\"\n              values={maxValues}\n              onSelect={this.handleDailyMaxSelect}\n              startIndex={maxValues.indexOf((sequence.data.dailyLimit || 500).toString())}\n              resetCounter={dropdownResetCounter && dropdownResetCounter.dailyLimit}\n            />\n            <span>messages per day</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SequenceSettings;\n"]}]}