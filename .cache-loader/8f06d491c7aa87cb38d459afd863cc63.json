{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/api/auth.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/api/auth.ts","mtime":1675280253979},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnOwppbXBvcnQgeyBibGFua1JlcXVlc3QsIGpzb25SZXF1ZXN0LCBmb3JtUmVxdWVzdCB9IGZyb20gJy4vYmFzZSc7CmltcG9ydCB7IGlzRWxlY3Ryb25NYWMsIGlzRWxlY3Ryb25XaW5kb3dzLCBpc0VsZWN0cm9uIH0gZnJvbSAnQHNyYy9saWIvZWxlY3Ryb24nOwpleHBvcnQgdmFyIExvZ2luVHlwZTsKKGZ1bmN0aW9uIChMb2dpblR5cGUpIHsKICAgIExvZ2luVHlwZVsiTGltaXRlZCJdID0gImxpbWl0ZWQiOwogICAgTG9naW5UeXBlWyJFeHRlbmRlZCJdID0gImV4dGVuZGVkIjsKICAgIExvZ2luVHlwZVsiVHJ1c3RlZCJdID0gInRydXN0ZWQiOwp9KShMb2dpblR5cGUgfHwgKExvZ2luVHlwZSA9IHt9KSk7CnZhciBQbGF0Zm9ybTsKKGZ1bmN0aW9uIChQbGF0Zm9ybSkgewogICAgUGxhdGZvcm1bIldlYiJdID0gIndlYiI7CiAgICBQbGF0Zm9ybVsiTWFjT1MiXSA9ICJtYWNvcyI7CiAgICBQbGF0Zm9ybVsiV2luZG93cyJdID0gIndpbmRvd3MiOwp9KShQbGF0Zm9ybSB8fCAoUGxhdGZvcm0gPSB7fSkpOwpleHBvcnQgdmFyIFRva2VuVHlwZTsKKGZ1bmN0aW9uIChUb2tlblR5cGUpIHsKICAgIFRva2VuVHlwZVsiQmFzaWMiXSA9ICJiYXNpYyI7CiAgICBUb2tlblR5cGVbIkxpbWl0ZWQiXSA9ICJsaW1pdGVkIjsKICAgIFRva2VuVHlwZVsiRXh0ZW5kZWQiXSA9ICJleHRlbmRlZCI7CiAgICBUb2tlblR5cGVbIlRydXN0ZWQiXSA9ICJ0cnVzdGVkIjsKICAgIFRva2VuVHlwZVsiRGVidWciXSA9ICJkZWJ1ZyI7CiAgICBUb2tlblR5cGVbIlVua25vd24iXSA9ICJ1bmtub3duIjsKfSkoVG9rZW5UeXBlIHx8IChUb2tlblR5cGUgPSB7fSkpOwpleHBvcnQgZnVuY3Rpb24gbG9naW4obWV0YSkgewogICAgdmFyIHBsYXRmb3JtID0gUGxhdGZvcm0uV2ViOwogICAgaWYgKGlzRWxlY3Ryb25NYWMpIHsKICAgICAgICBwbGF0Zm9ybSA9IFBsYXRmb3JtLk1hY09TOwogICAgfQogICAgaWYgKGlzRWxlY3Ryb25XaW5kb3dzKSB7CiAgICAgICAgcGxhdGZvcm0gPSBQbGF0Zm9ybS5XaW5kb3dzOwogICAgfQogICAgdmFyIGJvZHkgPSB7CiAgICAgICAgdHlwZTogbWV0YS50eXBlLAogICAgICAgIHBsYXRmb3JtOiBwbGF0Zm9ybSwKICAgICAgICBtYWdpY0NvZGU6IG1ldGEubWFnaWNDb2RlLAogICAgfTsKICAgIGlmIChtZXRhLnRva2VuKSB7CiAgICAgICAgYm9keS50b2tlbiA9IG1ldGEudG9rZW47CiAgICB9CiAgICBpZiAobWV0YS5lbWFpbCkgewogICAgICAgIGJvZHkuZW1haWwgPSBtZXRhLmVtYWlsOwogICAgfQogICAgaWYgKG1ldGEucGFzc3dvcmQpIHsKICAgICAgICBib2R5LnBhc3N3b3JkID0gbWV0YS5wYXNzd29yZDsKICAgIH0KICAgIHJldHVybiBqc29uUmVxdWVzdCh7CiAgICAgICAgbWV0aG9kOiAnUE9TVCcsCiAgICAgICAgcm91dGU6ICcvdjEvYXV0aC9sb2dpbicsCiAgICAgICAgZGlzYWJsZUNvcnNPcHRpbWl6YXRpb246IHRydWUsCiAgICAgICAgYm9keTogYm9keSwKICAgIH0pCiAgICAgICAgLm1hcChmdW5jdGlvbiAoZGF0YSkgeyByZXR1cm4gZGF0YTsgfSk7Cn0KZXhwb3J0IGZ1bmN0aW9uIGxvZ291dCgpIHsKICAgIHJldHVybiBibGFua1JlcXVlc3QoewogICAgICAgIG1ldGhvZDogJ0dFVCcsCiAgICAgICAgcm91dGU6ICcvdjEvYXV0aC9sb2dvdXQnLAogICAgICAgIGRpc2FibGVDb3JzT3B0aW1pemF0aW9uOiB0cnVlLAogICAgfSkKICAgICAgICAuY2F0Y2goZnVuY3Rpb24gKGUpIHsKICAgICAgICAvLyB0cmVhdCBhbHJlYWR5IGxvZ2dlZCBvdXQgYXMgc3VjY2VzcwogICAgICAgIGlmIChlLmNvZGUgPT09IDQwMSkgewogICAgICAgICAgICByZXR1cm4gT2JzZXJ2YWJsZS5vZihudWxsKTsKICAgICAgICB9CiAgICAgICAgdGhyb3cgZTsKICAgIH0pCiAgICAgICAgLm1hcChmdW5jdGlvbiAoKSB7IHJldHVybiBudWxsOyB9KTsKfQpleHBvcnQgZnVuY3Rpb24gbG9nb3V0QWxsKCkgewogICAgcmV0dXJuIGJsYW5rUmVxdWVzdCh7CiAgICAgICAgbWV0aG9kOiAnUE9TVCcsCiAgICAgICAgcm91dGU6ICcvdjEvYXV0aC9sb2dvdXRBbGwnLAogICAgICAgIGRpc2FibGVDb3JzT3B0aW1pemF0aW9uOiB0cnVlLAogICAgfSkKICAgICAgICAuY2F0Y2goZnVuY3Rpb24gKGUpIHsKICAgICAgICAvLyB0cmVhdCBhbHJlYWR5IGxvZ2dlZCBvdXQgYXMgc3VjY2VzcwogICAgICAgIGlmIChlLmNvZGUgPT09IDQwMSkgewogICAgICAgICAgICByZXR1cm4gT2JzZXJ2YWJsZS5vZihudWxsKTsKICAgICAgICB9CiAgICAgICAgdGhyb3cgZTsKICAgIH0pCiAgICAgICAgLm1hcChmdW5jdGlvbiAoKSB7IHJldHVybiBudWxsOyB9KTsKfQpleHBvcnQgdmFyIHVwZ3JhZGVUZmFMb2dpbiA9IGZ1bmN0aW9uIChjb2RlKSB7CiAgICByZXR1cm4ganNvblJlcXVlc3QoewogICAgICAgIG1ldGhvZDogJ1BPU1QnLAogICAgICAgIHJvdXRlOiAnL3YxL2F1dGgvdXBncmFkZScsCiAgICAgICAgZGlzYWJsZUNvcnNPcHRpbWl6YXRpb246IHRydWUsCiAgICAgICAgYm9keTogewogICAgICAgICAgICBjb2RlOiBjb2RlLAogICAgICAgIH0sCiAgICB9KTsKfTsKZXhwb3J0IHZhciBzZW5kVGZhQ29kZSA9IGZ1bmN0aW9uICgpIHsKICAgIHJldHVybiBibGFua1JlcXVlc3QoewogICAgICAgIG1ldGhvZDogJ1BPU1QnLAogICAgICAgIHJvdXRlOiAnL3YxL2F1dGgvdGZhJywKICAgICAgICBkaXNhYmxlQ29yc09wdGltaXphdGlvbjogdHJ1ZSwKICAgIH0pOwp9OwpleHBvcnQgdmFyIHBhc3N3b3JkUmVzZXQgPSBmdW5jdGlvbiAoZW1haWwpIHsKICAgIHJldHVybiBmb3JtUmVxdWVzdCh7CiAgICAgICAgbWV0aG9kOiAnUE9TVCcsCiAgICAgICAgcm91dGU6ICcvdjEvYXV0aC9yZXNldCcsCiAgICAgICAgZGlzYWJsZUNvcnNPcHRpbWl6YXRpb246IHRydWUsCiAgICAgICAgYm9keTogKHsgZW1haWw6IGVtYWlsIH0pLAogICAgfSk7Cn07CmV4cG9ydCB2YXIgb0F1dGhMb2dpbiA9IGZ1bmN0aW9uIChtZXRhLCBsb2dpblN1Y2Nlc3NVcmwsIG5vdEZvdW5kVXJsKSB7CiAgICB2YXIgcGxhdGZvcm0gPSBQbGF0Zm9ybS5XZWI7CiAgICBpZiAoaXNFbGVjdHJvbk1hYykgewogICAgICAgIHBsYXRmb3JtID0gUGxhdGZvcm0uTWFjT1M7CiAgICB9CiAgICBpZiAoaXNFbGVjdHJvbldpbmRvd3MpIHsKICAgICAgICBwbGF0Zm9ybSA9IFBsYXRmb3JtLldpbmRvd3M7CiAgICB9CiAgICByZXR1cm4ganNvblJlcXVlc3QoewogICAgICAgIG1ldGhvZDogJ1BPU1QnLAogICAgICAgIHJvdXRlOiAiL3YxL2F1dGgvb2F1dGgybG9naW4iLAogICAgICAgIGRpc2FibGVDb3JzT3B0aW1pemF0aW9uOiB0cnVlLAogICAgICAgIGJvZHk6IHsKICAgICAgICAgICAgdHlwZTogJ2V4dGVuZGVkJywKICAgICAgICAgICAgYWNjb3VudFR5cGU6IG1ldGEudHlwZSwKICAgICAgICAgICAgbG9naW5TdWNjZXNzVXJsOiBsb2dpblN1Y2Nlc3NVcmwsCiAgICAgICAgICAgIG5vdEZvdW5kVXJsOiBub3RGb3VuZFVybCwKICAgICAgICAgICAgcGxhdGZvcm06IHBsYXRmb3JtLAogICAgICAgICAgICBzaG93UGFnZTogaXNFbGVjdHJvbiwKICAgICAgICAgICAgdGVhbUludml0ZU5vbmNlOiBtZXRhLnRlYW1JbnZpdGVOb25jZSwKICAgICAgICAgICAgdGVhbUludml0ZVBheWxvYWQ6IG1ldGEudGVhbUludml0ZVBheWxvYWQsCiAgICAgICAgfSwKICAgIH0pCiAgICAgICAgLm1hcChmdW5jdGlvbiAocGF5bG9hZCkgeyByZXR1cm4gcGF5bG9hZC51cmw7IH0pOwp9OwpleHBvcnQgdmFyIGdldE1hZ2ljTGluayA9IGZ1bmN0aW9uIChtZXRhKSB7CiAgICByZXR1cm4ganNvblJlcXVlc3QoewogICAgICAgIG1ldGhvZDogJ1BPU1QnLAogICAgICAgIHJvdXRlOiAnL3YxL2F1dGgvbWFnaWNMaW5rJywKICAgICAgICBkaXNhYmxlQ29yc09wdGltaXphdGlvbjogdHJ1ZSwKICAgICAgICBib2R5OiBtZXRhLAogICAgfSk7Cn07CmV4cG9ydCB2YXIgZ2V0TG9naW5Ub2tlbiA9IGZ1bmN0aW9uICgpIHsKICAgIHJldHVybiBqc29uUmVxdWVzdCh7CiAgICAgICAgbWV0aG9kOiAnUE9TVCcsCiAgICAgICAgcm91dGU6ICcvdjEvYXV0aC90b2tlbicsCiAgICAgICAgZGlzYWJsZUNvcnNPcHRpbWl6YXRpb246IHRydWUsCiAgICB9KTsKfTsK"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/api/auth.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/api/auth.ts"],"names":[],"mappings":"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","sourcesContent":["import { Observable } from 'rxjs';\n\nimport { blankRequest, jsonRequest, ApiError, formRequest } from './base';\nimport { isElectronMac, isElectronWindows, isElectron } from '@src/lib/electron';\nimport { AuthOAuthLoginMeta, AuthLoginMeta, MagicLink, MagicLinkMeta } from '@src/ducks/auth';\nimport { LoginToken } from '@src/types';\n\nexport const enum LoginType {\n  Limited = 'limited',\n  Extended = 'extended', // use with remember me\n  Trusted = 'trusted' , // use with electron (on desktop)\n}\n\nconst enum Platform {\n  Web = 'web',\n  MacOS = 'macos',\n  Windows = 'windows',\n}\n\nexport enum TokenType {\n  Basic = 'basic',\n  Limited = 'limited',\n  Extended = 'extended',\n  Trusted = 'trusted',\n  Debug = 'debug',\n  Unknown = 'unknown',\n}\n\nexport interface Token {\n  token: string;\n  expires?: string; // date\n  type: TokenType;\n}\n\nexport function login(meta: AuthLoginMeta): Observable<Token> {\n  let platform = Platform.Web;\n  if (isElectronMac) {\n    platform = Platform.MacOS;\n  }\n  if (isElectronWindows) {\n    platform = Platform.Windows;\n  }\n\n  const body: { [key: string]: any} = {\n    type: meta.type,\n    platform,\n    magicCode: meta.magicCode,\n  };\n\n  if (meta.token) {\n    body.token = meta.token;\n  }\n\n  if (meta.email) {\n    body.email = meta.email;\n  }\n\n  if (meta.password) {\n    body.password = meta.password;\n  }\n\n  return jsonRequest({\n    method: 'POST',\n    route: '/v1/auth/login',\n    disableCorsOptimization: true,\n    body,\n  })\n  .map(data => data);\n}\n\nexport function logout(): Observable<null> {\n  return blankRequest({\n    method: 'GET',\n    route: '/v1/auth/logout',\n    disableCorsOptimization: true,\n  })\n  .catch((e) => {\n    // treat already logged out as success\n    if ((e as ApiError).code === 401) {\n      return Observable.of(null);\n    }\n    throw e;\n  })\n  .map(() => null);\n}\n\nexport function logoutAll(): Observable<null> {\n  return blankRequest({\n    method: 'POST',\n    route: '/v1/auth/logoutAll',\n    disableCorsOptimization: true,\n  })\n  .catch((e) => {\n    // treat already logged out as success\n    if ((e as ApiError).code === 401) {\n      return Observable.of(null);\n    }\n    throw e;\n  })\n  .map(() => null);\n}\n\nexport const upgradeTfaLogin = (code: string): Observable<Token> =>\n  jsonRequest({\n    method: 'POST',\n    route: '/v1/auth/upgrade',\n    disableCorsOptimization: true,\n    body: {\n      code,\n    },\n  });\n\nexport const sendTfaCode = (): Observable<null> =>\n  blankRequest({\n    method: 'POST',\n    route: '/v1/auth/tfa',\n    disableCorsOptimization: true,\n  });\n\nexport const passwordReset = (email: string): Observable<null> =>\n  formRequest({\n    method: 'POST',\n    route: '/v1/auth/reset',\n    disableCorsOptimization: true,\n    body: ({ email }),\n  });\n\nexport const oAuthLogin = (\n  meta: AuthOAuthLoginMeta, loginSuccessUrl: string, notFoundUrl: string,\n): Observable<string> => {\n  let platform = Platform.Web;\n  if (isElectronMac) {\n    platform = Platform.MacOS;\n  }\n  if (isElectronWindows) {\n    platform = Platform.Windows;\n  }\n\n  return jsonRequest({\n    method: 'POST',\n    route: `/v1/auth/oauth2login`,\n    disableCorsOptimization: true,\n    body: {\n      type: 'extended',\n      accountType: meta.type,\n      loginSuccessUrl,\n      notFoundUrl,\n      platform,\n      showPage: isElectron,\n      teamInviteNonce: meta.teamInviteNonce,\n      teamInvitePayload: meta.teamInvitePayload,\n    },\n  })\n  .map(payload => payload.url);\n};\n\nexport const getMagicLink = (meta: MagicLinkMeta): Observable<MagicLink|undefined> => {\n  return jsonRequest({\n    method: 'POST',\n    route: '/v1/auth/magicLink',\n    disableCorsOptimization: true,\n    body: meta,\n  });\n};\n\nexport const getLoginToken = (): Observable<LoginToken> => {\n  return jsonRequest({\n    method: 'POST',\n    route: '/v1/auth/token',\n    disableCorsOptimization: true,\n  });\n};\n"]}]}