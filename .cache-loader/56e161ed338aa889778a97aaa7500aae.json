{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/api/cloudFile.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/api/cloudFile.ts","mtime":1675280253979},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnOwppbXBvcnQgeyB1cGxvYWRXaXRoUHJvZ3Jlc3MsIHVwbG9hZCB9IGZyb20gJy4vYmFzZSc7CmltcG9ydCB7IGNyZWF0ZUNsb3VkRmlsZSB9IGZyb20gJ0BzcmMvbW9ja3MvYXR0YWNobWVudHMnOwp2YXIgQ2xvdWRGaWxlQ2xpZW50ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkgewogICAgZnVuY3Rpb24gQ2xvdWRGaWxlQ2xpZW50KCkgewogICAgICAgIHRoaXMudXBsb2FkV2l0aFByb2dyZXNzID0gZnVuY3Rpb24gKGZpbGUpIHsKICAgICAgICAgICAgdmFyIGNsb3VkRmlsZTsKICAgICAgICAgICAgcmV0dXJuIHVwbG9hZFdpdGhQcm9ncmVzcyhmaWxlKQogICAgICAgICAgICAgICAgLm1hcChmdW5jdGlvbiAodmFsdWUpIHsKICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdudW1iZXInKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgY2xvdWRGaWxlID0gdmFsdWU7CiAgICAgICAgICAgICAgICBjbG91ZEZpbGUuZmlsZU5hbWUgPSBmaWxlLm5hbWU7CiAgICAgICAgICAgICAgICBjbG91ZEZpbGUudHlwZSA9IGZpbGUudHlwZTsKICAgICAgICAgICAgICAgIGNsb3VkRmlsZS5zaXplID0gZmlsZS5zaXplOwogICAgICAgICAgICAgICAgY2xvdWRGaWxlLnVybCA9IHZhbHVlLnVybDsKICAgICAgICAgICAgICAgIGNsb3VkRmlsZS5jbG91ZFVybCA9IHZhbHVlLmNsb3VkVXJsOwogICAgICAgICAgICAgICAgcmV0dXJuIGNsb3VkRmlsZTsKICAgICAgICAgICAgfSk7CiAgICAgICAgfTsKICAgICAgICB0aGlzLnVwbG9hZCA9IGZ1bmN0aW9uIChmaWxlLCBpc1B1YmxpYykgewogICAgICAgICAgICB2YXIgY2xvdWRGaWxlOwogICAgICAgICAgICByZXR1cm4gdXBsb2FkKGZpbGUsIGlzUHVibGljIHx8IGZhbHNlKQogICAgICAgICAgICAgICAgLm1hcChmdW5jdGlvbiAodmFsdWUpIHsKICAgICAgICAgICAgICAgIGNsb3VkRmlsZSA9IHZhbHVlOwogICAgICAgICAgICAgICAgY2xvdWRGaWxlLmZpbGVOYW1lID0gZmlsZS5uYW1lOwogICAgICAgICAgICAgICAgY2xvdWRGaWxlLnR5cGUgPSBmaWxlLnR5cGU7CiAgICAgICAgICAgICAgICBjbG91ZEZpbGUuc2l6ZSA9IGZpbGUuc2l6ZTsKICAgICAgICAgICAgICAgIGNsb3VkRmlsZS51cmwgPSB2YWx1ZS51cmw7CiAgICAgICAgICAgICAgICBjbG91ZEZpbGUuY2xvdWRVcmwgPSB2YWx1ZS5jbG91ZFVybDsKICAgICAgICAgICAgICAgIHJldHVybiBjbG91ZEZpbGU7CiAgICAgICAgICAgIH0pOwogICAgICAgIH07CiAgICB9CiAgICByZXR1cm4gQ2xvdWRGaWxlQ2xpZW50Owp9KCkpOwpleHBvcnQgeyBDbG91ZEZpbGVDbGllbnQgfTsKZXhwb3J0IHZhciBtb2NrQ2xvdWRGaWxlQ2xpZW50ID0gZnVuY3Rpb24gKCkgewogICAgcmV0dXJuIHsKICAgICAgICB1cGxvYWRXaXRoUHJvZ3Jlc3M6IGZ1bmN0aW9uIChmaWxlKSB7IHJldHVybiBPYnNlcnZhYmxlLm9mKGNyZWF0ZUNsb3VkRmlsZSgpKTsgfSwKICAgICAgICB1cGxvYWQ6IGZ1bmN0aW9uIChmaWxlKSB7IHJldHVybiBPYnNlcnZhYmxlLm9mKGNyZWF0ZUNsb3VkRmlsZSgpKTsgfSwKICAgIH07Cn07Cg=="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/api/cloudFile.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/api/cloudFile.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,MAAM,CAAC;AAIlC,OAAO,EAAE,kBAAkB,EAAE,MAAM,EAAE,MAAM,QAAQ,CAAC;AACpD,OAAO,EAAE,eAAe,EAAE,MAAM,wBAAwB,CAAC;AAOzD;IAAA;QACE,uBAAkB,GAAG,UAAC,IAAU;YAC9B,IAAI,SAAoB,CAAC;YACzB,OAAO,kBAAkB,CAAC,IAAI,CAAC;iBAC5B,GAAG,CAAC,UAAC,KAAuB;gBAC3B,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;oBAC7B,OAAO,KAAK,CAAC;iBACd;gBAED,SAAS,GAAG,KAAK,CAAC;gBAClB,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;gBAC/B,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;gBAC3B,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;gBAC3B,SAAS,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;gBAC1B,SAAS,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;gBACpC,OAAO,SAAS,CAAC;YACnB,CAAC,CAAC,CAAC;QACP,CAAC,CAAA;QACD,WAAM,GAAG,UAAC,IAAU,EAAE,QAAkB;YACtC,IAAI,SAAoB,CAAC;YACzB,OAAO,MAAM,CAAC,IAAI,EAAE,QAAQ,IAAI,KAAK,CAAC;iBACrC,GAAG,CAAC,UAAC,KAAgB;gBACpB,SAAS,GAAG,KAAK,CAAC;gBAClB,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;gBAC/B,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;gBAC3B,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;gBAC3B,SAAS,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;gBAC1B,SAAS,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;gBACpC,OAAO,SAAS,CAAC;YACnB,CAAC,CAAC,CAAC;QACL,CAAC,CAAA;IACH,CAAC;IAAD,sBAAC;AAAD,CAAC,AA/BD,IA+BC;;AAED,MAAM,CAAC,IAAM,mBAAmB,GAAG;IACjC,OAAO;QACL,kBAAkB,EAAE,UAAC,IAAU,IAAK,OAAA,UAAU,CAAC,EAAE,CAAC,eAAe,EAAE,CAAC,EAAhC,CAAgC;QACpE,MAAM,EAAE,UAAC,IAAU,IAAK,OAAA,UAAU,CAAC,EAAE,CAAC,eAAe,EAAE,CAAC,EAAhC,CAAgC;KACzD,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { Observable } from 'rxjs';\n\nimport { CloudFile } from '@src/types';\n\nimport { uploadWithProgress, upload } from './base';\nimport { createCloudFile } from '@src/mocks/attachments';\n\nexport interface CloudFileAPI {\n  upload(file: File, isPublic?: boolean): Observable<CloudFile>;\n  uploadWithProgress(file: File): Observable<CloudFile|number>;\n}\n\nexport class CloudFileClient implements CloudFileAPI {\n  uploadWithProgress = (file: File): Observable<CloudFile | number> => {\n    let cloudFile: CloudFile;\n    return uploadWithProgress(file)\n      .map((value: number|CloudFile) => {\n        if (typeof value === 'number') {\n          return value;\n        }\n\n        cloudFile = value;\n        cloudFile.fileName = file.name;\n        cloudFile.type = file.type;\n        cloudFile.size = file.size;\n        cloudFile.url = value.url;\n        cloudFile.cloudUrl = value.cloudUrl;\n        return cloudFile;\n      });\n  }\n  upload = (file: File, isPublic?: boolean): Observable<CloudFile> => {\n    let cloudFile: CloudFile;\n    return upload(file, isPublic || false)\n    .map((value: CloudFile) => {\n      cloudFile = value;\n      cloudFile.fileName = file.name;\n      cloudFile.type = file.type;\n      cloudFile.size = file.size;\n      cloudFile.url = value.url;\n      cloudFile.cloudUrl = value.cloudUrl;\n      return cloudFile;\n    });\n  }\n}\n\nexport const mockCloudFileClient = (): CloudFileAPI => {\n  return {\n    uploadWithProgress: (file: File) => Observable.of(createCloudFile()),\n    upload: (file: File) => Observable.of(createCloudFile()),\n  };\n};\n"]}]}