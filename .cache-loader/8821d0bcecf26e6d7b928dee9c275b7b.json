{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/css-loader/dist/cjs.js??ref--7-2!/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/sass-loader/dist/cjs.js??ref--7-3!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Sending/Sending.scss","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Sending/Sending.scss","mtime":1675280254110},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/styles/helpers.scss","mtime":1675280254121},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/styles/colors.scss","mtime":1675280254121},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/styles/typography.scss","mtime":1675280254121},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/styles/mixins.scss","mtime":1675280254121},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/css-loader/dist/cjs.js","mtime":1675365393897},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/sass-loader/dist/cjs.js","mtime":1675365391315}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIpKHRydWUpOwovLyBNb2R1bGUKZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsICIuc2VuZGluZyA+IC5tYWluID4gLnRvZ2dsZS1jZWxsIHtcbiAgbWFyZ2luOiAyMHB4IDA7XG59XG4uc2VuZGluZyA+IC5tYWluID4gLmxpbmstcHJldmlldyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIG1hcmdpbjogMjBweCBhdXRvO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cbi5zZW5kaW5nID4gLm1haW4gPiAubGluay1wcmV2aWV3ID4gLmxpbmsge1xuICBmb250LXNpemU6IDEzcHg7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjIzO1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICBjb2xvcjogIzA3OWNlZjtcbiAgbWFyZ2luLXJpZ2h0OiAyMHB4O1xufVxuLnNlbmRpbmcgPiAubWFpbiA+IC5saW5rLXByZXZpZXcgPiAucHJldmlldyB7XG4gIHBhZGRpbmc6IDhweDtcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBtYXJnaW4tbGVmdDogMjBweDtcbn1cbi50aGVtZS1saWdodCAuc2VuZGluZyA+IC5tYWluID4gLmxpbmstcHJldmlldyA+IC5wcmV2aWV3IHtcbiAgYm9yZGVyOiAjZjJmNWY4IDFweCBzb2xpZDtcbn1cbi50aGVtZS1kYXJrIC5zZW5kaW5nID4gLm1haW4gPiAubGluay1wcmV2aWV3ID4gLnByZXZpZXcge1xuICBib3JkZXI6ICMyQzJDMkMgMXB4IHNvbGlkO1xufVxuLnNlbmRpbmcgPiAubWFpbiA+IC5saW5rLXByZXZpZXcgPiAucHJldmlldyA+IC5pbWFnZSB7XG4gIHdpZHRoOiAzMnB4O1xuICBoZWlnaHQ6IDMycHg7XG4gIGJvcmRlci1yYWRpdXM6IDNweDtcbn1cbi50aGVtZS1saWdodCAuc2VuZGluZyA+IC5tYWluID4gLmxpbmstcHJldmlldyA+IC5wcmV2aWV3ID4gLmltYWdlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2M5ZDRlMDtcbn1cbi50aGVtZS1kYXJrIC5zZW5kaW5nID4gLm1haW4gPiAubGluay1wcmV2aWV3ID4gLnByZXZpZXcgPiAuaW1hZ2Uge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMkUyRTJFO1xufVxuLnNlbmRpbmcgPiAubWFpbiA+IC5saW5rLXByZXZpZXcgPiAucHJldmlldyA+IC5yaWdodC1jb2x1bW4ge1xuICBtYXJnaW4tbGVmdDogOHB4O1xufVxuLnNlbmRpbmcgPiAubWFpbiA+IC5saW5rLXByZXZpZXcgPiAucHJldmlldyA+IC5yaWdodC1jb2x1bW4gPiAudGl0bGUge1xuICBmb250LXNpemU6IDEzcHg7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjIzO1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xufVxuLnRoZW1lLWxpZ2h0IC5zZW5kaW5nID4gLm1haW4gPiAubGluay1wcmV2aWV3ID4gLnByZXZpZXcgPiAucmlnaHQtY29sdW1uID4gLnRpdGxlIHtcbiAgY29sb3I6ICM0NDQ0NDQ7XG59XG4udGhlbWUtZGFyayAuc2VuZGluZyA+IC5tYWluID4gLmxpbmstcHJldmlldyA+IC5wcmV2aWV3ID4gLnJpZ2h0LWNvbHVtbiA+IC50aXRsZSB7XG4gIGNvbG9yOiAjZThlOGU4O1xufVxuLnNlbmRpbmcgPiAubWFpbiA+IC5saW5rLXByZXZpZXcgPiAucHJldmlldyA+IC5yaWdodC1jb2x1bW4gPiAuc3VidGl0bGUge1xuICBmb250LXNpemU6IDExcHg7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjI3O1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xufVxuLnRoZW1lLWxpZ2h0IC5zZW5kaW5nID4gLm1haW4gPiAubGluay1wcmV2aWV3ID4gLnByZXZpZXcgPiAucmlnaHQtY29sdW1uID4gLnN1YnRpdGxlIHtcbiAgY29sb3I6ICM3ZThmOWY7XG59XG4udGhlbWUtZGFyayAuc2VuZGluZyA+IC5tYWluID4gLmxpbmstcHJldmlldyA+IC5wcmV2aWV3ID4gLnJpZ2h0LWNvbHVtbiA+IC5zdWJ0aXRsZSB7XG4gIGNvbG9yOiAjQUFBQUFBO1xufVxuLnNlbmRpbmcgPiAubWFpbiA+IC5mb2xsb3ctdXAge1xuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xufVxuLnNlbmRpbmcgPiAubWFpbiA+IC5mb2xsb3ctdXAgPiAuZm9sbG93LXVwLWRheXMge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICBtYXJnaW4tdG9wOiAxMHB4O1xufVxuLnNlbmRpbmcgPiAubWFpbiA+IC5mb2xsb3ctdXAgPiAuZm9sbG93LXVwLWRheXMgPiBpbnB1dCB7XG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgaGVpZ2h0OiAzMHB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBib3JkZXI6IG5vbmU7XG4gIG1heC13aWR0aDogMzBweDtcbn1cbi50aGVtZS1saWdodCAuc2VuZGluZyA+IC5tYWluID4gLmZvbGxvdy11cCA+IC5mb2xsb3ctdXAtZGF5cyA+IGlucHV0IHtcbiAgY29sb3I6ICM0NDQ0NDQ7XG59XG4udGhlbWUtZGFyayAuc2VuZGluZyA+IC5tYWluID4gLmZvbGxvdy11cCA+IC5mb2xsb3ctdXAtZGF5cyA+IGlucHV0IHtcbiAgY29sb3I6ICNlOGU4ZTg7XG59XG4uc2VuZGluZyA+IC5tYWluID4gLmZvbGxvdy11cCA+IC5mb2xsb3ctdXAtZGF5cyA+IHNwYW4ge1xuICBmb250LXNpemU6IDEycHg7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGhlaWdodDogMzBweDtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgbWFyZ2luOiAwIDEwcHg7XG59XG4udGhlbWUtbGlnaHQgLnNlbmRpbmcgPiAubWFpbiA+IC5mb2xsb3ctdXAgPiAuZm9sbG93LXVwLWRheXMgPiBzcGFuIHtcbiAgY29sb3I6ICM3ZThmOWY7XG59XG4udGhlbWUtZGFyayAuc2VuZGluZyA+IC5tYWluID4gLmZvbGxvdy11cCA+IC5mb2xsb3ctdXAtZGF5cyA+IHNwYW4ge1xuICBjb2xvcjogI0FBQUFBQTtcbn1cbi5zZW5kaW5nID4gLm1haW4gPiAuZm9sbG93LXVwID4gLmZvbGxvdy11cC1kYXlzID4gc3BhbjpmaXJzdC1jaGlsZCB7XG4gIG1hcmdpbi1sZWZ0OiAwO1xufVxuLnNlbmRpbmcgPiAubWFpbiA+IC5sYW5ndWFnZSB7XG4gIG1hcmdpbjogMzBweCAwO1xufVxuLnNlbmRpbmcgPiAubWFpbiA+IC5sYW5ndWFnZSA+IC50aXRsZSB7XG4gIG1hcmdpbjogMTBweCAwIDAgMDtcbiAgZm9udC1zaXplOiAxM3B4O1xuICBmb250LXdlaWdodDogNzAwO1xuICBsaW5lLWhlaWdodDogMS4yMztcbiAgdGV4dC1hbGlnbjogbGVmdDtcbn1cbi50aGVtZS1saWdodCAuc2VuZGluZyA+IC5tYWluID4gLmxhbmd1YWdlID4gLnRpdGxlIHtcbiAgY29sb3I6ICM0NDQ0NDQ7XG59XG4udGhlbWUtZGFyayAuc2VuZGluZyA+IC5tYWluID4gLmxhbmd1YWdlID4gLnRpdGxlIHtcbiAgY29sb3I6ICNlOGU4ZTg7XG59XG4uc2VuZGluZyA+IC5tYWluID4gLmxhbmd1YWdlID4gLnN1YnRpdGxlIHtcbiAgbWFyZ2luLXRvcDogNnB4O1xuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICBmb250LXNpemU6IDEycHg7XG4gIGxpbmUtaGVpZ2h0OiAxLjE3O1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xufVxuLnRoZW1lLWxpZ2h0IC5zZW5kaW5nID4gLm1haW4gPiAubGFuZ3VhZ2UgPiAuc3VidGl0bGUge1xuICBjb2xvcjogIzdlOGY5Zjtcbn1cbi50aGVtZS1kYXJrIC5zZW5kaW5nID4gLm1haW4gPiAubGFuZ3VhZ2UgPiAuc3VidGl0bGUge1xuICBjb2xvcjogI0FBQUFBQTtcbn1cbi5zZW5kaW5nID4gLm1haW4gPiAuZm9udHMge1xuICBtYXJnaW4tdG9wOiAzMHB4O1xufVxuLnNlbmRpbmcgPiAubWFpbiA+IC5mb250cyA+IC50aXRsZSB7XG4gIGZvbnQtc2l6ZTogMTNweDtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgbGluZS1oZWlnaHQ6IDEuMjM7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG59XG4udGhlbWUtbGlnaHQgLnNlbmRpbmcgPiAubWFpbiA+IC5mb250cyA+IC50aXRsZSB7XG4gIGNvbG9yOiAjNDQ0NDQ0O1xufVxuLnRoZW1lLWRhcmsgLnNlbmRpbmcgPiAubWFpbiA+IC5mb250cyA+IC50aXRsZSB7XG4gIGNvbG9yOiAjZThlOGU4O1xufVxuLnNlbmRpbmcgPiAubWFpbiA+IC5mb250cyA+IC5mb250LXN0eWxlIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICBtYXJnaW46IDE2cHggMDtcbn1cbi5zZW5kaW5nID4gLm1haW4gPiAuZm9udHMgPiAuZm9udC1zdHlsZSA+IC5kcm9wZG93bjpmaXJzdC1jaGlsZCB7XG4gIG1hcmdpbi1yaWdodDogMTBweDtcbn1cbi5zZW5kaW5nID4gLm1haW4gPiAuZm9udHMgPiAucHJldmlldyB7XG4gIHdpZHRoOiA1MDBweDtcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xuICBwYWRkaW5nOiAxMnB4O1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xufVxuLnRoZW1lLWxpZ2h0IC5zZW5kaW5nID4gLm1haW4gPiAuZm9udHMgPiAucHJldmlldyB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XG59XG4udGhlbWUtZGFyayAuc2VuZGluZyA+IC5tYWluID4gLmZvbnRzID4gLnByZXZpZXcge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjEyMTIxO1xufVxuLnRoZW1lLWxpZ2h0IC5zZW5kaW5nID4gLm1haW4gPiAuZm9udHMgPiAucHJldmlldyB7XG4gIGJvcmRlcjogI2M5ZDRlMCAxcHggc29saWQ7XG59XG4udGhlbWUtZGFyayAuc2VuZGluZyA+IC5tYWluID4gLmZvbnRzID4gLnByZXZpZXcge1xuICBib3JkZXI6ICMyRTJFMkUgMXB4IHNvbGlkO1xufVxuLnRoZW1lLWxpZ2h0IC5zZW5kaW5nID4gLm1haW4gPiAuZm9udHMgPiAucHJldmlldyB7XG4gIGNvbG9yOiAjNDQ0NDQ0O1xufVxuLnRoZW1lLWRhcmsgLnNlbmRpbmcgPiAubWFpbiA+IC5mb250cyA+IC5wcmV2aWV3IHtcbiAgY29sb3I6ICNlOGU4ZTg7XG59IiwgIiIseyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbmRyZXdzYW1ib3kvRGVza3RvcC9HaXQvcG9seW1haWwvd2ViYXBwL3NyYy9yb3V0ZXMvU2V0dGluZ3Mvcm91dGVzL1NlbmRpbmcvU2VuZGluZy5zY3NzIiwiU2VuZGluZy5zY3NzIiwiL1VzZXJzL2FuZHJld3NhbWJveS9EZXNrdG9wL0dpdC9wb2x5bWFpbC93ZWJhcHAvc3JjL3N0eWxlcy90eXBvZ3JhcGh5LnNjc3MiLCIvVXNlcnMvYW5kcmV3c2FtYm95L0Rlc2t0b3AvR2l0L3BvbHltYWlsL3dlYmFwcC9zcmMvc3R5bGVzL2NvbG9ycy5zY3NzIiwiL1VzZXJzL2FuZHJld3NhbWJveS9EZXNrdG9wL0dpdC9wb2x5bWFpbC93ZWJhcHAvc3JjL3N0eWxlcy9taXhpbnMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFJSTtFQUNFLGNBQUE7QUNITjtBRE1JO0VBQ0UsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsbUJBQUE7RUFDQSxpQkFBQTtFQUNBLHVCQUFBO0FDSk47QURNTTtFQUNFLGVBQUE7RUFDRCxnQkVSQTtFRlNBLGlCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxjR1hDO0VIWUEsa0JBQUE7QUNKUjtBRE9NO0VBQ0UsWUFBQTtFQUNELGtCQUFBO0VBRUMsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsbUJBQUE7RUFDQSxpQkFBQTtBQ05SO0FHVkk7RUpZK0IseUJBQUE7QUNDbkM7QUdiSTtFSlkrQix5QkFBQTtBQ0luQztBREVRO0VBQ0UsV0FBQTtFQUNELFlBQUE7RUFDQSxrQkFBQTtBQ0FUO0FHckJJO0VKc0JpQyx5QkFBQTtBQ0VyQztBR3hCSTtFSnNCaUMseUJBQUE7QUNLckM7QURGUTtFQUNFLGdCQUFBO0FDSVY7QURGVTtFQUNFLGVBQUE7RUFDRCxnQkVwQ0o7RUZxQ0ksaUJBQUE7RUFDQSxnQkFBQTtBQ0lYO0FHcENJO0VKaUNtQyxjQUFBO0FDTXZDO0FHdkNJO0VKaUNtQyxjQUFBO0FDU3ZDO0FETlU7RUFDRSxlQUFBO0VBQ0QsZ0JFNUNKO0VGNkNJLGlCQUFBO0VBQ0EsZ0JBQUE7QUNRWDtBR2hESTtFSnlDbUMsY0FBQTtBQ1V2QztBR25ESTtFSnlDbUMsY0FBQTtBQ2F2QztBRFBJO0VBQ0UsbUJBQUE7QUNTTjtBRFBNO0VBQ0UsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsbUJBQUE7RUFDQSxtQkFBQTtFQUNBLGdCQUFBO0FDU1I7QURQUTtFQUNFLGVBQUE7RUFDQSxnQkVuRUQ7RUZxRUMsWUFBQTtFQUNBLGFBQUE7RUFDQSxtQkFBQTtFQUNBLFlBQUE7RUFDQSxlQUFBO0FDUVY7QUd6RUk7RUo0RGtDLGNBQUE7QUNnQnRDO0FHNUVJO0VKNERrQyxjQUFBO0FDbUJ0QztBRFhRO0VBQ0UsZUFBQTtFQUNBLGdCRTlFRDtFRmdGQyxZQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsY0FBQTtBQ1lWO0FHdkZJO0VKdUVrQyxjQUFBO0FDbUJ0QztBRzFGSTtFSnVFa0MsY0FBQTtBQ3NCdEM7QURoQlU7RUFDRSxjQUFBO0FDa0JaO0FEWkk7RUFDRSxjQUFBO0FDY047QURaTTtFQUNFLGtCQUFBO0VBQ0EsZUFBQTtFQUNBLGdCRWhHRDtFRmlHQyxpQkFBQTtFQUNBLGdCQUFBO0FDY1I7QUcxR0k7RUorRk0sY0FBQTtBQ2NWO0FHN0dJO0VKK0ZNLGNBQUE7QUNpQlY7QURiTTtFQUNFLGVBQUE7RUFDQSxtQkFBQTtFQUNBLGVBQUE7RUFDQSxpQkFBQTtFQUNBLGdCQUFBO0FDZVI7QUd2SEk7RUp5R2dDLGNBQUE7QUNpQnBDO0FHMUhJO0VKeUdnQyxjQUFBO0FDb0JwQztBRGhCSTtFQUNFLGdCQUFBO0FDa0JOO0FEakJNO0VBQ0UsZUFBQTtFQUNBLGdCRXZIRDtFRndIQyxpQkFBQTtFQUNBLGdCQUFBO0FDbUJSO0FHdElJO0VKb0hnQyxjQUFBO0FDcUJwQztBR3pJSTtFSm9IZ0MsY0FBQTtBQ3dCcEM7QURyQk07RUFDRSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxtQkFBQTtFQUNBLDJCQUFBO0VBQ0EsY0FBQTtBQ3VCUjtBRHJCUTtFQUNFLGtCQUFBO0FDdUJWO0FEbkJNO0VBQ0UsWUFBQTtFQUNELGtCQUFBO0VBSUMsYUFBQTtFQUNBLGdCQUFBO0FDa0JSO0FHNUpJO0VKc0krQix5QkFBQTtBQ3lCbkM7QUcvSkk7RUpzSStCLHlCQUFBO0FDNEJuQztBR2xLSTtFSnVJZ0MseUJBQUE7QUM4QnBDO0FHcktJO0VKdUlnQyx5QkFBQTtBQ2lDcEM7QUd4S0k7RUp3SWdDLGNBQUE7QUNtQ3BDO0FHM0tJO0VKd0lnQyxjQUFBO0FDc0NwQyIsImZpbGUiOiJTZW5kaW5nLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0ICdoZWxwZXJzJztcblxuLnNlbmRpbmcge1xuICA+IC5tYWluIHtcbiAgICA+IC50b2dnbGUtY2VsbCB7XG4gICAgICBtYXJnaW46IDIwcHggMDtcbiAgICB9XG5cbiAgICA+IC5saW5rLXByZXZpZXcge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgbWFyZ2luOiAyMHB4IGF1dG87XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcblxuICAgICAgPiAubGluayB7XG4gICAgICAgIGZvbnQtc2l6ZTogMTNweDtcbiAgICAgIFx0Zm9udC13ZWlnaHQ6ICRib2xkO1xuICAgICAgXHRsaW5lLWhlaWdodDogMS4yMztcbiAgICAgIFx0dGV4dC1hbGlnbjogbGVmdDtcbiAgICAgIFx0Y29sb3I6ICRhenVyZTtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAyMHB4O1xuICAgICAgfVxuXG4gICAgICA+IC5wcmV2aWV3IHtcbiAgICAgICAgcGFkZGluZzogOHB4O1xuICAgICAgXHRib3JkZXItcmFkaXVzOiAzcHg7XG4gICAgICBcdEBpbmNsdWRlIHRoZW1pZnkoJHRoZW1lcykgeyBib3JkZXI6IHRoZW1lZCgnbG93Q29udHJhc3RCb3JkZXInKTsgfTtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDIwcHg7XG5cbiAgICAgICAgPiAuaW1hZ2Uge1xuICAgICAgICAgIHdpZHRoOiAzMnB4O1xuICAgICAgICBcdGhlaWdodDogMzJweDtcbiAgICAgICAgXHRib3JkZXItcmFkaXVzOiAzcHg7XG4gICAgICAgIFx0QGluY2x1ZGUgdGhlbWlmeSgkdGhlbWVzKSB7IGJhY2tncm91bmQtY29sb3I6IHRoZW1lZCgnaGlnaENvbnRyYXN0Qm9yZGVyQ29sb3InKTsgfTtcbiAgICAgICAgfVxuXG4gICAgICAgID4gLnJpZ2h0LWNvbHVtbiB7XG4gICAgICAgICAgbWFyZ2luLWxlZnQ6IDhweDtcblxuICAgICAgICAgID4gLnRpdGxlIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTNweDtcbiAgICAgICAgICBcdGZvbnQtd2VpZ2h0OiAkYm9sZDtcbiAgICAgICAgICBcdGxpbmUtaGVpZ2h0OiAxLjIzO1xuICAgICAgICAgIFx0dGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgICBcdEBpbmNsdWRlIHRoZW1pZnkoJHRoZW1lcykgeyBjb2xvcjogdGhlbWVkKCdwcmltYXJ5VGV4dENvbG9yJyk7IH07XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgPiAuc3VidGl0bGUge1xuICAgICAgICAgICAgZm9udC1zaXplOiAxMXB4O1xuICAgICAgICAgIFx0Zm9udC13ZWlnaHQ6ICRib2xkO1xuICAgICAgICAgIFx0bGluZS1oZWlnaHQ6IDEuMjc7XG4gICAgICAgICAgXHR0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgICAgIFx0QGluY2x1ZGUgdGhlbWlmeSgkdGhlbWVzKSB7IGNvbG9yOiB0aGVtZWQoJ3NlY29uZGFyeVRleHRDb2xvcicpOyB9O1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgID4gLmZvbGxvdy11cCB7XG4gICAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuXG4gICAgICA+IC5mb2xsb3ctdXAtZGF5cyB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gICAgICAgIG1hcmdpbi10b3A6IDEwcHg7XG5cbiAgICAgICAgPiBpbnB1dCB7XG4gICAgICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgICAgICAgIGZvbnQtd2VpZ2h0OiAkbWVkaXVtO1xuICAgICAgICAgIEBpbmNsdWRlIHRoZW1pZnkoJHRoZW1lcykgeyBjb2xvcjogdGhlbWVkKCdwcmltYXJ5VGV4dENvbG9yJyk7IH07XG4gICAgICAgICAgaGVpZ2h0OiAzMHB4O1xuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICBib3JkZXI6IG5vbmU7XG4gICAgICAgICAgbWF4LXdpZHRoOiAzMHB4O1xuICAgICAgICB9XG5cbiAgICAgICAgPiBzcGFuIHtcbiAgICAgICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICAgICAgZm9udC13ZWlnaHQ6ICRtZWRpdW07XG4gICAgICAgICAgQGluY2x1ZGUgdGhlbWlmeSgkdGhlbWVzKSB7IGNvbG9yOiB0aGVtZWQoJ3NlY29uZGFyeVRleHRDb2xvcicpOyB9O1xuICAgICAgICAgIGhlaWdodDogMzBweDtcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAgbWFyZ2luOiAwIDEwcHg7XG5cbiAgICAgICAgICAmOmZpcnN0LWNoaWxkIHtcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgID4gLmxhbmd1YWdlIHtcbiAgICAgIG1hcmdpbjogMzBweCAwO1xuXG4gICAgICA+LnRpdGxlIHtcbiAgICAgICAgbWFyZ2luOiAxMHB4IDAgMCAwO1xuICAgICAgICBmb250LXNpemU6IDEzcHg7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiAkYm9sZDtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuMjM7XG4gICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG5cbiAgICAgICAgQGluY2x1ZGUgdGhlbWlmeSgkdGhlbWVzKSB7XG4gICAgICAgICAgY29sb3I6IHRoZW1lZCgncHJpbWFyeVRleHRDb2xvcicpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgID4uc3VidGl0bGUge1xuICAgICAgICBtYXJnaW4tdG9wOiA2cHg7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gICAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuMTc7XG4gICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICAgIEBpbmNsdWRlIHRoZW1pZnkoJHRoZW1lcykgeyBjb2xvcjogdGhlbWVkKCdzZWNvbmRhcnlUZXh0Q29sb3InKTsgfTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICA+IC5mb250cyB7XG4gICAgICBtYXJnaW4tdG9wOiAzMHB4O1xuICAgICAgPiAudGl0bGUge1xuICAgICAgICBmb250LXNpemU6IDEzcHg7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiAkYm9sZDtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuMjM7XG4gICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICAgIEBpbmNsdWRlIHRoZW1pZnkoJHRoZW1lcykgeyBjb2xvcjogdGhlbWVkKCdwcmltYXJ5VGV4dENvbG9yJyk7IH07XG4gICAgICB9XG5cbiAgICAgID4gLmZvbnQtc3R5bGUge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gICAgICAgIG1hcmdpbjogMTZweCAwO1xuXG4gICAgICAgID4gLmRyb3Bkb3duOmZpcnN0LWNoaWxkIHtcbiAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgPiAucHJldmlldyB7XG4gICAgICAgIHdpZHRoOiA1MDBweDtcbiAgICAgIFx0Ym9yZGVyLXJhZGl1czogM3B4O1xuICAgICAgXHRAaW5jbHVkZSB0aGVtaWZ5KCR0aGVtZXMpIHsgYmFja2dyb3VuZC1jb2xvcjogdGhlbWVkKCdwcmltYXJ5QmFja2dyb3VuZENvbG9yJyk7IH07XG4gICAgICAgIEBpbmNsdWRlIHRoZW1pZnkoJHRoZW1lcykgeyBib3JkZXI6IHRoZW1lZCgnaGlnaENvbnRyYXN0Qm9yZGVyQ29sb3InKSAxcHggc29saWQ7IH07XG4gICAgICAgIEBpbmNsdWRlIHRoZW1pZnkoJHRoZW1lcykgeyBjb2xvcjogdGhlbWVkKCdwcmltYXJ5VGV4dENvbG9yJyk7IH07XG4gICAgICAgIHBhZGRpbmc6IDEycHg7XG4gICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iLCIuc2VuZGluZyA+IC5tYWluID4gLnRvZ2dsZS1jZWxsIHtcbiAgbWFyZ2luOiAyMHB4IDA7XG59XG4uc2VuZGluZyA+IC5tYWluID4gLmxpbmstcHJldmlldyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIG1hcmdpbjogMjBweCBhdXRvO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cbi5zZW5kaW5nID4gLm1haW4gPiAubGluay1wcmV2aWV3ID4gLmxpbmsge1xuICBmb250LXNpemU6IDEzcHg7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjIzO1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICBjb2xvcjogIzA3OWNlZjtcbiAgbWFyZ2luLXJpZ2h0OiAyMHB4O1xufVxuLnNlbmRpbmcgPiAubWFpbiA+IC5saW5rLXByZXZpZXcgPiAucHJldmlldyB7XG4gIHBhZGRpbmc6IDhweDtcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBtYXJnaW4tbGVmdDogMjBweDtcbn1cbi50aGVtZS1saWdodCAuc2VuZGluZyA+IC5tYWluID4gLmxpbmstcHJldmlldyA+IC5wcmV2aWV3IHtcbiAgYm9yZGVyOiAjZjJmNWY4IDFweCBzb2xpZDtcbn1cbi50aGVtZS1kYXJrIC5zZW5kaW5nID4gLm1haW4gPiAubGluay1wcmV2aWV3ID4gLnByZXZpZXcge1xuICBib3JkZXI6ICMyQzJDMkMgMXB4IHNvbGlkO1xufVxuLnNlbmRpbmcgPiAubWFpbiA+IC5saW5rLXByZXZpZXcgPiAucHJldmlldyA+IC5pbWFnZSB7XG4gIHdpZHRoOiAzMnB4O1xuICBoZWlnaHQ6IDMycHg7XG4gIGJvcmRlci1yYWRpdXM6IDNweDtcbn1cbi50aGVtZS1saWdodCAuc2VuZGluZyA+IC5tYWluID4gLmxpbmstcHJldmlldyA+IC5wcmV2aWV3ID4gLmltYWdlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2M5ZDRlMDtcbn1cbi50aGVtZS1kYXJrIC5zZW5kaW5nID4gLm1haW4gPiAubGluay1wcmV2aWV3ID4gLnByZXZpZXcgPiAuaW1hZ2Uge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMkUyRTJFO1xufVxuLnNlbmRpbmcgPiAubWFpbiA+IC5saW5rLXByZXZpZXcgPiAucHJldmlldyA+IC5yaWdodC1jb2x1bW4ge1xuICBtYXJnaW4tbGVmdDogOHB4O1xufVxuLnNlbmRpbmcgPiAubWFpbiA+IC5saW5rLXByZXZpZXcgPiAucHJldmlldyA+IC5yaWdodC1jb2x1bW4gPiAudGl0bGUge1xuICBmb250LXNpemU6IDEzcHg7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjIzO1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xufVxuLnRoZW1lLWxpZ2h0IC5zZW5kaW5nID4gLm1haW4gPiAubGluay1wcmV2aWV3ID4gLnByZXZpZXcgPiAucmlnaHQtY29sdW1uID4gLnRpdGxlIHtcbiAgY29sb3I6ICM0NDQ0NDQ7XG59XG4udGhlbWUtZGFyayAuc2VuZGluZyA+IC5tYWluID4gLmxpbmstcHJldmlldyA+IC5wcmV2aWV3ID4gLnJpZ2h0LWNvbHVtbiA+IC50aXRsZSB7XG4gIGNvbG9yOiAjZThlOGU4O1xufVxuLnNlbmRpbmcgPiAubWFpbiA+IC5saW5rLXByZXZpZXcgPiAucHJldmlldyA+IC5yaWdodC1jb2x1bW4gPiAuc3VidGl0bGUge1xuICBmb250LXNpemU6IDExcHg7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjI3O1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xufVxuLnRoZW1lLWxpZ2h0IC5zZW5kaW5nID4gLm1haW4gPiAubGluay1wcmV2aWV3ID4gLnByZXZpZXcgPiAucmlnaHQtY29sdW1uID4gLnN1YnRpdGxlIHtcbiAgY29sb3I6ICM3ZThmOWY7XG59XG4udGhlbWUtZGFyayAuc2VuZGluZyA+IC5tYWluID4gLmxpbmstcHJldmlldyA+IC5wcmV2aWV3ID4gLnJpZ2h0LWNvbHVtbiA+IC5zdWJ0aXRsZSB7XG4gIGNvbG9yOiAjQUFBQUFBO1xufVxuLnNlbmRpbmcgPiAubWFpbiA+IC5mb2xsb3ctdXAge1xuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xufVxuLnNlbmRpbmcgPiAubWFpbiA+IC5mb2xsb3ctdXAgPiAuZm9sbG93LXVwLWRheXMge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICBtYXJnaW4tdG9wOiAxMHB4O1xufVxuLnNlbmRpbmcgPiAubWFpbiA+IC5mb2xsb3ctdXAgPiAuZm9sbG93LXVwLWRheXMgPiBpbnB1dCB7XG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgaGVpZ2h0OiAzMHB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBib3JkZXI6IG5vbmU7XG4gIG1heC13aWR0aDogMzBweDtcbn1cbi50aGVtZS1saWdodCAuc2VuZGluZyA+IC5tYWluID4gLmZvbGxvdy11cCA+IC5mb2xsb3ctdXAtZGF5cyA+IGlucHV0IHtcbiAgY29sb3I6ICM0NDQ0NDQ7XG59XG4udGhlbWUtZGFyayAuc2VuZGluZyA+IC5tYWluID4gLmZvbGxvdy11cCA+IC5mb2xsb3ctdXAtZGF5cyA+IGlucHV0IHtcbiAgY29sb3I6ICNlOGU4ZTg7XG59XG4uc2VuZGluZyA+IC5tYWluID4gLmZvbGxvdy11cCA+IC5mb2xsb3ctdXAtZGF5cyA+IHNwYW4ge1xuICBmb250LXNpemU6IDEycHg7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGhlaWdodDogMzBweDtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgbWFyZ2luOiAwIDEwcHg7XG59XG4udGhlbWUtbGlnaHQgLnNlbmRpbmcgPiAubWFpbiA+IC5mb2xsb3ctdXAgPiAuZm9sbG93LXVwLWRheXMgPiBzcGFuIHtcbiAgY29sb3I6ICM3ZThmOWY7XG59XG4udGhlbWUtZGFyayAuc2VuZGluZyA+IC5tYWluID4gLmZvbGxvdy11cCA+IC5mb2xsb3ctdXAtZGF5cyA+IHNwYW4ge1xuICBjb2xvcjogI0FBQUFBQTtcbn1cbi5zZW5kaW5nID4gLm1haW4gPiAuZm9sbG93LXVwID4gLmZvbGxvdy11cC1kYXlzID4gc3BhbjpmaXJzdC1jaGlsZCB7XG4gIG1hcmdpbi1sZWZ0OiAwO1xufVxuLnNlbmRpbmcgPiAubWFpbiA+IC5sYW5ndWFnZSB7XG4gIG1hcmdpbjogMzBweCAwO1xufVxuLnNlbmRpbmcgPiAubWFpbiA+IC5sYW5ndWFnZSA+IC50aXRsZSB7XG4gIG1hcmdpbjogMTBweCAwIDAgMDtcbiAgZm9udC1zaXplOiAxM3B4O1xuICBmb250LXdlaWdodDogNzAwO1xuICBsaW5lLWhlaWdodDogMS4yMztcbiAgdGV4dC1hbGlnbjogbGVmdDtcbn1cbi50aGVtZS1saWdodCAuc2VuZGluZyA+IC5tYWluID4gLmxhbmd1YWdlID4gLnRpdGxlIHtcbiAgY29sb3I6ICM0NDQ0NDQ7XG59XG4udGhlbWUtZGFyayAuc2VuZGluZyA+IC5tYWluID4gLmxhbmd1YWdlID4gLnRpdGxlIHtcbiAgY29sb3I6ICNlOGU4ZTg7XG59XG4uc2VuZGluZyA+IC5tYWluID4gLmxhbmd1YWdlID4gLnN1YnRpdGxlIHtcbiAgbWFyZ2luLXRvcDogNnB4O1xuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICBmb250LXNpemU6IDEycHg7XG4gIGxpbmUtaGVpZ2h0OiAxLjE3O1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xufVxuLnRoZW1lLWxpZ2h0IC5zZW5kaW5nID4gLm1haW4gPiAubGFuZ3VhZ2UgPiAuc3VidGl0bGUge1xuICBjb2xvcjogIzdlOGY5Zjtcbn1cbi50aGVtZS1kYXJrIC5zZW5kaW5nID4gLm1haW4gPiAubGFuZ3VhZ2UgPiAuc3VidGl0bGUge1xuICBjb2xvcjogI0FBQUFBQTtcbn1cbi5zZW5kaW5nID4gLm1haW4gPiAuZm9udHMge1xuICBtYXJnaW4tdG9wOiAzMHB4O1xufVxuLnNlbmRpbmcgPiAubWFpbiA+IC5mb250cyA+IC50aXRsZSB7XG4gIGZvbnQtc2l6ZTogMTNweDtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgbGluZS1oZWlnaHQ6IDEuMjM7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG59XG4udGhlbWUtbGlnaHQgLnNlbmRpbmcgPiAubWFpbiA+IC5mb250cyA+IC50aXRsZSB7XG4gIGNvbG9yOiAjNDQ0NDQ0O1xufVxuLnRoZW1lLWRhcmsgLnNlbmRpbmcgPiAubWFpbiA+IC5mb250cyA+IC50aXRsZSB7XG4gIGNvbG9yOiAjZThlOGU4O1xufVxuLnNlbmRpbmcgPiAubWFpbiA+IC5mb250cyA+IC5mb250LXN0eWxlIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICBtYXJnaW46IDE2cHggMDtcbn1cbi5zZW5kaW5nID4gLm1haW4gPiAuZm9udHMgPiAuZm9udC1zdHlsZSA+IC5kcm9wZG93bjpmaXJzdC1jaGlsZCB7XG4gIG1hcmdpbi1yaWdodDogMTBweDtcbn1cbi5zZW5kaW5nID4gLm1haW4gPiAuZm9udHMgPiAucHJldmlldyB7XG4gIHdpZHRoOiA1MDBweDtcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xuICBwYWRkaW5nOiAxMnB4O1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xufVxuLnRoZW1lLWxpZ2h0IC5zZW5kaW5nID4gLm1haW4gPiAuZm9udHMgPiAucHJldmlldyB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XG59XG4udGhlbWUtZGFyayAuc2VuZGluZyA+IC5tYWluID4gLmZvbnRzID4gLnByZXZpZXcge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjEyMTIxO1xufVxuLnRoZW1lLWxpZ2h0IC5zZW5kaW5nID4gLm1haW4gPiAuZm9udHMgPiAucHJldmlldyB7XG4gIGJvcmRlcjogI2M5ZDRlMCAxcHggc29saWQ7XG59XG4udGhlbWUtZGFyayAuc2VuZGluZyA+IC5tYWluID4gLmZvbnRzID4gLnByZXZpZXcge1xuICBib3JkZXI6ICMyRTJFMkUgMXB4IHNvbGlkO1xufVxuLnRoZW1lLWxpZ2h0IC5zZW5kaW5nID4gLm1haW4gPiAuZm9udHMgPiAucHJldmlldyB7XG4gIGNvbG9yOiAjNDQ0NDQ0O1xufVxuLnRoZW1lLWRhcmsgLnNlbmRpbmcgPiAubWFpbiA+IC5mb250cyA+IC5wcmV2aWV3IHtcbiAgY29sb3I6ICNlOGU4ZTg7XG59IiwiLy8gaWYgdGhlIGZvbGxvd2luZyBpcyB1cGRhdGVkLCBzaG91bGQgYWxzbyB1cGRhdGUgYGxpYi90eXBvZ3JhcGh5LnRzYFxuJGRlZmF1bHRGb250OiAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsXG4gIFwiU2Vnb2UgVUlcIiwgXCJSb2JvdG9cIiwgXCJPeHlnZW5cIiwgXCJVYnVudHVcIiwgXCJDYW50YXJlbGxcIixcbiAgXCJGaXJhIFNhbnNcIiwgXCJEcm9pZCBTYW5zXCIsIFwiSGVsdmV0aWNhIE5ldWVcIixcbiAgc2Fucy1zZXJpZjtcblxuJHJlZ3VsYXI6IDQwMDtcbiRtZWRpdW06IDUwMDtcbiRzZW1pYm9sZDogNjAwO1xuJGJvbGQ6IDcwMDtcbiIsIi8vIExpZ2h0IFRoZW1lcyBTQVNTIHZhcnNcbiR3aGl0ZTogI2ZmZmZmZjtcbiRzbm93OiAjZmFmYWZhO1xuJGNoYXJjb2FsOiAjNDQ0NDQ0O1xuJGdyYXk6ICNjOWQ0ZTA7XG4kc2lsdmVyOiAjN2U4ZjlmO1xuJGxhYmVsOiAjZDM0N2FlO1xuJGluYm94OiAjNDdkZmY1O1xuJG1pZG5pZ2h0OiAjMjQyZTQ0O1xuJGF6dXJlOiAjMDc5Y2VmO1xuJHJlYWRMYXRlcjogI2ZmYTA1NztcbiRhcmNoaXZlOiAjODdlY2JiO1xuJHRyYXNoOiAjZmY2YjdjO1xuJHN0YXI6ICNmZmRmMzI7XG4kc2VuZExhdGVyOiAjMTA5N2RkO1xuJGZvbGxvd1VwOiAjZjY0YjgxO1xuJGVycm9yOiAjZTc0YzNjO1xuJGNvbXBvc2VIb3ZlcjogIzRFRDZFQjtcbiRsc2JDZWxsSG92ZXI6ICM0MzRmNjc7XG4kbHNiQ2VsbFNlbGVjdGVkOiAjMzMzZTU1O1xuJGxpZ2h0R3JheTogI2YyZjVmODtcbiRkYXJrQmx1ZTogIzJjNzFjMTtcbiRtZWRpdW1HcmVlbjogIzBlYzM2YjtcbiRib3JkZXJHcmF5OiAjZWVlZWVlO1xuJGljZUJsdWU6ICNlOGYzZmY7XG4kY29tcGxldGVkR3JheTogI2FmYmJjODtcbiRncmF5SG92ZXI6IGRhcmtlbigkd2hpdGUsIDQlKTtcbiR0aHJlYWRIb3ZlcjogcmdiYSgkaWNlQmx1ZSwgLjUpO1xuJHRocmVhZFNlbGVjdGVkOiAkaWNlQmx1ZTtcbiRjb21tZW50Qm9keTogcmdiYSgwLCAxNzAsIDI1NSwgMC4xKTtcbiRibGFjazogIzAwMDAwMDtcblxuJGZhY2Vib29rOiAjNWE3YWM3O1xuJHR3aXR0ZXI6ICM1YmJjZWM7XG4kYW5nZWxMaXN0OiAjMDAwMDAwO1xuJGxpbmtlZEluOiAjMDA3YmI1O1xuXG4kYm94U2hhZG93OiAycHggMnB4IDRweCAwIHJnYmEoMTI1LCAxNDMsIDE2MCwgMC41KTtcbiRncmF5Qm9yZGVyOiBzb2xpZCAycHggJGJvcmRlckdyYXk7XG4kbGlnaHRHcmF5Qm9yZGVyOiAkbGlnaHRHcmF5IDFweCBzb2xpZDtcbiRzZXF1ZW5jZU1heFdpZHRoOiAxMDQwcHg7XG5cbi8vIENvbnN0YW50cyAoTm90IGNoYW5nZWQgYnkgdGhlbWUpXG4kdHJ1ZVdoaXRlOiAjZmZmZmZmO1xuJHRydWVEYXJrOiAjMTIxMjEyO1xuXG4vLyBMaWdodCBUaGVtZXMgU0FTUyB2YXJzXG4kZGFya1ByaW1hcnlUZXh0OiAjZThlOGU4O1xuJGRhcmtTZWNvbmRhcnlUZXh0OiAjQUFBQUFBO1xuXG4kZGFyazogJ2RhcmsnO1xuJGxpZ2h0OiAnbGlnaHQnO1xuXG4vLyBUaGVtaWZpZWQgQ29sb3JzXG4kdGhlbWVzOiAoXG4gICRsaWdodDogKFxuICAgIHRydWVEYXJrOiAkdHJ1ZURhcmssXG4gICAgdHJ1ZVdoaXRlOiAjZmFmYWZhLFxuICAgIHVuc2V0OiAndW5zZXQnLFxuICAgIHRyYW5zcGFyZW50Q29sb3I6IHRyYW5zcGFyZW50LFxuICAgIHByaW1hcnlBY2NlbnQ6ICRhenVyZSxcblxuICAgIC8vIE1haW4gQXBwXG4gICAgcHJpbWFyeVRleHRDb2xvcjogJGNoYXJjb2FsLFxuICAgIHNlY29uZGFyeVRleHRDb2xvcjogJHNpbHZlcixcbiAgICB0ZXJ0aWFyeVRleHRDb2xvcjogJGdyYXksXG5cbiAgICAvLyBCYWNrZ3JvdW5kIENvbG9yc1xuICAgIHByaW1hcnlCYWNrZ3JvdW5kQ29sb3I6ICR3aGl0ZSxcbiAgICBzZWNvbmRhcnlCYWNrZ3JvdW5kQ29sb3I6ICRzbm93LFxuICAgIHRlcnRpYXJ5QmFja2dyb3VuZENvbG9yOiAkd2hpdGUsXG4gICAgcHJpbWFyeUNvbnRyYXN0Qm9yZGVyQ29sb3I6ICRsaWdodEdyYXksXG4gICAgc2Vjb25kYXJ5Q29udHJhc3RCb3JkZXJDb2xvcjogJGxpZ2h0R3JheSxcblxuICAgIC8vIExlZnQgU2lkZWJhclxuICAgIGxzYkJhY2tncm91bmRDb2xvcjogJG1pZG5pZ2h0LFxuICAgIGxzYkhlYWRlckNvbG9yOiAkZ3JheSxcblxuICAgIC8vIEJvcmRlcnNcbiAgICBsb3dDb250cmFzdEJvcmRlcjogJGxpZ2h0R3JheSAxcHggc29saWQsXG4gICAgbG93Q29udHJhc3RCb3JkZXJDb2xvcjogJGxpZ2h0R3JheSxcbiAgICBoaWdoQ29udHJhc3RCb3JkZXI6ICRncmF5IDJweCBzb2xpZCxcbiAgICBoaWdoQ29udHJhc3RCb3JkZXJDb2xvcjogJGdyYXksXG4gICAgYm94U2hhZG93OiAkYm94U2hhZG93LFxuXG4gICAgLy8gQWNjZW50c1xuICAgIGxvd0NvbnRyYXN0QWNjZW50OiByZ2JhKDI0MiwgMjQ1LCAyNDgsIDAuNSksXG5cbiAgICAvLyBIb3ZlcnNcbiAgICBoaWdoQ29udHJhc3RIb3ZlcjogJGdyYXlIb3ZlcixcblxuICAgIGdyYXk6ICRncmF5LFxuICAgIGdyYXlUZXh0OiAkZ3JheSxcbiAgICBtaWRuaWdodDogJG1pZG5pZ2h0LFxuICAgIGljZUJsdWU6ICRpY2VCbHVlLFxuICAgIHRocmVhZEhvdmVyOiByZ2JhKCRpY2VCbHVlLCAwLjUpLFxuICAgIGJvcmRlckdyYXk6ICRsaWdodEdyYXksXG4gICAgdGhyZWFkU2VsZWN0ZWQ6ICRpY2VCbHVlLFxuICAgIGxpZ2h0R3JheUJvcmRlcjogJGxpZ2h0R3JheSAxcHggc29saWQsXG4gICAgZ3JheUhvdmVyOiAkZ3JheUhvdmVyLFxuXG4gICksXG4gICRkYXJrOiAoXG4gICAgLy8gQ29uc3RhbnRzIHRoYXQgZG8gbm90IGNoYW5nZVxuICAgIHRydWVXaGl0ZTogI2ZhZmFmYSxcbiAgICB0cnVlRGFyazogJHRydWVEYXJrLFxuICAgIHByaW1hcnlBY2NlbnQ6ICRhenVyZSxcbiAgICB0cmFuc3BhcmVudENvbG9yOiB0cmFuc3BhcmVudCxcbiAgICB1bnNldDogJ3Vuc2V0JyxcblxuICAgIC8vIE1haW4gQXBwXG4gICAgcHJpbWFyeVRleHRDb2xvcjogJGRhcmtQcmltYXJ5VGV4dCxcbiAgICBzZWNvbmRhcnlUZXh0Q29sb3I6ICRkYXJrU2Vjb25kYXJ5VGV4dCxcbiAgICB0ZXJ0aWFyeVRleHRDb2xvcjogIzc3Nzc3NyxcbiAgICBwcmltYXJ5QmFja2dyb3VuZENvbG9yOiAjMjEyMTIxLFxuICAgIHNlY29uZGFyeUJhY2tncm91bmRDb2xvcjogIzIzMjMyMyxcbiAgICB0ZXJ0aWFyeUJhY2tncm91bmRDb2xvcjogIzI1MjUyNSxcbiAgICBzZWNvbmRhcnlDb250cmFzdEJvcmRlckNvbG9yOiBsaWdodGVuKCMxMjEyMTIsIDEwJSksXG4gICAgY29udHJhc3RlZEJvcmRlckNvbG9yOiBsaWdodGVuKCMxMjEyMTIsIDEwJSksXG5cbiAgICAvLyBMZWZ0IFNpZGViYXJcbiAgICBsc2JCYWNrZ3JvdW5kQ29sb3I6ICMyNTI1MjUsXG4gICAgbHNiSGVhZGVyQ29sb3I6IGRhcmtlbigjZmFmYWZhLCAxMCUpLFxuXG4gICAgLy8gQm9yZGVyc1xuICAgIGxvd0NvbnRyYXN0Qm9yZGVyOiAjMkMyQzJDIDFweCBzb2xpZCxcbiAgICBsb3dDb250cmFzdEJvcmRlckNvbG9yOiAjMkMyQzJDLFxuICAgIGhpZ2hDb250cmFzdEJvcmRlcjogIzJFMkUyRSAycHggc29saWQsXG4gICAgaGlnaENvbnRyYXN0Qm9yZGVyQ29sb3I6ICMyRTJFMkUsXG4gICAgYm94U2hhZG93OiAycHggMnB4IDRweCAwICMxMjEyMTIsXG5cbiAgICAvLyBBY2NlbnRzXG4gICAgbG93Q29udHJhc3RBY2NlbnQ6IHJnYmEoNzcsIDc3LCA3NywgMC4xMzIpLFxuXG4gICAgLy8gSG92ZXJzXG4gICAgaGlnaENvbnRyYXN0SG92ZXI6IGxpZ2h0ZW4obGlnaHRlbigjMEYwRjBGLCA1JSksIDUlKSxcblxuICAgIGdyYXk6IGxpZ2h0ZW4oIzBGMEYwRiwgMTUlKSxcbiAgICBtaWRuaWdodDogbGlnaHRlbigjMEYwRjBGLCAxMCUpLFxuICAgIGljZUJsdWU6IGxpZ2h0ZW4oIzBGMEYwRiwgNyUpLFxuICAgIGJvcmRlckdyYXk6IGxpZ2h0ZW4oIzBGMEYwRiwgMTAlKSxcbiAgICB0aHJlYWRIb3ZlcjogcmdiYSgjMzYzNjM2LCAwLjcpLFxuICAgIHRocmVhZFNlbGVjdGVkOiByZ2JhKCMzNjM2MzYsIDAuNSksXG4gICAgbGlnaHRHcmF5Qm9yZGVyOiAjMkMyQzJDIDFweCBzb2xpZCxcbiAgICBncmF5VGV4dDogI2ZhZmFmYSxcbiAgICBncmF5SG92ZXI6ICMyRTJFMkUsXG4gICksXG4pO1xuIiwiQGZ1bmN0aW9uIHRoZW1lZCgka2V5KSB7XG4gIEByZXR1cm4gbWFwLWdldCgkdGhlbWUtbWFwLCAka2V5KTtcbn1cblxuQG1peGluIGFwcC1kcmFnZ2FibGUoKSB7XG4gIC13ZWJraXQtYXBwLXJlZ2lvbjogZHJhZztcblxuICAudGhlbWUtd2luZG93cyAmIHtcbiAgICAtd2Via2l0LWFwcC1yZWdpb246IG5vLWRyYWc7XG4gIH1cbn1cblxuQG1peGluIHRoZW1pZnkoJHRoZW1lczogJHRoZW1lcykge1xuICBAZWFjaCAkdGhlbWUsICRtYXAgaW4gJHRoZW1lcyB7XG5cbiAgICAudGhlbWUtI3skdGhlbWV9ICYge1xuICAgICAgJHRoZW1lLW1hcDogKCkgIWdsb2JhbDtcbiAgICAgIEBlYWNoICRrZXksICRzdWJtYXAgaW4gJG1hcCB7XG4gICAgICAgICR2YWx1ZTogbWFwLWdldChtYXAtZ2V0KCR0aGVtZXMsICR0aGVtZSksICcjeyRrZXl9Jyk7XG4gICAgICAgICR0aGVtZS1tYXA6IG1hcC1tZXJnZSgkdGhlbWUtbWFwLCAoJGtleTogJHZhbHVlKSkgIWdsb2JhbDtcbiAgICAgIH1cblxuICAgICAgQGNvbnRlbnQ7XG4gICAgICAkdGhlbWUtbWFwOiBudWxsICFnbG9iYWw7XG4gICAgfVxuXG4gIH1cbn1cblxuQG1peGluIHRoZW1pZnlCb2R5KCR0aGVtZXM6ICR0aGVtZXMpIHtcbiAgQGVhY2ggJHRoZW1lLCAkbWFwIGluICR0aGVtZXMge1xuXG4gICAgJi50aGVtZS0jeyR0aGVtZX0ge1xuICAgICAgJHRoZW1lLW1hcDogKCkgIWdsb2JhbDtcbiAgICAgIEBlYWNoICRrZXksICRzdWJtYXAgaW4gJG1hcCB7XG4gICAgICAgICR2YWx1ZTogbWFwLWdldChtYXAtZ2V0KCR0aGVtZXMsICR0aGVtZSksICcjeyRrZXl9Jyk7XG4gICAgICAgICR0aGVtZS1tYXA6IG1hcC1tZXJnZSgkdGhlbWUtbWFwLCAoJGtleTogJHZhbHVlKSkgIWdsb2JhbDtcbiAgICAgIH1cblxuICAgICAgQGNvbnRlbnQ7XG4gICAgICAkdGhlbWUtbWFwOiBudWxsICFnbG9iYWw7XG4gICAgfVxuXG4gIH1cbn1cblxuQG1peGluIHRoZW1pZnlTaW5nbGUoJG1vZGUsICR0aGVtZXM6ICR0aGVtZXMpIHtcbiAgQGVhY2ggJHRoZW1lLCAkbWFwIGluICR0aGVtZXMge1xuICAgIEBpZiAkbW9kZSA9PSAkdGhlbWUge1xuICAgICAgLnRoZW1lLSN7JHRoZW1lfSAmIHtcbiAgICAgICAgJHRoZW1lLW1hcDogKCkgIWdsb2JhbDtcbiAgICAgICAgQGVhY2ggJGtleSwgJHN1Ym1hcCBpbiAkbWFwIHtcbiAgICAgICAgICAkdmFsdWU6IG1hcC1nZXQobWFwLWdldCgkdGhlbWVzLCAkdGhlbWUpLCAnI3ska2V5fScpO1xuICAgICAgICAgICR0aGVtZS1tYXA6IG1hcC1tZXJnZSgkdGhlbWUtbWFwLCAoJGtleTogJHZhbHVlKSkgIWdsb2JhbDtcbiAgICAgICAgfVxuXG4gICAgICAgIEBjb250ZW50O1xuICAgICAgICAkdGhlbWUtbWFwOiBudWxsICFnbG9iYWw7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbkBtaXhpbiBib3VuY2UtcGl4ZWxzKCRwaXhlbHMpIHtcbiAgQGtleWZyYW1lcyBib3VuY2UtcGl4ZWxzIHtcbiAgICAwJSB7IHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtJHBpeGVscykgfVxuICAgIDUwJSB7IHRyYW5zZm9ybTogdHJhbnNsYXRlWSgkcGl4ZWxzKSB9XG4gICAgMTAwJSB7IHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtJHBpeGVscykgfVxuICB9XG4gIGFuaW1hdGlvbjogYm91bmNlLXBpeGVscyAycyBlYXNlLWluLW91dCBpbmZpbml0ZTtcbn1cblxuQG1peGluIGZvcmNlLWdwdSgpIHtcbiAgLXdlYmtpdC1iYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG4gIC1tb3otYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMSk7XG4gIC1tcy10cmFuc2Zvcm06IHNjYWxlKDEpO1xuICAtbW96LXRyYW5zZm9ybTogc2NhbGUoMSk7XG4gIGJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgdHJhbnNmb3JtOiBzY2FsZSgxKTtcbn1cblxuQG1peGluIGJsdXIoJHBpeGVscykge1xuICAtd2Via2l0LWZpbHRlcjogYmx1cigkcGl4ZWxzKTtcbiAgLW1vei1maWx0ZXI6IGJsdXIoJHBpeGVscyk7XG4gIC1vLWZpbHRlcjogYmx1cigkcGl4ZWxzKTtcbiAgLW1zLWZpbHRlcjogYmx1cigkcGl4ZWxzKTtcbiAgZmlsdGVyOiBibHVyKCRwaXhlbHMpO1xufVxuXG5AbWl4aW4gZW5hYmxlLXNlbGVjdGlvbigpIHtcbiAgLXdlYmtpdC10b3VjaC1jYWxsb3V0OiBhdXRvOyAvKiBpT1MgU2FmYXJpICovXG4gIC13ZWJraXQtdXNlci1zZWxlY3Q6IHRleHQ7IC8qIFNhZmFyaSAqL1xuICAta2h0bWwtdXNlci1zZWxlY3Q6IHRleHQ7IC8qIEtvbnF1ZXJvciBIVE1MICovXG4gIC1tb3otdXNlci1zZWxlY3Q6IHRleHQ7IC8qIEZpcmVmb3ggKi9cbiAgLW1zLXVzZXItc2VsZWN0OiB0ZXh0OyAvKiBJbnRlcm5ldCBFeHBsb3Jlci9FZGdlICovXG4gIHVzZXItc2VsZWN0OiB0ZXh0O1xuICAtd2Via2l0LWFwcC1yZWdpb246IG5vLWRyYWc7XG4gIGN1cnNvcjogYXV0bztcbn1cblxuQG1peGluIGRpc2FibGUtc2VsZWN0aW9uKCkge1xuICAtd2Via2l0LXRvdWNoLWNhbGxvdXQ6IG5vbmU7IC8qIGlPUyBTYWZhcmkgKi9cbiAgLXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTsgLyogU2FmYXJpICovXG4gIC1raHRtbC11c2VyLXNlbGVjdDogbm9uZTsgLyogS29ucXVlcm9yIEhUTUwgKi9cbiAgLW1vei11c2VyLXNlbGVjdDogbm9uZTsgLyogRmlyZWZveCAqL1xuICAtbXMtdXNlci1zZWxlY3Q6IG5vbmU7IC8qIEludGVybmV0IEV4cGxvcmVyL0VkZ2UgKi9cbiAgdXNlci1zZWxlY3Q6IG5vbmU7XG4gIGN1cnNvcjogZGVmYXVsdDtcbn1cblxuQG1peGluIGVuYWJsZS1mb250LXNtb290aGluZygpIHtcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7XG59XG5cbkBtaXhpbiBkaXNhYmxlLWZvbnQtc21vb3RoaW5nKCkge1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhdXRvO1xuICAtbW96LW9zeC1mb250LXNtb290aGluZzogYXV0bztcbn1cblxuQG1peGluIHRydW5jYXRlLWF0KCRsaW5lcykge1xuICAvLyBlbGxpcHNpc1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gIHdvcmQtd3JhcDogYnJlYWstd29yZDtcbiAgd29yZC1icmVhazogYnJlYWstYWxsO1xuXG4gIC8vIG11bHRpbGluZSBlbGxpcHNlcyBmb3Igd2Via2l0IGJyb3dzZXJzXG4gIC8vIGFsbCBvdGhlciBicm93c2VycyB3aWxsIGxpbWl0IHRvIDEgbGluZSxcbiAgLy8gICBidXQgbm90IGdldCBlbGxpcHNpc1xuICBAaWYgJGxpbmVzID4gMSB7XG4gICAgLXdlYmtpdC1saW5lLWNsYW1wOiAkbGluZXM7XG4gICAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgICAvLyBOT1RFKFNIQUhBTik6IFRoZSBmb2xsb3dpbmcgYnJlYWtzIHRoZSAuLi4gaW4gbm9uLXdlYmtpdCBicm93c2Vyc1xuICAgIHdoaXRlLXNwYWNlOiBub3JtYWw7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIH1cbn1cblxuQG1peGluIGRyb3AtcmlnaHQoJHNlY29uZHMpIHtcbiAgYW5pbWF0aW9uOiBkcm9wLXJpZ2h0ICRzZWNvbmRzIGVhc2UtaW4tb3V0IDBzIDE7XG59XG5cbkBtaXhpbiBkcm9wLWluKCRzZWNvbmRzKSB7XG4gIGFuaW1hdGlvbjogZHJvcC1pbiAkc2Vjb25kcyBlYXNlLWluLW91dCAwcyAxO1xufVxuXG5AbWl4aW4gZXhwYW5kLXZlcnRpY2FsKCRzZWNvbmRzKSB7XG4gIHRyYW5zZm9ybS1vcmlnaW46IHRvcDtcbiAgYW5pbWF0aW9uOiBleHBhbmQtdmVydGljYWwgJHNlY29uZHMgZWFzZS1pbi1vdXQgMHMgMTtcbn1cblxuQG1peGluIGZhZGUtaW4oJHNlY29uZHMpIHtcbiAgYW5pbWF0aW9uOiBmYWRlLWluICRzZWNvbmRzIGVhc2UtaW4tb3V0IDBzIDE7XG59XG5cbkBtaXhpbiBmYWRlLW91dCgkc2Vjb25kcykge1xuICBhbmltYXRpb246IGZhZGUtb3V0ICRzZWNvbmRzIGVhc2UtaW4tb3V0IDBzIDE7XG4gIGFuaW1hdGlvbi1maWxsLW1vZGU6IGZvcndhcmRzO1xufVxuXG5AbWl4aW4gZXhwYW5kKCRzZWNvbmRzKSB7XG4gIGFuaW1hdGlvbjogZXhwYW5kICRzZWNvbmRzIGVhc2UtaW4tb3V0IDBzIDE7XG59XG5cbkBtaXhpbiBicm93c2VyLWRlZmF1bHRzKCkge1xuICBAaW5jbHVkZSBkaXNhYmxlLWZvbnQtc21vb3RoaW5nKCk7XG4gIGxpbmUtaGVpZ2h0OiBpbml0aWFsO1xuXG4gICoge1xuICAgIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICAgIGxldHRlci1zcGFjaW5nOiBpbml0aWFsO1xuICB9XG5cbiAgYiwgc3Ryb25nIHtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgfVxuXG4gIGgxIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBmb250LXNpemU6IDJlbTtcbiAgICBtYXJnaW4tdG9wOiAwLjY3ZW07XG4gICAgbWFyZ2luLWJvdHRvbTogMC42N2VtO1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgfVxuXG4gIGgyIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBmb250LXNpemU6IDEuNWVtO1xuICAgIG1hcmdpbi10b3A6IDAuODNlbTtcbiAgICBtYXJnaW4tYm90dG9tOiAwLjgzZW07XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICB9XG5cbiAgaDMge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGZvbnQtc2l6ZTogMS4xN2VtO1xuICAgIG1hcmdpbi10b3A6IDFlbTtcbiAgICBtYXJnaW4tYm90dG9tOiAxZW07XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICB9XG5cbiAgaDQge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGZvbnQtc2l6ZTogMWVtO1xuICAgIG1hcmdpbi10b3A6IDEuMzNlbTtcbiAgICBtYXJnaW4tYm90dG9tOiAxLjMzZW07XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICB9XG5cbiAgaDUge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGZvbnQtc2l6ZTogLjgzZW07XG4gICAgbWFyZ2luLXRvcDogMS42N2VtO1xuICAgIG1hcmdpbi1ib3R0b206IDEuNjdlbTtcbiAgICBtYXJnaW4tbGVmdDogMDtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIH1cblxuICBoNiB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgZm9udC1zaXplOiAuNjdlbTtcbiAgICBtYXJnaW4tdG9wOiAyLjMzZW07XG4gICAgbWFyZ2luLWJvdHRvbTogMi4zM2VtO1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgfVxuXG4gIHAge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIG1hcmdpbi10b3A6IDFlbTtcbiAgICBtYXJnaW4tYm90dG9tOiAxZW07XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICB9XG59XG4iXX1dKTsK"}]}