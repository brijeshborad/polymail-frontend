{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/ThreadDetail/components/Cell/ExpandedCell/ExpandedCell.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/ThreadDetail/components/Cell/ExpandedCell/ExpandedCell.tsx","mtime":1675280254037},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/ThreadDetail/components/Cell/ExpandedCell/ExpandedCell.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/ThreadDetail/components/Cell/ExpandedCell/ExpandedCell.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport {\n  Message, MessageBody, Contact, Track, Resource, Me, Features,\n  Draft,\n} from '@src/types';\nimport { Configuration } from '@src/lib/draft';\nimport { DraftConfigurationMeta } from '@src/ducks/drafts';\nimport { ParticipantsView } from './components/ParticipantsView';\nimport AttachmentsPane from '../../Attachment/AttachmentsPane';\nimport BlockTracking from '@src/components/Icons/BlockTracking.svg';\n\nimport './ExpandedCell.scss';\nimport { FakeDOM, processDarkModeChanges } from '@src/lib/html';\nimport { SharedThreadCreateMeta } from '@src/ducks/sharedThreads';\nimport { HotkeyAction } from '@src/lib/hotkeys';\nimport { ShareLinkMeta } from '@src/ducks/shareLinks';\nimport { SharedThreadPermissionScope } from '@src/types/sharedThreads';\nimport { OnboardingPatchMeta } from '@src/ducks/me';\n\nexport interface Props {\n  message: Message;\n  messageBody?: MessageBody;\n  threadId: string;\n\n  onToggleExpand?: (key: string) => void;\n  hideActions?: boolean;\n  hideTracks?: boolean;\n  publicFocus?: boolean;\n}\n\nexport interface StateProps {\n  blockTracking: boolean;\n  track?: Resource<Track>;\n  sender: Contact;\n  me?: Me;\n  features: Features;\n  sharedThread?: string;\n  showTrackingOnboarding?: boolean;\n  attachmentMetaCount?: number;\n  isOffline?: boolean;\n  draft?: Draft;\n}\n\nexport interface DispatchProps {\n  fetchTrack: (threadId: string, messageId: string) => void;\n  createDraftWithConfiguration: (configuration: DraftConfigurationMeta) => void;\n  updateOnboarding: (type: OnboardingPatchMeta) => void;\n  createSharedThread: (meta: SharedThreadCreateMeta) => void;\n  createShareLink: (meta: ShareLinkMeta) => void;\n  updateHotkey: (meta: HotkeyAction) => void;\n  undoSend: (meta: Draft) => void;\n  toastSet: (error: Error) => void;\n  suggestHotkey: (hotkey: HotkeyAction) => void;\n}\n\ninterface State {\n  body: string;\n  blockedPixel: boolean;\n}\n\nclass ExpandedCell extends React.PureComponent<Props & StateProps & DispatchProps, State> {\n  bodyRef: HTMLDivElement|null;\n  isDarkMode = false;\n  hiddenAttachments: {\n    [key: string]: boolean;\n  } = {};\n\n  constructor(props: Props & StateProps & DispatchProps) {\n    super();\n\n    this.state = {\n      body: '',\n      blockedPixel: false,\n    };\n\n    // TODO(SHIN): Abstract into global const\n    const theme = document.body.getAttribute('theme');\n    this.isDarkMode = theme === 'theme-dark';\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    if (prevState.body !== this.state.body) {\n      this.updateLinkHandlers();\n    }\n  }\n\n  updateLinkHandlers = () => {\n    if (this.bodyRef) {\n      Array.from(this.bodyRef.getElementsByTagName('a'))\n        .filter(el => !!el.href)\n        .map((el) => {\n          el.onclick = (e) => {\n            // NOTE(SHAHAN): This prevents the link from gaining focus. This\n            //   prevents the Enter key from triggering an archive and a click\n            //  of the link at the same time.\n            (e.target as HTMLAnchorElement).blur();\n\n            // Handle CTRL/⌘ click of link in electron\n            if ((e.ctrlKey || e.metaKey) &&\n              window.PMElectronBridge && window.PMElectronBridge.openBackground) {\n              e.preventDefault();\n              window.PMElectronBridge.openBackground(el.href);\n            }\n          };\n        });\n    }\n  }\n\n  handleBodyRef = (body: HTMLDivElement|null) => {\n    this.bodyRef = body;\n\n    if (this.bodyRef) {\n      this.updateLinkHandlers();\n    }\n  }\n\n  handleToggleExpand = () => {\n    const { onToggleExpand, message } = this.props;\n\n    if (onToggleExpand) {\n      onToggleExpand(message.id);\n    }\n  }\n\n  // Handle selection of reply action\n  handleReplyAction = (configuration: Configuration) => {\n    const { createDraftWithConfiguration, messageBody, suggestHotkey } = this.props;\n\n    switch (configuration) {\n      case Configuration.ReplyAll:\n        suggestHotkey(HotkeyAction.ReplyAll);\n        break;\n      case Configuration.Reply:\n        suggestHotkey(HotkeyAction.Reply);\n        break;\n      case Configuration.Forward:\n        suggestHotkey(HotkeyAction.Forward);\n        break;\n      default: break;\n    }\n\n    if (createDraftWithConfiguration && messageBody) {\n      createDraftWithConfiguration({ configuration, body: messageBody });\n    }\n  }\n\n  handleShareAction = () => {\n    const {\n      message,\n      threadId,\n      sharedThread,\n      createSharedThread,\n      updateHotkey,\n      createShareLink,\n    } = this.props;\n\n    if (message && threadId) {\n\n      // Create Shared Thread if needed with message id\n      if (!sharedThread) {\n        createSharedThread({\n          thread: this.props.threadId,\n          message: this.props.message.id,\n          permissions: {\n            scope: SharedThreadPermissionScope.Public,\n          },\n        });\n      } else {\n        // Create share link if shared thread exists\n        createShareLink({\n          sharedThread,\n          message: message.id,\n        });\n      }\n    }\n\n    // Emit hotkey action changed\n    updateHotkey(HotkeyAction.CreateShareLink);\n  }\n\n  handleFetchTrack = () => {\n    const { fetchTrack, message, threadId } = this.props;\n    fetchTrack(threadId, message.id);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props & StateProps & DispatchProps) {\n    const { messageBody } = nextProps;\n    const { body } = this.state;\n\n    if (messageBody && messageBody.body.length && !body.length) {\n      this.setState({\n        body: this.processBody(messageBody),\n      });\n    }\n  }\n\n  componentDidMount() {\n    const { messageBody } = this.props;\n\n    if (messageBody) {\n      this.setState({ body: this.processBody(messageBody) });\n    }\n  }\n\n  handleMoreClick = (e: any) => {\n    const { messageBody } = this.props;\n    const { historyMarker } = messageBody!;\n    const { body } = this.state;\n\n    if (e.target.innerHTML === 'view more' && body.length &&\n      messageBody && messageBody.historyMarker && messageBody.historyMarker.length) {\n      const doc = FakeDOM().createElement('div');\n      doc.innerHTML = body;\n      const arr = Array.from(doc.getElementsByTagName('div'))\n        .filter(el => el.getAttribute('data-pm-history') === historyMarker);\n      if (arr.length) {\n        const tag = arr[0];\n        const history = document.createElement('div');\n        history.innerHTML = messageBody.history || '';\n        if (tag && tag.parentNode) {\n          tag.parentNode.replaceChild(history, tag);\n        }\n        this.setState({ body: this.processBody(messageBody, doc.innerHTML) });\n      }\n    }\n  }\n\n  handleSendUndo = () => {\n    const { draft, undoSend } = this.props;\n    if (draft) {\n      undoSend(draft);\n    }\n  }\n\n  handleOnboardingClear = () => {\n    const { updateOnboarding } = this.props;\n    updateOnboarding({ skipped: false, type: { threadDetailTracking: true } });\n  }\n\n  processBody = (messageBody: MessageBody, forceBody?: string) => {\n    const { message, blockTracking } = this.props;\n    const { historyMarker } = messageBody;\n    let body = forceBody;\n    if (!body) {\n      body = this.state.body.length ? this.state.body : messageBody.body;\n    }\n\n    // make contenteditable false for all links so that they can be clicked\n    // making them uneditable will prevent the link from gaining focus\n    if (typeof body === 'string') {\n      const doubleOrSingleQuoteRegEx = /contenteditable=(?:'|\")true(?:'|\")/g;\n      body = body.replace(doubleOrSingleQuoteRegEx, 'contenteditable=\"false\"');\n    }\n\n    let processed = body;\n    let container;\n\n    if (processed.length) {\n      container = FakeDOM().createElement('div');\n      container.innerHTML = body;\n    }\n\n    // history splitting\n    if (container && historyMarker && historyMarker.length) {\n      const arr = Array.from(container.getElementsByTagName('div'))\n        .filter(el => el.getAttribute('data-pm-history') === historyMarker);\n      if (arr.length) {\n        const tag = arr[0];\n\n        const moreButton = document.createElement('button');\n        moreButton.innerHTML = 'view more';\n        moreButton.setAttribute('data-pm-more', '1');\n        moreButton.setAttribute('style', 'color: #00aaff; margin-top: 10px; font-size: 12px;');\n        tag.innerHTML = moreButton.outerHTML;\n\n        processed = container.innerHTML;\n      }\n    }\n\n    // block tracking\n    if (container && (blockTracking || message.sent)) {\n      const trackingPixels = container.querySelectorAll('[data-pm-tracking]');\n      if (trackingPixels.length) {\n        Array.from(trackingPixels)\n          .forEach((el) => {\n            if (el.parentNode) {\n              el.parentNode.removeChild(el);\n            }\n          });\n\n        if (blockTracking && !message.sent) {\n          this.setState({ blockedPixel: true });\n        }\n      }\n      processed = container.innerHTML;\n    }\n\n    // inline attachments\n    if (container) {\n      const images = Array.from(container.getElementsByTagName('img'));\n      const arr = images\n        .filter(el => el.src.indexOf('cid:') > -1);\n      if (arr.length && message) {\n        let attachment;\n        arr.forEach((el) => {\n          attachment = message.attachments\n            .find((a) => {\n              if (a.cid && el.src.match(/^cid:/)) {\n                const match = a.cid.match(/[^<](.+)[^>]/);\n                return match !== null ?\n                  a.cid.match(/[^<](.+)[^>]/)![0] === el.src.slice(4) :\n                  false;\n              }\n              return false;\n            });\n          if (attachment) {\n            this.hiddenAttachments[attachment.id] = true;\n            el.src = attachment.url;\n          }\n        });\n      }\n\n      // Set maxWidth on images that have no styling set\n      images\n        .filter(el =>\n          // NOTE(SHAHAN): Can consider not checking width attribute and style.width,\n          // as that would be safe from a image ratio perspective, but might cause more\n          // issues elsewhere, for example when the sender wants the image to stay\n          // fixed at a certain size.\n          !el.getAttribute('width') && !el.getAttribute('height')\n            && !el.style.width && !el.style.height\n            && !el.style.maxWidth && !el.style.maxHeight,\n        )\n        .forEach((el) => {\n          el.style.maxWidth = '100%';\n        });\n\n      // Run additional manipulations when dark mode is enabled\n      if (this.isDarkMode) {\n        container = processDarkModeChanges(container);\n      }\n\n      processed = container.innerHTML;\n    }\n\n    return processed;\n  }\n\n  render() {\n    const {\n      threadId,\n      message,\n      sender,\n      track,\n      messageBody,\n      me,\n      features,\n      hideActions,\n      showTrackingOnboarding,\n      hideTracks,\n      publicFocus,\n      isOffline,\n      draft,\n    } = this.props;\n    const { body, blockedPixel } = this.state;\n    const showBlockPixel = blockedPixel && !message.sent;\n    const shownAttachments = message.attachments.filter(a => !this.hiddenAttachments[a.id]);\n\n    return (\n      <div\n        className={classnames(\n          'expanded-cell',\n          {\n            'public-focus': !!publicFocus,\n            optimistic: !!message.optimistic,\n          },\n        )}\n        data-message={message.id}\n      >\n        <div className=\"thread-detail-expanded-cell\">\n          <ParticipantsView\n            threadId={threadId}\n            message={message}\n            draft={draft}\n            onToggleExpand={this.handleToggleExpand}\n            tracked={message.tracked}\n            tracks={message.tracks}\n            onReplyAction={hideActions ? undefined : this.handleReplyAction}\n            onShareAction={this.handleShareAction}\n            onFetchTrack={this.handleFetchTrack}\n            sender={sender}\n            track={track && track.data}\n            me={me}\n            features={features}\n            showTrackingOnboarding={showTrackingOnboarding}\n            onOnboardingClear={this.handleOnboardingClear}\n            hideTracks={hideTracks}\n            hideActions={hideActions}\n            attachmentMetaCount={this.props.attachmentMetaCount}\n            isOffline={isOffline}\n            onSendUndo={this.handleSendUndo}\n          />\n          <div className=\"main\">\n            <div className=\"message-content\">\n              { body &&\n                <div\n                  dangerouslySetInnerHTML={{\n                    __html: (messageBody !== undefined) ?\n                      this.processBody(messageBody) : '',\n                  }}\n                  className=\"message-body\"\n                  onClick={this.handleMoreClick}\n                  ref={this.handleBodyRef}\n                />\n              }\n            </div>\n            {showBlockPixel && <div className=\"block-tracking\">\n              <BlockTracking />\n            </div>}\n          </div>\n          { shownAttachments.length > 0 &&\n            <AttachmentsPane attachments={shownAttachments} />\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ExpandedCell;\n\n// TODO(SHIN): To bring back in once CSS & styling of new message seaprator is confirmed\n// // New Message Separator\n// const NewMessageSeparator = () => (\n//   <div className=\"thread-detail-new-message-separator\">\n//     <div/>\n//     <div>new messages</div>\n//     <div/>\n//   </div>\n// );\n"]}]}