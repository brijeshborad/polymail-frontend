{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/ActionDispatcher.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/ActionDispatcher.ts","mtime":1675280254060},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/ActionDispatcher.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/ActionDispatcher.ts"],"names":[],"mappings":"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","sourcesContent":["import { Subject } from 'rxjs';\nimport { Dispatch, Middleware, MiddlewareAPI } from 'redux';\nimport {\n  THREAD_UPDATE,\n  THREAD_SINGLE,\n  THREAD_DELETE,\n  THREAD_LIST,\n  THREADS_SEARCH,\n  THREAD_MOVE_UNDO,\n} from '@src/ducks/threads';\nimport {\n  DRAFT_DELETE, DRAFT_CREATE,\n  DRAFT_UPDATE, DRAFT_LIST,\n  DRAFT_SEND,\n  DRAFT_SEND_UNDO,\n} from '@src/ducks/drafts';\nimport { computeThread } from '@src/lib/thread';\n\nimport { StoreState, Commit, ActionStatus, Thread, Draft, HistoryObject } from '@src/types';\n\nexport enum ActionDispatcherType {\n  Single = 'single',\n  Updated = 'updated',\n  Deleted = 'deleted',\n  Batch = 'batch',\n  Undo = 'undo',\n}\n\nexport interface ActionDispatcherEvent {\n  id?: string;\n  type: ActionDispatcherType;\n  resourceType: HistoryObject;\n  resource?: Thread|Draft;\n  commit?: Commit;\n  resources?: Thread[]|Draft[];\n}\n\n// ActionDispatcher emits actions that can be subscribed to by components\nclass ActionDispatcher extends Subject<ActionDispatcherEvent> {}\n\nconst actionDispatcher = new ActionDispatcher();\n\n// getDb returns the db instance, which may be undefined\nexport function getActions(): ActionDispatcher {\n  return actionDispatcher;\n}\n\n// ActionDispatcher Middleware will catch actions that we dont want redux to handle\n// and pass them to components that subscribe directly\nexport function createActionDispatcherMiddleware(): Middleware {\n  return (api: MiddlewareAPI<any>) =>\n    (next: Dispatch<StoreState>) =>\n      (action: any): any => {\n\n        // Handle start cases\n        if (action.status === ActionStatus.Start) {\n          switch (action.type) {\n            case THREAD_DELETE:\n              getActions().next({\n                id: action.meta,\n                type: ActionDispatcherType.Deleted,\n                resourceType: HistoryObject.Thread,\n              });\n              break;\n            case DRAFT_DELETE:\n              getActions().next({\n                id: action.meta,\n                type: ActionDispatcherType.Deleted,\n                resourceType: HistoryObject.Draft,\n              });\n              break;\n            case THREAD_SINGLE:\n              const thread: Thread = action.meta;\n              getActions().next({\n                id: thread.id,\n                resource: computeThread(thread),\n                type: ActionDispatcherType.Single,\n                resourceType: HistoryObject.Thread,\n              });\n              break;\n            case DRAFT_CREATE:\n              getActions().next({\n                id: action.meta.id,\n                resource: action.meta,\n                type: ActionDispatcherType.Single,\n                resourceType: HistoryObject.Draft,\n              });\n              break;\n\n            case THREAD_UPDATE:\n              const commit: Commit = action.meta;\n              getActions().next({\n                id: commit.resourceId,\n                type: ActionDispatcherType.Updated,\n                commit,\n                resourceType: HistoryObject.Thread,\n              });\n              break;\n\n            default:\n              break;\n          }\n        }\n\n        // Handle success cases\n        if (action.status === ActionStatus.Success) {\n          switch (action.type) {\n            case THREAD_MOVE_UNDO:\n              getActions().next({\n                id: action.payload.id,\n                resource: action.payload,\n                type: ActionDispatcherType.Undo,\n                resourceType: HistoryObject.Thread,\n              });\n              break;\n            case DRAFT_SEND_UNDO:\n              // Return draft back to datasource when successful undo send\n              getActions().next({\n                id: action.meta.id,\n                resource: action.payload,\n                type: ActionDispatcherType.Single,\n                resourceType: HistoryObject.Draft,\n              });\n              break;\n            case DRAFT_SEND:\n              getActions().next({\n                id: action.meta.draft.id,\n                resource: action.meta.draft,\n                type: ActionDispatcherType.Single,\n                resourceType: HistoryObject.Draft,\n              });\n              break;\n\n            case DRAFT_UPDATE:\n              getActions().next({\n                id: action.meta.id,\n                resource: action.meta,\n                type: ActionDispatcherType.Single,\n                resourceType: HistoryObject.Draft,\n              });\n              break;\n\n            case DRAFT_DELETE:\n              getActions().next({\n                id: action.payload,\n                type: ActionDispatcherType.Deleted,\n                resourceType: HistoryObject.Draft,\n              });\n\n              // Delete thread optimistic id constructed from draft\n              getActions().next({\n                id: `<${action.payload}@polymail.io>`,\n                type: ActionDispatcherType.Deleted,\n                resourceType: HistoryObject.Thread,\n              });\n              break;\n            case THREAD_DELETE:\n              getActions().next({\n                id: action.meta,\n                type: ActionDispatcherType.Deleted,\n                resourceType: HistoryObject.Thread,\n              });\n              break;\n            case DRAFT_LIST:\n              getActions().next({\n                type: ActionDispatcherType.Batch,\n                resources: action.payload,\n                resourceType: HistoryObject.Draft,\n              });\n              break;\n            case THREADS_SEARCH:\n              getActions().next({\n                type: ActionDispatcherType.Batch,\n                resources: action.payload.threads,\n                resourceType: HistoryObject.Thread,\n              });\n              break;\n            case THREAD_LIST:\n              getActions().next({\n                type: ActionDispatcherType.Batch,\n                resources: action.payload.threads,\n                resourceType: HistoryObject.Thread,\n              });\n              break;\n\n            default:\n              break;\n          }\n        }\n        return next(action);\n      };\n}\n\nexport default ActionDispatcher;\n"]}]}