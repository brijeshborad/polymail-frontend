{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/ThreadDetail/components/Cell/SharedDraftCell/index.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/ThreadDetail/components/Cell/SharedDraftCell/index.ts","mtime":1675280254039},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4JzsKaW1wb3J0IFNoYXJlZERyYWZ0Q2VsbCBmcm9tICcuL1NoYXJlZERyYWZ0Q2VsbCc7CmltcG9ydCB7IHNlbGVjdFRlYW1NZW1iZXIgfSBmcm9tICdAc3JjL2R1Y2tzL3RlYW1NZW1iZXJzJzsKaW1wb3J0IHsgdmFsdWVzIH0gZnJvbSAnbG9kYXNoJzsKaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnOwppbXBvcnQgeyBUVEwgfSBmcm9tICdAc3JjL2R1Y2tzL3NoYXJlZFRocmVhZHMnOwp2YXIgbWFwU3RhdGVUb1Byb3BzID0gZnVuY3Rpb24gKHN0YXRlLCBvd25Qcm9wcykgewogICAgdmFyIHNoYXJlZFRocmVhZCA9IHN0YXRlLnNlbGVjdGVkU2hhcmVkVGhyZWFkID8KICAgICAgICBzdGF0ZS5zaGFyZWRUaHJlYWRzW3N0YXRlLnNlbGVjdGVkU2hhcmVkVGhyZWFkXSA6IHVuZGVmaW5lZDsKICAgIHZhciBzaGFyZWRUaHJlYWREYXRhID0gc2hhcmVkVGhyZWFkICYmIHNoYXJlZFRocmVhZC5kYXRhOwogICAgdmFyIHNoYXJlZE93bmVyID0gc2hhcmVkVGhyZWFkRGF0YSAmJiBzZWxlY3RUZWFtTWVtYmVyKHN0YXRlLCBzaGFyZWRUaHJlYWREYXRhLnVzZXIpOwogICAgdmFyIHRocmVzaG9sZCA9IG1vbWVudCgpLnN1YnRyYWN0KFRUTCwgJ3NlY29uZHMnKTsKICAgIHJldHVybiB7CiAgICAgICAgc2hhcmVkVGhyZWFkOiBzaGFyZWRUaHJlYWREYXRhLAogICAgICAgIHNoYXJlZERyYWZ0OiBzaGFyZWRUaHJlYWREYXRhICYmCiAgICAgICAgICAgIHN0YXRlLnNoYXJlZFRocmVhZERyYWZ0c1tzaGFyZWRUaHJlYWREYXRhLmlkXSwKICAgICAgICBzaGFyZWRPd25lcjogc2hhcmVkT3duZXIsCiAgICAgICAgc2hhcmVkT3duZXJQaG90b1VybDogc2hhcmVkT3duZXIgJiYgc2hhcmVkT3duZXIucGhvdG9VcmwsCiAgICAgICAgbWU6IHN0YXRlLm1lICYmIHN0YXRlLm1lLmRhdGEsCiAgICAgICAgcmVwbHlpbmc6IHZhbHVlcyhzdGF0ZS5zaGFyZWRUaHJlYWRBY3Rpdml0eS5yZXBseSkKICAgICAgICAgICAgLmZpbHRlcihmdW5jdGlvbiAoYWN0aXZpdHkpIHsgcmV0dXJuIG1vbWVudChhY3Rpdml0eS50aW1lc3RhbXApLmlzQWZ0ZXIodGhyZXNob2xkKTsgfSksCiAgICAgICAgcHVibGljVXJsOiB3aW5kb3cubG9jYXRpb24uaHJlZi5pbmNsdWRlcygncHVibGljJyksCiAgICB9Owp9OwpleHBvcnQgZGVmYXVsdCBjb25uZWN0KG1hcFN0YXRlVG9Qcm9wcykoU2hhcmVkRHJhZnRDZWxsKTsK"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/ThreadDetail/components/Cell/SharedDraftCell/index.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/ThreadDetail/components/Cell/SharedDraftCell/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AAEtC,OAAO,eAA0B,MAAM,mBAAmB,CAAC;AAE3D,OAAO,EAAE,gBAAgB,EAAE,MAAM,wBAAwB,CAAC;AAC1D,OAAO,EAAE,MAAM,EAAE,MAAM,QAAQ,CAAC;AAChC,OAAO,MAAM,MAAM,QAAQ,CAAC;AAC5B,OAAO,EAAE,GAAG,EAAE,MAAM,0BAA0B,CAAC;AAE/C,IAAM,eAAe,GAAG,UAAC,KAAiB,EAAE,QAAkC;IAC5E,IAAM,YAAY,GAAG,KAAK,CAAC,oBAAoB,CAAC,CAAC;QAC/C,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;IAC9D,IAAM,gBAAgB,GAAG,YAAY,IAAI,YAAY,CAAC,IAAI,CAAC;IAC3D,IAAM,WAAW,GAAG,gBAAgB,IAAI,gBAAgB,CAAC,KAAK,EAAE,gBAAgB,CAAC,IAAI,CAAC,CAAC;IACvF,IAAM,SAAS,GAAG,MAAM,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;IAEpD,OAAO;QACL,YAAY,EAAE,gBAAgB;QAC9B,WAAW,EAAE,gBAAgB;YAC3B,KAAK,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,EAAE,CAAC;QAC/C,WAAW,aAAA;QACX,mBAAmB,EAAE,WAAW,IAAI,WAAW,CAAC,QAAQ;QACxD,EAAE,EAAE,KAAK,CAAC,EAAE,IAAI,KAAK,CAAC,EAAE,CAAC,IAAI;QAC7B,QAAQ,EAAE,MAAM,CAAC,KAAK,CAAC,oBAAoB,CAAC,KAAK,CAAC;aACjD,MAAM,CAAC,UAAA,QAAQ,IAAI,OAAA,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,EAA7C,CAA6C,CAAC;QAClE,SAAS,EAAE,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;KACnD,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,OAAO,CAAQ,eAAe,CAAC,CAAC,eAAe,CAAC,CAAC","sourcesContent":["import { connect } from 'react-redux';\nimport { StoreState } from '@src/types';\nimport SharedDraftCell, { Props } from './SharedDraftCell';\nimport { RouteComponentProps } from 'react-router';\nimport { selectTeamMember } from '@src/ducks/teamMembers';\nimport { values } from 'lodash';\nimport moment from 'moment';\nimport { TTL } from '@src/ducks/sharedThreads';\n\nconst mapStateToProps = (state: StoreState, ownProps: RouteComponentProps<any>): Props => {\n  const sharedThread = state.selectedSharedThread ?\n    state.sharedThreads[state.selectedSharedThread] : undefined;\n  const sharedThreadData = sharedThread && sharedThread.data;\n  const sharedOwner = sharedThreadData && selectTeamMember(state, sharedThreadData.user);\n  const threshold = moment().subtract(TTL, 'seconds');\n\n  return {\n    sharedThread: sharedThreadData,\n    sharedDraft: sharedThreadData &&\n      state.sharedThreadDrafts[sharedThreadData.id],\n    sharedOwner,\n    sharedOwnerPhotoUrl: sharedOwner && sharedOwner.photoUrl,\n    me: state.me && state.me.data,\n    replying: values(state.sharedThreadActivity.reply)\n    .filter(activity => moment(activity.timestamp).isAfter(threshold)),\n    publicUrl: window.location.href.includes('public'),\n  };\n};\n\nexport default connect<Props>(mapStateToProps)(SharedDraftCell);\n"]}]}