{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/permissions.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/permissions.ts","mtime":1675280254057},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnOwppbXBvcnQgeyBQRVJNSVNTSU9OU19OT1RJRklDQVRJT05TLCBwZXJtaXNzaW9uc05vdGlmaWNhdGlvbnMsIFBFUk1JU1NJT05TX01BSUxUT19SRUdJU1RFUiB9IGZyb20gJ0BzcmMvZHVja3MvcGVybWlzc2lvbnMnOwppbXBvcnQgeyBBY3Rpb25TdGF0dXMgfSBmcm9tICdAc3JjL3R5cGVzJzsKdmFyIHBlcm1pc3Npb25zTm90aWZpY2F0aW9uc0VwaWMgPSBmdW5jdGlvbiAoYWN0aW9uJCwgc3RvcmUsIGRlcHMpIHsKICAgIHJldHVybiBhY3Rpb24kLm9mVHlwZShQRVJNSVNTSU9OU19OT1RJRklDQVRJT05TKQogICAgICAgIC5maWx0ZXIoZnVuY3Rpb24gKGFjdGlvbikgeyByZXR1cm4gYWN0aW9uLnN0YXR1cyA9PT0gQWN0aW9uU3RhdHVzLlN0YXJ0CiAgICAgICAgJiYgKCdOb3RpZmljYXRpb24nIGluIHdpbmRvdykKICAgICAgICAmJiAhc3RvcmUuZ2V0U3RhdGUoKS5wZXJtaXNzaW9ucy5ub3RpZmljYXRpb25zOyB9KQogICAgICAgIC5mbGF0TWFwKGZ1bmN0aW9uIChhY3Rpb24pIHsKICAgICAgICByZXR1cm4gT2JzZXJ2YWJsZS5mcm9tUHJvbWlzZShOb3RpZmljYXRpb24ucmVxdWVzdFBlcm1pc3Npb24oKSkKICAgICAgICAgICAgLm1hcChmdW5jdGlvbiAocmVzdWx0KSB7IHJldHVybiBwZXJtaXNzaW9uc05vdGlmaWNhdGlvbnMoYWN0aW9uLm1ldGEsIHJlc3VsdCk7IH0pOwogICAgfSk7Cn07CnZhciBwZXJtaXNzaW9uc01haWx0b1JlZ2lzdGVyID0gZnVuY3Rpb24gKGFjdGlvbiQsIHN0b3JlLCBkZXBzKSB7CiAgICByZXR1cm4gYWN0aW9uJC5vZlR5cGUoUEVSTUlTU0lPTlNfTUFJTFRPX1JFR0lTVEVSKQogICAgICAgIC5maWx0ZXIoZnVuY3Rpb24gKGFjdGlvbikgeyByZXR1cm4gYWN0aW9uLnN0YXR1cyA9PT0gQWN0aW9uU3RhdHVzLlN0YXJ0CiAgICAgICAgJiYgISF3aW5kb3cuUE1FbGVjdHJvbkJyaWRnZSAmJiAhIXdpbmRvdy5QTUVsZWN0cm9uQnJpZGdlLnNldERlZmF1bHRDbGllbnQ7IH0pCiAgICAgICAgLmRvKGZ1bmN0aW9uICgpIHsgcmV0dXJuIHdpbmRvdy5QTUVsZWN0cm9uQnJpZGdlLnNldERlZmF1bHRDbGllbnQoKTsgfSkKICAgICAgICAuZmlsdGVyKGZ1bmN0aW9uICgpIHsgcmV0dXJuIGZhbHNlOyB9KTsKfTsKZXhwb3J0IGRlZmF1bHQgWwogICAgcGVybWlzc2lvbnNOb3RpZmljYXRpb25zRXBpYywKICAgIHBlcm1pc3Npb25zTWFpbHRvUmVnaXN0ZXIsCl07Cg=="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/permissions.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/permissions.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,MAAM,CAAC;AAClC,OAAO,EAAE,yBAAyB,EAAE,wBAAwB,EAAE,2BAA2B,EAAE,MAAM,wBAAwB,CAAC;AAC1H,OAAO,EAAE,YAAY,EAAsB,MAAM,YAAY,CAAC;AAI9D,IAAM,4BAA4B,GAC9B,UAAC,OAAO,EAAE,KAAK,EAAE,IAAI;IACvB,OAAA,OAAO,CAAC,MAAM,CAAC,yBAAyB,CAAC;SACtC,MAAM,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,MAAM,KAAK,YAAY,CAAC,KAAK;WACjD,CAAC,cAAc,IAAI,MAAM,CAAC;WAC1B,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,WAAW,CAAC,aAAa,EAF9B,CAE8B,CAAC;SAChD,OAAO,CAAC,UAAA,MAAM;QACb,OAAA,UAAU,CAAC,WAAW,CAAC,YAAY,CAAC,iBAAiB,EAAE,CAAC;aACrD,GAAG,CAAC,UAAA,MAAM,IAAI,OAAA,wBAAwB,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,EAA7C,CAA6C,CAAC;IAD/D,CAC+D,CAChE;AAPH,CAOG,CAAC;AAEN,IAAM,yBAAyB,GAC3B,UAAC,OAAO,EAAE,KAAK,EAAE,IAAI;IACrB,OAAA,OAAO,CAAC,MAAM,CAAC,2BAA2B,CAAC;SACxC,MAAM,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,MAAM,KAAK,YAAY,CAAC,KAAK;WACjD,CAAC,CAAC,MAAM,CAAC,gBAAgB,IAAI,CAAC,CAAC,MAAM,CAAC,gBAAgB,CAAC,gBAAgB,EAD1D,CAC0D,CAAC;SAC5E,EAAE,CAAC,cAAM,OAAA,MAAM,CAAC,gBAAiB,CAAC,gBAAiB,EAAE,EAA5C,CAA4C,CAAC;SACtD,MAAM,CAAC,cAAM,OAAA,KAAK,EAAL,CAAK,CAAC;AAJtB,CAIsB,CAAC;AAE3B,eAAe;IACb,4BAA4B;IAC5B,yBAAyB;CAC1B,CAAC","sourcesContent":["import { Observable } from 'rxjs';\nimport { PERMISSIONS_NOTIFICATIONS, permissionsNotifications, PERMISSIONS_MAILTO_REGISTER } from '@src/ducks/permissions';\nimport { ActionStatus, Action, StoreState } from '@src/types';\nimport { Epic } from 'redux-observable';\nimport { Deps } from '@src/lib/epic';\n\nconst permissionsNotificationsEpic: Epic<Action<null, string>, StoreState, Deps>\n  = (action$, store, deps) =>\n  action$.ofType(PERMISSIONS_NOTIFICATIONS)\n    .filter(action => action.status === ActionStatus.Start\n      && ('Notification' in window)\n      && !store.getState().permissions.notifications)\n    .flatMap(action =>\n      Observable.fromPromise(Notification.requestPermission())\n        .map(result => permissionsNotifications(action.meta, result)),\n    );\n\nconst permissionsMailtoRegister: Epic<Action<null, undefined>, StoreState, Deps>\n  = (action$, store, deps) =>\n    action$.ofType(PERMISSIONS_MAILTO_REGISTER)\n      .filter(action => action.status === ActionStatus.Start\n        && !!window.PMElectronBridge && !!window.PMElectronBridge.setDefaultClient)\n      .do(() => window.PMElectronBridge!.setDefaultClient!())\n      .filter(() => false);\n\nexport default [\n  permissionsNotificationsEpic,\n  permissionsMailtoRegister,\n];\n"]}]}