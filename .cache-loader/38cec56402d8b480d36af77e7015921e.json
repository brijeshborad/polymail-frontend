{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/redux.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/redux.ts","mtime":1675280254067},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgQWN0aW9uU3RhdHVzIH0gZnJvbSAnQHNyYy90eXBlcyc7CmV4cG9ydCBmdW5jdGlvbiBjb21iaW5lUmVkdWNlcnMoKSB7CiAgICB2YXIgcmVkdWNlcnMgPSBbXTsKICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBhcmd1bWVudHMubGVuZ3RoOyBfaSsrKSB7CiAgICAgICAgcmVkdWNlcnNbX2ldID0gYXJndW1lbnRzW19pXTsKICAgIH0KICAgIHJldHVybiBmdW5jdGlvbiAoc3RhdGUsIGFjdGlvbikgewogICAgICAgIHZhciBuZXdTdGF0ZSA9IHN0YXRlOwogICAgICAgIGZvciAodmFyIF9pID0gMCwgcmVkdWNlcnNfMSA9IHJlZHVjZXJzOyBfaSA8IHJlZHVjZXJzXzEubGVuZ3RoOyBfaSsrKSB7CiAgICAgICAgICAgIHZhciByZWR1Y2VyID0gcmVkdWNlcnNfMVtfaV07CiAgICAgICAgICAgIG5ld1N0YXRlID0gcmVkdWNlcihuZXdTdGF0ZSwgYWN0aW9uKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIG5ld1N0YXRlOwogICAgfTsKfQpleHBvcnQgZnVuY3Rpb24gY3JlYXRlU2luZ2xlKHR5cGUsIHJlZHVjZXIpIHsKICAgIHJldHVybiB7CiAgICAgICAgdHlwZTogdHlwZSwKICAgICAgICBhY3Rpb246IGNyZWF0ZVNpbmdsZUFjdGlvbih0eXBlKSwKICAgICAgICByZWR1Y2VyOiBjcmVhdGVTaW5nbGVSZWR1Y2VyKHR5cGUsIHJlZHVjZXIpLAogICAgfTsKfQpleHBvcnQgZnVuY3Rpb24gY3JlYXRlKHR5cGUsIGlucHV0KSB7CiAgICAvLyBjb25zdCBuYW1lID0gdHlwZTsKICAgIHJldHVybiB7CiAgICAgICAgdHlwZTogdHlwZSwKICAgICAgICBhY3Rpb246IGNyZWF0ZUFjdGlvbih0eXBlKSwKICAgICAgICByZWR1Y2VyOiBjcmVhdGVSZWR1Y2VyKHR5cGUsIGlucHV0KSwKICAgIH07Cn0KZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVJlZHVjZXIodHlwZSwgaW5wdXQpIHsKICAgIHJldHVybiBmdW5jdGlvbiAoc3RhdGUsIGFjdGlvbikgewogICAgICAgIC8vIG1ha2Ugc3VyZSBhY3Rpb24gbWF0Y2hlcwogICAgICAgIGlmIChhY3Rpb24udHlwZSAhPT0gdHlwZSkgewogICAgICAgICAgICByZXR1cm4gc3RhdGU7CiAgICAgICAgfQogICAgICAgIC8vIGhhbmRsZSBzZXR1cAogICAgICAgIHZhciBuZXdTdGF0ZSA9IGlucHV0LnNldHVwID8gaW5wdXQuc2V0dXAoc3RhdGUsIGFjdGlvbi5tZXRhKSA6IHN0YXRlOwogICAgICAgIC8vIGFjdGlvbgogICAgICAgIHN3aXRjaCAoYWN0aW9uLnN0YXR1cykgewogICAgICAgICAgICBjYXNlIEFjdGlvblN0YXR1cy5TdGFydDoKICAgICAgICAgICAgICAgIGlmIChpbnB1dC5zdGFydCkgewogICAgICAgICAgICAgICAgICAgIHJldHVybiBpbnB1dC5zdGFydChuZXdTdGF0ZSwgYWN0aW9uLm1ldGEpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIGNhc2UgQWN0aW9uU3RhdHVzLlN1Y2Nlc3M6CiAgICAgICAgICAgICAgICBpZiAoaW5wdXQuc3VjY2VzcykgewogICAgICAgICAgICAgICAgICAgIHJldHVybiBpbnB1dC5zdWNjZXNzKG5ld1N0YXRlLCBhY3Rpb24ubWV0YSwgYWN0aW9uLnBheWxvYWQpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIGNhc2UgQWN0aW9uU3RhdHVzLkZhaWx1cmU6CiAgICAgICAgICAgICAgICBpZiAoaW5wdXQuZmFpbHVyZSkgewogICAgICAgICAgICAgICAgICAgIHJldHVybiBpbnB1dC5mYWlsdXJlKG5ld1N0YXRlLCBhY3Rpb24ubWV0YSwgYWN0aW9uLmVycm9yKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICBkZWZhdWx0OgogICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCJpbnZhbGlkIEFjdGlvblN0YXR1cyAiICsgYWN0aW9uLnN0YXR1cyk7CiAgICAgICAgfQogICAgICAgIHJldHVybiBuZXdTdGF0ZTsKICAgIH07Cn0KZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVNpbmdsZVJlZHVjZXIodHlwZSwgaW5wdXQpIHsKICAgIHJldHVybiBmdW5jdGlvbiAoc3RhdGUsIGFjdGlvbikgewogICAgICAgIC8vIG1ha2Ugc3VyZSBhY3Rpb24gbWF0Y2hlcwogICAgICAgIGlmIChhY3Rpb24udHlwZSAhPT0gdHlwZSkgewogICAgICAgICAgICByZXR1cm4gc3RhdGU7CiAgICAgICAgfQogICAgICAgIC8vIGhhbmRsZSB1bmRlZmluZWQgcmVkdWNlcgogICAgICAgIGlmICghaW5wdXQpIHsKICAgICAgICAgICAgcmV0dXJuIHN0YXRlOwogICAgICAgIH0KICAgICAgICByZXR1cm4gaW5wdXQoc3RhdGUsIGFjdGlvbi5wYXlsb2FkKTsKICAgIH07Cn0KZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUFjdGlvbih0eXBlKSB7CiAgICByZXR1cm4gZnVuY3Rpb24gKG1ldGEsIHBheWxvYWQpIHsKICAgICAgICAvLyBIYW5kbGUgZXJyb3IKICAgICAgICBpZiAocGF5bG9hZCBpbnN0YW5jZW9mIEVycm9yKSB7CiAgICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgICAgICBzdGF0dXM6IEFjdGlvblN0YXR1cy5GYWlsdXJlLAogICAgICAgICAgICAgICAgdHlwZTogdHlwZSwKICAgICAgICAgICAgICAgIG1ldGE6IG1ldGEsCiAgICAgICAgICAgICAgICBlcnJvcjogcGF5bG9hZCwKICAgICAgICAgICAgfTsKICAgICAgICB9CiAgICAgICAgLy8gSGFuZGxlIFN1Y2Nlc3MKICAgICAgICBpZiAocGF5bG9hZCAhPT0gdW5kZWZpbmVkKSB7CiAgICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgICAgICBzdGF0dXM6IEFjdGlvblN0YXR1cy5TdWNjZXNzLAogICAgICAgICAgICAgICAgdHlwZTogdHlwZSwKICAgICAgICAgICAgICAgIG1ldGE6IG1ldGEsCiAgICAgICAgICAgICAgICBwYXlsb2FkOiBwYXlsb2FkLAogICAgICAgICAgICB9OwogICAgICAgIH0KICAgICAgICAvLyBIYW5kbGUgU3RhcnQKICAgICAgICByZXR1cm4gewogICAgICAgICAgICBzdGF0dXM6IEFjdGlvblN0YXR1cy5TdGFydCwKICAgICAgICAgICAgdHlwZTogdHlwZSwKICAgICAgICAgICAgbWV0YTogbWV0YSwKICAgICAgICB9OwogICAgfTsKfQpleHBvcnQgZnVuY3Rpb24gY3JlYXRlU2luZ2xlQWN0aW9uKHR5cGUpIHsKICAgIHJldHVybiBmdW5jdGlvbiAocGF5bG9hZCkgewogICAgICAgIC8vIEhhbmRsZSBTdGFydAogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIHR5cGU6IHR5cGUsCiAgICAgICAgICAgIG1ldGE6IHt9LAogICAgICAgICAgICBzdGF0dXM6IEFjdGlvblN0YXR1cy5TdGFydCwKICAgICAgICAgICAgcGF5bG9hZDogcGF5bG9hZCwKICAgICAgICB9OwogICAgfTsKfQo="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/redux.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/redux.ts"],"names":[],"mappings":"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","sourcesContent":["import { Action, ActionStatus, StoreState } from '@src/types';\n\ntype StartReducer<Meta> = (\n  state: StoreState,\n  meta: Meta,\n) => StoreState;\n\ntype SetupReducer<Meta> = (\n  state: StoreState,\n  meta: Meta,\n) => StoreState;\n\ntype SuccessReducer<Meta, Payload> =\n  (state: StoreState, meta: Meta, payload: Payload) => StoreState;\n\ntype FailureReducer<Meta> = (state: StoreState, meta: Meta, error: Error) => StoreState;\n\ntype SingleReducer<Payload> = (state: StoreState, payload: Payload) => StoreState;\n\ninterface ReducerInput<Meta, Payload> {\n  // Can provide an optional setup function that is run before any start,\n  //    success, failure reducer. Useful for creating missing nested structures\n  setup?: SetupReducer<Meta>;\n  start?: StartReducer<Meta>;\n  success?: SuccessReducer<Meta, Payload>;\n  failure?: FailureReducer<Meta>;\n}\n\nexport type Reducer = (state: StoreState, action: Action<any, any>) => StoreState;\n\nexport function combineReducers(...reducers: Reducer[]): Reducer {\n  return (state: StoreState, action: Action<any, any>) => {\n    let newState = state;\n    for (const reducer of reducers) {\n      newState = reducer(newState, action);\n    }\n    return newState;\n  };\n}\n\ninterface TypeActionReducer<Meta, Payload> {\n  type: string;\n  action: (meta: Meta, payload?: Payload | Error) => Action<Meta, Payload>;\n  reducer: (state: StoreState, action: Action<Meta, Payload>) => StoreState;\n}\n\ninterface SingleTypeActionReducer<Payload> {\n  type: string;\n  action: (payload?: Payload) => Action<{}, Payload>;\n  reducer: (state: StoreState, action: Action<{}, Payload>) => StoreState;\n}\n\nexport function createSingle<Payload>(\n  type: string,\n  reducer?: SingleReducer<Payload>,\n): SingleTypeActionReducer<Payload> {\n  return {\n    type,\n    action: createSingleAction(type),\n    reducer: createSingleReducer<Payload>(type, reducer),\n  };\n}\n\nexport function create<Meta, Payload>(\n  type: string,\n  input: ReducerInput<Meta, Payload>,\n): TypeActionReducer<Meta, Payload> {\n  // const name = type;\n  return {\n    type,\n    action: createAction<Meta, Payload>(type),\n    reducer: createReducer<Meta, Payload>(type, input),\n  };\n}\n\nexport function createReducer<Meta, Payload>(\n  type: string,\n  input: ReducerInput<Meta, Payload>,\n) {\n  return (state: StoreState, action: Action<Meta, Payload>): StoreState => {\n    // make sure action matches\n    if (action.type !== type) {\n      return state;\n    }\n\n    // handle setup\n    const newState = input.setup ? input.setup(state, action.meta) : state;\n\n    // action\n    switch (action.status) {\n      case ActionStatus.Start:\n        if (input.start) {\n          return input.start(newState, action.meta);\n        }\n        break;\n      case ActionStatus.Success:\n        if (input.success) {\n          return input.success(newState, action.meta, action.payload!);\n        }\n        break;\n      case ActionStatus.Failure:\n        if (input.failure) {\n          return input.failure(newState, action.meta, action.error!);\n        }\n        break;\n      default:\n        throw new Error(`invalid ActionStatus ${action.status}`);\n    }\n\n    return newState;\n  };\n}\n\nexport function createSingleReducer<Payload>(\n  type: string,\n  input?: SingleReducer<Payload>,\n) {\n  return (state: StoreState, action: Action<{}, Payload>): StoreState => {\n    // make sure action matches\n    if (action.type !== type) {\n      return state;\n    }\n\n    // handle undefined reducer\n    if (!input) {\n      return state;\n    }\n\n    return input(state, action.payload!);\n  };\n}\n\nexport type ActionCreator<Meta, Payload> = (\n  meta: Meta,\n  payload?: Payload | Error,\n) => Action<Meta, Payload>;\n\nexport function createAction<Meta, Payload>(type: string): ActionCreator<Meta, Payload> {\n  return (meta: Meta, payload?: Payload | Error): Action<Meta, Payload> => {\n    // Handle error\n    if (payload instanceof Error) {\n      return {\n        status: ActionStatus.Failure,\n        type,\n        meta,\n        error: payload,\n      };\n    }\n\n    // Handle Success\n    if (payload !== undefined) {\n      return {\n        status: ActionStatus.Success,\n        type,\n        meta,\n        payload,\n      };\n    }\n\n    // Handle Start\n    return {\n      status: ActionStatus.Start,\n      type,\n      meta,\n    };\n  };\n}\n\nexport function createSingleAction<Payload>(type: string): (\n  payload?: Payload,\n) => Action<{}, Payload> {\n  return (payload?: Payload): Action<{}, Payload> => {\n    // Handle Start\n    return {\n      type,\n      meta: {},\n      status: ActionStatus.Start,\n      payload,\n    };\n  };\n}\n"]}]}