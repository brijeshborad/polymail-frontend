{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Sequences/routes/SequenceStageDetail/SequenceStageMessage/SequenceStageMessage.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Sequences/routes/SequenceStageDetail/SequenceStageMessage/SequenceStageMessage.tsx","mtime":1675280254092},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Sequences/routes/SequenceStageDetail/SequenceStageMessage/SequenceStageMessage.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Sequences/routes/SequenceStageDetail/SequenceStageMessage/SequenceStageMessage.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport { SequenceStageInstance, SequenceStage } from '@src/types/sequences';\nimport ContentEditable from '@src/components/ContentEditable/ContentEditable';\n\nimport './SequenceStageMessage.scss';\nimport {\n  Resource,\n  FileType,\n  Attachment,\n  AttachmentMeta,\n  AttachmentMetaStatus,\n  CommandControlType,\n} from '@src/types';\nimport SubjectPane from '@src/components/Compose/SubjectPane/SubjectPane';\nimport Checkbox from '@src/components/Form/Checkbox/Checkbox';\nimport { size, filter, findIndex, uniq, compact, values, indexOf } from 'lodash';\nimport Dropdown from '@src/components/Form/Dropdown';\nimport { SequenceStageInstanceAttachmentMeta } from '@src/ducks/sequenceStageInstances';\nimport FileDropZone from '@src/components/Compose/FileDropZone';\nimport { fileFormat, filenameIconUrl, AttachmentUploadOptions } from '@src/lib/attachment';\nimport { mongoId } from '@src/lib/crypt';\nimport AttachmentCell from '@src/components/Compose/Attachments/AttachmentCell';\nimport UploadButton from '@src/components/Base/UploadButton';\nimport { Prompt } from 'react-router';\nimport CommandControl from '@src/components/CommandControl';\nimport browserHistory from '@src/lib/browserHistory';\nimport { HotkeyAction } from '@src/lib/hotkeys';\nimport Confirm, { Props as ConfirmProps } from '@src/components/Base/Confirm';\nimport { BlobDescriptor, uploadErrorMessage } from '@src/lib/files';\n\nexport interface Props {\n  stage: SequenceStage;\n  instances?: {\n    [instanceId: string]: Resource<SequenceStageInstance>,\n  };\n  edit: boolean;\n  placeholders?: string[];\n  sender: string;\n  readOnly?: boolean;\n\n  onEdit: (stage: SequenceStageInstance) => void;\n  onStageUpdate: (stage: SequenceStage) => void;\n  onStageEdit: (stage: SequenceStage) => void;\n  onTestEmailClick: () => void;\n  enableEdit: () => void;\n}\n\nexport interface StateProps {\n  attachments: Attachment[];\n  attachmentMetas: Array<Resource<AttachmentMeta>>;\n  cloudAttachments: boolean;\n  commandControlType?: CommandControlType;\n  schedulingUrl?: string;\n\n  useLinkPreview?: boolean;\n  noBranding?: boolean;\n}\n\nexport interface DispatchProps {\n  showCommandControl: (type: CommandControlType) => void;\n  addAttachment: (meta: SequenceStageInstanceAttachmentMeta) => void;\n  removeAttachment: (meta: SequenceStageInstanceAttachmentMeta) => void;\n  hotkeyUpdate: (meta: HotkeyAction) => void;\n}\n\ninterface State {\n  instance?: SequenceStageInstance;\n  stage?: SequenceStage;\n  dropzoneActive: boolean;\n  confirmProps?: ConfirmProps;\n}\n\nconst SEND_TYPE = ['New Thread', 'Reply'];\nclass SequenceStageMessage extends React.PureComponent<Props & DispatchProps & StateProps, State> {\n  contentEditable: ContentEditable;\n  private intervalDayValues: string[];\n  private subjectPane: SubjectPane;\n  private focusContentEditable: boolean;\n\n  constructor(props: Props & DispatchProps & StateProps) {\n    super();\n\n    this.intervalDayValues = [];\n    for (let i = 0; i < 30; i += 1) {\n      this.intervalDayValues.push(`${i + 1} days`);\n    }\n\n    this.state = {\n      dropzoneActive: false,\n    };\n  }\n\n  componentDidMount() {\n    const { instances, stage } = this.props;\n\n    // TODO(SHIN): Determine method between loading vs. empty state\n    const stillLoading = filter(instances, i => !i.data);\n    if (!instances || !stillLoading || !size(instances)) {\n      return;\n    }\n    const firstInstance = instances[Object.keys(instances)[0]].data;\n    this.setState(\n      {\n        instance: firstInstance,\n        stage,\n      },\n      () => {\n        if (this.props.edit && stage.newThread) {\n          this.subjectPane.focus();\n        } else if (this.props.edit) {\n          this.contentEditable.focus();\n        }\n      },\n    );\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props & StateProps) {\n    // Handle updating attachments\n    const nextAttachments = nextProps.attachments;\n    const oldAttachments = this.props.attachments;\n    if (nextAttachments && oldAttachments) {\n      nextAttachments.\n        filter(attachment => findIndex(oldAttachments, { id: attachment.id }) === -1)\n        .forEach((attachment) => {\n          if (attachment.inline) {\n            this.contentEditable.replaceAttachment(attachment);\n          }\n\n          if (attachment.cloud) {\n            this.contentEditable.replaceAttachment(attachment);\n          }\n        },\n      );\n    }\n\n    // Injection points for metas\n    const oldMetas = this.props.attachmentMetas;\n    const newMetas = nextProps.attachmentMetas;\n    const oldMetaIds = compact(values(oldMetas.map(meta => meta.data && meta.data.attachment)));\n    if (oldMetas !== newMetas) {\n      // Inject metas\n      nextProps.attachmentMetas\n        .forEach((meta) => {\n          if (!meta.data) {\n            return;\n          }\n\n          // Replace if available\n          this.contentEditable.replaceAttachmentMeta(meta.data, meta.error);\n\n          // Check if attachment meta is new\n          if (indexOf(oldMetaIds, meta.data && meta.data.attachment) !== -1) {\n            return;\n          }\n\n          // Do not inject if already exists in body\n          if (meta.data && this.contentEditable.attachmentExistsInBody(meta.data.attachment)) {\n            return;\n          }\n\n          if (meta.data.inline && !meta.data.template) {\n            this.contentEditable.injectInlineAttachmentMeta(meta.data);\n          }\n\n          if (meta.data.cloud && !meta.data.template) {\n            this.contentEditable.injectCloudAttachmentMeta(meta.data, meta.error);\n          }\n        });\n    }\n\n    let firstInstance;\n    if (nextProps.instances && Object.keys(nextProps.instances).length) {\n      firstInstance = nextProps.instances[Object.keys(nextProps.instances)[0]].data;\n    }\n\n    if (this.props.edit === nextProps.edit &&\n      ((this.state.instance && this.state.instance === firstInstance)\n      || nextProps.stage !== this.props.stage)) {\n      return;\n    }\n\n    if (this.props.edit !== nextProps.edit && nextProps.edit) {\n      if (nextProps.stage.newThread && !this.focusContentEditable) {\n        this.subjectPane.focus();\n      } else {\n        this.contentEditable.focus();\n        this.focusContentEditable = false;\n      }\n    }\n\n    if (this.props.edit !== nextProps.edit && !nextProps.edit) {\n      this.setState({\n        stage: nextProps.stage,\n        instance: firstInstance,\n      });\n    }\n\n    // TODO(SHIN): Determine method between loading vs. empty state\n    const { instances, stage, onEdit } = nextProps;\n    const stillLoading = filter(instances, i => !i.data);\n    if (!instances || !stillLoading || !size(instances)) {\n      return;\n    }\n\n    // Reset state if template has been applied\n    const templateChanged = this.state.instance && firstInstance &&\n      this.state.instance.template !== firstInstance.template;\n    if ((!this.state.instance && firstInstance) || templateChanged) {\n      this.setState(\n        {\n          instance: firstInstance,\n        },\n      );\n\n      // Immediately show edit for stage\n      if (firstInstance) {\n        onEdit(firstInstance);\n      }\n    }\n\n    if (!this.state.stage && stage) {\n      this.setState(\n        {\n          stage,\n        },\n      );\n    }\n  }\n\n  handleContentEditableRef = (ref: ContentEditable) => {\n    this.contentEditable = ref;\n  }\n\n  handleSubjectChange = (subject: string) => {\n    const { instance } = this.state;\n    const { onEdit } = this.props;\n    if (!instance || !onEdit) {\n      return;\n    }\n\n    const updatedStageInstance = {\n      ...instance,\n      subject,\n    };\n\n    this.setState(\n      {\n        instance: updatedStageInstance,\n      },\n      () => onEdit(updatedStageInstance),\n    );\n  }\n\n  handleBodyChange = (body: string) => {\n    const { instance } = this.state;\n    const { onEdit } = this.props;\n    if (!instance || !onEdit) {\n      return;\n    }\n\n    const updatedStageInstance = {\n      ...instance,\n      body,\n    };\n\n    this.setState(\n      {\n        instance: updatedStageInstance,\n      },\n      () => onEdit(updatedStageInstance),\n    );\n  }\n\n  handleUnsubscribeChange = () => {\n    const { instance } = this.state;\n    const { onEdit } = this.props;\n    if (!instance || !onEdit) {\n      return;\n    }\n\n    const updatedStageInstance = {\n      ...instance,\n      unsubscribeLink: !instance.unsubscribeLink,\n    };\n\n    this.setState(\n      {\n        instance: updatedStageInstance,\n      },\n      () => onEdit(updatedStageInstance),\n    );\n  }\n\n  handleIntervalDayClick = (value: string, index: number) => {\n    const { onStageUpdate, stage } = this.props;\n\n    onStageUpdate({\n      ...stage,\n      intervalDays: index + 1,\n    });\n  }\n\n  handleSendTypeClick = (value: string, index: number) => {\n    const { onStageEdit, onEdit } = this.props;\n    const { stage, instance } = this.state;\n\n    if (!stage || !onStageEdit || !instance) {\n      return;\n    }\n\n    const updatedStage = {\n      ...stage,\n      newThread: index === 0,\n    };\n\n    let updatedStageInstance: SequenceStageInstance | undefined;\n    if (index === 0) {\n      updatedStageInstance = {\n        ...instance,\n        subject: '',\n      };\n    }\n\n    this.setState(\n      {\n        stage: updatedStage,\n        instance: updatedStageInstance ? updatedStageInstance : instance,\n      },\n      () => {\n        onStageEdit(updatedStage);\n        if (updatedStageInstance) {\n          onEdit(updatedStageInstance);\n        }\n      },\n    );\n  }\n\n  handleSubjectPaneRef = (ref: SubjectPane) => {\n    this.subjectPane = ref;\n  }\n\n  // DropZone handlers\n  handleDragEnter = (event: React.DragEvent<HTMLDivElement>) => {\n    if (event.dataTransfer.types.indexOf('Files') !== -1) {\n      this.setState({ dropzoneActive: true });\n    }\n  }\n\n  handleDragLeave = () => {\n    this.setState({ dropzoneActive: false });\n  }\n\n  handleAttachmentRemove = (id: string) => {\n    const { attachments, attachmentMetas, removeAttachment, onEdit } = this.props;\n    const { instance } = this.state;\n\n    // Handle meta delete\n    const attachmentMetaIds = compact(values(\n      attachmentMetas.map(resource => resource.data && resource.data.attachment)),\n    );\n    const metaIndex = indexOf(attachmentMetaIds, id);\n    const meta = attachmentMetas[metaIndex];\n    if (meta && meta.data && instance) {\n      removeAttachment({\n        ...meta.data,\n        stage: instance.stage,\n        sequence: instance.sequence,\n        status: AttachmentMetaStatus.Delete,\n      });\n    }\n\n    // Handle attachment delete\n    const attachmentIndex = findIndex(attachments, { id });\n    const attachment = attachments[attachmentIndex];\n    if (attachment && instance) {\n      removeAttachment({\n        attachment: attachment.id,\n        resourceId: instance.id,\n        stage: instance.stage,\n        sequence: instance.sequence,\n        status: AttachmentMetaStatus.Delete,\n      });\n    }\n\n    if (instance) {\n      onEdit(instance);\n    }\n  }\n\n  // TODO(SHIN): Handle Cloud attachments handling\n  handleUpload = (files: File[], options: AttachmentUploadOptions) => {\n    const { addAttachment, onEdit, cloudAttachments } = this.props;\n    const { instance } = this.state;\n\n    // Block ability to attach files larger than 25 MB.\n    if (files.filter(file => file.size > 25000000).length) {\n      const confirmProps: ConfirmProps = {\n        title: 'Error Uploading Attachment',\n        message: 'You cannot upload an attachment greater than 25 MB.',\n        confirmCopy: 'Ok',\n        onConfirm: () => {\n          this.setState({\n            confirmProps: undefined,\n            dropzoneActive: false,\n          });\n        },\n      };\n\n      this.setState({ confirmProps });\n      return;\n    }\n\n    if (addAttachment && instance) {\n      files.forEach((file) => {\n        // Create meta\n        const inline = fileFormat(file.type) === FileType.Image;\n        const attachment = {\n          file,\n          resourceId: instance.id,\n          attachment: mongoId(),\n          inline: inline && !options.shiftKey && !options.ignoreInline,\n          cloud: !options.shiftKey && !inline && cloudAttachments,\n          stage: instance.stage,\n          sequence: instance.sequence,\n          status: AttachmentMetaStatus.Uploading,\n        };\n\n        addAttachment(attachment);\n      });\n    }\n\n    // Handle dropping to specific position\n    this.setState({ dropzoneActive: false }, () => {\n      if (options.position && this.contentEditable) {\n        this.contentEditable.moveCursorToPosition(options.position);\n      }\n    });\n\n    if (instance) {\n      onEdit(instance);\n    }\n  }\n\n  renderAttachmentCells = () => (\n    this.props.attachments &&\n    this.props.attachments\n      .filter(attachment => !(attachment.cloud || attachment.inline))\n      .map(attachment => (\n        <AttachmentCell\n          key={attachment.id}\n          id={attachment.id}\n          filename={attachment.filename}\n          iconUrl={filenameIconUrl(attachment.filename)}\n          length={attachment.length}\n          progress={1}\n          onDelete={this.handleAttachmentRemove}\n          fileUrl={attachment.cloudUrl}\n        />\n      ),\n    )\n  )\n\n  handleTemplateShow = () => {\n    this.props.showCommandControl(CommandControlType.Templates);\n  }\n\n  // TODO(SHIN): Implement progress when available\n  renderAttachmentMetaCells = () => (\n    this.props.attachmentMetas && this.props.attachmentMetas\n      .filter((meta) => {\n        const deleteStatus = meta.data && meta.data.status === AttachmentMetaStatus.Delete;\n        const cloud = meta.data && meta.data.cloud;\n        const inline = meta.data && meta.data.inline;\n        return (!deleteStatus && !(cloud || inline));\n      })\n      .map((meta) => {\n        const data = meta.data;\n        if (!data) {\n          return null;\n        }\n        return (\n          <AttachmentCell\n            key={data.attachment}\n            id={data.attachment}\n            filename={data.filename || data.file && data.file.name || 'attachment'}\n            iconUrl={filenameIconUrl((data.filename || data.file && data.file.name) || '')}\n            length={data.length || data.file && data.file.size || 1000}\n            onDelete={this.handleAttachmentRemove}\n            progress={data.progress || 0}\n            fileUrl={data.cloudUrl}\n            isMeta\n          />\n        );\n      })\n  )\n\n  handleSchedulingUrl = () => {\n    const { schedulingUrl, hotkeyUpdate } = this.props;\n    if (schedulingUrl) {\n      hotkeyUpdate(HotkeyAction.CopySchedulingUrl);\n    } else {\n      browserHistory.push('/settings/calendar');\n    }\n  }\n\n  handleEnableEdit = () => {\n    this.focusContentEditable = true;\n    this.props.enableEdit();\n  }\n\n  handleDirectoryDropError = (b: BlobDescriptor) => {\n    const confirmProps: ConfirmProps = {\n      title: 'Error attaching file',\n      message: uploadErrorMessage(b),\n      confirmCopy: 'Ok',\n      onConfirm: () => {\n        this.setState({ confirmProps: undefined });\n      },\n    };\n\n    this.setState({ confirmProps, dropzoneActive: false });\n  }\n\n  render() {\n    const {\n      edit,\n      placeholders,\n      onTestEmailClick,\n      sender,\n      readOnly,\n      commandControlType,\n      enableEdit,\n      useLinkPreview,\n      noBranding,\n    } = this.props;\n    const { instance, dropzoneActive, stage, confirmProps } = this.state;\n    const enhancedPlaceholders = uniq(\n      ['email', 'first name', 'last name'].concat(placeholders || []),\n    );\n\n    if (!instance || !stage) {\n      return <div />;\n    }\n\n    const firstInstance = instance;\n    const leaveWarningPrompt = 'You have unsaved changes on this message. '\n    + 'Are you sure you want to leave this page?';\n\n    return (\n      <div className={classnames('sequence-stage-message', { edit })}>\n        {confirmProps &&\n          <Confirm\n            {...confirmProps}\n          />\n        }\n        {stage.order > 1 && !readOnly && <div className=\"send-interval\">\n          <span>Send</span>\n          <Dropdown\n            id=\"intervalDays-dropdown\"\n            onSelect={this.handleIntervalDayClick}\n            values={this.intervalDayValues}\n            startIndex={stage.intervalDays - 1}\n          />\n          <span>after previous stage as</span>\n          <Dropdown\n            id=\"newThread-dropdown\"\n            onSelect={this.handleSendTypeClick}\n            values={SEND_TYPE}\n            value={SEND_TYPE[stage.newThread ? 0 : 1]}\n            startIndex={stage.newThread ? 0 : 1}\n          />\n        </div>}\n        {stage.order > 1 && !!readOnly && <div className=\"send-interval\">\n          <span>\n            Send {stage.intervalDays} days after previous stage as a {\n              stage.newThread ? 'new thread' : 'reply'\n            }\n          </span>\n        </div>}\n        {stage.order === 1 && <div className=\"send-interval\">\n          <span>Sends as soon as recipients enter this sequence.</span>\n        </div>}\n        <div className=\"message-container\">\n          <div className=\"edit-options\">\n            <button className=\"select-template\" onClick={this.handleTemplateShow}>\n               Message Templates\n            </button>\n            <UploadButton\n              description=\"Add Attachment\"\n              className=\"upload-attachment-button\"\n              upload={this.handleUpload}\n            />\n            <button className=\"select-scheduling\" onClick={this.handleSchedulingUrl}>\n              Share Available Times\n            </button>\n            <div className=\"unsubscribe-container\">\n              <Checkbox\n                onChange={this.handleUnsubscribeChange}\n                checked={firstInstance.unsubscribeLink}\n              />\n              <span className=\"description\">Add unsubscribe link</span>\n            </div>\n            <button className=\"send-test\" onClick={onTestEmailClick}>\n              Send a test email\n            </button>\n          </div>\n          <div\n            className=\"message\"\n            onDragEnter={this.handleDragEnter}\n            onDragExit={this.handleDragLeave}\n          >\n            {dropzoneActive && edit &&\n              <FileDropZone\n                className=\"compose-drop-zone\"\n                onDrop={this.handleUpload}\n                onLeave={this.handleDragLeave}\n                title={'Drop here to attach files'}\n                description={'Polymail will automatically track '\n                  + 'when your attachments are opened.'}\n                altCopy={'Hold SHIFT while dropping to upload without tracking'}\n                onDirectoryDropError={this.handleDirectoryDropError}\n              />\n            }\n            <SubjectPane\n              ref={this.handleSubjectPaneRef}\n              subject={stage.newThread ?\n                firstInstance.subject || (edit ? '' : '(No subject)') :\n                `Reply to Stage ${stage.order - 1}`}\n              onChange={this.handleSubjectChange}\n              readOnly={!stage.newThread || !edit}\n              variables={enhancedPlaceholders}\n              onClick={enableEdit}\n            />\n            <div className=\"from\">{`from: ${sender}`}</div>\n            <div\n              className=\"compose-box\"\n              onClick={this.handleEnableEdit}\n            >\n              <ContentEditable\n                ref={this.handleContentEditableRef}\n                html={firstInstance.body}\n                onChange={this.handleBodyChange}\n                disabled={!edit}\n                variables={enhancedPlaceholders}\n                template={firstInstance.template}\n                useLinkPreview={useLinkPreview}\n                noBranding={noBranding}\n              />\n            </div>\n            {firstInstance.unsubscribeLink &&\n              <div>\n                <a\n                  className=\"mock-unsubscribe\"\n                  style={{ fontSize: '10px' }}\n                >\n                  Unsubscribe\n                </a>\n              </div>\n          }\n          {this.renderAttachmentCells()}\n          {this.renderAttachmentMetaCells()}\n          </div>\n        </div>\n        <Prompt\n          message={leaveWarningPrompt}\n          when={edit}\n        />\n        {commandControlType && commandControlType === CommandControlType.Templates &&\n          <CommandControl\n            default={CommandControlType.Templates}\n          />\n        }\n      </div>\n    );\n  }\n}\n\nexport default SequenceStageMessage;\n"]}]}