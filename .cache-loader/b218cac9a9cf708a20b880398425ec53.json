{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Billing/BillingPlans/index.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Billing/BillingPlans/index.ts","mtime":1675280254096},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4JzsKaW1wb3J0IEJpbGxpbmdQbGFucyBmcm9tICcuL0JpbGxpbmdQbGFucyc7CmltcG9ydCB7IHNlbGVjdEJpbGxpbmdMb2FkaW5nLCBzZWxlY3RCaWxsaW5nTG9hZGluZ0Vycm9yLCBzZWxlY3RCaWxsaW5nSGF2ZUFjdGl2ZVN1YnNjcmlwdGlvbiwgc2VsZWN0QmlsbGluZ1RyaWFsRXhwaXJlcywgc2VsZWN0QmlsbGluZ1BsYW5FeHBpcmVzLCB9IGZyb20gJ0BzcmMvZHVja3MvYmlsbGluZyc7CmltcG9ydCB7IHNlbGVjdFVzZXJJc0FkbWluIH0gZnJvbSAnQHNyYy9kdWNrcy9tZSc7CmltcG9ydCB7IHRvYXN0U2V0IH0gZnJvbSAnQHNyYy9kdWNrcy90b2FzdHMnOwppbXBvcnQgeyBsZWZ0U2lkZWJhckNvbGxhcHNlIH0gZnJvbSAnQHNyYy9kdWNrcy9sZWZ0U2lkZWJhcic7CmltcG9ydCB7IHNlbGVjdEFjY291bnRzIH0gZnJvbSAnQHNyYy9kdWNrcy9hY2NvdW50cyc7CnZhciBtYXBTdGF0ZVRvUHJvcHMgPSBmdW5jdGlvbiAoc3RhdGUpIHsKICAgIHZhciBiaWxsaW5nID0gc3RhdGUuYmlsbGluZy5yZXNvdXJjZS5kYXRhOwogICAgdmFyIHN1YnNjcmlwdGlvbiA9IGJpbGxpbmcgJiYgYmlsbGluZy5zdWJzY3JpcHRpb247CiAgICB2YXIgc3RhdHVzTmV3ID0gc3RhdGUubWUuZGF0YSAmJiBzdGF0ZS5tZS5kYXRhLnN0YXR1c05ldzsKICAgIHJldHVybiB7CiAgICAgICAgbG9hZGluZzogc2VsZWN0QmlsbGluZ0xvYWRpbmcoc3RhdGUpLAogICAgICAgIGxvYWRpbmdFcnJvcjogc2VsZWN0QmlsbGluZ0xvYWRpbmdFcnJvcihzdGF0ZSksCiAgICAgICAgaXNBZG1pbjogc2VsZWN0VXNlcklzQWRtaW4oc3RhdGUpLAogICAgICAgIGFjdGl2ZVN1YnNjcmlwdGlvbjogc2VsZWN0QmlsbGluZ0hhdmVBY3RpdmVTdWJzY3JpcHRpb24oc3RhdGUpLAogICAgICAgIGFjY291bnRzOiBzZWxlY3RBY2NvdW50cyhzdGF0ZSksCiAgICAgICAgY2FyZDogYmlsbGluZyAmJiBiaWxsaW5nLmNhcmQsCiAgICAgICAgYmFsYW5jZTogYmlsbGluZyAmJiBiaWxsaW5nLmJhbGFuY2UgfHwgMCwKICAgICAgICBzZWF0c1VzZWQ6IHN0YXRlLnRlYW0uZGF0YSAmJiBzdGF0ZS50ZWFtLmRhdGEuc2VhdHNVc2VkIHx8IDEsCiAgICAgICAgc3Vic2NyaXB0aW9uOiBzdWJzY3JpcHRpb24sCiAgICAgICAgdHJpYWxFeHBpcmVzOiBzZWxlY3RCaWxsaW5nVHJpYWxFeHBpcmVzKHN0YXRlKSwKICAgICAgICBwbGFuRXhwaXJlczogc2VsZWN0QmlsbGluZ1BsYW5FeHBpcmVzKHN0YXRlKSwKICAgICAgICB0cmlhbFBsYW46IHN0YXRlLnRlYW0uZGF0YSAmJiBzdGF0ZS50ZWFtLmRhdGEudHJpYWxQbGFuLAogICAgICAgIGlzTW9iaWxlOiBzdGF0ZS5pc01vYmlsZSwKICAgICAgICBjb2xsYXBzZWRNb2JpbGU6IHN0YXRlLmxlZnRTaWRlYmFyLmNvbGxhcHNlZCwKICAgICAgICBzdGF0dXNOZXc6IHN0YXR1c05ldywKICAgIH07Cn07CnZhciBtYXBEaXNwYXRjaFRvUHJvcHMgPSBmdW5jdGlvbiAoZGlzcGF0Y2gpIHsgcmV0dXJuICh7CiAgICBzZXRUb2FzdDogZnVuY3Rpb24gKGVycm9yKSB7IHJldHVybiBkaXNwYXRjaCh0b2FzdFNldChlcnJvcikpOyB9LAogICAgY29sbGFwc2VMc2I6IGZ1bmN0aW9uIChjb2xsYXBzZSkgeyByZXR1cm4gZGlzcGF0Y2gobGVmdFNpZGViYXJDb2xsYXBzZShjb2xsYXBzZSkpOyB9LAp9KTsgfTsKZXhwb3J0IGRlZmF1bHQgY29ubmVjdChtYXBTdGF0ZVRvUHJvcHMsIG1hcERpc3BhdGNoVG9Qcm9wcykoQmlsbGluZ1BsYW5zKTsK"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Billing/BillingPlans/index.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Billing/BillingPlans/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAY,MAAM,aAAa,CAAC;AAIhD,OAAO,YAAsC,MAAM,gBAAgB,CAAC;AAEpE,OAAO,EACL,oBAAoB,EAAE,yBAAyB,EAC/C,mCAAmC,EAAE,yBAAyB,EAAE,wBAAwB,GACzF,MAAM,oBAAoB,CAAC;AAC5B,OAAO,EAAE,iBAAiB,EAAE,MAAM,eAAe,CAAC;AAClD,OAAO,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAC7C,OAAO,EAAE,mBAAmB,EAAE,MAAM,wBAAwB,CAAC;AAC7D,OAAO,EAAE,cAAc,EAAE,MAAM,qBAAqB,CAAC;AAErD,IAAM,eAAe,GAAG,UAAC,KAAiB;IACxC,IAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC;IAC5C,IAAM,YAAY,GAAG,OAAO,IAAI,OAAO,CAAC,YAAY,CAAC;IACrD,IAAM,SAAS,GAAG,KAAK,CAAC,EAAE,CAAC,IAAI,IAAI,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC;IAE3D,OAAO;QACL,OAAO,EAAE,oBAAoB,CAAC,KAAK,CAAC;QACpC,YAAY,EAAE,yBAAyB,CAAC,KAAK,CAAC;QAC9C,OAAO,EAAE,iBAAiB,CAAC,KAAK,CAAC;QACjC,kBAAkB,EAAE,mCAAmC,CAAC,KAAK,CAAC;QAC9D,QAAQ,EAAE,cAAc,CAAC,KAAK,CAAC;QAE/B,IAAI,EAAE,OAAO,IAAI,OAAO,CAAC,IAAI;QAC7B,OAAO,EAAE,OAAO,IAAI,OAAO,CAAC,OAAO,IAAI,CAAC;QACxC,SAAS,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC;QAC5D,YAAY,cAAA;QACZ,YAAY,EAAE,yBAAyB,CAAC,KAAK,CAAC;QAC9C,WAAW,EAAE,wBAAwB,CAAC,KAAK,CAAC;QAC5C,SAAS,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS;QACvD,QAAQ,EAAE,KAAK,CAAC,QAAQ;QACxB,eAAe,EAAE,KAAK,CAAC,WAAW,CAAC,SAAS;QAC5C,SAAS,WAAA;KACV,CAAC;AACJ,CAAC,CAAC;AAEF,IAAM,kBAAkB,GAAG,UAAC,QAA8B,IAAoB,OAAA,CAAC;IAC7E,QAAQ,EAAE,UAAA,KAAK,IAAI,OAAA,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAzB,CAAyB;IAC5C,WAAW,EAAE,UAAA,QAAQ,IAAI,OAAA,QAAQ,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC,EAAvC,CAAuC;CACjE,CAAC,EAH4E,CAG5E,CAAC;AAEH,eAAe,OAAO,CAAC,eAAe,EAAE,kBAAkB,CAAC,CAAC,YAAY,CAAC,CAAC","sourcesContent":["import { connect, Dispatch } from 'react-redux';\n\nimport { StoreState } from '@src/types';\n\nimport BillingPlans, { Props, DispatchProps } from './BillingPlans';\n\nimport {\n  selectBillingLoading, selectBillingLoadingError,\n  selectBillingHaveActiveSubscription, selectBillingTrialExpires, selectBillingPlanExpires,\n} from '@src/ducks/billing';\nimport { selectUserIsAdmin } from '@src/ducks/me';\nimport { toastSet } from '@src/ducks/toasts';\nimport { leftSidebarCollapse } from '@src/ducks/leftSidebar';\nimport { selectAccounts } from '@src/ducks/accounts';\n\nconst mapStateToProps = (state: StoreState): Props => {\n  const billing = state.billing.resource.data;\n  const subscription = billing && billing.subscription;\n  const statusNew = state.me.data && state.me.data.statusNew;\n\n  return {\n    loading: selectBillingLoading(state),\n    loadingError: selectBillingLoadingError(state),\n    isAdmin: selectUserIsAdmin(state),\n    activeSubscription: selectBillingHaveActiveSubscription(state),\n    accounts: selectAccounts(state),\n\n    card: billing && billing.card,\n    balance: billing && billing.balance || 0,\n    seatsUsed: state.team.data && state.team.data.seatsUsed || 1,\n    subscription,\n    trialExpires: selectBillingTrialExpires(state),\n    planExpires: selectBillingPlanExpires(state),\n    trialPlan: state.team.data && state.team.data.trialPlan,\n    isMobile: state.isMobile,\n    collapsedMobile: state.leftSidebar.collapsed,\n    statusNew,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<StoreState>): DispatchProps => ({\n  setToast: error => dispatch(toastSet(error)),\n  collapseLsb: collapse => dispatch(leftSidebarCollapse(collapse)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BillingPlans);\n"]}]}