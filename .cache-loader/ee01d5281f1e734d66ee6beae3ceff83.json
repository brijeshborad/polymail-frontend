{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Logout/index.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Logout/index.tsx","mtime":1675280254106},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4JzsKaW1wb3J0IExvZ291dCBmcm9tICcuL0xvZ291dCc7CmltcG9ydCB7IGF1dGhMb2dvdXQsIGF1dGhMb2dvdXRBbGwgfSBmcm9tICdAc3JjL2R1Y2tzL2F1dGgnOwppbXBvcnQgeyBsZWZ0U2lkZWJhckNvbGxhcHNlIH0gZnJvbSAnQHNyYy9kdWNrcy9sZWZ0U2lkZWJhcic7CnZhciBtYXBTdGF0ZVRvUHJvcHMgPSBmdW5jdGlvbiAoc3RhdGUpIHsKICAgIHJldHVybiB7CiAgICAgICAgaXNNb2JpbGU6IHN0YXRlLmlzTW9iaWxlLAogICAgICAgIGNvbGxhcHNlZE1vYmlsZTogc3RhdGUubGVmdFNpZGViYXIuY29sbGFwc2VkLAogICAgfTsKfTsKdmFyIG1hcERpc3BhdGNoVG9Qcm9wcyA9IGZ1bmN0aW9uIChkaXNwYXRjaCkgeyByZXR1cm4gKHsKICAgIGxvZ291dDogZnVuY3Rpb24gKCkgeyByZXR1cm4gZGlzcGF0Y2goYXV0aExvZ291dChudWxsKSk7IH0sCiAgICBsb2dvdXRBbGw6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGRpc3BhdGNoKGF1dGhMb2dvdXRBbGwobnVsbCkpOyB9LAogICAgY29sbGFwc2VMc2I6IGZ1bmN0aW9uIChjb2xsYXBzZWQpIHsgcmV0dXJuIGRpc3BhdGNoKGxlZnRTaWRlYmFyQ29sbGFwc2UoY29sbGFwc2VkKSk7IH0sCn0pOyB9OwpleHBvcnQgZGVmYXVsdCBjb25uZWN0KG1hcFN0YXRlVG9Qcm9wcywgbWFwRGlzcGF0Y2hUb1Byb3BzKShMb2dvdXQpOwo="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Logout/index.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Logout/index.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAY,MAAM,aAAa,CAAC;AAGhD,OAAO,MAAgC,MAAM,UAAU,CAAC;AACxD,OAAO,EAAE,UAAU,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAC;AAC5D,OAAO,EAAE,mBAAmB,EAAE,MAAM,wBAAwB,CAAC;AAE7D,IAAM,eAAe,GAAG,UAAC,KAAiB;IACxC,OAAO;QACL,QAAQ,EAAE,KAAK,CAAC,QAAQ;QACxB,eAAe,EAAE,KAAK,CAAC,WAAW,CAAC,SAAS;KAC7C,CAAC;AACJ,CAAC,CAAC;AAEF,IAAM,kBAAkB,GAAG,UAAC,QAAuB,IAAoB,OAAA,CAAC;IACtE,MAAM,EAAE,cAAM,OAAA,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,EAA1B,CAA0B;IACxC,SAAS,EAAE,cAAM,OAAA,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,EAA7B,CAA6B;IAC9C,WAAW,EAAE,UAAC,SAAkB,IAAK,OAAA,QAAQ,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC,EAAxC,CAAwC;CAC9E,CAAC,EAJqE,CAIrE,CAAC;AAEH,eAAe,OAAO,CAA2B,eAAe,EAAE,kBAAkB,CAAC,CAAC,MAAM,CAAC,CAAC","sourcesContent":["import { connect, Dispatch } from 'react-redux';\nimport { StoreState } from '@src/types';\n\nimport Logout, { DispatchProps, Props } from './Logout';\nimport { authLogout, authLogoutAll } from '@src/ducks/auth';\nimport { leftSidebarCollapse } from '@src/ducks/leftSidebar';\n\nconst mapStateToProps = (state: StoreState): Props => {\n  return {\n    isMobile: state.isMobile,\n    collapsedMobile: state.leftSidebar.collapsed,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>): DispatchProps => ({\n  logout: () => dispatch(authLogout(null)),\n  logoutAll: () => dispatch(authLogoutAll(null)),\n  collapseLsb: (collapsed: boolean) => dispatch(leftSidebarCollapse(collapsed)),\n});\n\nexport default connect<Props, DispatchProps, {}>(mapStateToProps, mapDispatchToProps)(Logout);\n"]}]}