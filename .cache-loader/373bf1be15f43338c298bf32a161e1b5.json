{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/LeftSidebar/components/MailTab/components/Section/Item/SectionItem.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/LeftSidebar/components/MailTab/components/Section/Item/SectionItem.tsx","mtime":1675280254018},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JzsKaW1wb3J0IGNsYXNzbmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7CmltcG9ydCB7IExpbmsgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJzsKaW1wb3J0IERpc2Nsb3N1cmUgZnJvbSAnQHNyYy9jb21wb25lbnRzL0ljb25zL0Rpc2Nsb3N1cmUuc3ZnJzsKaW1wb3J0IEFsZXJ0IGZyb20gJ0BzcmMvY29tcG9uZW50cy9JY29ucy9BbGVydC5zdmcnOwppbXBvcnQgJy4vU2VjdGlvbkl0ZW0uc2Nzcyc7CmltcG9ydCB7IFB1bHNlR2VtIH0gZnJvbSAnQHNyYy9jb21wb25lbnRzL0Jhc2UvUHVsc2VHZW0nOwppbXBvcnQgSG92ZXJUaXAgZnJvbSAnQHNyYy9jb21wb25lbnRzL0Jhc2UvSG92ZXJUaXAnOwpleHBvcnQgdmFyIFNlY3Rpb25JdGVtID0gZnVuY3Rpb24gKHByb3BzKSB7CiAgICB2YXIgc2hvd0Rpc2Nsb3N1cmUgPSAhcHJvcHMuZXJyb3JDb3B5ICYmIHByb3BzLmRpc2Nsb3N1cmVDbGljazsKICAgIHZhciBzaG93Q291bnQgPSAhcHJvcHMuZXJyb3JDb3B5ICYmICFwcm9wcy5kaXNjbG9zdXJlQ2xpY2s7CiAgICAvLyBOb24gbGlua2llZmllZCB2ZXJzaW9uCiAgICBpZiAoIXByb3BzLmxpbmspIHsKICAgICAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIHsgY2xhc3NOYW1lOiBjbGFzc25hbWVzKCdzZWN0aW9uLWl0ZW0nLCBwcm9wcy5jbGFzc05hbWUsIHsKICAgICAgICAgICAgICAgIHNlbGVjdGVkOiBwcm9wcy5zZWxlY3RlZCwKICAgICAgICAgICAgICAgIGVtcHR5OiBwcm9wcy5jb3VudCA9PT0gMCwKICAgICAgICAgICAgICAgIG11dGVkOiBwcm9wcy5tdXRlZENvbG9yLAogICAgICAgICAgICB9KSwgb25DbGljazogcHJvcHMub25DbGljayB9LAogICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KCJzcGFuIiwgeyBjbGFzc05hbWU6ICJpY29uIiB9LCBwcm9wcy5pY29uKSwKICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudCgic3BhbiIsIHsgY2xhc3NOYW1lOiAibmFtZSIgfSwgcHJvcHMubmFtZSksCiAgICAgICAgICAgICEhcHJvcHMucGlsbFRleHQgJiYKICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoInNwYW4iLCB7IGNsYXNzTmFtZTogIm5ldy1mZWF0dXJlIiB9LCBwcm9wcy5waWxsVGV4dCksCiAgICAgICAgICAgICEhcHJvcHMuZXJyb3JDb3B5ICYmCiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KEhvdmVyVGlwLCB7IHRvcDogIjI1cHgiLCBsZWZ0OiAiLTVweCIsIGNvcHk6IHByb3BzLmVycm9yQ29weSwgZml4ZWRQb3NpdGlvbmluZzogdHJ1ZSB9LAogICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoInNwYW4iLCB7IGNsYXNzTmFtZTogImVycm9yIiB9LAogICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KEFsZXJ0LCBudWxsKSkpLAogICAgICAgICAgICBzaG93RGlzY2xvc3VyZSAmJiBSZWFjdC5jcmVhdGVFbGVtZW50KCJzcGFuIiwgeyBjbGFzc05hbWU6ICJkaXNjbG9zdXJlIiB9LAogICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChEaXNjbG9zdXJlLCBudWxsKSksCiAgICAgICAgICAgIHNob3dDb3VudCAmJiBSZWFjdC5jcmVhdGVFbGVtZW50KCJzcGFuIiwgeyBjbGFzc05hbWU6ICJjb3VudCIgfSwgcHJvcHMuY291bnQpLAogICAgICAgICAgICBwcm9wcy5pc09uYm9hcmRpbmcgJiYgUmVhY3QuY3JlYXRlRWxlbWVudChQdWxzZUdlbSwgeyB0b3A6ICItMnB4IiwgcmlnaHQ6ICI0MHB4IiB9KSkpOwogICAgfQogICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KExpbmssIHsgY2xhc3NOYW1lOiBjbGFzc25hbWVzKCdzZWN0aW9uLWl0ZW0nLCBwcm9wcy5jbGFzc05hbWUsIHsKICAgICAgICAgICAgc2VsZWN0ZWQ6IHByb3BzLnNlbGVjdGVkLAogICAgICAgICAgICBlbXB0eTogcHJvcHMuY291bnQgPT09IDAsCiAgICAgICAgICAgIG11dGVkOiAhIXByb3BzLm11dGVkQ29sb3IsCiAgICAgICAgfSksIHRvOiBwcm9wcy5saW5rLCBvbkNsaWNrOiBwcm9wcy5vbkNsaWNrIH0sCiAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudCgic3BhbiIsIHsgY2xhc3NOYW1lOiAiaWNvbiIgfSwgcHJvcHMuaWNvbiksCiAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudCgic3BhbiIsIHsgY2xhc3NOYW1lOiAibmFtZSIgfSwgcHJvcHMubmFtZSksCiAgICAgICAgISFwcm9wcy5waWxsVGV4dCAmJgogICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KCJzcGFuIiwgeyBjbGFzc05hbWU6ICJuZXctZmVhdHVyZSIgfSwgcHJvcHMucGlsbFRleHQpLAogICAgICAgICEhcHJvcHMuZXJyb3JDb3B5ICYmCiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSG92ZXJUaXAsIHsgdG9wOiAiMjVweCIsIGxlZnQ6ICItNXB4IiwgY29weTogcHJvcHMuZXJyb3JDb3B5LCBmaXhlZFBvc2l0aW9uaW5nOiB0cnVlIH0sCiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KCJzcGFuIiwgeyBjbGFzc05hbWU6ICJlcnJvciIgfSwKICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KEFsZXJ0LCBudWxsKSkpLAogICAgICAgIHNob3dEaXNjbG9zdXJlICYmCiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoInNwYW4iLCB7IGNsYXNzTmFtZTogImRpc2Nsb3N1cmUiLCBvbkNsaWNrOiBwcm9wcy5kaXNjbG9zdXJlQ2xpY2sgfSwKICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoRGlzY2xvc3VyZSwgbnVsbCkpLAogICAgICAgIHNob3dDb3VudCAmJgogICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KCJzcGFuIiwgeyBjbGFzc05hbWU6IGNsYXNzbmFtZXMoJ2NvdW50JywgeyBub3RpZmljYXRpb246ICEhcHJvcHMubm90aWZpY2F0aW9uQ291bnQgfSkgfSwgcHJvcHMuY291bnQpLAogICAgICAgIHByb3BzLmlzT25ib2FyZGluZyAmJiBSZWFjdC5jcmVhdGVFbGVtZW50KFB1bHNlR2VtLCB7IHRvcDogIi0ycHgiLCByaWdodDogIjM4cHgiIH0pKSk7Cn07Cg=="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/LeftSidebar/components/MailTab/components/Section/Item/SectionItem.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/LeftSidebar/components/MailTab/components/Section/Item/SectionItem.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport Disclosure from '@src/components/Icons/Disclosure.svg';\nimport Alert from '@src/components/Icons/Alert.svg';\n\nimport './SectionItem.scss';\nimport { PulseGem } from '@src/components/Base/PulseGem';\nimport HoverTip from '@src/components/Base/HoverTip';\n\ninterface Props {\n  name: string;\n  count: number;\n  icon?: any;\n  selected: boolean;\n  link?: string;\n  className?: string;\n  pillText?: string;\n  isOnboarding?: boolean;\n  mutedColor?: boolean;\n  onClick?: (e: React.MouseEvent<HTMLElement>) => void;\n  disclosureClick?: (e: React.SyntheticEvent<HTMLElement>) => void;\n  errorCopy?: string;\n  notificationCount?: boolean;\n}\n\nexport const SectionItem = (props: Props) => {\n  const showDisclosure = !props.errorCopy && props.disclosureClick;\n  const showCount = !props.errorCopy && !props.disclosureClick;\n\n  // Non linkiefied version\n  if (!props.link) {\n    return (\n      <div\n        className={classnames('section-item', props.className, {\n          selected: props.selected,\n          empty: props.count === 0,\n          muted: props.mutedColor,\n        })}\n        onClick={props.onClick}\n      >\n        <span className=\"icon\">{props.icon}</span>\n        <span className=\"name\">{props.name}</span>\n        {!!props.pillText &&\n          <span className=\"new-feature\">\n            {props.pillText}\n          </span>\n        }\n        {!!props.errorCopy &&\n          <HoverTip\n            top=\"25px\"\n            left=\"-5px\"\n            copy={props.errorCopy}\n            fixedPositioning\n          >\n            <span className=\"error\"><Alert /></span>\n          </HoverTip>}\n        {showDisclosure && <span className=\"disclosure\"><Disclosure /></span>}\n        {showCount && <span className=\"count\">{props.count}</span>}\n        {props.isOnboarding && <PulseGem\n          top=\"-2px\"\n          right=\"40px\"\n        />}\n      </div>\n    );\n  }\n\n  return (\n    <Link\n      className={classnames('section-item', props.className, {\n        selected: props.selected,\n        empty: props.count === 0,\n        muted: !!props.mutedColor,\n      })}\n      to={props.link}\n      onClick={props.onClick}\n    >\n      <span className=\"icon\">{props.icon}</span>\n      <span className=\"name\">{props.name}</span>\n      {!!props.pillText &&\n        <span className=\"new-feature\">\n          {props.pillText}\n        </span>\n      }\n      {!!props.errorCopy &&\n        <HoverTip\n          top=\"25px\"\n          left=\"-5px\"\n          copy={props.errorCopy}\n          fixedPositioning\n        >\n          <span className=\"error\"><Alert /></span>\n        </HoverTip>}\n      {showDisclosure &&\n        <span className=\"disclosure\" onClick={props.disclosureClick}><Disclosure /></span>}\n      {showCount &&\n        <span\n          className={classnames('count', { notification: !!props.notificationCount })}\n        >\n        {props.count}\n        </span>\n      }\n      {props.isOnboarding && <PulseGem\n        top=\"-2px\"\n        right=\"38px\"\n      />}\n    </Link>\n  );\n};\n"]}]}