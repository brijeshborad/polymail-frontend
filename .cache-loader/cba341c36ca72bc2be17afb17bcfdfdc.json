{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/notifications.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/notifications.ts","mtime":1675280254057},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnOwppbXBvcnQgeyBBY3Rpb25TdGF0dXMsIE5vdGlmaWNhdGlvblR5cGUsIH0gZnJvbSAnQHNyYy90eXBlcyc7CmltcG9ydCB7IE5PVElGSUNBVElPTl9TSE9XLCBub3RpZmljYXRpb25TaG93LCB9IGZyb20gJ0BzcmMvZHVja3Mvbm90aWZpY2F0aW9ucyc7CnZhciBub3RpZmljYXRpb25TaG93RXBpYyA9IGZ1bmN0aW9uIChhY3Rpb24kLCBfLCBkZXBzKSB7CiAgICByZXR1cm4gYWN0aW9uJC5vZlR5cGUoTk9USUZJQ0FUSU9OX1NIT1cpCiAgICAgICAgLmZpbHRlcihmdW5jdGlvbiAoYWN0aW9uKSB7IHJldHVybiBhY3Rpb24uc3RhdHVzID09PSBBY3Rpb25TdGF0dXMuU3RhcnQ7IH0pCiAgICAgICAgLmZpbHRlcihmdW5jdGlvbiAoYWN0aW9uKSB7CiAgICAgICAgdmFyIG5vdGlmaWNhdGlvbiA9IGFjdGlvbi5tZXRhLmRhdGE7CiAgICAgICAgcmV0dXJuICEhbm90aWZpY2F0aW9uICYmIG5vdGlmaWNhdGlvbi50eXBlID09PSBOb3RpZmljYXRpb25UeXBlLkNvbW1lbnQgJiYKICAgICAgICAgICAgJ05vdGlmaWNhdGlvbicgaW4gd2luZG93ICYmIE5vdGlmaWNhdGlvbi5wZXJtaXNzaW9uID09PSAnZ3JhbnRlZCcKICAgICAgICAgICAgJiYgISFub3RpZmljYXRpb24uZW1haWxOb3RpZmljYXRpb247CiAgICB9KQogICAgICAgIC5mbGF0TWFwKGZ1bmN0aW9uIChhY3Rpb24pIHsKICAgICAgICByZXR1cm4gZGVwcy5ub3RpZmljYXRpb25zLmRlbGV0ZShhY3Rpb24ubWV0YS5kYXRhLmVtYWlsTm90aWZpY2F0aW9uKQogICAgICAgICAgICAubWFwKGZ1bmN0aW9uICgpIHsgcmV0dXJuIG5vdGlmaWNhdGlvblNob3coYWN0aW9uLm1ldGEsIG51bGwpOyB9KQogICAgICAgICAgICAuY2F0Y2goZnVuY3Rpb24gKGUpIHsgcmV0dXJuIE9ic2VydmFibGUub2Yobm90aWZpY2F0aW9uU2hvdyhhY3Rpb24ubWV0YSwgZSkpOyB9KTsKICAgIH0pOwp9OwpleHBvcnQgZGVmYXVsdCBbCiAgICBub3RpZmljYXRpb25TaG93RXBpYywKXTsK"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/notifications.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/notifications.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,MAAM,CAAC;AAGlC,OAAO,EACL,YAAY,EAIZ,gBAAgB,GACjB,MAAM,YAAY,CAAC;AAEpB,OAAO,EACL,iBAAiB,EACjB,gBAAgB,GAEjB,MAAM,0BAA0B,CAAC;AAElC,IAAM,oBAAoB,GACtB,UAAC,OAAO,EAAE,CAAC,EAAE,IAAI;IACjB,OAAA,OAAO,CAAC,MAAM,CAAC,iBAAiB,CAAC;SAC9B,MAAM,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,MAAM,KAAK,YAAY,CAAC,KAAK,EAApC,CAAoC,CAAC;SACtD,MAAM,CAAC,UAAC,MAAM;QACb,IAAM,YAAY,GAAyB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;QAC5D,OAAO,CAAC,CAAC,YAAY,IAAI,YAAY,CAAC,IAAI,KAAK,gBAAgB,CAAC,OAAO;YACrE,cAAc,IAAI,MAAM,IAAK,YAAoB,CAAC,UAAU,KAAK,SAAS;eACvE,CAAC,CAAC,YAAY,CAAC,iBAAiB,CAAC;IACxC,CAAC,CAAC;SACD,OAAO,CAAC,UAAA,MAAM;QACb,OAAA,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAkB,CAAC;aAC3D,GAAG,CAAC,cAAM,OAAA,gBAAgB,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,EAAnC,CAAmC,CAAC;aAC9C,KAAK,CAAC,UAAC,CAAQ,IAAK,OAAA,UAAU,CAAC,EAAE,CAAC,gBAAgB,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAA/C,CAA+C,CAAC;IAFvE,CAEuE,CAC1E;AAZD,CAYC,CAAC;AAEN,eAAe;IACb,oBAAoB;CACrB,CAAC","sourcesContent":["import { Observable } from 'rxjs';\nimport { Epic } from 'redux-observable';\n\nimport {\n  ActionStatus,\n  Action,\n  StoreState,\n  RealtimeNotification,\n  NotificationType,\n} from '@src/types';\nimport { Deps } from '@src/lib/epic';\nimport {\n  NOTIFICATION_SHOW,\n  notificationShow,\n  NotificationShowMeta,\n} from '@src/ducks/notifications';\n\nconst notificationShowEpic: Epic<Action<NotificationShowMeta, any>, StoreState, Deps>\n  = (action$, _, deps) =>\n    action$.ofType(NOTIFICATION_SHOW)\n      .filter(action => action.status === ActionStatus.Start)\n      .filter((action) => {\n        const notification: RealtimeNotification = action.meta.data;\n        return !!notification && notification.type === NotificationType.Comment &&\n          'Notification' in window && (Notification as any).permission === 'granted'\n          && !!notification.emailNotification;\n      })\n      .flatMap(action =>\n        deps.notifications.delete(action.meta.data.emailNotification!)\n          .map(() => notificationShow(action.meta, null))\n          .catch((e: Error) => Observable.of(notificationShow(action.meta, e))),\n    );\n\nexport default [\n  notificationShowEpic,\n];\n"]}]}