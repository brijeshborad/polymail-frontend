{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/devices.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/devices.ts","mtime":1675280254048},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9hLCBfYiwgX2M7CmltcG9ydCB7IGZpbmRJbmRleCB9IGZyb20gJ2xvZGFzaCc7CmltcG9ydCB1cGRhdGUgZnJvbSAnaW1tdXRhYmlsaXR5LWhlbHBlcic7CmltcG9ydCBDb29raWVzIGZyb20gJ2pzLWNvb2tpZSc7CmltcG9ydCB7IGNyZWF0ZSB9IGZyb20gJ0BzcmMvbGliL3JlZHV4JzsKaW1wb3J0IHsgY3JlYXRlU2VsZWN0b3IgfSBmcm9tICdAc3JjL2xpYi9zZWxlY3Rvcic7CmV4cG9ydCB2YXIgREVWSUNFX1VQREFURSA9IChfYSA9IGNyZWF0ZSgnREVWSUNFX1VQREFURScsIHsKICAgIHN0YXJ0OiBmdW5jdGlvbiAoc3RhdGUsIG1ldGEpIHsKICAgICAgICB2YXIgX2E7CiAgICAgICAgdmFyIGkgPSBmaW5kSW5kZXgoc3RhdGUuZGV2aWNlcywgeyBkZXZpY2VJZDogbWV0YS5kZXZpY2VJZCB9KTsKICAgICAgICBpZiAoaSA9PT0gLTEpIHsKICAgICAgICAgICAgcmV0dXJuIHN0YXRlOwogICAgICAgIH0KICAgICAgICByZXR1cm4gdXBkYXRlKHN0YXRlLCB7CiAgICAgICAgICAgIGRldmljZXM6IChfYSA9IHt9LCBfYVtpXSA9IHsgJHNldDogbWV0YSB9LCBfYSksCiAgICAgICAgfSk7CiAgICB9LAogICAgc3VjY2VzczogZnVuY3Rpb24gKHN0YXRlLCBtZXRhLCBwYXlsb2FkKSB7CiAgICAgICAgdmFyIF9hOwogICAgICAgIC8vIGZpbmQgZGV2aWNlCiAgICAgICAgdmFyIGkgPSBmaW5kSW5kZXgoc3RhdGUuZGV2aWNlcywgeyBkZXZpY2VJZDogcGF5bG9hZC5kZXZpY2VJZCB9KTsKICAgICAgICAvLyBhZGQgbmV3IGRldmljZQogICAgICAgIGlmIChpID09PSAtMSkgewogICAgICAgICAgICByZXR1cm4gdXBkYXRlKHN0YXRlLCB7CiAgICAgICAgICAgICAgICBkZXZpY2VzOiB7CiAgICAgICAgICAgICAgICAgICAgJHB1c2g6IFtwYXlsb2FkXSwKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgICAvLyB1cGRhdGUgZXhpc3RpbmcgZGV2aWNlCiAgICAgICAgcmV0dXJuIHVwZGF0ZShzdGF0ZSwgewogICAgICAgICAgICBkZXZpY2VzOiAoX2EgPSB7fSwKICAgICAgICAgICAgICAgIF9hW2ldID0gewogICAgICAgICAgICAgICAgICAgICRzZXQ6IHBheWxvYWQsCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgX2EpLAogICAgICAgIH0pOwogICAgfSwKfSksIF9hLnR5cGUpLCBkZXZpY2VVcGRhdGUgPSBfYS5hY3Rpb24sIGRldmljZVVwZGF0ZVJlZHVjZXIgPSBfYS5yZWR1Y2VyOwpleHBvcnQgdmFyIERFVklDRV9SRUdJU1RFUiA9IChfYiA9IGNyZWF0ZSgnREVWSUNFX1JFR0lTVEVSJywgewogICAgc3VjY2VzczogZnVuY3Rpb24gKHN0YXRlLCBtZXRhLCBwYXlsb2FkKSB7CiAgICAgICAgdmFyIF9hOwogICAgICAgIC8vIGZpbmQgZGV2aWNlCiAgICAgICAgdmFyIGkgPSBmaW5kSW5kZXgoc3RhdGUuZGV2aWNlcywgeyBkZXZpY2VJZDogcGF5bG9hZC5kZXZpY2VJZCB9KTsKICAgICAgICAvLyBhZGQgbmV3IGRldmljZQogICAgICAgIGlmIChpID09PSAtMSkgewogICAgICAgICAgICByZXR1cm4gdXBkYXRlKHN0YXRlLCB7CiAgICAgICAgICAgICAgICBkZXZpY2VzOiB7CiAgICAgICAgICAgICAgICAgICAgJHB1c2g6IFtwYXlsb2FkXSwKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgICAvLyB1cGRhdGUgZXhpc3RpbmcgZGV2aWNlCiAgICAgICAgcmV0dXJuIHVwZGF0ZShzdGF0ZSwgewogICAgICAgICAgICBkZXZpY2VzOiAoX2EgPSB7fSwKICAgICAgICAgICAgICAgIF9hW2ldID0gewogICAgICAgICAgICAgICAgICAgICRzZXQ6IHBheWxvYWQsCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgX2EpLAogICAgICAgIH0pOwogICAgfSwKfSksIF9iLnR5cGUpLCBkZXZpY2VSZWdpc3RlciA9IF9iLmFjdGlvbiwgZGV2aWNlUmVnaXN0ZXJSZWR1Y2VyID0gX2IucmVkdWNlcjsKZXhwb3J0IHZhciBJU19NT0JJTEVfREVWSUNFID0gKF9jID0gY3JlYXRlKCdJU19NT0JJTEVfREVWSUNFJywgewogICAgc3RhcnQ6IGZ1bmN0aW9uIChzdGF0ZSwgbWV0YSkgewogICAgICAgIHJldHVybiB1cGRhdGUoc3RhdGUsIHsKICAgICAgICAgICAgaXNNb2JpbGU6IHsgJHNldDogbWV0YSB9LAogICAgICAgIH0pOwogICAgfSwKfSksIF9jLnR5cGUpLCBzZXRJc01vYmlsZSA9IF9jLmFjdGlvbiwgc2V0SXNNb2JpbGVSZWR1Y2VyID0gX2MucmVkdWNlcjsKLy8gU2VsZWN0b3IKZXhwb3J0IHZhciBzZWxlY3RDdXJyZW50RGV2aWNlID0gY3JlYXRlU2VsZWN0b3IoWwogICAgZnVuY3Rpb24gKHN0YXRlKSB7IHJldHVybiBzdGF0ZS5kZXZpY2VzOyB9LApdLCBmdW5jdGlvbiAoZGV2aWNlcykgewogICAgdmFyIGZldGNoZWREZXZpY2VzID0gZGV2aWNlcyB8fCBbXTsKICAgIHZhciBkZXZpY2VJZCA9IENvb2tpZXMuZ2V0KCdkZXZpY2VJZCcpIHx8ICcnOwogICAgcmV0dXJuIGZldGNoZWREZXZpY2VzLmZpbHRlcihmdW5jdGlvbiAoZGV2aWNlKSB7IHJldHVybiBkZXZpY2UuZGV2aWNlSWQgPT09IGRldmljZUlkOyB9KVswXTsKfSk7CmV4cG9ydCBkZWZhdWx0IFtkZXZpY2VSZWdpc3RlclJlZHVjZXIsIGRldmljZVVwZGF0ZVJlZHVjZXIsIHNldElzTW9iaWxlUmVkdWNlcl07Cg=="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/devices.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/devices.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,QAAQ,CAAC;AACnC,OAAO,MAAM,MAAM,qBAAqB,CAAC;AACzC,OAAO,OAAO,MAAM,WAAW,CAAC;AAEhC,OAAO,EAAE,MAAM,EAAE,MAAM,gBAAgB,CAAC;AAExC,OAAO,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAC;AAEnD,MAAM,CACJ,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAAmB,EACnB,wBAAoB,EACpB,gCAA4B,CAiC3B;AAEH,MAAM,CACH,IAAA;;;;;;;;;;;;;;;;;;;;;;YAAqB,EACrB,0BAAsB,EACtB,kCAA8B,CAwB9B;AAEH,MAAM,CACJ,IAAA;;;;;;YAAsB,EACtB,uBAAmB,EACnB,+BAA2B,CAO1B;AAEH,WAAW;AACX,MAAM,CAAC,IAAM,mBAAmB,GAAG,cAAc,CAK/C;IACE,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,OAAO,EAAb,CAAa;CACvB,EACD,UAAC,OAAO;IACN,IAAM,cAAc,GAAG,OAAO,IAAI,EAAE,CAAC;IACrC,IAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;IAC/C,OAAO,cAAc,CAAC,MAAM,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,QAAQ,KAAK,QAAQ,EAA5B,CAA4B,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1E,CAAC,CACF,CAAC;AAEF,eAAe,CAAC,qBAAqB,EAAE,mBAAmB,EAAE,kBAAkB,CAAC,CAAC","sourcesContent":["import { findIndex } from 'lodash';\nimport update from 'immutability-helper';\nimport Cookies from 'js-cookie';\n\nimport { create } from '@src/lib/redux';\nimport { Device } from '@src/types';\nimport { createSelector } from '@src/lib/selector';\n\nexport const {\n  type: DEVICE_UPDATE,\n  action: deviceUpdate,\n  reducer: deviceUpdateReducer,\n} = create<Device, Device>('DEVICE_UPDATE', {\n  start: (state, meta) => {\n    const i = findIndex(state.devices, { deviceId: meta.deviceId });\n    if (i === -1) {\n      return state;\n    }\n    return update(state, {\n      devices: { [i]: { $set: meta } },\n    });\n  },\n  success: (state, meta, payload) => {\n    // find device\n    const i = findIndex(state.devices, { deviceId: payload.deviceId });\n\n    // add new device\n    if (i === -1) {\n      return update(state, {\n        devices: {\n          $push: [payload],\n        },\n      });\n    }\n\n    // update existing device\n    return update(state, {\n      devices: {\n        [i]: {\n          $set: payload,\n        },\n      },\n    });\n  },\n});\n\nexport const {\n   type: DEVICE_REGISTER,\n   action: deviceRegister,\n   reducer: deviceRegisterReducer,\n} = create<null, Device>('DEVICE_REGISTER', {\n  success: (state, meta, payload) => {\n    // find device\n    const i = findIndex(state.devices, { deviceId: payload.deviceId });\n\n    // add new device\n    if (i === -1) {\n      return update(state, {\n        devices: {\n          $push: [payload],\n        },\n      });\n    }\n\n    // update existing device\n    return update(state, {\n      devices: {\n        [i]: {\n          $set: payload,\n        },\n      },\n    });\n  },\n});\n\nexport const {\n  type: IS_MOBILE_DEVICE,\n  action: setIsMobile,\n  reducer: setIsMobileReducer,\n} = create<boolean, undefined>('IS_MOBILE_DEVICE', {\n  start: (state, meta) => {\n    return update(state, {\n      isMobile: { $set: meta },\n    });\n  },\n});\n\n// Selector\nexport const selectCurrentDevice = createSelector<\n  undefined,\n  Device[],\n  Device | undefined\n>(\n  [\n    state => state.devices,\n  ],\n  (devices) => {\n    const fetchedDevices = devices || [];\n    const deviceId = Cookies.get('deviceId') || '';\n    return fetchedDevices.filter(device => device.deviceId === deviceId)[0];\n  },\n);\n\nexport default [deviceRegisterReducer, deviceUpdateReducer, setIsMobileReducer];\n"]}]}