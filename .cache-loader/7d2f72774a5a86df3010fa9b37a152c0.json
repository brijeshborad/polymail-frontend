{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/LeftSidebar/components/MailTab/components/Section/TeamSection/InviteTeamPopover/index.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/LeftSidebar/components/MailTab/components/Section/TeamSection/InviteTeamPopover/index.tsx","mtime":1675280254020},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IEludml0ZVRlYW1Qb3BvdmVyIGZyb20gJy4vSW52aXRlVGVhbVBvcG92ZXInOwppbXBvcnQgeyBjb25uZWN0IH0gZnJvbSAncmVhY3QtcmVkdXgnOwppbXBvcnQgeyB0ZWFtTWVtYmVySW52aXRlIH0gZnJvbSAnQHNyYy9kdWNrcy90ZWFtTWVtYmVycyc7CmltcG9ydCB7IGNvbnRhY3RUeXBlYWhlYWQsIGNvbnRhY3RUeXBlYWhlYWREb21haW4sIGNvbnRhY3RUeXBlYWhlYWRDbGVhciwgfSBmcm9tICdAc3JjL2R1Y2tzL2NvbnRhY3RzJzsKaW1wb3J0IHsgc2VsZWN0VGVhbVByb3JhdGlvbkNvcHkgfSBmcm9tICdAc3JjL2R1Y2tzL3RlYW0nOwppbXBvcnQgeyBzZWxlY3REb21haW5zIH0gZnJvbSAnQHNyYy9kdWNrcy9hY2NvdW50cyc7CnZhciBtYXBTdGF0ZVRvUHJvcHMgPSBmdW5jdGlvbiAoc3RhdGUpIHsKICAgIHJldHVybiB7CiAgICAgICAgdHlwZWFoZWFkQ29udGFjdHM6IHN0YXRlLnR5cGVhaGVhZENvbnRhY3RzLAogICAgICAgIHRlYW1JbnZpdGVzOiBzdGF0ZS50ZWFtSW52aXRlcyAmJiBzdGF0ZS50ZWFtSW52aXRlcy5kYXRhIHx8IFtdLAogICAgICAgIHNob3dQcm9yYXRpb25Db3B5OiBzZWxlY3RUZWFtUHJvcmF0aW9uQ29weShzdGF0ZSksCiAgICAgICAgZG9tYWluczogc2VsZWN0RG9tYWlucyhzdGF0ZSksCiAgICB9Owp9Owp2YXIgbWFwRGlzcGF0Y2hUb1Byb3BzID0gZnVuY3Rpb24gKGRpc3BhdGNoKSB7IHJldHVybiAoewogICAgaW52aXRlVGVhbU1lbWJlcjogZnVuY3Rpb24gKGVtYWlsKSB7IHJldHVybiBkaXNwYXRjaCh0ZWFtTWVtYmVySW52aXRlKGVtYWlsKSk7IH0sCiAgICBjb250YWN0VHlwZWFoZWFkOiBmdW5jdGlvbiAocXVlcnkpIHsgcmV0dXJuIGRpc3BhdGNoKGNvbnRhY3RUeXBlYWhlYWQocXVlcnkpKTsgfSwKICAgIGNvbnRhY3RUeXBlYWhlYWRCeURvbWFpbjogZnVuY3Rpb24gKGRvbWFpbnMpIHsgcmV0dXJuIGRpc3BhdGNoKGNvbnRhY3RUeXBlYWhlYWREb21haW4oZG9tYWlucykpOyB9LAogICAgY2xlYXJDb250YWN0VHlwZWFoZWFkOiBmdW5jdGlvbiAoKSB7IHJldHVybiBkaXNwYXRjaChjb250YWN0VHlwZWFoZWFkQ2xlYXIoKSk7IH0sCn0pOyB9OwpleHBvcnQgZGVmYXVsdCBjb25uZWN0KG1hcFN0YXRlVG9Qcm9wcywgbWFwRGlzcGF0Y2hUb1Byb3BzLCBudWxsLCB7IHdpdGhSZWY6IHRydWUgfSkoSW52aXRlVGVhbVBvcG92ZXIpOwo="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/LeftSidebar/components/MailTab/components/Section/TeamSection/InviteTeamPopover/index.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/LeftSidebar/components/MailTab/components/Section/TeamSection/InviteTeamPopover/index.tsx"],"names":[],"mappings":"AAAA,OAAO,iBAAgD,MAAM,qBAAqB,CAAC;AACnF,OAAO,EAAE,OAAO,EAAY,MAAM,aAAa,CAAC;AAEhD,OAAO,EAAE,gBAAgB,EAAE,MAAM,wBAAwB,CAAC;AAC1D,OAAO,EACL,gBAAgB,EAChB,sBAAsB,EACtB,qBAAqB,GACtB,MAAM,qBAAqB,CAAC;AAC7B,OAAO,EAAE,uBAAuB,EAAE,MAAM,iBAAiB,CAAC;AAC1D,OAAO,EAAE,aAAa,EAAE,MAAM,qBAAqB,CAAC;AAEpD,IAAM,eAAe,GAAG,UAAC,KAAiB;IACxC,OAAO;QACL,iBAAiB,EAAE,KAAK,CAAC,iBAAiB;QAC1C,WAAW,EAAE,KAAK,CAAC,WAAW,IAAI,KAAK,CAAC,WAAW,CAAC,IAAI,IAAI,EAAE;QAC9D,iBAAiB,EAAE,uBAAuB,CAAC,KAAK,CAAC;QACjD,OAAO,EAAE,aAAa,CAAC,KAAK,CAAC;KAC9B,CAAC;AACJ,CAAC,CAAC;AAEF,IAAM,kBAAkB,GAAG,UAAC,QAA8B,IAAoB,OAAA,CAAC;IAC7E,gBAAgB,EAAE,UAAA,KAAK,IAAI,OAAA,QAAQ,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,EAAjC,CAAiC;IAC5D,gBAAgB,EAAE,UAAA,KAAK,IAAI,OAAA,QAAQ,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,EAAjC,CAAiC;IAC5D,wBAAwB,EAAE,UAAA,OAAO,IAAI,OAAA,QAAQ,CAAC,sBAAsB,CAAC,OAAO,CAAC,CAAC,EAAzC,CAAyC;IAC9E,qBAAqB,EAAE,cAAM,OAAA,QAAQ,CAAC,qBAAqB,EAAE,CAAC,EAAjC,CAAiC;CAC/D,CAAC,EAL4E,CAK5E,CAAC;AAEH,eAAe,OAAO,CACpB,eAAe,EACf,kBAAkB,EAClB,IAAI,EACJ,EAAE,OAAO,EAAE,IAAI,EAAE,CAClB,CAAC,iBAAiB,CAAC,CAAC","sourcesContent":["import InviteTeamPopover, { StateProps, DispatchProps } from './InviteTeamPopover';\nimport { connect, Dispatch } from 'react-redux';\nimport { StoreState } from '@src/types';\nimport { teamMemberInvite } from '@src/ducks/teamMembers';\nimport {\n  contactTypeahead,\n  contactTypeaheadDomain,\n  contactTypeaheadClear,\n} from '@src/ducks/contacts';\nimport { selectTeamProrationCopy } from '@src/ducks/team';\nimport { selectDomains } from '@src/ducks/accounts';\n\nconst mapStateToProps = (state: StoreState): StateProps => {\n  return {\n    typeaheadContacts: state.typeaheadContacts,\n    teamInvites: state.teamInvites && state.teamInvites.data || [],\n    showProrationCopy: selectTeamProrationCopy(state),\n    domains: selectDomains(state),\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<StoreState>): DispatchProps => ({\n  inviteTeamMember: email => dispatch(teamMemberInvite(email)),\n  contactTypeahead: query => dispatch(contactTypeahead(query)),\n  contactTypeaheadByDomain: domains => dispatch(contactTypeaheadDomain(domains)),\n  clearContactTypeahead: () => dispatch(contactTypeaheadClear()),\n});\n\nexport default connect<StateProps, DispatchProps>(\n  mapStateToProps,\n  mapDispatchToProps,\n  null,\n  { withRef: true },\n)(InviteTeamPopover);\n"]}]}