{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Threads/components/ThreadList/components/InfiniteThreadList/EmptySearchCell/EmptySearchCell.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Threads/components/ThreadList/components/InfiniteThreadList/EmptySearchCell/EmptySearchCell.tsx","mtime":1675280254116},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkgewogICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHsKICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHsKICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTsKICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKQogICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07CiAgICAgICAgfQogICAgICAgIHJldHVybiB0OwogICAgfTsKICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9OwppbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnOwppbXBvcnQgJy4vRW1wdHlTZWFyY2hDZWxsLnNjc3MnOwovLyBUT0RPKFNISU4pOiBCdWcgZXhpc3RzIHRoYXQgY2xlYXJzIHF1ZXJ5IGZyb20gc2VhcmNoIGlucHV0IGR1ZSB0byBjb250ZW50aW9uCi8vIGJldHdlZW4gdXBkYXRlTWFpbGJveCBzdWNjZXNzL3RocmVhZFNlYXJjaAp2YXIgRW1wdHlTZWFyY2hDZWxsID0gZnVuY3Rpb24gKHByb3BzKSB7CiAgICB2YXIgc2VsZWN0ZWRNYWlsYm94ID0gcHJvcHMuc2VsZWN0ZWRNYWlsYm94LCBhY2NvdW50ID0gcHJvcHMuYWNjb3VudDsKICAgIHZhciBzZWFyY2ggPSBzZWxlY3RlZE1haWxib3gucXVlcnk7CiAgICB2YXIgaXNBY2NvdW50U2VhcmNoID0gISFzZWxlY3RlZE1haWxib3guYWNjb3VudDsKICAgIC8vIENvbnN0cnVjdCBzZWFyY2ggc3RyaW5nCiAgICB2YXIgZW1vamkgPSAn8J+SrCc7CiAgICB2YXIgc2VhcmNoU3RyaW5nID0gJ05vIHNlYXJjaCByZXN1bHRzIGZvcjogJzsKICAgIHZhciBxdWVyeVN0cmluZyA9IHNlYXJjaCAmJiAiXCIiICsgc2VhcmNoICsgIlwiIiB8fCAnJzsKICAgIHZhciBhY2NvdW50U3RyaW5nID0gYWNjb3VudCAmJiAoJyBmb3VuZCBpbiAnICsgYWNjb3VudC5kZXNjcmlwdGlvbikgfHwgJyc7CiAgICB2YXIgZGVzY3JpcHRpb25TdHJpbmcgPSBzZWFyY2hTdHJpbmcgKyBxdWVyeVN0cmluZyArIGFjY291bnRTdHJpbmc7CiAgICAvLyBVcGRhdGUgc2VhcmNoLgogICAgLy8gSEFDSyhTSElOKTogU2V0IG1haWxib3ggdG8gcmVtb3ZlIGFjY291bnQgYW5kIHF1ZXJ5LCB0aGVuIHJ1biBzZWFyY2ggYWdhaW4uCiAgICB2YXIgZXhwYW5kU2VhcmNoID0gZnVuY3Rpb24gKCkgewogICAgICAgIHZhciBxdWVyeSA9IHNlbGVjdGVkTWFpbGJveC5xdWVyeTsKICAgICAgICB2YXIgbmV3TWFpbGJveCA9IF9fYXNzaWduKF9fYXNzaWduKHt9LCBzZWxlY3RlZE1haWxib3gpLCB7IHF1ZXJ5OiBxdWVyeSwgYWNjb3VudDogdW5kZWZpbmVkLCBwcm92aWRlclNlYXJjaENvbXBsZXRlOiBmYWxzZSB9KTsKICAgICAgICBwcm9wcy51cGRhdGVNYWlsYm94KG5ld01haWxib3gpOwogICAgICAgIGlmICghIXF1ZXJ5KSB7CiAgICAgICAgICAgIHByb3BzLnVwZGF0ZVNlYXJjaCh7IHF1ZXJ5OiBxdWVyeSwgcHJvdmlkZXI6IHRydWUgfSk7CiAgICAgICAgfQogICAgfTsKICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2IiwgeyBjbGFzc05hbWU6ICJlbXB0eS1zZWFyY2gtY2VsbCIgfSwKICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLCB7IGNsYXNzTmFtZTogImVtb2ppIiB9LCBlbW9qaSksCiAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2IiwgeyBjbGFzc05hbWU6ICJkZXNjcmlwdGlvbiIgfSwgZGVzY3JpcHRpb25TdHJpbmcpLAogICAgICAgIGlzQWNjb3VudFNlYXJjaCAmJgogICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KCJidXR0b24iLCB7IGNsYXNzTmFtZTogImV4cGFuZC1idXR0b24iLCBvbkNsaWNrOiBleHBhbmRTZWFyY2ggfSwgIkV4cGFuZCBzZWFyY2ggdG8gYWxsIGFjY291bnRzIikpKTsKfTsKZXhwb3J0IGRlZmF1bHQgRW1wdHlTZWFyY2hDZWxsOwo="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Threads/components/ThreadList/components/InfiniteThreadList/EmptySearchCell/EmptySearchCell.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Threads/components/ThreadList/components/InfiniteThreadList/EmptySearchCell/EmptySearchCell.tsx"],"names":[],"mappings":";;;;;;;;;;;AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,wBAAwB,CAAC;AAgBhC,+EAA+E;AAC/E,6CAA6C;AAC7C,IAAM,eAAe,GAAG,UAAC,KAAyC;IACxD,IAAA,uCAAe,EAAE,uBAAO,CAAW;IAC3C,IAAM,MAAM,GAAG,eAAe,CAAC,KAAK,CAAC;IACrC,IAAM,eAAe,GAAG,CAAC,CAAC,eAAe,CAAC,OAAO,CAAC;IAElD,0BAA0B;IAC1B,IAAM,KAAK,GAAG,IAAI,CAAC;IACnB,IAAM,YAAY,GAAG,yBAAyB,CAAC;IAC/C,IAAM,WAAW,GAAG,MAAM,IAAI,OAAI,MAAM,OAAG,IAAI,EAAE,CAAC;IAClD,IAAM,aAAa,GAAG,OAAO,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;IAC5E,IAAM,iBAAiB,GAAG,YAAY,GAAG,WAAW,GAAG,aAAa,CAAC;IAErE,iBAAiB;IACjB,8EAA8E;IAC9E,IAAM,YAAY,GAAG;QACnB,IAAM,KAAK,GAAG,eAAe,CAAC,KAAK,CAAC;QACpC,IAAM,UAAU,yBACX,eAAe,KAClB,KAAK,OAAA,EACL,OAAO,EAAE,SAAS,EAClB,sBAAsB,EAAE,KAAK,GAC9B,CAAC;QACF,KAAK,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QAChC,IAAI,CAAC,CAAC,KAAK,EAAE;YACX,KAAK,CAAC,YAAY,CAAC,EAAE,KAAK,OAAA,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;SAC/C;IACH,CAAC,CAAC;IAEF,OAAO,CACL,6BAAK,SAAS,EAAC,mBAAmB;QAChC,6BAAK,SAAS,EAAC,OAAO,IACnB,KAAK,CACF;QACN,6BAAK,SAAS,EAAC,aAAa,IACzB,iBAAiB,CACd;QACL,eAAe;YACd,gCACE,SAAS,EAAC,eAAe,EACzB,OAAO,EAAE,YAAY,oCAGd,CAEP,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,eAAe,CAAC","sourcesContent":["import React from 'react';\nimport { Mailbox, Account } from '@src/types';\nimport './EmptySearchCell.scss';\nimport { ThreadSearchMeta } from '@src/ducks/threads';\n\nexport interface Props {\n  selectedMailbox: Mailbox;\n}\n\nexport interface StateProps {\n  account?: Account;\n}\n\nexport interface DispatchProps {\n  updateSearch: (meta: ThreadSearchMeta) => void;\n  updateMailbox: (mailbox: Mailbox) => void;\n}\n\n// TODO(SHIN): Bug exists that clears query from search input due to contention\n// between updateMailbox success/threadSearch\nconst EmptySearchCell = (props: Props & DispatchProps & StateProps) => {\n  const { selectedMailbox, account } = props;\n  const search = selectedMailbox.query;\n  const isAccountSearch = !!selectedMailbox.account;\n\n  // Construct search string\n  const emoji = 'ðŸ’¬';\n  const searchString = 'No search results for: ';\n  const queryString = search && `\"${search}\"` || '';\n  const accountString = account && (' found in ' + account.description) || '';\n  const descriptionString = searchString + queryString + accountString;\n\n  // Update search.\n  // HACK(SHIN): Set mailbox to remove account and query, then run search again.\n  const expandSearch = () => {\n    const query = selectedMailbox.query;\n    const newMailbox: Mailbox = {\n      ...selectedMailbox,\n      query,\n      account: undefined,\n      providerSearchComplete: false,\n    };\n    props.updateMailbox(newMailbox);\n    if (!!query) {\n      props.updateSearch({ query, provider: true });\n    }\n  };\n\n  return (\n    <div className=\"empty-search-cell\">\n      <div className=\"emoji\">\n        {emoji}\n      </div>\n      <div className=\"description\">\n        {descriptionString}\n      </div>\n      {isAccountSearch &&\n        <button\n          className=\"expand-button\"\n          onClick={expandSearch}\n        >\n          Expand search to all accounts\n        </button>\n      }\n    </div>\n  );\n};\n\nexport default EmptySearchCell;\n"]}]}