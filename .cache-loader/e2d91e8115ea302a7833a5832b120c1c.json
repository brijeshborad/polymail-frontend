{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Mentions/components/SharedThreadList/SharedThreadList.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Mentions/components/SharedThreadList/SharedThreadList.tsx","mtime":1675280254082},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Mentions/components/SharedThreadList/SharedThreadList.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Mentions/components/SharedThreadList/SharedThreadList.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Resource,\n  Thread,\n  Me,\n  TeamMembers,\n  KeyCode,\n  Onboarding,\n  HotkeyActions,\n} from '@src/types';\nimport {\n  SharedThread,\n  SharedThreadFilter,\n  SharedThreadsMode,\n  SharedThreadFilterMode,\n} from '@src/types/sharedThreads';\nimport SharedThreadCell from './SharedThreadCell';\nimport './SharedThreadList.scss';\nimport Resizable, { NumberSize } from 're-resizable';\nimport browserHistory from '@src/lib/browserHistory';\nimport SearchInput from '@src/components/Form/SearchInput/SearchInput';\nimport Disclosure from '@src/components/Icons/Disclosure.svg';\nimport FilterPopover from '@src/routes/Threads/components/ThreadList/components/FilterPopover';\nimport { checkNextHotkeyChange, getHotkey, HotkeyAction } from '@src/lib/hotkeys';\nimport { OnboardingPatchMeta } from '@src/ducks/me';\n\nexport interface StateProps {\n  sharedThreads: SharedThread[];\n  threads: {\n    [id: string]: Resource<Thread>;\n  };\n  me?: Me;\n  width?: number;\n  selectedSharedThread?: string;\n  teamMembers: TeamMembers;\n  filter: SharedThreadFilter;\n  sharedThreadsFetched: boolean;\n  isEmpty: boolean;\n  onboarding?: Onboarding;\n  hotkeyActions: HotkeyActions;\n}\n\nexport interface OwnProps {\n  mode: SharedThreadsMode;\n}\n\nexport interface DispatchProps {\n  setWidth: (width: number) => void;\n  filterSharedThreads: (filter: SharedThreadFilter) => void;\n  filterUserSharedThreads: (filter: SharedThreadFilter) => void;\n  selectSharedThread: (id: string) => void;\n  updateSharedThread: (s: SharedThread) => void;\n  updateOnboarding: (m: OnboardingPatchMeta) => void;\n}\n\ninterface State {\n  sharedThreads: SharedThread[];\n}\n\nconst FILTERS = ['New', 'Unread', 'Done'];\nconst USER_FILTERS = ['New', 'Comments', 'Done', 'All'];\nconst HEADER_HEIGHT = 62;\nconst SEARCH_HEIGHT = 30;\n\n// TODO(SHIN): Handle empty state deletion where shared thread reappears when list is called again\nclass SharedThreadList extends React.PureComponent<OwnProps & StateProps & DispatchProps, State> {\n  private filterPopover: FilterPopover;\n  private timeout: NodeJS.Timer;\n  private searchInput: SearchInput;\n\n  constructor(props: DispatchProps & StateProps & OwnProps) {\n    super(props);\n\n    const { sharedThreads, sharedThreadsFetched } = props;\n\n    this.state = {\n      sharedThreads: sharedThreadsFetched ? sharedThreads : [],\n    };\n  }\n\n  componentDidMount() {\n    const { mode, updateOnboarding, onboarding } = this.props;\n    this.handleFocus();\n\n    document.body.addEventListener('focus', this.handleFocus);\n\n    // Update onboarding\n    if (onboarding && !onboarding.sharedThreadsTabGem && mode === SharedThreadsMode.User) {\n      updateOnboarding({\n        skipped: false,\n        type: {\n          sharedThreadsTabGem: true,\n        },\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    document.body.removeEventListener('focus', this.handleFocus);\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: DispatchProps & StateProps) {\n    if (nextProps.sharedThreads !== this.props.sharedThreads && nextProps.sharedThreadsFetched) {\n      this.setState({\n        sharedThreads: nextProps.sharedThreads,\n      });\n    }\n  }\n\n  // HACK(SHIN): Update focus behavior to not rely on resetting ThreadList on componentDidUpdate\n  componentDidUpdate(oldProps: StateProps & DispatchProps) {\n    const { hotkeyActions } = this.props;\n\n    // Handles search hotkey\n    const newActions = hotkeyActions;\n    const oldActions = oldProps.hotkeyActions;\n    if (newActions !== oldActions) {\n      if (checkNextHotkeyChange(HotkeyAction.Search, newActions, oldActions)) {\n        this.searchInput.focus(true);\n        return;\n      }\n    }\n  }\n\n  handleSearchInputRef = (ref: SearchInput) => {\n    this.searchInput = ref;\n  }\n\n  computeFilters = (mode: SharedThreadsMode) => {\n    switch (mode) {\n      case SharedThreadsMode.Mentions:\n        return FILTERS;\n      case SharedThreadsMode.User:\n        return USER_FILTERS;\n      default:\n        return FILTERS;\n    }\n  }\n\n  handleFocus = () => {\n    const node = document.getElementsByClassName('shared-thread-list-main');\n    if (node.length) {\n      (node[0] as HTMLElement).focus();\n    }\n  }\n\n  handleResizeStop = (\n    event: MouseEvent,\n    direction: string,\n    refToElement: HTMLElement,\n    delta: NumberSize,\n  ) => {\n    const { setWidth } = this.props;\n\n    if (refToElement.clientWidth) {\n      setWidth(refToElement.clientWidth);\n    }\n  }\n\n  handleCellClick = (id: string) => {\n    const pathname = browserHistory.location.pathname;\n    if (pathname && pathname.startsWith('/mentions')) {\n      browserHistory.push(`/mentions/${id}`);\n    } else {\n      browserHistory.push(`/sharedThreads/${id}`);\n    }\n  }\n\n  // Handle Switched handling of mode update\n  handleFilterUpdate = (filter: SharedThreadFilter) => {\n    const { filterUserSharedThreads, filterSharedThreads, mode } = this.props;\n\n    if (mode === SharedThreadsMode.User) {\n      filterUserSharedThreads(filter);\n      return;\n    }\n\n    filterSharedThreads(filter);\n  }\n\n  handleSearch = (query: string, complete: boolean) => {\n    const { filter } = this.props;\n    const updatedFilter = { ...filter, query };\n    this.handleFilterUpdate(updatedFilter);\n  }\n\n  handleSearchClear = () => {\n    const { filter } = this.props;\n    const updatedFilter = { ...filter, query: undefined };\n    this.handleFilterUpdate(updatedFilter);\n  }\n\n  showFilterPopover = () => {\n    this.filterPopover.show();\n  }\n\n  handleFilterPopoverRef = (ref: FilterPopover) => {\n    this.filterPopover = ref;\n  }\n\n  handleFilterSelect = (newFilter: string) => {\n    const { filter } = this.props;\n    const lowercaseFilter = newFilter.toLowerCase();\n\n    // Reset to default states\n    let updatedFilter: SharedThreadFilter = {\n      ...filter,\n      mode: SharedThreadFilterMode.New,\n    };\n\n    // Handle Filter Cases for Done\n    if (lowercaseFilter === 'done') {\n      updatedFilter = { ...filter, mode: SharedThreadFilterMode.Archive };\n    }\n\n    // Handle Filter Cases for 'comments\n    if (lowercaseFilter === 'comments') {\n      updatedFilter = { ...filter, mode: SharedThreadFilterMode.Comments };\n    }\n\n    // Handle Filter Case for All\n    if (lowercaseFilter === 'all') {\n      updatedFilter = { ...filter, mode: SharedThreadFilterMode.All };\n    }\n\n    // Handle Filter Case for Unread\n    if (lowercaseFilter === 'unread') {\n      updatedFilter = { ...filter, mode: SharedThreadFilterMode.Unread };\n    }\n\n    // Emit Filter update\n    this.handleFilterUpdate(updatedFilter);\n  }\n\n  // TODO(SHIN): See if we should change browserHistory and implications of immediate select\n  handleKeyDown = (e: React.KeyboardEvent<HTMLElement>) => {\n    const {\n      selectSharedThread,\n      selectedSharedThread,\n      updateSharedThread,\n    } = this.props;\n    const { sharedThreads } = this.state;\n    let handled = false;\n\n    if (document.activeElement && (document.activeElement.tagName === 'INPUT' ||\n      document.activeElement.tagName === 'TEXTAREA')) {\n      return;\n    }\n\n    const hotkey = getHotkey(e);\n    switch (hotkey && hotkey.name || e.keyCode) {\n      case HotkeyAction.NextThread:\n      case KeyCode.J:\n        if (selectedSharedThread && sharedThreads && sharedThreads.length) {\n          const index = sharedThreads.findIndex(st => st.id === selectedSharedThread);\n          if (index < sharedThreads.length - 1 && index > -1) {\n            selectSharedThread(sharedThreads[index + 1].id);\n            this.handleCellClick(sharedThreads[index + 1].id);\n          }\n          handled = true;\n        }\n        break;\n      case HotkeyAction.PreviousThread:\n      case KeyCode.K:\n        if (selectedSharedThread && sharedThreads && sharedThreads.length) {\n          const index = sharedThreads.findIndex(st => st.id === selectedSharedThread);\n          if (index > 0) {\n            selectSharedThread(sharedThreads[index - 1].id);\n            this.handleCellClick(sharedThreads[index - 1].id);\n          }\n          handled = true;\n        }\n        break;\n      case HotkeyAction.Archive:\n        if (selectedSharedThread && sharedThreads) {\n          const selected = sharedThreads.find(s => s.id === selectedSharedThread);\n          const index = sharedThreads.findIndex(st => st.id === selectedSharedThread);\n          const cell = document.getElementById(`shared-thread-cell-${selectedSharedThread}`);\n          if (selected && cell) {\n            cell.classList.add('unmounting');\n            this.timeout = global.setTimeout(\n              () => {\n                if (index < sharedThreads.length - 1 && index > -1) {\n                  selectSharedThread(sharedThreads[index + 1].id);\n                  browserHistory.push(`/mentions/${sharedThreads[index + 1].id}`);\n                }\n                updateSharedThread({\n                  ...selected,\n                  archived: !selected.archived,\n                });\n              },\n              600,\n            );\n            handled = true;\n          }\n        }\n        break;\n      default:\n        break;\n    }\n\n    if (handled) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  }\n\n  renderEmpty = () => {\n    const {\n      filter,\n      isEmpty,\n      mode,\n    } = this.props;\n    const search = filter && filter.query;\n    let emoji = '💬';\n    let description = !!search\n      ? 'No search results for:'\n      : 'Conversations that you\\'ve been mentioned in will show up here';\n\n    let learnMoreCopy = 'Learn more about mentions';\n    let learnMoreHref = 'http://help.polymail.io/features/comments-and-mentions';\n    if (mode === SharedThreadsMode.User) {\n      description = 'Conversations that you\\'ve shared will show up here';\n      learnMoreCopy = 'Learn more about shared conversations';\n      learnMoreHref = 'https://help.polymail.io/articles/2156127-shared-conversations';\n    }\n\n    if (!search && !isEmpty) {\n      switch (mode) {\n        case SharedThreadsMode.Mentions:\n          // Handle alternative empty states when search is not active\n          if (filter.mode === SharedThreadFilterMode.Archive) {\n            emoji = '✅';\n            description = 'Conversations you\\'ve marked as Done will show up here.';\n          } else if (filter.mode === SharedThreadFilterMode.Unread) {\n            emoji = '✨';\n            description = 'No new unread Conversations. You\\'re all caught up!';\n          } else {\n            emoji = '🎉';\n            description = 'Nice! You\\'re up to date with your Conversations.';\n          }\n          break;\n        case SharedThreadsMode.User:\n        // Handle alternative empty states when search is not active\n          if (filter.mode === SharedThreadFilterMode.Archive) {\n            emoji = '✅';\n            description = 'Conversations you\\'ve marked as Done will show up here.';\n          } else if (filter.mode === SharedThreadFilterMode.Unread) {\n            emoji = '✨';\n            description = 'No new unread Conversations. You\\'re all caught up!';\n          } else {\n            emoji = '🎉';\n            description = 'Conversations that you\\'ve shared will show up here.';\n          }\n          break;\n        default:\n          break;\n      }\n    }\n\n    return (\n      <div className=\"empty-state\">\n        <div className=\"emoji\">\n          {emoji}\n        </div>\n        <div className=\"description\">\n          {description}\n          {!!search &&\n            <br/>\n          }\n          {!!search &&\n            `\"${search}\"`\n          }\n        </div>\n        {!search &&\n          <a\n            className=\"learn-more\"\n            href={learnMoreHref}\n            target=\"_blank\"\n          >\n            {learnMoreCopy}\n          </a>\n        }\n      </div>\n    );\n  }\n\n  render() {\n    const {\n      me,\n      width,\n      selectedSharedThread,\n      teamMembers,\n      filter,\n      sharedThreadsFetched,\n      mode,\n    } = this.props;\n    const { sharedThreads } = this.state;\n    let filterText = 'New';\n    const { query } = filter;\n\n    // Handle Filter text\n    switch (filter.mode) {\n      case SharedThreadFilterMode.Archive:\n        filterText = 'Done';\n        break;\n      case SharedThreadFilterMode.Comments:\n        filterText = 'Comments';\n        break;\n      case SharedThreadFilterMode.New:\n        filterText = 'New';\n        break;\n      case SharedThreadFilterMode.Unread:\n        filterText = 'Unread';\n        break;\n      case SharedThreadFilterMode.All:\n        filterText = 'All';\n        break;\n      default:\n        break;\n    }\n\n    // TODO(SHIN): Handle Shared Thread Filter\n    let headerTitle = 'Mentions';\n    if (mode === SharedThreadsMode.User) {\n      headerTitle = 'Shared by Me';\n    }\n\n    return (\n      <Resizable\n        className=\"shared-thread-list\"\n        enable={{\n          top: false,\n          right: true,\n          bottom: false,\n          left: false,\n          topRight: false,\n          bottomRight: false,\n          bottomLeft: false,\n          topLeft: false,\n        }}\n        defaultSize={{\n          width: width || 300,\n          height: 'auto',\n        }}\n        onResizeStop={this.handleResizeStop}\n      >\n        <div\n          className=\"shared-thread-list-main\"\n          onKeyDown={this.handleKeyDown}\n          tabIndex={-1}\n        >\n          <SearchInput\n            ref={this.handleSearchInputRef}\n            onSearch={this.handleSearch}\n            search={query}\n            key=\"search-input\"\n            height={SEARCH_HEIGHT}\n            defaultValue={query}\n            onClear={this.handleSearchClear}\n            placeholder=\"Search Mentions\"\n          />\n          <div className=\"header\" style={{ height: HEADER_HEIGHT }}>\n            <h4>{headerTitle}</h4>\n            <button onClick={this.showFilterPopover}>\n              {filterText}<Disclosure className=\"disclosure\"/>\n            </button>\n          </div>\n          <FilterPopover\n            ref={this.handleFilterPopoverRef}\n            filters={this.computeFilters(mode)}\n            onFilterSelect={this.handleFilterSelect}\n            selectedFilter={filterText}\n          />\n          <div className=\"main\">\n            {me && sharedThreadsFetched && (!sharedThreads || sharedThreads.length === 0) &&\n              this.renderEmpty()\n            }\n            {me && sharedThreads\n              .map((st: SharedThread) => {\n                return (\n                  <SharedThreadCell\n                    key={st.id}\n                    sharedThreadId={st.id}\n                    me={me}\n                    onClick={this.handleCellClick}\n                    selected={selectedSharedThread === st.id}\n                    member={st.lastAuthor ? teamMembers[st.lastAuthor] : undefined}\n                  />\n                );\n              })}\n            </div>\n        </div>\n      </Resizable>\n    );\n  }\n}\n\nexport default SharedThreadList;\n"]}]}