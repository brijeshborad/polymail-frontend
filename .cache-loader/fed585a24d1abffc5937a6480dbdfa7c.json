{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Login/components/SignupPane/index.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Login/components/SignupPane/index.ts","mtime":1675280254079},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IFNpZ251cFBhbmUgZnJvbSAnLi9TaWdudXBQYW5lJzsKaW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4JzsKaW1wb3J0IHsgbWVDcmVhdGUgfSBmcm9tICdAc3JjL2R1Y2tzL21lJzsKaW1wb3J0IHsgYXV0aE9BdXRoTG9naW4gfSBmcm9tICdAc3JjL2R1Y2tzL2F1dGgnOwppbXBvcnQgeyB0b2FzdFNldCB9IGZyb20gJ0BzcmMvZHVja3MvdG9hc3RzJzsKdmFyIG1hcFN0YXRlVG9Qcm9wcyA9IGZ1bmN0aW9uIChzdGF0ZSkgewogICAgcmV0dXJuIHsKICAgICAgICBsb2FkaW5nOiBzdGF0ZS5zaWduVXBQZW5kaW5nLAogICAgICAgIHVuc3Vic2NyaWJlcjogc3RhdGUudW5zdWJzY3JpYmVyU2lnbnVwIHx8IGZhbHNlLAogICAgfTsKfTsKdmFyIG1hcERpc3BhdGNoVG9Qcm9wcyA9IGZ1bmN0aW9uIChkaXNwYXRjaCkgeyByZXR1cm4gKHsKICAgIHNpZ251cDogZnVuY3Rpb24gKG1lKSB7IHJldHVybiBkaXNwYXRjaChtZUNyZWF0ZShtZSkpOyB9LAogICAgc2V0VG9hc3Q6IGZ1bmN0aW9uIChlKSB7IHJldHVybiBkaXNwYXRjaCh0b2FzdFNldChlKSk7IH0sCiAgICBsb2dpbk9BdXRoOiBmdW5jdGlvbiAodHlwZSkgeyByZXR1cm4gZGlzcGF0Y2goYXV0aE9BdXRoTG9naW4oeyB0eXBlOiB0eXBlIH0pKTsgfSwKfSk7IH07CmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QobWFwU3RhdGVUb1Byb3BzLCBtYXBEaXNwYXRjaFRvUHJvcHMpKFNpZ251cFBhbmUpOwo="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Login/components/SignupPane/index.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Login/components/SignupPane/index.ts"],"names":[],"mappings":"AAAA,OAAO,UAAyC,MAAM,cAAc,CAAC;AACrE,OAAO,EAAE,OAAO,EAAY,MAAM,aAAa,CAAC;AAEhD,OAAO,EAAE,QAAQ,EAAgB,MAAM,eAAe,CAAC;AACvD,OAAO,EAAE,cAAc,EAAE,MAAM,iBAAiB,CAAC;AACjD,OAAO,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAG7C,IAAM,eAAe,GAAG,UAAC,KAAiB;IACxC,OAAO;QACL,OAAO,EAAE,KAAK,CAAC,aAAa;QAC5B,YAAY,EAAE,KAAK,CAAC,kBAAkB,IAAI,KAAK;KAChD,CAAC;AACJ,CAAC,CAAC;AAEF,IAAM,kBAAkB,GAAG,UAAC,QAAuB,IAAoB,OAAA,CAAC;IACtE,MAAM,EAAE,UAAC,EAAgB,IAAK,OAAA,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,EAAtB,CAAsB;IACpD,QAAQ,EAAE,UAAC,CAAQ,IAAK,OAAA,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAArB,CAAqB;IAC7C,UAAU,EAAE,UAAC,IAAe,IAAK,OAAA,QAAQ,CAAC,cAAc,CAAC,EAAE,IAAI,MAAA,EAAE,CAAC,CAAC,EAAlC,CAAkC;CACpE,CAAC,EAJqE,CAIrE,CAAC;AAEH,eAAe,OAAO,CAAC,eAAe,EAAE,kBAAkB,CAAC,CAAC,UAAU,CAAC,CAAC","sourcesContent":["import SignupPane, { DispatchProps, StateProps } from './SignupPane';\nimport { connect, Dispatch } from 'react-redux';\n\nimport { meCreate, MeCreateMeta } from '@src/ducks/me';\nimport { authOAuthLogin } from '@src/ducks/auth';\nimport { toastSet } from '@src/ducks/toasts';\nimport { OAuthType, StoreState } from '@src/types';\n\nconst mapStateToProps = (state: StoreState): StateProps => {\n  return {\n    loading: state.signUpPending,\n    unsubscriber: state.unsubscriberSignup || false,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>): DispatchProps => ({\n  signup: (me: MeCreateMeta) => dispatch(meCreate(me)),\n  setToast: (e: Error) => dispatch(toastSet(e)),\n  loginOAuth: (type: OAuthType) => dispatch(authOAuthLogin({ type })),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignupPane);\n"]}]}