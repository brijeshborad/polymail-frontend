{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/templates.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/templates.ts","mtime":1675280254059},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/templates.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/templates.ts"],"names":[],"mappings":"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","sourcesContent":["import { Observable } from 'rxjs';\nimport { Deps } from '@src/lib/epic';\nimport { Epic } from 'redux-observable';\nimport Cache, { Stores } from '@src/lib/db';\n\nimport {\n  StoreState,\n  Action,\n  ActionStatus,\n  Template,\n  Attachment,\n  AttachmentMeta,\n} from '@src/types';\n\nimport {\n  TEMPLATE_LIST, templateList,\n  TEMPLATE_CREATE, templateCreate,\n  TEMPLATE_UPDATE, templateUpdate,\n  TEMPLATE_DELETE, templateDelete,\n  TEMPLATE_ATTACHMENT_ADD, templateAttachmentAdd,\n  TEMPLATE_ATTACHMENT_REMOVE, templateAttachmentRemove,\n  TEMPLATE_SHARE, TemplateShareMeta, templateShare,\n  TEMPLATE_CONVERT,\n  TemplateAttachmentConversionMeta,\n  templateAttachmentConvert,\n  TEMPLATE_ATTACHMENT_CONVERT,\n} from '@src/ducks/templates';\nimport { DB_READY } from '@src/ducks/db';\nimport browserHistory from '@src/lib/browserHistory';\nimport { ApiError } from '@src/api/base';\nimport { toastSet } from '@src/ducks/toasts';\nimport { recordEvent, UserEvents } from '@src/lib/analytics';\nimport { attachmentMetaUpdate } from '@src/ducks/drafts';\nimport { handleTemplateConversions } from '@src/lib/template';\nimport { commandControlHide } from '@src/ducks/commandControl';\n\n// DB ready triggers list of templates\nexport const dbReadyTriggerListTemplate: Epic<Action<string, Template[]>, StoreState> =\n  action$ =>\n    action$\n      .ofType(DB_READY)\n      .map(() => templateList(''));\n\nexport const listTemplates: Epic<Action<string, Template[]>, StoreState> =\n  action$ =>\n  action$.ofType(TEMPLATE_LIST)\n    .filter(action => action.status === ActionStatus.Start)\n    .flatMap(action =>\n      Cache.list<Template>(Stores.Templates)\n        .map((templates: Template[]) => templateList('', templates)),\n    );\n\nexport const templateUpdateEpic: Epic<\nAction<Template|Error|null, Template|null>, StoreState, Deps\n> =\n  (action$, store, deps) =>\n    action$.ofType(TEMPLATE_UPDATE)\n    .filter(action => action.status === ActionStatus.Start)\n    .flatMap((action: Action<Template, Template>) =>\n      deps.templates.update(action.meta)\n        .map((template: Template) => templateUpdate(action.meta, template))\n        .catch((e: Error) => Observable.merge(\n          Observable.of(templateUpdate(action.meta, e)),\n          Observable.of(toastSet(e)),\n        )),\n    );\n\nexport const templateCreateEpic: Epic<\n  Action<Template|Error|null, Template|null>, StoreState, Deps\n> =\n  (action$, store, deps) =>\n    action$.ofType(TEMPLATE_CREATE)\n      .filter(action => action.status === ActionStatus.Start)\n      .do(action => recordEvent(UserEvents.TemplateCreated))\n      .flatMap((action: Action<Template, Template>) =>\n        deps.templates.create(action.meta)\n          .map(template => templateCreate(action.meta, template))\n          .catch(e =>\n            Observable.merge(\n              Observable.of(templateCreate(action.meta, e)),\n              Observable.of(toastSet(e)),\n            ),\n          ),\n      );\n\n// Handles converting a template, and it's attachments, into a new template. Navigates on complete\nexport const templateConvertEpic: Epic<\n  Action<Template|TemplateAttachmentConversionMeta|undefined, Template|Attachment[]|void>,\n  StoreState, Deps\n> =\n  (action$, store, deps) =>\n    action$.ofType(TEMPLATE_CONVERT)\n      .filter(action => action.status === ActionStatus.Start)\n      .do(action => recordEvent(UserEvents.TemplateCreated))\n      .flatMap((action: Action<Template, Template>) => {\n        const conversions = handleTemplateConversions(action.meta, action.meta.attachments);\n        return deps.templates.create(conversions.template)\n          .flatMap((template) => {\n            const attachmentsConversionMeta: TemplateAttachmentConversionMeta = {\n              template: template.id,\n              attachments: conversions.attachments,\n            };\n\n            return Observable.merge(\n              Observable.of(templateCreate(action.meta, template)),\n              Observable.of(templateAttachmentConvert(attachmentsConversionMeta)),\n              Observable.of(commandControlHide(undefined)),\n            );\n          })\n          .catch(e => Observable.of(templateCreate(action.meta, e)));\n      });\n\nexport const templateAttachmentConversionEpic: Epic<\n  Action<TemplateAttachmentConversionMeta|AttachmentMeta, Attachment[]|Attachment>, StoreState, Deps\n> = (action$, store, deps) =>\n    action$.ofType(TEMPLATE_ATTACHMENT_CONVERT)\n      .filter(action => action.status === ActionStatus.Start)\n      .flatMap((action: Action<TemplateAttachmentConversionMeta, Attachment>) => {\n        const attachmentUploadRequests = action.meta.attachments\n          .map(a =>\n            deps.templates.addAttachment(\n              action.meta.template,\n              a.id,\n              a.filename,\n              a.cloudFile,\n              a.inline,\n              a.cloud,\n            )\n            .flatMap((attachment: Attachment) => {\n              return Observable.of(\n                templateAttachmentAdd(\n                  { resourceId: action.meta.template, attachment: attachment.id },\n                  attachment,\n                ),\n              );\n            }),\n          );\n        return Observable.merge(...attachmentUploadRequests);\n      });\n\nexport const templateCreateSuccessRedirect: Epic<Action<Template, Template>, StoreState, Deps> =\n  (action$, store, deps) =>\n    action$.ofType(TEMPLATE_CREATE)\n      .filter(action => action.status === ActionStatus.Success)\n      .do(action => browserHistory.replace(`/templates/${action.payload!.id}`))\n      .filter(() => false);\n\nexport const templateDeleteEpic: Epic<Action<Template, string>, StoreState, Deps> =\n  (action$, store, deps) =>\n  action$.ofType(TEMPLATE_DELETE)\n    .filter(action => action.status === ActionStatus.Start)\n    .flatMap(action =>\n      deps.templates.delete(action.meta)\n        .map(() => templateDelete(action.meta, action.meta.id))\n        .catch((e) => {\n          // handle 404 as completion\n          if (e as ApiError && e.code === 404) {\n            return Observable.of(templateDelete(action.meta, action.meta.id));\n          }\n\n          throw e;\n        })\n        .catch(e => Observable.of(templateDelete(action.meta, e))),\n    );\n\n// TODO(SHIN): Handle cloud & inline attachments\nexport const templateAttachmentAddEpic: Epic<\n  Action<AttachmentMeta, Attachment|AttachmentMeta>, StoreState, Deps\n> = (action$, store, deps) =>\n  action$.ofType(TEMPLATE_ATTACHMENT_ADD)\n    .filter(action => action.status === ActionStatus.Start)\n    .flatMap(action =>\n      deps.templates.uploadAttachment(\n        action.meta.resourceId,\n        action.meta.attachment,\n        action.meta.file!,\n        action.meta.inline || false,\n        action.meta.cloud || false,\n      )\n      .flatMap((attachmentOrProgress) => {\n        if (typeof attachmentOrProgress === 'number') {\n          return Observable.of(attachmentMetaUpdate({\n            ...action.meta,\n            progress: attachmentOrProgress,\n          }));\n        }\n\n        return Observable.of(templateAttachmentAdd(action.meta, attachmentOrProgress));\n      })\n      .catch(e => Observable.of(templateAttachmentAdd(action.meta, e))),\n    );\n\nexport const templateAttachmentRemoveEpic: Epic<Action<AttachmentMeta, null>, StoreState, Deps> =\n  (action$, store, deps) =>\n    action$.ofType(TEMPLATE_ATTACHMENT_REMOVE)\n      .filter(action => action.status === ActionStatus.Start)\n      .flatMap(action =>\n        deps.templates.removeAttachment(action.meta.resourceId, action.meta.attachment)\n          .map(() => templateAttachmentRemove(action.meta, null))\n          .catch((e) => {\n            // handle 404 as completion\n            if (e as ApiError && e.code === 404) {\n              return Observable.of(templateAttachmentRemove(action.meta, null));\n            }\n\n            throw e;\n          })\n          .catch(e => Observable.of(templateAttachmentRemove(action.meta, e))),\n      );\n\nexport const shareTemplate: Epic<\n  Action<TemplateShareMeta|Error|null, Template|null>, StoreState, Deps\n> =\n  (action$, store, deps) =>\n    action$.ofType(TEMPLATE_SHARE)\n      .filter(action => action.status === ActionStatus.Start)\n      .flatMap((action: Action<TemplateShareMeta, Template>) =>\n        deps.templates\n          .share(action.meta.templateId, action.meta.teamId)\n          .map(template => templateShare(action.meta, template))\n          .catch(e => Observable.of(toastSet(e))),\n      );\n\nexport default [\n  dbReadyTriggerListTemplate,\n  listTemplates,\n  templateCreateEpic,\n  templateCreateSuccessRedirect,\n  templateUpdateEpic,\n  templateDeleteEpic,\n  templateAttachmentAddEpic,\n  templateAttachmentRemoveEpic,\n  shareTemplate,\n  templateConvertEpic,\n  templateAttachmentConversionEpic,\n];\n"]}]}