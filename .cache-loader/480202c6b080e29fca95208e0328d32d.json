{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/ThreadDetail/components/Cell/ExpandedCell/index.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/ThreadDetail/components/Cell/ExpandedCell/index.tsx","mtime":1675280254038},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4JzsKaW1wb3J0IHsgc2VsZWN0VHJhY2ssIHRyYWNrRmV0Y2ggfSBmcm9tICdAc3JjL2R1Y2tzL3RyYWNrcyc7CmltcG9ydCB7IHNlbGVjdENvbnRhY3QgfSBmcm9tICdAc3JjL2R1Y2tzL2NvbnRhY3RzJzsKaW1wb3J0IHsgZHJhZnRDcmVhdGVDb25maWd1cmF0aW9uLCBzZWxlY3REcmFmdCwgc2VsZWN0RHJhZnRGb3JUaHJlYWQsIHNlbGVjdEF0dGFjaG1lbnRNZXRhc0ZvclJlc291cmNlLCBkcmFmdFNlbmRVbmRvLCB9IGZyb20gJ0BzcmMvZHVja3MvZHJhZnRzJzsKaW1wb3J0IHsgT25ib2FyZGluZ1R5cGUsIERyYWZ0U3RhdHVzLCB9IGZyb20gJ0BzcmMvdHlwZXMnOwppbXBvcnQgRXhwYW5kZWRDZWxsIGZyb20gJy4vRXhwYW5kZWRDZWxsJzsKaW1wb3J0IHsgb25ib2FyZGluZ1BhdGNoLCBzZWxlY3RPbmJvYXJkaW5nU2hvdyB9IGZyb20gJ0BzcmMvZHVja3MvbWUnOwppbXBvcnQgeyBzaGFyZWRUaHJlYWRDcmVhdGUgfSBmcm9tICdAc3JjL2R1Y2tzL3NoYXJlZFRocmVhZHMnOwppbXBvcnQgeyBob3RrZXlVcGRhdGUsIGhvdGtleVN1Z2dlc3QgfSBmcm9tICdAc3JjL2R1Y2tzL2hvdGtleXMnOwppbXBvcnQgeyBzaGFyZUxpbmtDcmVhdGUgfSBmcm9tICdAc3JjL2R1Y2tzL3NoYXJlTGlua3MnOwppbXBvcnQgeyB0b2FzdFNldCB9IGZyb20gJ0BzcmMvZHVja3MvdG9hc3RzJzsKdmFyIG1hcFN0YXRlVG9Qcm9wcyA9IGZ1bmN0aW9uIChzdGF0ZSwgb3duUHJvcHMpIHsKICAgIHZhciB0cmFjayA9IHNlbGVjdFRyYWNrKHN0YXRlLCBvd25Qcm9wcy50aHJlYWRJZCwgb3duUHJvcHMubWVzc2FnZS5pZCk7CiAgICAvLyBTZXQgZHJhZnQgYmFzZWQgb2ZmIG9mIHNlbGVjdG9ycwogICAgdmFyIGRyYWZ0ID0gc3RhdGUuc2VsZWN0ZWREcmFmdCAmJiBzZWxlY3REcmFmdChzdGF0ZSwgc3RhdGUuc2VsZWN0ZWREcmFmdCkuZGF0YTsKICAgIGlmICghZHJhZnQgJiYgc3RhdGUuc2VsZWN0ZWRUaHJlYWQpIHsKICAgICAgICBkcmFmdCA9IHNlbGVjdERyYWZ0Rm9yVGhyZWFkKHN0YXRlLCBzdGF0ZS5zZWxlY3RlZFRocmVhZC5pZCwgW0RyYWZ0U3RhdHVzLlN0YWdlZF0pLmRhdGE7CiAgICB9CiAgICB2YXIgYXR0YWNobWVudE1ldGFDb3VudDsKICAgIGlmIChkcmFmdCAmJiBkcmFmdC5zdGF0dXMgPT09IERyYWZ0U3RhdHVzLlN0YWdlZCkgewogICAgICAgIGF0dGFjaG1lbnRNZXRhQ291bnQgPSBzZWxlY3RBdHRhY2htZW50TWV0YXNGb3JSZXNvdXJjZShzdGF0ZSwgZHJhZnQuaWQpOwogICAgfQogICAgcmV0dXJuIHsKICAgICAgICB0cmFjazogdHJhY2sgPyB0cmFjayA6IHVuZGVmaW5lZCwKICAgICAgICBzZW5kZXI6IHNlbGVjdENvbnRhY3Qoc3RhdGUsIG93blByb3BzLm1lc3NhZ2UuZnJvbSksCiAgICAgICAgYmxvY2tUcmFja2luZzogc3RhdGUucHJlZmVyZW5jZXMuYmxvY2tUcmFja2luZ1BpeGVscywKICAgICAgICBtZTogc3RhdGUubWUuZGF0YSwKICAgICAgICBmZWF0dXJlczogc3RhdGUuZmVhdHVyZXMsCiAgICAgICAgc2hvd1RyYWNraW5nT25ib2FyZGluZzogIXN0YXRlLnNlbGVjdGVkU2hhcmVkVGhyZWFkICYmCiAgICAgICAgICAgIHNlbGVjdE9uYm9hcmRpbmdTaG93KHN0YXRlLCBPbmJvYXJkaW5nVHlwZS5UaHJlYWREZXRhaWxUcmFja2luZyksCiAgICAgICAgc2hhcmVkVGhyZWFkOiBzdGF0ZS5zZWxlY3RlZFNoYXJlZFRocmVhZCwKICAgICAgICBhdHRhY2htZW50TWV0YUNvdW50OiBhdHRhY2htZW50TWV0YUNvdW50ICYmIGF0dGFjaG1lbnRNZXRhQ291bnQubGVuZ3RoIHx8IHVuZGVmaW5lZCwKICAgICAgICBpc09mZmxpbmU6ICFzdGF0ZS5pc09ubGluZSwKICAgICAgICBkcmFmdDogZHJhZnQsCiAgICB9Owp9Owp2YXIgbWFwRGlzcGF0Y2hUb1Byb3BzID0gZnVuY3Rpb24gKGRpc3BhdGNoKSB7IHJldHVybiAoewogICAgZmV0Y2hUcmFjazogZnVuY3Rpb24gKHRocmVhZElkLCBtZXNzYWdlSWQpIHsgcmV0dXJuIGRpc3BhdGNoKHRyYWNrRmV0Y2goewogICAgICAgIHRocmVhZDogdGhyZWFkSWQsIG1lc3NhZ2U6IG1lc3NhZ2VJZCwKICAgIH0pKTsgfSwKICAgIGNyZWF0ZURyYWZ0V2l0aENvbmZpZ3VyYXRpb246IGZ1bmN0aW9uIChjb25maWd1cmF0aW9uKSB7IHJldHVybiBkaXNwYXRjaChkcmFmdENyZWF0ZUNvbmZpZ3VyYXRpb24oY29uZmlndXJhdGlvbikpOyB9LAogICAgY3JlYXRlU2hhcmVMaW5rOiBmdW5jdGlvbiAobWVzc2FnZSkgeyByZXR1cm4gZGlzcGF0Y2goc2hhcmVMaW5rQ3JlYXRlKG1lc3NhZ2UpKTsgfSwKICAgIHVwZGF0ZU9uYm9hcmRpbmc6IGZ1bmN0aW9uICh0eXBlKSB7IHJldHVybiBkaXNwYXRjaChvbmJvYXJkaW5nUGF0Y2godHlwZSkpOyB9LAogICAgY3JlYXRlU2hhcmVkVGhyZWFkOiBmdW5jdGlvbiAobWV0YSkgeyByZXR1cm4gZGlzcGF0Y2goc2hhcmVkVGhyZWFkQ3JlYXRlKG1ldGEpKTsgfSwKICAgIHVwZGF0ZUhvdGtleTogZnVuY3Rpb24gKG1ldGEpIHsgcmV0dXJuIGRpc3BhdGNoKGhvdGtleVVwZGF0ZShtZXRhKSk7IH0sCiAgICB1bmRvU2VuZDogZnVuY3Rpb24gKG1ldGEpIHsgcmV0dXJuIGRpc3BhdGNoKGRyYWZ0U2VuZFVuZG8obWV0YSkpOyB9LAogICAgdG9hc3RTZXQ6IGZ1bmN0aW9uIChtZXRhKSB7IHJldHVybiBkaXNwYXRjaCh0b2FzdFNldChtZXRhKSk7IH0sCiAgICBzdWdnZXN0SG90a2V5OiBmdW5jdGlvbiAobWV0YSkgeyByZXR1cm4gZGlzcGF0Y2goaG90a2V5U3VnZ2VzdChtZXRhKSk7IH0sCn0pOyB9OwpleHBvcnQgZGVmYXVsdCBjb25uZWN0KG1hcFN0YXRlVG9Qcm9wcywgbWFwRGlzcGF0Y2hUb1Byb3BzKShFeHBhbmRlZENlbGwpOwo="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/ThreadDetail/components/Cell/ExpandedCell/index.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/ThreadDetail/components/Cell/ExpandedCell/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import { connect, Dispatch } from 'react-redux';\n\nimport { selectTrack, trackFetch } from '@src/ducks/tracks';\nimport { selectContact } from '@src/ducks/contacts';\nimport {\n  draftCreateConfiguration, selectDraft,\n  selectDraftForThread, selectAttachmentMetasForResource, draftSendUndo,\n} from '@src/ducks/drafts';\nimport {\n  StoreState, Track,\n  Resource, OnboardingType,\n  DraftStatus, AttachmentMeta,\n} from '@src/types';\nimport ExpandedCell, { Props, DispatchProps, StateProps } from './ExpandedCell';\nimport { onboardingPatch, selectOnboardingShow } from '@src/ducks/me';\nimport { sharedThreadCreate } from '@src/ducks/sharedThreads';\nimport { hotkeyUpdate, hotkeySuggest } from '@src/ducks/hotkeys';\nimport { shareLinkCreate } from '@src/ducks/shareLinks';\nimport { toastSet } from '@src/ducks/toasts';\n\nconst mapStateToProps = (state: StoreState, ownProps: Props): StateProps => {\n  const track = selectTrack(state, ownProps.threadId, ownProps.message.id);\n\n  // Set draft based off of selectors\n  let draft = state.selectedDraft && selectDraft(state, state.selectedDraft).data;\n  if (!draft && state.selectedThread) {\n    draft = selectDraftForThread(state, state.selectedThread.id, [DraftStatus.Staged]).data;\n  }\n\n  let attachmentMetaCount: AttachmentMeta[]|undefined;\n  if (draft && draft.status === DraftStatus.Staged) {\n    attachmentMetaCount = selectAttachmentMetasForResource(state, draft.id);\n  }\n\n  return {\n    track: track ? track as Resource<Track> : undefined,\n    sender: selectContact(state, ownProps.message.from),\n    blockTracking: state.preferences.blockTrackingPixels,\n    me: state.me.data,\n    features: state.features,\n    showTrackingOnboarding: !state.selectedSharedThread &&\n      selectOnboardingShow(state, OnboardingType.ThreadDetailTracking),\n    sharedThread: state.selectedSharedThread,\n    attachmentMetaCount: attachmentMetaCount && attachmentMetaCount.length || undefined,\n    isOffline: !state.isOnline,\n    draft,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<StoreState>): DispatchProps => ({\n  fetchTrack: (threadId: string, messageId: string) => dispatch(trackFetch({\n    thread: threadId, message: messageId,\n  })),\n  createDraftWithConfiguration:\n    configuration => dispatch(draftCreateConfiguration(configuration)),\n  createShareLink: message => dispatch(shareLinkCreate(message)),\n  updateOnboarding: type => dispatch(onboardingPatch(type)),\n  createSharedThread: meta => dispatch(sharedThreadCreate(meta)),\n  updateHotkey: meta => dispatch(hotkeyUpdate(meta)),\n  undoSend: meta => dispatch(draftSendUndo(meta)),\n  toastSet: meta => dispatch(toastSet(meta)),\n  suggestHotkey: meta => dispatch(hotkeySuggest(meta)),\n});\n\nexport default connect<StateProps, DispatchProps, Props>(\n  mapStateToProps, mapDispatchToProps,\n)(ExpandedCell);\n"]}]}