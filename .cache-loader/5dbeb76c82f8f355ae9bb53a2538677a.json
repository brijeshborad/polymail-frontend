{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/auth.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/auth.ts","mtime":1675280254054},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/auth.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/auth.ts"],"names":[],"mappings":"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","sourcesContent":["import { Observable } from 'rxjs';\nimport { Epic } from 'redux-observable';\n\nimport { AUTH_TOKEN_NONE, getToken, setToken } from '@src/api/base';\n\nimport {\n  meFetch,\n  onboardingFetch,\n} from '@src/ducks/me';\nimport { teamFetch } from '@src/ducks/team';\n\nimport { contactGroupsList } from '@src/ducks/contactGroups';\n\nimport { StoreState, Action, ActionStatus, LoginToken, DevicePlatform } from '@src/types';\n\nimport {\n  START, start,\n  AUTH_LOGIN, AuthLoginMeta, authLogin,\n  AUTH_LOGOUT, authLogout,\n  AUTH_PASSWORD_RESET,\n  authPasswordReset,\n  AUTH_LOGOUT_ALL,\n  authLogoutAll,\n  AUTH_OAUTH_LOGIN,\n  authOAuthLogin,\n  AuthOAuthLoginMeta,\n  authTfaCodeValidate,\n  AUTH_TFA_CODE_SEND,\n  authTfaCodeSend,\n  AUTH_TFA_CODE_VALIDATE,\n  authGetMagicLink,\n  AUTH_GET_MAGIC_LINK,\n  MagicLinkMeta,\n  AUTH_CLEAR_REDIRECT,\n  authClearRedirect,\n  AUTH_GET_LOGIN_TOKEN,\n  authGetLoginToken,\n} from '@src/ducks/auth';\n\nimport {\n  login as loginRequest,\n  logout as logoutRequest,\n  logoutAll as logoutAllRequest,\n  passwordReset,\n  oAuthLogin,\n  upgradeTfaLogin,\n  sendTfaCode,\n  Token,\n  TokenType,\n  getMagicLink,\n  getLoginToken,\n} from '@src/api/auth';\nimport { integrationList } from '@src/ducks/integrations';\nimport { recordEvent, UserEvents } from '@src/lib/analytics';\nimport { schedulingList } from '@src/ducks/scheduling';\nimport { toastSet } from '@src/ducks/toasts';\nimport { getUrl } from '@src/lib/utils';\nimport browserHistory from '@src/lib/browserHistory';\nimport { setAuthCookie, deleteAuthCookie, deleteTFANeededCookie, STANDARD_COOKIE_ATTRIBUTES } from '@src/lib/cookies';\nimport { clearEverything, clearAuthData } from '@src/lib/auth';\nimport { filtersList } from '@src/ducks/filters';\nimport { isElectronMac, isElectronWindows, isElectron } from '@src/lib/electron';\nimport Cookies from 'js-cookie';\nimport moment from 'moment';\nimport { Deps } from '@src/lib/epic';\n\nconst getLoginTokenEpic: Epic<\n  Action<Error|null, LoginToken|null>, StoreState, Deps\n> = (action$, store, deps) =>\n  action$.ofType(AUTH_GET_LOGIN_TOKEN)\n    .filter(action => action.status === ActionStatus.Start)\n    .flatMap((action: Action<null, LoginToken>) => {\n\n      // Base token request\n      let tokenRequest = getLoginToken();\n\n      // If reuse token reuseTTL is still valid then use existing token\n      const foundTokenCookie = Cookies.get('pmlt');\n      const foundToken: LoginToken|undefined = foundTokenCookie && JSON.parse(foundTokenCookie);\n      if (foundToken?.reuseDate && moment(deps.now()).isBefore(moment(foundToken.reuseDate))) {\n        tokenRequest = Observable.of(foundToken);\n      }\n\n      return tokenRequest\n        .do((token) => {\n          if (token) {\n            // Identify platform\n            let platform = DevicePlatform.Web;\n            if (isElectronMac) {\n              platform = DevicePlatform.macOS;\n            }\n            if (isElectronWindows) {\n              platform = DevicePlatform.Windows;\n            }\n            const encoded = encodeURIComponent(token.public);\n\n            // TODO(SHIN): Pass ttl in url with token\n            window.open(`\n              ${window.location.origin}/login?redirect_platform=${platform}&pmpt=${encoded}&ttl=${token.ttl}`,\n            );\n          }\n        })\n        .flatMap((token) => {\n          const reuseDate = token.reuseTtl &&\n            moment(deps.now()).add(token.reuseTtl, 'seconds').toDate() || undefined;\n          const updated: LoginToken = {\n            ...token,\n            reuseDate,\n          };\n\n          // Return success case\n          return Observable.merge(\n            Observable.of(authGetLoginToken(action.meta, updated)),\n          );\n        })\n        .catch((e: Error) => {\n          return Observable.of(authGetLoginToken(action.meta, e));\n        });\n    });\n\nconst getMagicLinkEpic: Epic<\n  Action<MagicLinkMeta|Error|null, null>, StoreState\n> = (action$, store) =>\n  action$.ofType(AUTH_GET_MAGIC_LINK)\n    .filter(action => action.status === ActionStatus.Start)\n    .flatMap((action: Action<MagicLinkMeta, null>) =>\n      getMagicLink({\n        ...action.meta,\n        token: JSON.parse(Cookies.get('pmlt') || '{}')?.public,\n      })\n        .flatMap((magicLink) => {\n          // Handle redirect for magic link\n          if (magicLink?.code) {\n            window.location.href = `polymail://auth/magic?code=${encodeURIComponent(magicLink.code)}`;\n          }\n\n          // Return success case\n          return Observable.merge(\n            Observable.of(authGetMagicLink(action.meta, null)),\n          );\n\n        })\n        .catch((e: Error) => {\n          // If request failed redirect anyways so backup mechanism can be used\n          window.location.href = `polymail://auth/magic`;\n\n          return Observable.merge(\n            Observable.of(toastSet(new Error(\n              'We ran into an issue trying to create a magic link for your email. '\n              + 'Please try again!',\n            ))),\n            Observable.of(authGetMagicLink(action.meta, e)),\n          );\n        }),\n  );\n\nconst clearRedirectPlatformEpic: Epic<\n  Action<null, null>, StoreState\n> = (action$, deps, store) =>\n  action$.ofType(AUTH_CLEAR_REDIRECT)\n    .filter(action => action.status === ActionStatus.Start)\n    .do(() => {\n      browserHistory.replace('/settings');\n    })\n    .map((action: Action<null, null>) => {\n      return authClearRedirect(null, null);\n    },\n  );\n\nconst passwordResetEpic: Epic<Action<string|Error|null, null>, StoreState> = action$ =>\n  action$.ofType(AUTH_PASSWORD_RESET)\n    .filter(action => action.status === ActionStatus.Start)\n    .flatMap((action: Action<string, null>) =>\n      passwordReset(action.meta)\n        .flatMap(() =>\n          Observable.merge(\n            Observable.of(authPasswordReset(action.meta, null)),\n            Observable.of(toastSet(new Error(\n              `An email to reset your password has been sent to ${action.meta}.` +\n              'The link will be valid for 1 hour.',\n            ))),\n          ))\n        .catch((e: Error) => {\n          return Observable.merge(\n            Observable.of(toastSet(new Error(\n              'We ran into an issue trying to create a reset link for your email. '\n              + 'Please try again!',\n            ))),\n            Observable.of(authPasswordReset(action.meta, e)),\n          );\n        }),\n  );\n\nconst login: Epic<Action<AuthLoginMeta|Error|null, Token|null>, StoreState> = (action$, store) =>\n action$.ofType(AUTH_LOGIN)\n  .filter(action => action.status === ActionStatus.Start)\n  .flatMap((action: Action<AuthLoginMeta, Token>) =>\n      loginRequest({\n        ...action.meta,\n        token: !!action.meta.magicCode &&\n          JSON.parse(Cookies.get('pmlt') || '{}')?.private || undefined,\n      })\n        .map((token) => {\n          clearAuthData();\n          setAuthCookie(token);\n          setToken(token.token);\n\n          // Clear login token\n          if (isElectron) {\n            Cookies.remove(\n              'pmlt',\n              STANDARD_COOKIE_ATTRIBUTES,\n            );\n          }\n\n          return authLogin(action.meta, token);\n        })\n        .do((a: Action<AuthLoginMeta, Token|null>) => {\n          if (!!a.payload && a.payload.type === TokenType.Basic) {\n            browserHistory.replace('/login/tfa');\n          } else if (a.meta.magicCode) {\n            browserHistory.replace('/');\n          }\n        })\n        .do(() => recordEvent(UserEvents.LoggedIn))\n        .catch((e: Error) => Observable.merge(\n          Observable.of(toastSet(e)),\n          Observable.of(authLogin(action.meta, e)),\n        )),\n  );\n\nconst loginSuccessStartup: Epic<any, StoreState> = (action$, store) =>\n  action$.ofType(AUTH_LOGIN, AUTH_TFA_CODE_VALIDATE)\n    .filter(action => action.status === ActionStatus.Success && !store.getState().tfaNeeded)\n    .flatMap(action =>\n      Observable.of(start(null)),\n    );\n\nconst startup: Epic<Action<any, any>, StoreState> = (action$, store) =>\n  action$.ofType(START)\n    .flatMap(action =>\n      Observable.merge(\n        Observable.of(meFetch('')),\n        Observable.of(teamFetch('')),\n        Observable.of(contactGroupsList('')),\n        Observable.of(integrationList(null)),\n        Observable.of(onboardingFetch(null)),\n        Observable.of(schedulingList(null)),\n        Observable.of(filtersList(null)),\n        // TODO(SHIN): Turn on for 2021 year in review\n        // Observable.of(yearlySummaryFetch(2020)),\n      ),\n    );\n\nconst logout: Epic<Action<null|Error, null>, StoreState> = (action$, store) =>\n  action$.ofType(AUTH_LOGOUT)\n    .filter(action => action.status === ActionStatus.Start)\n    .do(() => recordEvent(UserEvents.LoggedOut))\n    .flatMap((action) => {\n      if (getToken() === AUTH_TOKEN_NONE) {\n        // clear cookies, just in case they exist\n        deleteAuthCookie();\n        deleteTFANeededCookie();\n        return Observable.of(authLogout(null, null));\n      }\n\n      return logoutRequest()\n        .map(() => {\n          deleteAuthCookie();\n          deleteTFANeededCookie();\n          setToken(AUTH_TOKEN_NONE);\n          return authLogout(null, null);\n        })\n        .catch(e =>\n          Observable.merge(\n            Observable.of(toastSet(e)),\n          ));\n    });\n\nconst logoutAll: Epic<Action<null|Error, null>, StoreState> = (action$, store) =>\n  action$.ofType(AUTH_LOGOUT_ALL)\n    .filter(action => action.status === ActionStatus.Start)\n    .do(() => recordEvent(UserEvents.LoggedOut))\n    .flatMap((action) => {\n      if (getToken() === AUTH_TOKEN_NONE) {\n        // clear cookies, just in case they exist\n        deleteAuthCookie();\n        deleteTFANeededCookie();\n        return Observable.of(authLogout(null, null));\n      }\n\n      return logoutAllRequest()\n        .map(() => {\n          deleteAuthCookie();\n          deleteTFANeededCookie();\n          setToken(AUTH_TOKEN_NONE);\n          return authLogoutAll(null, null);\n        })\n        .catch(e => Observable.of(toastSet(e)));\n    });\n\nconst logoutSuccess: Epic<Action<any, any>, StoreState> = (action$, store) =>\n  action$.ofType(AUTH_LOGOUT)\n    .filter(action => action.status === ActionStatus.Success)\n    .flatMap(action => clearEverything(store).map(() => action))\n    .filter(() => false);\n\nconst loginOAuth: Epic<Action<any, any>, StoreState> = (action$, store) =>\n  action$.ofType(AUTH_OAUTH_LOGIN)\n    .filter(action => action.status === ActionStatus.Start)\n    .flatMap((action: Action<AuthOAuthLoginMeta, string>) => {\n      clearAuthData();\n      const { teamInviteNonce, teamInvitePayload } = action.meta;\n\n      let notFoundUrl = getUrl('/login/choosePassword', true);\n      let loginSuccessUrl = getUrl('/mail', true);\n\n      // Add Unsubscriber URL directions if needed\n      if (store.getState().unsubscriberSignup) {\n        notFoundUrl = getUrl('/login/choosePassword?unsubscriber=1');\n        loginSuccessUrl = getUrl('/unsubscriber');\n      }\n\n      // Redirect back after logging in\n      if (teamInviteNonce && teamInvitePayload) {\n        loginSuccessUrl = getUrl(`/teamInvites/${encodeURIComponent(teamInviteNonce)}/${encodeURIComponent(teamInvitePayload)}`);\n      }\n\n      return oAuthLogin(action.meta, loginSuccessUrl, notFoundUrl)\n        .do(url => window.location.href = url)\n        .map(url => authOAuthLogin(action.meta, url))\n        .catch(e => Observable.of(toastSet(e)));\n    });\n\nconst validateTfa: Epic<Action<any, any>, StoreState> = action$ =>\n  action$.ofType(AUTH_TFA_CODE_VALIDATE)\n    .filter(action => action.status === ActionStatus.Start)\n    .flatMap((action: Action<string, string>) => {\n      return upgradeTfaLogin(action.meta)\n        .map((response: Token) => {\n          setAuthCookie(response);\n          setToken(response.token);\n          return authTfaCodeValidate(action.meta, response);\n        })\n        .do(() => recordEvent(UserEvents.LoggedIn))\n        .catch((e: Error) => Observable.merge(\n          Observable.of(toastSet(e)),\n          Observable.of(authTfaCodeValidate(action.meta, e)),\n        ));\n    });\n\nconst sendTfa: Epic<Action<any, any>, StoreState>\n  = (action$, store) =>\n    action$.ofType(AUTH_TFA_CODE_SEND)\n      .filter(action => action.status === ActionStatus.Start)\n      .flatMap(action =>\n        sendTfaCode()\n          .map(payload => authTfaCodeSend(action.meta, payload))\n          .catch((e: Error) => Observable.merge(\n            Observable.of(toastSet(e)),\n            Observable.of(authTfaCodeSend(action.meta, e)),\n          )),\n      );\n\nexport default [\n  startup,\n  login,\n  loginSuccessStartup,\n  logout,\n  logoutSuccess,\n  logoutAll,\n  passwordResetEpic,\n  loginOAuth,\n  validateTfa,\n  sendTfa,\n  getMagicLinkEpic,\n  clearRedirectPlatformEpic,\n  getLoginTokenEpic,\n];\n"]}]}