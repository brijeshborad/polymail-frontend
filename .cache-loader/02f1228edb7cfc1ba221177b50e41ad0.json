{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/Onboarding/components/TrialEnded/TrialEnded.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/Onboarding/components/TrialEnded/TrialEnded.tsx","mtime":1675280254024},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JzsKaW1wb3J0IGNsYXNzbmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7CmltcG9ydCBPdmVybGF5IGZyb20gJ0BzcmMvY29tcG9uZW50cy9CYXNlL092ZXJsYXknOwppbXBvcnQgUm91bmRDaGVja21hcmsgZnJvbSAnQHNyYy9jb21wb25lbnRzL0ljb25zL1JvdW5kQ2hlY2ttYXJrLnN2Zyc7CmltcG9ydCAnLi9UcmlhbEVuZGVkLnNjc3MnOwppbXBvcnQgYnJvd3Nlckhpc3RvcnkgZnJvbSAnQHNyYy9saWIvYnJvd3Nlckhpc3RvcnknOwppbXBvcnQgeyBCSUxMSU5HX1BMQU5TIH0gZnJvbSAnQHNyYy90eXBlcy9iaWxsaW5nJzsKdmFyIFRyaWFsRW5kZWQgPSBmdW5jdGlvbiAocHJvcHMpIHsKICAgIHZhciBwYXJzZUZlYXR1cmUgPSBmdW5jdGlvbiAoZmVhdHVyZSkgewogICAgICAgIHZhciBib2xkZWQgPSBmZWF0dXJlLm1hdGNoKC97e1tefV0rfX0vZyk7CiAgICAgICAgdmFyIGJvbGRlZERpY3QgPSB7fTsKICAgICAgICBpZiAoYm9sZGVkKSB7CiAgICAgICAgICAgIHZhciBzdHJfMTsKICAgICAgICAgICAgYm9sZGVkLmZvckVhY2goZnVuY3Rpb24gKGIpIHsKICAgICAgICAgICAgICAgIHN0cl8xID0gYi5zbGljZSgyLCBiLmxlbmd0aCAtIDIpOwogICAgICAgICAgICAgICAgYm9sZGVkRGljdFtzdHJfMV0gPSBSZWFjdC5jcmVhdGVFbGVtZW50KCJzcGFuIiwgeyBjbGFzc05hbWU6ICJib2xkIiwga2V5OiBzdHJfMSB9LCBzdHJfMSk7CiAgICAgICAgICAgIH0pOwogICAgICAgICAgICB2YXIgc3BsaXQgPSBmZWF0dXJlLnNwbGl0KC97e3x9fS9nKTsKICAgICAgICAgICAgcmV0dXJuIHNwbGl0LmZpbHRlcihmdW5jdGlvbiAocykgeyByZXR1cm4gISFzOyB9KS5tYXAoZnVuY3Rpb24gKHMpIHsgcmV0dXJuIGJvbGRlZERpY3Rbc10gfHwgUmVhY3QuY3JlYXRlRWxlbWVudCgic3BhbiIsIHsga2V5OiBzIH0sIHMpOyB9KTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIGZlYXR1cmU7CiAgICB9OwogICAgLy8gSGFuZGxlcyBkaXJlY3RpbmcgdXNlcnMgdG8gYmlsbGluZyBwYWdlCiAgICB2YXIgaGFuZGxlQ2xpY2sgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgaWYgKHByb3BzLm9uTmV4dCkgewogICAgICAgICAgICBwcm9wcy5vbk5leHQoKTsKICAgICAgICB9CiAgICAgICAgYnJvd3Nlckhpc3RvcnkucHVzaCgnL3NldHRpbmdzL2JpbGxpbmcnKTsKICAgICAgICByZXR1cm47CiAgICB9OwogICAgLy8gQ29udGVudAogICAgdmFyIHRpdGxlID0gJ1lvdXIgZnJlZSBQb2x5bWFpbCB0cmlhbCBoYXMgZW5kZWQnOwogICAgdmFyIGRlc2NyaXB0aW9uID0gJ1VwZ3JhZGUgbm93IHRvIGNvbnRpbnVlIHVzaW5nIFBvbHltYWlsIGFuZCBnZXQgYWNjZXNzIHRvJzsKICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChPdmVybGF5LCB7IGNsYXNzTmFtZTogY2xhc3NuYW1lcygnb3ZlcmxheScsIHByb3BzLmNsYXNzTmFtZSkgfSwKICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLCB7IGNsYXNzTmFtZTogInRyaWFsLWVuZGVkLW1haW4iIH0sCiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIHsgY2xhc3NOYW1lOiAiaGVhZGVyIiB9LAogICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2IiwgeyBjbGFzc05hbWU6ICJ0aXRsZSIgfSwgdGl0bGUpLAogICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2IiwgeyBjbGFzc05hbWU6ICJkZXNjcmlwdGlvbiIgfSwgZGVzY3JpcHRpb24pLAogICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2IiwgeyBjbGFzc05hbWU6ICJmZWF0dXJlcy1saXN0IiB9LCBCSUxMSU5HX1BMQU5TWzBdLmZlYXR1cmVzLm1hcChmdW5jdGlvbiAoZikgeyByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIHsga2V5OiBmLCBjbGFzc05hbWU6ICJmZWF0dXJlLWl0ZW0iIH0sCiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChSb3VuZENoZWNrbWFyaywgeyBjbGFzc05hbWU6ICJjaGVjayIsIGhlaWdodDogIjE2cHgiLCB3aWR0aDogIjE2cHgiIH0pLAogICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIHsgY2xhc3NOYW1lOiAiY29weSIgfSwgcGFyc2VGZWF0dXJlKGYpKSkpOyB9KSkpLAogICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KCJidXR0b24iLCB7IG9uQ2xpY2s6IGhhbmRsZUNsaWNrLCBjbGFzc05hbWU6ICJjdGEtYnV0dG9uIiB9LCAiVXBncmFkZSIpKSkpOwp9OwpleHBvcnQgZGVmYXVsdCBUcmlhbEVuZGVkOwo="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/Onboarding/components/TrialEnded/TrialEnded.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/Onboarding/components/TrialEnded/TrialEnded.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,UAAU,MAAM,YAAY,CAAC;AACpC,OAAO,OAAO,MAAM,8BAA8B,CAAC;AACnD,OAAO,cAAc,MAAM,0CAA0C,CAAC;AAEtE,OAAO,mBAAmB,CAAC;AAE3B,OAAO,cAAc,MAAM,yBAAyB,CAAC;AACrD,OAAO,EAAE,aAAa,EAAE,MAAM,oBAAoB,CAAC;AAWnD,IAAM,UAAU,GAAG,UAAC,KAAyB;IAC3C,IAAM,YAAY,GAAG,UAAC,OAAe;QACnC,IAAM,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;QAC3C,IAAM,UAAU,GAAG,EAAE,CAAC;QACtB,IAAI,MAAM,EAAE;YACV,IAAI,KAAG,CAAC;YACR,MAAM,CAAC,OAAO,CAAC,UAAC,CAAC;gBACf,KAAG,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBAC/B,UAAU,CAAC,KAAG,CAAC,GAAG,8BAAM,SAAS,EAAC,MAAM,EAAC,GAAG,EAAE,KAAG,IAAG,KAAG,CAAQ,CAAC;YAClE,CAAC,CAAC,CAAC;YAEH,IAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YACtC,OAAO,KAAK,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,CAAC,EAAH,CAAG,CAAC,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,UAAU,CAAC,CAAC,CAAC,IAAI,8BAAM,GAAG,EAAE,CAAC,IAAG,CAAC,CAAQ,EAAzC,CAAyC,CAAC,CAAC;SACnF;QACD,OAAO,OAAO,CAAC;IACjB,CAAC,CAAC;IAEF,0CAA0C;IAC1C,IAAM,WAAW,GAAG;QAClB,IAAI,KAAK,CAAC,MAAM,EAAE;YAChB,KAAK,CAAC,MAAM,EAAE,CAAC;SAChB;QAED,cAAc,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;QACzC,OAAO;IACT,CAAC,CAAC;IAEF,UAAU;IACV,IAAM,KAAK,GAAG,oCAAoC,CAAC;IACnD,IAAM,WAAW,GAAG,0DAA0D,CAAC;IAC/E,OAAO,CACL,oBAAC,OAAO,IACN,SAAS,EAAE,UAAU,CAAC,SAAS,EAAE,KAAK,CAAC,SAAS,CAAC;QAEjD,6BAAK,SAAS,EAAC,kBAAkB;YAC/B,6BAAK,SAAS,EAAC,QAAQ;gBACrB,6BAAK,SAAS,EAAC,OAAO,IACnB,KAAK,CACF;gBACN,6BAAK,SAAS,EAAC,aAAa,IACzB,WAAW,CACR;gBACN,6BAAK,SAAS,EAAC,eAAe,IAC3B,aAAa,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAClC,6BACE,GAAG,EAAE,CAAC,EACN,SAAS,EAAC,cAAc;oBAExB,oBAAC,cAAc,IAAC,SAAS,EAAC,OAAO,EAAC,MAAM,EAAC,MAAM,EAAC,KAAK,EAAC,MAAM,GAAG;oBAC/D,6BAAK,SAAS,EAAC,MAAM,IAClB,YAAY,CAAC,CAAC,CAAC,CACZ,CACF,CACP,EAVmC,CAUnC,CAAC,CACE,CACF;YACN,gCACE,OAAO,EAAE,WAAW,EACpB,SAAS,EAAC,YAAY,cAGf,CACL,CACE,CACX,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,UAAU,CAAC","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport Overlay from '@src/components/Base/Overlay';\nimport RoundCheckmark from '@src/components/Icons/RoundCheckmark.svg';\n\nimport './TrialEnded.scss';\nimport { Me } from '@src/types';\nimport browserHistory from '@src/lib/browserHistory';\nimport { BILLING_PLANS } from '@src/types/billing';\n\nexport interface StateProps {\n  me?: Me;\n}\n\ninterface Props {\n  onNext?: () => void;\n  className?: string;\n}\n\nconst TrialEnded = (props: Props & StateProps) => {\n  const parseFeature = (feature: string) => {\n    const bolded = feature.match(/{{[^}]+}}/g);\n    const boldedDict = {};\n    if (bolded) {\n      let str;\n      bolded.forEach((b) => {\n        str = b.slice(2, b.length - 2);\n        boldedDict[str] = <span className=\"bold\" key={str}>{str}</span>;\n      });\n\n      const split = feature.split(/{{|}}/g);\n      return split.filter(s => !!s).map(s => boldedDict[s] || <span key={s}>{s}</span>);\n    }\n    return feature;\n  };\n\n  // Handles directing users to billing page\n  const handleClick = () => {\n    if (props.onNext) {\n      props.onNext();\n    }\n\n    browserHistory.push('/settings/billing');\n    return;\n  };\n\n  // Content\n  const title = 'Your free Polymail trial has ended';\n  const description = 'Upgrade now to continue using Polymail and get access to';\n  return (\n    <Overlay\n      className={classnames('overlay', props.className)}\n    >\n      <div className=\"trial-ended-main\">\n        <div className=\"header\">\n          <div className=\"title\">\n            {title}\n          </div>\n          <div className=\"description\">\n            {description}\n          </div>\n          <div className=\"features-list\">\n            {BILLING_PLANS[0].features.map(f => (\n              <div\n                key={f}\n                className=\"feature-item\"\n              >\n                <RoundCheckmark className=\"check\" height=\"16px\" width=\"16px\" />\n                <div className=\"copy\">\n                  {parseFeature(f)}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n        <button\n          onClick={handleClick}\n          className=\"cta-button\"\n        >\n          Upgrade\n        </button>\n      </div>\n    </Overlay>\n  );\n};\n\nexport default TrialEnded;\n"]}]}