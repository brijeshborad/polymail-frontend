{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/mailbox.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/mailbox.ts","mtime":1675280254049},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9hOwppbXBvcnQgdXBkYXRlIGZyb20gJ2ltbXV0YWJpbGl0eS1oZWxwZXInOwppbXBvcnQgeyBjcmVhdGUgfSBmcm9tICdAc3JjL2xpYi9yZWR1eCc7CmltcG9ydCB7IE1haWxib3hUeXBlLCBTd2lwZSB9IGZyb20gJ0BzcmMvdHlwZXMnOwppbXBvcnQgeyByZXNvdXJjZUxvYWRpbmcgfSBmcm9tICdAc3JjL2xpYi9yZXNvdXJjZSc7CmltcG9ydCB7IGNyZWF0ZVNlbGVjdG9yIH0gZnJvbSAnQHNyYy9saWIvc2VsZWN0b3InOwppbXBvcnQgeyBjbG9uZURlZXAsIGlzRXF1YWwgfSBmcm9tICdsb2Rhc2gnOwovLyBNYWlsYm94U2VsZWN0IHN0YXJ0IHVzZWQgdG8gdXBkYXRlIG1haWxib3ggYW5kIHNldCByZXNvdXJjZUxvYWRpbmcgZm9yIHRocmVhZHMKLy8gc3VjY2VzcyB3aWxsIHNldCBzdGF0ZS4KLy8gVE9ETyhTSElOKTogSGFuZGxlIHJlbW92aW5nIHNlbGVjdGVkSWRzIGFuZCBzZWxlY3RlZFRocmVhZCBpZiBjaGFuZ2luZyBtYWlsYm94CmV4cG9ydCB2YXIgTUFJTEJPWF9TRUxFQ1QgPSAoX2EgPSBjcmVhdGUoJ01BSUxCT1hfU0VMRUNUJywgewogICAgc3RhcnQ6IGZ1bmN0aW9uIChzdGF0ZSwgbWV0YSkgewogICAgICAgIHZhciBib3hDaGFuZ2VkID0gbWV0YS50eXBlICE9PSBzdGF0ZS5tYWlsYm94LnR5cGU7CiAgICAgICAgcmV0dXJuIHVwZGF0ZShzdGF0ZSwgewogICAgICAgICAgICBtYWlsYm94OiB7ICRzZXQ6IG1ldGEgfSwKICAgICAgICAgICAgbWFpbGJveFRocmVhZHM6IHsgJHNldDogcmVzb3VyY2VMb2FkaW5nKCkgfSwKICAgICAgICAgICAgc2VsZWN0ZWRUaHJlYWQ6IHsgJHNldDogYm94Q2hhbmdlZCA/IHVuZGVmaW5lZCA6IHN0YXRlLnNlbGVjdGVkVGhyZWFkIH0sCiAgICAgICAgICAgIHNlbGVjdGVkSWRzOiB7CiAgICAgICAgICAgICAgICAkc2V0OiBpc0VxdWFsKG1ldGEsIHN0YXRlLm1haWxib3gpCiAgICAgICAgICAgICAgICAgICAgPyBzdGF0ZS5zZWxlY3RlZElkcwogICAgICAgICAgICAgICAgICAgIDogbmV3IE1hcCgpLAogICAgICAgICAgICB9LAogICAgICAgIH0pOwogICAgfSwKICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChzdGF0ZSwgbWV0YSwgcGF5bG9hZCkgewogICAgICAgIHJldHVybiB1cGRhdGUoc3RhdGUsIHsKICAgICAgICAgICAgbWFpbGJveDogeyAkc2V0OiBwYXlsb2FkID09PSBudWxsID8gdW5kZWZpbmVkIDogcGF5bG9hZCB9LAogICAgICAgICAgICBzZWxlY3RlZElkczogewogICAgICAgICAgICAgICAgJHNldDogaXNFcXVhbChwYXlsb2FkLCBzdGF0ZS5tYWlsYm94KQogICAgICAgICAgICAgICAgICAgID8gc3RhdGUuc2VsZWN0ZWRJZHMKICAgICAgICAgICAgICAgICAgICA6IG5ldyBNYXAoKSwKICAgICAgICAgICAgfSwKICAgICAgICB9KTsKICAgIH0sCn0pLCBfYS50eXBlKSwgbWFpbGJveFNlbGVjdCA9IF9hLmFjdGlvbiwgbWFpbGJveFNlbGVjdFJlZHVjZXIgPSBfYS5yZWR1Y2VyOwp2YXIgU1dJUEVfQUNUSU9OUyA9IFsKICAgIFN3aXBlLkFyY2hpdmUsCiAgICBTd2lwZS5UcmFzaCwKICAgIFN3aXBlLkxpc3QsCiAgICBTd2lwZS5MYXRlciwKICAgIFN3aXBlLkluYm94LAogICAgU3dpcGUuTm9uZSwKXTsKLy8gUmV0dXJucyB0aHJlYWQgU3dpcGVBY3Rpb25zCmV4cG9ydCB2YXIgc2VsZWN0VGhyZWFkU3dpcGVBY3Rpb25zID0gY3JlYXRlU2VsZWN0b3IoWwogICAgZnVuY3Rpb24gKHN0YXRlKSB7IHJldHVybiBzdGF0ZS5wcmVmZXJlbmNlczsgfSwKICAgIGZ1bmN0aW9uIChzdGF0ZSkgeyByZXR1cm4gc3RhdGUubWFpbGJveDsgfSwKXSwgZnVuY3Rpb24gKHByZWZzLCBib3gpIHsKICAgIGlmICghYm94KSB7CiAgICAgICAgcmV0dXJuIFNXSVBFX0FDVElPTlM7CiAgICB9CiAgICB2YXIgY2xvbmVkUHJlZnMgPSBjbG9uZURlZXAocHJlZnMpOwogICAgLy8gU2V0IHN3aXBlIHByZWZlcmVuY2UgZm9yIGxvbmcgdG8gc2hvcnQgaWYgc2hvcnQgZXhpc3RzIGFuZCBsb25nIGRvZXMgbm90CiAgICBpZiAocHJlZnMuc3dpcGVTaG9ydExlZnQgIT09IFN3aXBlLk5vbmUgJiYgcHJlZnMuc3dpcGVMb25nTGVmdCA9PT0gU3dpcGUuTm9uZSkgewogICAgICAgIGNsb25lZFByZWZzLnN3aXBlTG9uZ0xlZnQgPSBwcmVmcy5zd2lwZVNob3J0TGVmdDsKICAgIH0KICAgIGlmIChwcmVmcy5zd2lwZVNob3J0UmlnaHQgIT09IFN3aXBlLk5vbmUgJiYgcHJlZnMuc3dpcGVMb25nUmlnaHQgPT09IFN3aXBlLk5vbmUpIHsKICAgICAgICBjbG9uZWRQcmVmcy5zd2lwZUxvbmdSaWdodCA9IHByZWZzLnN3aXBlU2hvcnRSaWdodDsKICAgIH0KICAgIGlmIChib3gubGlzdCkgewogICAgICAgIHJldHVybiBbCiAgICAgICAgICAgIGNsb25lZFByZWZzLnN3aXBlU2hvcnRSaWdodCwKICAgICAgICAgICAgY2xvbmVkUHJlZnMuc3dpcGVMb25nUmlnaHQsCiAgICAgICAgICAgIGNsb25lZFByZWZzLnN3aXBlTG9uZ0xlZnQsCiAgICAgICAgICAgIGNsb25lZFByZWZzLnN3aXBlU2hvcnRMZWZ0LAogICAgICAgIF07CiAgICB9CiAgICBzd2l0Y2ggKGJveC50eXBlKSB7CiAgICAgICAgY2FzZSBNYWlsYm94VHlwZS5JbmJveDoKICAgICAgICAgICAgcmV0dXJuIFsKICAgICAgICAgICAgICAgIGNsb25lZFByZWZzLnN3aXBlU2hvcnRSaWdodCwKICAgICAgICAgICAgICAgIGNsb25lZFByZWZzLnN3aXBlTG9uZ1JpZ2h0LAogICAgICAgICAgICAgICAgY2xvbmVkUHJlZnMuc3dpcGVMb25nTGVmdCwKICAgICAgICAgICAgICAgIGNsb25lZFByZWZzLnN3aXBlU2hvcnRMZWZ0LAogICAgICAgICAgICBdOwogICAgICAgIGNhc2UgTWFpbGJveFR5cGUuTGF0ZXI6CiAgICAgICAgICAgIHJldHVybiBbCiAgICAgICAgICAgICAgICBjbG9uZWRQcmVmcy5zd2lwZVNob3J0UmlnaHQsCiAgICAgICAgICAgICAgICBjbG9uZWRQcmVmcy5zd2lwZUxvbmdSaWdodCwKICAgICAgICAgICAgICAgIGNsb25lZFByZWZzLnN3aXBlTG9uZ0xlZnQsCiAgICAgICAgICAgICAgICBjbG9uZWRQcmVmcy5zd2lwZVNob3J0TGVmdCwKICAgICAgICAgICAgXTsKICAgICAgICBjYXNlIE1haWxib3hUeXBlLkFyY2hpdmU6CiAgICAgICAgICAgIHJldHVybiBbCiAgICAgICAgICAgICAgICBjbG9uZWRQcmVmcy5zd2lwZVNob3J0UmlnaHQgIT09IFN3aXBlLkFyY2hpdmUgJiYKICAgICAgICAgICAgICAgICAgICBjbG9uZWRQcmVmcy5zd2lwZVNob3J0UmlnaHQgfHwgU3dpcGUuSW5ib3gsCiAgICAgICAgICAgICAgICBjbG9uZWRQcmVmcy5zd2lwZUxvbmdSaWdodCAhPT0gU3dpcGUuQXJjaGl2ZSAmJgogICAgICAgICAgICAgICAgICAgIGNsb25lZFByZWZzLnN3aXBlTG9uZ1JpZ2h0IHx8IFN3aXBlLkluYm94LAogICAgICAgICAgICAgICAgY2xvbmVkUHJlZnMuc3dpcGVMb25nTGVmdCAhPT0gU3dpcGUuQXJjaGl2ZSAmJgogICAgICAgICAgICAgICAgICAgIGNsb25lZFByZWZzLnN3aXBlTG9uZ0xlZnQgfHwgU3dpcGUuSW5ib3gsCiAgICAgICAgICAgICAgICBjbG9uZWRQcmVmcy5zd2lwZVNob3J0TGVmdCAhPT0gU3dpcGUuQXJjaGl2ZSAmJgogICAgICAgICAgICAgICAgICAgIGNsb25lZFByZWZzLnN3aXBlU2hvcnRMZWZ0IHx8IFN3aXBlLkluYm94LAogICAgICAgICAgICBdOwogICAgICAgIGNhc2UgTWFpbGJveFR5cGUuVHJhc2g6CiAgICAgICAgY2FzZSBNYWlsYm94VHlwZS5TcGFtOgogICAgICAgICAgICByZXR1cm4gWwogICAgICAgICAgICAgICAgY2xvbmVkUHJlZnMuc3dpcGVTaG9ydFJpZ2h0ICE9PSBTd2lwZS5UcmFzaCAmJgogICAgICAgICAgICAgICAgICAgIGNsb25lZFByZWZzLnN3aXBlU2hvcnRSaWdodCB8fCBTd2lwZS5JbmJveCwKICAgICAgICAgICAgICAgIGNsb25lZFByZWZzLnN3aXBlTG9uZ1JpZ2h0ICE9PSBTd2lwZS5UcmFzaCAmJgogICAgICAgICAgICAgICAgICAgIGNsb25lZFByZWZzLnN3aXBlTG9uZ1JpZ2h0IHx8IFN3aXBlLkluYm94LAogICAgICAgICAgICAgICAgY2xvbmVkUHJlZnMuc3dpcGVMb25nTGVmdCAhPT0gU3dpcGUuVHJhc2ggJiYKICAgICAgICAgICAgICAgICAgICBjbG9uZWRQcmVmcy5zd2lwZUxvbmdMZWZ0IHx8IFN3aXBlLkluYm94LAogICAgICAgICAgICAgICAgY2xvbmVkUHJlZnMuc3dpcGVTaG9ydExlZnQgIT09IFN3aXBlLlRyYXNoICYmCiAgICAgICAgICAgICAgICAgICAgY2xvbmVkUHJlZnMuc3dpcGVTaG9ydExlZnQgfHwgU3dpcGUuSW5ib3gsCiAgICAgICAgICAgIF07CiAgICAgICAgZGVmYXVsdDogYnJlYWs7CiAgICB9CiAgICByZXR1cm4gU1dJUEVfQUNUSU9OUzsKfSwgZnVuY3Rpb24gKHByZWZzLCBtYWlsYm94KSB7IHJldHVybiBtYWlsYm94LnR5cGU7IH0sIFsnbWFpbGJveCcsICdwcmVmZXJlbmNlcyddKTsKZXhwb3J0IGRlZmF1bHQgWwogICAgbWFpbGJveFNlbGVjdFJlZHVjZXIsCl07Cg=="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/mailbox.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/mailbox.ts"],"names":[],"mappings":"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","sourcesContent":["import update from 'immutability-helper';\nimport { create } from '@src/lib/redux';\nimport { Mailbox, Preferences, MailboxType, Swipe } from '@src/types';\nimport { resourceLoading } from '@src/lib/resource';\nimport { createSelector } from '@src/lib/selector';\nimport { cloneDeep, isEqual } from 'lodash';\n\n// MailboxSelect start used to update mailbox and set resourceLoading for threads\n// success will set state.\n// TODO(SHIN): Handle removing selectedIds and selectedThread if changing mailbox\nexport const {\n  type: MAILBOX_SELECT,\n  action: mailboxSelect,\n  reducer: mailboxSelectReducer,\n} = create<Mailbox, Mailbox>('MAILBOX_SELECT', {\n  start: (state, meta) => {\n    const boxChanged = meta.type !== state.mailbox.type;\n    return update(state, {\n      mailbox: { $set: meta },\n      mailboxThreads: { $set: resourceLoading() },\n      selectedThread: { $set: boxChanged ? undefined : state.selectedThread },\n      selectedIds: {\n        $set: isEqual(meta, state.mailbox)\n          ? state.selectedIds\n          : new Map(),\n      },\n    });\n  },\n  success: (state, meta, payload) =>\n    update(state, {\n      mailbox: { $set: payload === null ? undefined : payload },\n      selectedIds: {\n        $set: isEqual(payload, state.mailbox)\n          ? state.selectedIds\n          : new Map(),\n      },\n    }),\n});\n\nconst SWIPE_ACTIONS: Swipe[] = [\n  Swipe.Archive,\n  Swipe.Trash,\n  Swipe.List,\n  Swipe.Later,\n  Swipe.Inbox,\n  Swipe.None,\n];\n\n// Returns thread SwipeActions\nexport const selectThreadSwipeActions = createSelector<\n  undefined,\n  Preferences|Mailbox|undefined,\n  Swipe[]>(\n  [\n    state => state.preferences,\n    state => state.mailbox,\n  ],\n  (prefs: Preferences, box?: Mailbox) => {\n    if (!box) {\n      return SWIPE_ACTIONS;\n    }\n\n    const clonedPrefs = cloneDeep(prefs);\n\n    // Set swipe preference for long to short if short exists and long does not\n    if (prefs.swipeShortLeft !== Swipe.None && prefs.swipeLongLeft === Swipe.None) {\n      clonedPrefs.swipeLongLeft = prefs.swipeShortLeft;\n    }\n    if (prefs.swipeShortRight !== Swipe.None && prefs.swipeLongRight === Swipe.None) {\n      clonedPrefs.swipeLongRight = prefs.swipeShortRight;\n    }\n\n    if (box.list) {\n      return [\n        clonedPrefs.swipeShortRight,\n        clonedPrefs.swipeLongRight,\n        clonedPrefs.swipeLongLeft,\n        clonedPrefs.swipeShortLeft,\n      ];\n    }\n\n    switch (box.type) {\n      case MailboxType.Inbox:\n        return [\n          clonedPrefs.swipeShortRight,\n          clonedPrefs.swipeLongRight,\n          clonedPrefs.swipeLongLeft,\n          clonedPrefs.swipeShortLeft,\n        ];\n      case MailboxType.Later:\n        return [\n          clonedPrefs.swipeShortRight,\n          clonedPrefs.swipeLongRight,\n          clonedPrefs.swipeLongLeft,\n          clonedPrefs.swipeShortLeft,\n        ];\n      case MailboxType.Archive:\n        return [\n          clonedPrefs.swipeShortRight !== Swipe.Archive &&\n            clonedPrefs.swipeShortRight || Swipe.Inbox,\n          clonedPrefs.swipeLongRight !== Swipe.Archive &&\n            clonedPrefs.swipeLongRight || Swipe.Inbox,\n          clonedPrefs.swipeLongLeft !== Swipe.Archive &&\n            clonedPrefs.swipeLongLeft || Swipe.Inbox,\n          clonedPrefs.swipeShortLeft !== Swipe.Archive &&\n            clonedPrefs.swipeShortLeft || Swipe.Inbox,\n        ];\n      case MailboxType.Trash:\n      case MailboxType.Spam:\n        return [\n          clonedPrefs.swipeShortRight !== Swipe.Trash &&\n            clonedPrefs.swipeShortRight || Swipe.Inbox,\n          clonedPrefs.swipeLongRight !== Swipe.Trash &&\n            clonedPrefs.swipeLongRight || Swipe.Inbox,\n          clonedPrefs.swipeLongLeft !== Swipe.Trash &&\n            clonedPrefs.swipeLongLeft || Swipe.Inbox,\n          clonedPrefs.swipeShortLeft !== Swipe.Trash &&\n            clonedPrefs.swipeShortLeft || Swipe.Inbox,\n        ];\n      default: break;\n    }\n\n    return SWIPE_ACTIONS;\n  },\n  (prefs: Preferences, mailbox: Mailbox) => mailbox.type,\n  ['mailbox', 'preferences'],\n);\n\nexport default [\n  mailboxSelectReducer,\n];\n"]}]}