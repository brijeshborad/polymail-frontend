{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/scheduling.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/scheduling.ts","mtime":1675280254051},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/scheduling.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/scheduling.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,gBAAgB,CAAC;AACxC,OAAO,MAAM,MAAM,QAAQ,CAAC;AAC5B,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,QAAQ,CAAC;AACvC,OAAO,MAAM,MAAM,qBAAqB,CAAC;AAGzC,OAAO,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAC;AACnD,OAAO,EAAE,UAAU,EAAE,cAAc,EAAE,eAAe,EAAE,MAAM,mBAAmB,CAAC;AAChF,OAAO,EAAE,uBAAuB,EAAE,MAAM,mBAAmB,CAAC;AAE5D,MAAM,CACJ,IAAA;;YAAyB,EACzB,6BAAyB,EACzB,qCAAiC,CAGhC;AAEH,MAAM,CACJ,IAAA;;;;;;;;YAAqB,EACrB,0BAAsB,EACtB,kCAA8B,CAS7B;AAOH,MAAM,CACJ,IAAA;;;;;;;;;;;YAAuB,EACvB,4BAAwB,EACxB,oCAAgC,CAS/B;AAEH,MAAM,CACJ,IAAA;;;;;;;;;;;YAAuB,EACvB,4BAAwB,EACxB,oCAAgC,CAS/B;AAEH,MAAM,CACJ,IAAA;;;;;;;;YAAuB,EACvB,4BAAwB,EACxB,oCAAgC,CAS/B;AAOH,MAAM,CACJ,IAAA;;;;;;;;;;;;;;;;;;;;;YAA2B,EAC3B,+BAA2B,EAC3B,uCAAmC,CAoBlC;AAOH,0EAA0E;AAC1E,4DAA4D;AAC5D,MAAM,CACJ,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAAqB,EACrB,yBAAqB,EACrB,iCAA6B,CAoF5B;AAQH,MAAM,CACJ,IAAA;;;;;;;;;;;;;;;;;;;;;;YAA2B,EAC3B,+BAA2B,EAC3B,uCAAmC,CAuBlC;AAEH,kCAAkC;AAClC,MAAM,CAAC,IAAM,2BAA2B,GAAG,cAAc,CAKvD;IACE,UAAC,KAAK;QACJ,OAAO,KAAK,CAAC,UAAU,IAAI,KAAK,CAAC,UAAU,CAAC,WAAW;YACrD,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YAC/E,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ;YACjD,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,SAAS,CAAC;IAC9D,CAAC;IACD,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,EAAE,IAAI,KAAK,CAAC,EAAE,CAAC,IAAI,IAAI,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,EAA/C,CAA+C;CACzD,EACD,UAAC,IAAI,EAAE,QAAQ;IACb,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,QAAQ,EAAE;QACxB,OAAU,OAAO,CAAC,GAAG,CAAC,cAAc,SAAI,QAAQ,SAAI,IAAM,CAAC;KAC5D;IAED,OAAO,SAAS,CAAC;AACnB,CAAC,EACD,UAAC,IAAI,EAAE,QAAQ,IAAK,OAAA,KAAG,QAAQ,GAAG,IAAM,EAApB,CAAoB,EACxC,CAAC,YAAY,EAAE,IAAI,CAAC,CACrB,CAAC;AAEF,eAAe;IACb,qBAAqB;IACrB,uBAAuB;IACvB,uBAAuB;IACvB,uBAAuB;IACvB,oBAAoB;IACpB,0BAA0B;IAC1B,0BAA0B;CAC3B,CAAC","sourcesContent":["import { create } from '@src/lib/redux';\nimport moment from 'moment';\nimport { keyBy, values } from 'lodash';\nimport update from 'immutability-helper';\nimport { RequiredPartial, CalendarEvent, Attendee } from '@src/types';\nimport { Scheduling, SchedulingPublic, TimeSlot } from '@src/types/scheduling';\nimport { createSelector } from '@src/lib/selector';\nimport { resourceOk, resourceFailed, resourcePending } from '@src/lib/resource';\nimport { getSecondsSinceMidnight } from '@src/lib/datetime';\n\nexport const {\n  type: SCHEDULING_URL_COPY,\n  action: schedulingUrlCopy,\n  reducer: schedulingUrlCopyReducer,\n} = create<Scheduling, string>('SCHEDULING_URL_COPY', {\n  success: (state, meta, payload) => update(state, {}),\n});\n\nexport const {\n  type: SCHEDULING_LIST,\n  action: schedulingList,\n  reducer: schedulingListReducer,\n} = create<null, Scheduling[]>('SCHEDULING_LIST', {\n  success: (state, meta, payload) => update(state, {\n    scheduling: {\n      schedulings: {\n        $set: keyBy(payload, 'id'),\n      },\n    },\n  }),\n});\n\nexport type SchedulingCreateMeta = RequiredPartial<\n  Scheduling,\n  'calendar' | 'blockingCalendars' | 'timeZone'\n  >;\n\nexport const {\n  type: SCHEDULING_CREATE,\n  action: schedulingCreate,\n  reducer: schedulingCreateReducer,\n} = create<SchedulingCreateMeta, Scheduling>('SCHEDULING_CREATE', {\n  success: (state, meta, payload) => update(state, {\n    scheduling: {\n      schedulings: {\n        [payload.id]: { $set: payload },\n      },\n    },\n  }),\n});\n\nexport const {\n  type: SCHEDULING_UPDATE,\n  action: schedulingUpdate,\n  reducer: schedulingUpdateReducer,\n} = create<Scheduling, Scheduling>('SCHEDULING_UPDATE', {\n  success: (state, meta, payload) => update(state, {\n    scheduling: {\n      schedulings: {\n        [meta.id]: { $set: payload },\n      },\n    },\n  }),\n});\n\nexport const {\n  type: SCHEDULING_DELETE,\n  action: schedulingDelete,\n  reducer: schedulingDeleteReducer,\n} = create<Scheduling, null>('SCHEDULING_DELETE', {\n  success: (state, meta, payload) => update(state, {\n    scheduling: {\n      schedulings: {\n        $unset: [meta.id],\n      },\n    },\n  }),\n});\n\nexport interface SchedulingPublicMeta {\n  userSlug: string;\n  slug: string;\n}\n\nexport const {\n  type: SCHEDULING_PUBLIC_GET,\n  action: schedulingPublicGet,\n  reducer: schedulingPublicGetReducer,\n} = create<SchedulingPublicMeta, SchedulingPublic>('SCHEDULING_PUBLIC_GET', {\n  success: (state, meta, payload) => {\n    return update(state, {\n      scheduling: {\n        schedulingPublics: {\n          [meta.userSlug + meta.slug]: { $set: resourceOk(payload) },\n        },\n      },\n    });\n  },\n  failure: (state, meta, error) => {\n    return update(state, {\n      scheduling: {\n        schedulingPublics: {\n          [meta.userSlug + meta.slug]: { $set: resourceFailed(error) },\n        },\n      },\n    });\n  },\n});\n\nexport interface TimeSlotMeta extends SchedulingPublicMeta {\n  start: Date;\n  end: Date;\n}\n\n// TODO(SHIN): Make sure that time windows correlate with correct timezone\n// TODO(SHIN): Move into own function method, easier to test\nexport const {\n  type: TIME_SLOTS_LIST,\n  action: timeslotsList,\n  reducer: timeSlotsListReducer,\n} = create<TimeSlotMeta, TimeSlot[]>('TIME_SLOTS_LIST', {\n  start: (state, meta) => {\n    const daySeparatedTimeSlots = {};\n    let dayIterator = moment(meta.start);\n    const end = moment(meta.end);\n\n    while (dayIterator < end) {\n      const key = dayIterator.startOf('day');\n      daySeparatedTimeSlots[key.toString()] = [];\n      dayIterator = dayIterator.add(1, 'day');\n    }\n\n    return update(state, {\n      scheduling: {\n        timeSlots: {\n          $set: daySeparatedTimeSlots,\n        },\n        timeSlotsLoading: { $set: true },\n        timeSlotsError: { $set: undefined },\n      },\n    });\n  },\n  success: (state, meta, payload) => {\n    // Calculate timeslots for each individual day\n    const timeslots = payload;\n    const daySeparatedTimeSlots = {};\n    const start = moment(timeslots[0].startTime);\n    const end = moment(meta.end);\n\n    // Identify bounds of unblocked times\n    const unblockedTimeSlots = timeslots\n      .filter(slot => !slot.blocking);\n    const startBound = unblockedTimeSlots\n      .map(slot => getSecondsSinceMidnight(moment(slot.startTime)))\n      .sort((a, b) => a - b)[0];\n    const endBound = unblockedTimeSlots\n      .map(slot => getSecondsSinceMidnight(moment(slot.endTime)))\n      .sort((a, b) => b - a)[0];\n\n    // Separate out into days\n    let dayIterator = start;\n    while (dayIterator < end) {\n      const filteredTimeslots = timeslots\n        .filter((slot) => {\n          const startMoment = moment(slot.startTime);\n          const endMoment = moment(slot.endTime);\n          // Return value if startTime is of same day and slot is within time bounds\n          // and slot is in the future\n          const slotStart = getSecondsSinceMidnight(startMoment);\n          const slotEnd = getSecondsSinceMidnight(endMoment);\n\n          // If proper end and start bounds, bound between time windows\n          if (endBound > startBound) {\n            return moment(slot.startTime).isSame(dayIterator, 'day') &&\n              slotStart >= startBound && slotEnd <= endBound;\n          }\n\n          // Otherwise just check day slots\n          return moment(slot.startTime).isSame(dayIterator, 'day');\n        });\n\n      // Push timeslots for that partifcular day\n      daySeparatedTimeSlots[dayIterator.startOf('day').toString()] = filteredTimeslots;\n      dayIterator = dayIterator.add(1, 'days');\n    }\n\n    // Update timeslots\n    return update(state, {\n      scheduling: {\n        timeSlots: {\n          $merge: daySeparatedTimeSlots,\n        },\n        timeSlotsLoading: { $set: false },\n      },\n    });\n  },\n  failure: (state, meta, error) => {\n    return update(state, {\n      scheduling: {\n        timeSlotsError: { $set: error },\n      },\n    });\n  },\n});\n\nexport interface CalendarEventCreateMeta extends SchedulingPublicMeta {\n  attendees: Attendee[];\n  start: Date;\n  end: Date;\n}\n\nexport const {\n  type: CALENDAR_EVENT_CREATE,\n  action: calendarEventCreate,\n  reducer: calendarEventCreateReducer,\n} = create < CalendarEventCreateMeta, CalendarEvent>('CALENDAR_EVENT_CREATE', {\n  start: (state, meta) => {\n    return update(state, {\n      scheduling: {\n        createdEvent: { $set: resourcePending() },\n      },\n    });\n  },\n  success: (state, meta, payload) => {\n    return update(state, {\n      scheduling: {\n        createdEvent: { $set: resourceOk(payload) },\n      },\n    });\n  },\n  failure: (state, meta, error) => {\n    return update(state, {\n      scheduling: {\n        createdEvent: { $set: resourceFailed(error) },\n      },\n    });\n  },\n});\n\n// Selects calendar scheduling url\nexport const selectCalendarSchedulingUrl = createSelector<\n  null,\n  string | undefined,\n  string | undefined\n>(\n  [\n    (state) => {\n      return state.scheduling && state.scheduling.schedulings &&\n        values(state.scheduling.schedulings) && values(state.scheduling.schedulings)[0] &&\n        !values(state.scheduling.schedulings)[0].disabled &&\n        values(state.scheduling.schedulings)[0].slug || undefined;\n    },\n    state => state.me && state.me.data && state.me.data.slug,\n  ],\n  (slug, userSlug) => {\n    if (!!slug && !!userSlug) {\n      return `${process.env.SCHEDULING_URL}/${userSlug}/${slug}`;\n    }\n\n    return undefined;\n  },\n  (slug, userSlug) => `${userSlug}${slug}`,\n  ['scheduling', 'me'],\n);\n\nexport default [\n  schedulingListReducer,\n  schedulingCreateReducer,\n  schedulingUpdateReducer,\n  schedulingDeleteReducer,\n  timeSlotsListReducer,\n  calendarEventCreateReducer,\n  schedulingPublicGetReducer,\n];\n"]}]}