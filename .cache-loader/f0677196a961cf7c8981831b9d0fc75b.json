{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/worker/sync/TeamMemberSync.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/worker/sync/TeamMemberSync.ts","mtime":1675280254125},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkgewogICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBmdW5jdGlvbiAoZCwgYikgewogICAgICAgIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwKICAgICAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fAogICAgICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChiLmhhc093blByb3BlcnR5KHApKSBkW3BdID0gYltwXTsgfTsKICAgICAgICByZXR1cm4gZXh0ZW5kU3RhdGljcyhkLCBiKTsKICAgIH07CiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHsKICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpOwogICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfQogICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTsKICAgIH07Cn0pKCk7CmltcG9ydCB7IFN0b3JlcyB9IGZyb20gJ0BzcmMvbGliL2RiJzsKaW1wb3J0IHsgVGVhbU1lbWJlckNsaWVudCB9IGZyb20gJ0BzcmMvYXBpL3RlYW1NZW1iZXJzJzsKaW1wb3J0IHsgQVBJU3luYyB9IGZyb20gJy4vQVBJU3luYyc7CmltcG9ydCB7IHNlbmRUZWFtTWVtYmVyVXBkYXRlZCB9IGZyb20gJ0BzcmMvd29ya2VyL2JyaWRnZS93b3JrZXJFdmVudHMnOwp2YXIgVGVhbU1lbWJlclN5bmMgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7CiAgICBfX2V4dGVuZHMoVGVhbU1lbWJlclN5bmMsIF9zdXBlcik7CiAgICAvLyAtIGFwcCBicmlkZ2UgaW50ZXJmYWNlCiAgICBmdW5jdGlvbiBUZWFtTWVtYmVyU3luYyh0ZWFtLCBhcGkpIHsKICAgICAgICBpZiAoYXBpID09PSB2b2lkIDApIHsgYXBpID0gbmV3IFRlYW1NZW1iZXJDbGllbnQoKTsgfQogICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMsICdUZWFtTWVtYmVyU3luYycsIFN0b3Jlcy5UZWFtTWVtYmVycywgZmFsc2UpIHx8IHRoaXM7CiAgICAgICAgX3RoaXMuYXBpID0gYXBpOwogICAgICAgIF90aGlzLnRlYW0gPSB0ZWFtOwogICAgICAgIHJldHVybiBfdGhpczsKICAgIH0KICAgIFRlYW1NZW1iZXJTeW5jLnByb3RvdHlwZS5mZXRjaE5leHRQYWdlID0gZnVuY3Rpb24gKCkgewogICAgICAgIHJldHVybiB0aGlzLmFwaS5saXN0KHRoaXMudGVhbSkuZG8oZnVuY3Rpb24gKCkgeyByZXR1cm4gc2VuZFRlYW1NZW1iZXJVcGRhdGVkKCk7IH0pOwogICAgfTsKICAgIFRlYW1NZW1iZXJTeW5jLnByb3RvdHlwZS5uZXh0UGFnZU9mZnNldCA9IGZ1bmN0aW9uIChtb2RlbHMpIHsKICAgICAgICByZXR1cm4gJyc7CiAgICB9OwogICAgLy8gVGhlcmUgaXMgbm8gcGFnaW5hdGlvbiBmb3IgdGVhbSBtZW1iZXJzLgogICAgVGVhbU1lbWJlclN5bmMucHJvdG90eXBlLmlzQ29tcGxldGVkID0gZnVuY3Rpb24gKG1vZGVscykgewogICAgICAgIHJldHVybiB0cnVlOwogICAgfTsKICAgIHJldHVybiBUZWFtTWVtYmVyU3luYzsKfShBUElTeW5jKSk7CmV4cG9ydCB7IFRlYW1NZW1iZXJTeW5jIH07CmV4cG9ydCBkZWZhdWx0IFRlYW1NZW1iZXJTeW5jOwo="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/worker/sync/TeamMemberSync.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/worker/sync/TeamMemberSync.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,aAAa,CAAC;AAErC,OAAO,EAAiB,gBAAgB,EAAE,MAAM,sBAAsB,CAAC;AAEvE,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AACpC,OAAO,EAAE,qBAAqB,EAAE,MAAM,iCAAiC,CAAC;AAExE;IAAoC,kCAAmB;IAOrD,yBAAyB;IAEzB,wBACE,IAAY,EACZ,GAA2C;QAA3C,oBAAA,EAAA,UAAyB,gBAAgB,EAAE;QAF7C,YAIE,kBAAM,gBAAgB,EAAE,MAAM,CAAC,WAAW,EAAE,KAAK,CAAC,SAGnD;QAFC,KAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;;IACnB,CAAC;IAES,sCAAa,GAAvB;QACE,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,cAAM,OAAA,qBAAqB,EAAE,EAAvB,CAAuB,CAAC,CAAC;IACpE,CAAC;IAES,uCAAc,GAAxB,UAAyB,MAAoB;QAC3C,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,2CAA2C;IACjC,oCAAW,GAArB,UAAsB,MAAoB;QACxC,OAAO,IAAI,CAAC;IACd,CAAC;IACH,qBAAC;AAAD,CAAC,AA9BD,CAAoC,OAAO,GA8B1C;;AAED,eAAe,cAAc,CAAC","sourcesContent":["import { Stores } from '@src/lib/db';\nimport { TeamMember } from '@src/types';\nimport { TeamMemberAPI, TeamMemberClient } from '@src/api/teamMembers';\nimport { Observable } from 'rxjs';\nimport { APISync } from './APISync';\nimport { sendTeamMemberUpdated } from '@src/worker/bridge/workerEvents';\n\nexport class TeamMemberSync extends APISync<TeamMember> {\n\n  // State\n  team: string;\n\n  // Dependencies\n  private api: TeamMemberAPI;\n  // - app bridge interface\n\n  constructor(\n    team: string,\n    api: TeamMemberAPI = new TeamMemberClient(),\n  ) {\n    super('TeamMemberSync', Stores.TeamMembers, false);\n    this.api = api;\n    this.team = team;\n  }\n\n  protected fetchNextPage(): Observable<TeamMember[]> {\n    return this.api.list(this.team).do(() => sendTeamMemberUpdated());\n  }\n\n  protected nextPageOffset(models: TeamMember[]): string {\n    return '';\n  }\n\n  // There is no pagination for team members.\n  protected isCompleted(models: TeamMember[]): boolean {\n    return true;\n  }\n}\n\nexport default TeamMemberSync;\n"]}]}