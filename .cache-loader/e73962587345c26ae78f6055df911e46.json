{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/mailCounts.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/mailCounts.ts","mtime":1675280254056},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgQWN0aW9uU3RhdHVzLCBEb2NrQ291bnQsIH0gZnJvbSAnQHNyYy90eXBlcyc7CmltcG9ydCB7IE1BSUxfQ09VTlRfVVBEQVRFLCBNQUlMX0NPVU5UX1RJVExFLCBtYWlsQ291bnRUaXRsZSwgc2VsZWN0QWxsTWFpbGJveENvdW50LCB9IGZyb20gJ0BzcmMvZHVja3MvbWFpbENvdW50cyc7CmltcG9ydCB7IFBSRUZFUkVOQ0VTX1VQREFURSwgTUVfRkVUQ0ggfSBmcm9tICdAc3JjL2R1Y2tzL21lJzsKaW1wb3J0IHsgQVVUSF9MT0dPVVQgfSBmcm9tICdAc3JjL2R1Y2tzL2F1dGgnOwovLyBwcmVmZXJlbmNlIGNoYW5nZXMgdHJpZ2dlciBicm93c2VyIHRpdGxlIHVwZGF0ZQp2YXIgcHJlZmVyZW5jZVVwZGF0ZUJyb3dzZXJUaXRsZSA9IGZ1bmN0aW9uIChhY3Rpb24kLCBzdG9yZSwgZGVwcykgewogICAgcmV0dXJuIGFjdGlvbiQub2ZUeXBlKFBSRUZFUkVOQ0VTX1VQREFURSkKICAgICAgICAuZmlsdGVyKGZ1bmN0aW9uIChhY3Rpb24pIHsgcmV0dXJuIGFjdGlvbi5zdGF0dXMgPT09IEFjdGlvblN0YXR1cy5TdWNjZXNzOyB9KQogICAgICAgIC5tYXAoZnVuY3Rpb24gKCkgeyByZXR1cm4gbWFpbENvdW50VGl0bGUobnVsbCk7IH0pOwp9OwovLyBtZSBmZXRjaCB1cGRhdGVzIHRyaWdnZXIgYnJvd3NlciB0aXRsZSB1cGRhdGUKdmFyIG1lRmV0Y2hCcm93c2VyVGl0bGUgPSBmdW5jdGlvbiAoYWN0aW9uJCwgc3RvcmUsIGRlcHMpIHsKICAgIHJldHVybiBhY3Rpb24kLm9mVHlwZShNRV9GRVRDSCkKICAgICAgICAuZmlsdGVyKGZ1bmN0aW9uIChhY3Rpb24pIHsgcmV0dXJuIGFjdGlvbi5zdGF0dXMgPT09IEFjdGlvblN0YXR1cy5TdWNjZXNzOyB9KQogICAgICAgIC5tYXAoZnVuY3Rpb24gKCkgeyByZXR1cm4gbWFpbENvdW50VGl0bGUobnVsbCk7IH0pOwp9OwovLyBsb2dvdXQgdHJpZ2dlciBicm93c2VyIHRpdGxlIHVwZGF0ZQp2YXIgYXV0aExvZ291dEJyb3dzZXJUaXRsZSA9IGZ1bmN0aW9uIChhY3Rpb24kLCBzdG9yZSwgZGVwcykgewogICAgcmV0dXJuIGFjdGlvbiQub2ZUeXBlKEFVVEhfTE9HT1VUKQogICAgICAgIC5maWx0ZXIoZnVuY3Rpb24gKGFjdGlvbikgeyByZXR1cm4gYWN0aW9uLnN0YXR1cyA9PT0gQWN0aW9uU3RhdHVzLlN1Y2Nlc3M7IH0pCiAgICAgICAgLm1hcChmdW5jdGlvbiAoKSB7IHJldHVybiBtYWlsQ291bnRUaXRsZShudWxsKTsgfSk7Cn07Ci8vIGVwaWMgdG8gdHJpZ2dlciBicm93c2VyIHRpdGxlIHVwZGF0ZSBmcm9tIHVwZGF0ZWQgbWFpbCBjb3VudHMKdmFyIG1haWxDb3VudFRyaWdnZXJCcm93c2VyVGl0bGUgPSBmdW5jdGlvbiAoYWN0aW9uJCwgc3RvcmUsIGRlcHMpIHsKICAgIHJldHVybiBhY3Rpb24kLm9mVHlwZShNQUlMX0NPVU5UX1VQREFURSkKICAgICAgICAuZmlsdGVyKGZ1bmN0aW9uIChhY3Rpb24pIHsgcmV0dXJuIGFjdGlvbi5zdGF0dXMgPT09IEFjdGlvblN0YXR1cy5TdWNjZXNzOyB9KQogICAgICAgIC5kZWJvdW5jZVRpbWUoMjAwLCBkZXBzLnNjaGVkdWxlcikKICAgICAgICAubWFwKGZ1bmN0aW9uICgpIHsgcmV0dXJuIG1haWxDb3VudFRpdGxlKG51bGwpOyB9KTsKfTsKLy8gZXBpYyB0byBtYWludGFpbiBhICJkb2NrIGNvdW50IiBpbiB0aGUgYnJvd3NlciB0aXRsZQp2YXIgbWFpbENvdW50QnJvd3NlclRpdGxlID0gZnVuY3Rpb24gKGFjdGlvbiQsIHN0b3JlLCBkZXBzKSB7CiAgICByZXR1cm4gYWN0aW9uJC5vZlR5cGUoTUFJTF9DT1VOVF9USVRMRSkKICAgICAgICAuZmlsdGVyKGZ1bmN0aW9uIChhY3Rpb24pIHsgcmV0dXJuIGFjdGlvbi5zdGF0dXMgPT09IEFjdGlvblN0YXR1cy5TdGFydDsgfSkKICAgICAgICAuZGVib3VuY2VUaW1lKDIwMCwgZGVwcy5zY2hlZHVsZXIpCiAgICAgICAgLm1hcChmdW5jdGlvbiAoKSB7CiAgICAgICAgLy8gZ2V0IHRvdGFsIGNvdW50cwogICAgICAgIHZhciBjb3VudHMgPSBzZWxlY3RBbGxNYWlsYm94Q291bnQoc3RvcmUuZ2V0U3RhdGUoKSk7CiAgICAgICAgdmFyIHRvdGFsID0gY291bnRzLmluYm94UmVhZCArIGNvdW50cy5pbmJveFVucmVhZDsKICAgICAgICAvLyBjYWxjdWxhdGUgbnVtYmVyIHRvIHNob3cgYmFzZWQgb24gZG9jayBwcmVmZXJlbmNlCiAgICAgICAgdmFyIGRvY2tDb3VudCA9IHN0b3JlLmdldFN0YXRlKCkucHJlZmVyZW5jZXMuZG9ja0NvdW50OwogICAgICAgIHZhciBjb3VudCA9IDA7CiAgICAgICAgc3dpdGNoIChkb2NrQ291bnQpIHsKICAgICAgICAgICAgY2FzZSBEb2NrQ291bnQuQWxsOgogICAgICAgICAgICAgICAgY291bnQgPSB0b3RhbDsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICBjYXNlIERvY2tDb3VudC5Cb29sOgogICAgICAgICAgICAgICAgaWYgKHRvdGFsID4gMCkgewogICAgICAgICAgICAgICAgICAgIGNvdW50ID0gMTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICBjYXNlIERvY2tDb3VudC5Cb29sVW5yZWFkOgogICAgICAgICAgICAgICAgaWYgKGNvdW50cy5pbmJveFVucmVhZCA+IDApIHsKICAgICAgICAgICAgICAgICAgICBjb3VudCA9IDE7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgY2FzZSBEb2NrQ291bnQuVW5yZWFkOgogICAgICAgICAgICAgICAgY291bnQgPSBjb3VudHMuaW5ib3hVbnJlYWQ7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgY2FzZSBEb2NrQ291bnQuTm9uZToKICAgICAgICAgICAgZGVmYXVsdDoKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgIH0KICAgICAgICAvLyBzZXQgdGl0bGUKICAgICAgICB2YXIgbmV3VGl0bGUgPSAnUG9seW1haWwnOwogICAgICAgIGlmIChjb3VudCA+IDApIHsKICAgICAgICAgICAgbmV3VGl0bGUgPSAiUG9seW1haWwgKCIgKyBjb3VudCArICIpIjsKICAgICAgICB9CiAgICAgICAgaWYgKGRvY3VtZW50LnRpdGxlICE9PSBuZXdUaXRsZSAmJiAhd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lLnN0YXJ0c1dpdGgoJy9wb3BvdXQnKSkgewogICAgICAgICAgICBkb2N1bWVudC50aXRsZSA9IG5ld1RpdGxlOwogICAgICAgIH0KICAgICAgICAvLyBzZXQgZG9jayBjb3VudCAoZWxlY3Ryb24pCiAgICAgICAgaWYgKHdpbmRvdy5QTUVsZWN0cm9uQnJpZGdlKSB7CiAgICAgICAgICAgIHdpbmRvdy5QTUVsZWN0cm9uQnJpZGdlLnNldEJhZGdlQ291bnQoY291bnQpOwogICAgICAgIH0KICAgICAgICByZXR1cm4gbWFpbENvdW50VGl0bGUobnVsbCwgbnVsbCk7CiAgICB9KTsKfTsKZXhwb3J0IGRlZmF1bHQgWwogICAgbWFpbENvdW50QnJvd3NlclRpdGxlLAogICAgbWVGZXRjaEJyb3dzZXJUaXRsZSwKICAgIHByZWZlcmVuY2VVcGRhdGVCcm93c2VyVGl0bGUsCiAgICBtYWlsQ291bnRUcmlnZ2VyQnJvd3NlclRpdGxlLAogICAgYXV0aExvZ291dEJyb3dzZXJUaXRsZSwKXTsK"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/mailCounts.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/epics/mailCounts.ts"],"names":[],"mappings":"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","sourcesContent":["import { Epic } from 'redux-observable';\n\nimport {\n  StoreState, Action, ActionStatus, DockCount,\n} from '@src/types';\n\nimport {\n  MAIL_COUNT_UPDATE, MAIL_COUNT_TITLE, mailCountTitle, selectAllMailboxCount,\n} from '@src/ducks/mailCounts';\n\nimport { Deps } from '@src/lib/epic';\nimport { PREFERENCES_UPDATE, ME_FETCH } from '@src/ducks/me';\nimport { AUTH_LOGOUT } from '@src/ducks/auth';\n\n// preference changes trigger browser title update\nconst preferenceUpdateBrowserTitle: Epic<Action<null, null>, StoreState, Deps> =\n  (action$, store, deps) =>\n    action$.ofType(PREFERENCES_UPDATE)\n      .filter(action => action.status === ActionStatus.Success)\n      .map(() => mailCountTitle(null));\n\n// me fetch updates trigger browser title update\nconst meFetchBrowserTitle: Epic<Action<null, null>, StoreState, Deps> =\n  (action$, store, deps) =>\n    action$.ofType(ME_FETCH)\n      .filter(action => action.status === ActionStatus.Success)\n      .map(() => mailCountTitle(null));\n\n// logout trigger browser title update\nconst authLogoutBrowserTitle: Epic<Action<null, null>, StoreState, Deps> =\n  (action$, store, deps) =>\n    action$.ofType(AUTH_LOGOUT)\n      .filter(action => action.status === ActionStatus.Success)\n      .map(() => mailCountTitle(null));\n\n// epic to trigger browser title update from updated mail counts\nconst mailCountTriggerBrowserTitle: Epic<Action<null, null>, StoreState, Deps> =\n(action$, store, deps) =>\n  action$.ofType(MAIL_COUNT_UPDATE)\n    .filter(action => action.status === ActionStatus.Success)\n    .debounceTime(200, deps.scheduler)\n    .map(() => mailCountTitle(null));\n\n// epic to maintain a \"dock count\" in the browser title\nconst mailCountBrowserTitle: Epic<Action<null, null>, StoreState, Deps> =\n  (action$, store, deps) =>\n    action$.ofType(MAIL_COUNT_TITLE)\n      .filter(action => action.status === ActionStatus.Start)\n      .debounceTime(200, deps.scheduler)\n      .map(() => {\n        // get total counts\n        const counts = selectAllMailboxCount(store.getState());\n        const total = counts.inboxRead + counts.inboxUnread;\n\n        // calculate number to show based on dock preference\n        const dockCount = store.getState().preferences.dockCount;\n        let count = 0;\n\n        switch (dockCount) {\n          case DockCount.All:\n            count = total;\n            break;\n          case DockCount.Bool:\n            if (total > 0) {\n              count = 1;\n            }\n            break;\n          case DockCount.BoolUnread:\n            if (counts.inboxUnread > 0) {\n              count = 1;\n            }\n            break;\n          case DockCount.Unread:\n            count = counts.inboxUnread;\n            break;\n          case DockCount.None:\n          default:\n            break;\n        }\n\n        // set title\n        let newTitle = 'Polymail';\n        if (count > 0) {\n          newTitle = `Polymail (${count})`;\n        }\n\n        if (document.title !== newTitle && !window.location.pathname.startsWith('/popout')) {\n          document.title = newTitle;\n        }\n\n        // set dock count (electron)\n        if (window.PMElectronBridge) {\n          window.PMElectronBridge.setBadgeCount(count);\n        }\n\n        return mailCountTitle(null, null);\n      });\n\nexport default [\n  mailCountBrowserTitle,\n  meFetchBrowserTitle,\n  preferenceUpdateBrowserTitle,\n  mailCountTriggerBrowserTitle,\n  authLogoutBrowserTitle,\n];\n"]}]}