{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/utils.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/utils.ts","mtime":1675280254069},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkgewogICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHsKICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHsKICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTsKICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKQogICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07CiAgICAgICAgfQogICAgICAgIHJldHVybiB0OwogICAgfTsKICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9OwppbXBvcnQgeyBpc0VsZWN0cm9uIH0gZnJvbSAnQHNyYy9saWIvZWxlY3Ryb24nOwppbXBvcnQgeyBDb21taXRTdGF0dXMgfSBmcm9tICdAc3JjL3R5cGVzJzsKaW1wb3J0IENhY2hlLCB7IFN0b3JlcyB9IGZyb20gJy4vZGInOwppbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7CmltcG9ydCB7IGNhcHR1cmVFeGNlcHRpb24gfSBmcm9tICdAc2VudHJ5L2Jyb3dzZXInOwppbXBvcnQgeyBub3cgfSBmcm9tICcuL2RhdGV0aW1lJzsKaW1wb3J0IHsgZ2V0Q2xlYXJDYWNoZVN0YXR1cyB9IGZyb20gJy4vY2FjaGUnOwppbXBvcnQgeyBzaXplIH0gZnJvbSAnbG9kYXNoJzsKaW1wb3J0IHsgc2VsZWN0RGVidWdEcmFmdHMgfSBmcm9tICdAc3JjL2R1Y2tzL2RyYWZ0cyc7CmltcG9ydCB7IGdldFNlYXJjaERiQ29uZmlnIH0gZnJvbSAnLi9kZXZpY2UnOwppbXBvcnQgeyByZWNvcmRMb2cgfSBmcm9tICcuL2xvZyc7CmltcG9ydCB7IExvZ0xldmVsIH0gZnJvbSAnQHNyYy9hcGkvbG9nJzsKLy8gSWRlbnRpZmllcyBpZiBhY3RpdmUgZWxlbWVudCBpcyBvZiBjb250ZW50ZWRpdGFibGUvaW5wdXQgKG5vdCB0byBiZSB1c2VkIGluIHdvcmtlcikKZXhwb3J0IHZhciBpc0ZvY3VzZWRPbkVkaXRhYmxlQ29udGVudCA9IGZ1bmN0aW9uICgpIHsKICAgIGlmIChkb2N1bWVudC5hY3RpdmVFbGVtZW50KSB7CiAgICAgICAgaWYgKGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQuZ2V0QXR0cmlidXRlKCdjb250ZW50ZWRpdGFibGUnKSkgewogICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICB9CiAgICAgICAgaWYgKGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQuZ2V0QXR0cmlidXRlKCd0eXBlJykgPT09ICdzZWFyY2gnKSB7CiAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgIH0KICAgICAgICBpZiAoWydJTlBVVCcsICdURVhUQVJFQSddLmluZGV4T2YoZG9jdW1lbnQuYWN0aXZlRWxlbWVudC50YWdOYW1lKSA+IC0xKSB7CiAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgIH0KICAgIH0KICAgIHJldHVybiBmYWxzZTsKfTsKdmFyIHN0YXJ0VGltZSA9IG5vdygpOwpleHBvcnQgdmFyIHJ1bkRlYnVnID0gZnVuY3Rpb24gKHN0YXRlKSB7CiAgICAvLyBDdXJyZW50IHRpbWVzdGFtcAogICAgdmFyIGN1cnJlbnRUaW1lID0gbm93KCk7CiAgICAvLyBUaW1lIGFwcCB3YXMgcnVubmluZyBmb3IKICAgIHZhciB0aW1lUnVubmluZyA9IG5vdygpLnRvRGF0ZSgpLmdldFRpbWUoKSAtIHN0YXJ0VGltZS50b0RhdGUoKS5nZXRUaW1lKCk7CiAgICAvLyBTY3JlZW4gZGltZW5zaW9ucwogICAgdmFyIGRpbWVuc2lvbnMgPSB7CiAgICAgICAgd2lkdGg6IHdpbmRvdy5zY3JlZW4ud2lkdGgsCiAgICAgICAgaGVpZ2h0OiB3aW5kb3cuc2NyZWVuLmhlaWdodCwKICAgIH07CiAgICAvLyBVc2VyIGlkCiAgICB2YXIgdXNlcklkID0gc3RhdGUubWUgJiYgc3RhdGUubWUuZGF0YSAmJiBzdGF0ZS5tZS5kYXRhLmlkIHx8IHVuZGVmaW5lZDsKICAgIC8vIFJlZHV4IHNoYXBlCiAgICB2YXIgcmVkdXhTaGFwZSA9IE9iamVjdC5rZXlzKHN0YXRlKS5yZWR1Y2UoZnVuY3Rpb24gKGRpY3QsIGtleSkgewogICAgICAgIGRpY3Rba2V5XSA9IHN0YXRlW2tleV0gJiYgc2l6ZShzdGF0ZVtrZXldKSB8fCAwOwogICAgICAgIHJldHVybiBkaWN0OwogICAgfSwge30pOwogICAgLy8gc3JjIHZlcnNpb24KICAgIHZhciBzcmNWZXJzaW9uID0gcHJvY2Vzcy5lbnYuU09VUkNFX1ZFUlNJT047CiAgICAvLyB1c2VyIGFnZW50CiAgICB2YXIgdXNlckFnZW50ID0gbmF2aWdhdG9yLnVzZXJBZ2VudDsKICAgIC8vIEdldCBjb3VudHMgb2YgZWFjaCBzdG9yZQogICAgdmFyIGFsbENvdW50cyA9IE9iamVjdC52YWx1ZXMoU3RvcmVzKS5tYXAoZnVuY3Rpb24gKHMpIHsgcmV0dXJuIENhY2hlLmNvdW50QWxsKHMpOyB9KTsKICAgIC8vIEdldCBhbGwgb3V0Ym94IGRyYWZ0cwogICAgdmFyIHNlbmRpbmdEcmFmdHMgPSBzZWxlY3REZWJ1Z0RyYWZ0cyhzdGF0ZSkubWFwKGZ1bmN0aW9uIChkKSB7IHJldHVybiAoewogICAgICAgIGlkOiBkLmlkLAogICAgICAgIHN0YXR1czogZC5zdGF0dXMsCiAgICAgICAgc2NoZWR1bGVkOiBkLnNjaGVkdWxlZCwKICAgICAgICB2ZXJzaW9uOiBkLnZlcnNpb24sCiAgICB9KTsgfSk7CiAgICAvLyBEZWZhdWx0IHNldCBvZiBwcm9wcwogICAgdmFyIGFsbFByb3BzID0gewogICAgICAgIHN0YXJ0VGltZTogc3RhcnRUaW1lLAogICAgICAgIGN1cnJlbnRUaW1lOiBjdXJyZW50VGltZSwKICAgICAgICB0aW1lUnVubmluZzogdGltZVJ1bm5pbmcsCiAgICAgICAgZGltZW5zaW9uczogZGltZW5zaW9ucywKICAgICAgICB1c2VySWQ6IHVzZXJJZCwKICAgICAgICByZWR1eFNoYXBlOiByZWR1eFNoYXBlLAogICAgICAgIHNyY1ZlcnNpb246IHNyY1ZlcnNpb24sCiAgICAgICAgdXNlckFnZW50OiB1c2VyQWdlbnQsCiAgICAgICAgc2VuZGluZ0RyYWZ0czogc2VuZGluZ0RyYWZ0cywKICAgICAgICBzZWFyY2hEYkNvbmZpZzogZ2V0U2VhcmNoRGJDb25maWcoKSwKICAgIH07CiAgICAvLyBTZW50cnkgY2FwdHVyZSBvZiBjb25zb2xlCiAgICBjYXB0dXJlRXhjZXB0aW9uKG5ldyBFcnJvcignVXNlciBkZWJ1ZyBhY3RpdmF0ZWQnKSk7CiAgICAvLyBSZWNvcmQgdG8gbG9ncwogICAgcmVjb3JkTG9nKExvZ0xldmVsLkRlYnVnLCAnVXNlciBEZWJ1ZyBTdGFydGVkJywgYWxsUHJvcHMpOwogICAgLy8gWmlwIGFsbCBpbmRleGVkIGRiIGNvdW50IHJlcXVlc3RzCiAgICByZXR1cm4gT2JzZXJ2YWJsZS56aXAuYXBwbHkoT2JzZXJ2YWJsZSwgYWxsQ291bnRzKS5mbGF0TWFwKGZ1bmN0aW9uICh2YWx1ZXMpIHsKICAgICAgICB2YXIgZW5kRGljdCA9IHZhbHVlcy5yZWR1Y2UoZnVuY3Rpb24gKGRpY3QsIG5leHQpIHsKICAgICAgICAgICAgcmV0dXJuIF9fYXNzaWduKF9fYXNzaWduKHt9LCBkaWN0KSwgbmV4dCk7CiAgICAgICAgfSwge30pOwogICAgICAgIC8vIEFkZCBzdG9yZSBjb3VudHMKICAgICAgICBhbGxQcm9wcy5zdG9yZUNvdW50cyA9IGVuZERpY3Q7CiAgICAgICAgLy8gTG9nCiAgICAgICAgcmVjb3JkTG9nKExvZ0xldmVsLkRlYnVnLCAnVXNlciBEZWJ1ZyBTdG9yZSBDb3VudHMnLCBhbGxQcm9wcy5zdG9yZUNvdW50cyk7CiAgICAgICAgLy8gRmV0Y2ggc3RvcmFnZSBlc3RpbWF0ZXMKICAgICAgICBpZiAobmF2aWdhdG9yLnN0b3JhZ2UpIHsKICAgICAgICAgICAgcmV0dXJuIG5hdmlnYXRvci5zdG9yYWdlLmVzdGltYXRlKCk7CiAgICAgICAgfQogICAgICAgIC8vIE90aGVyd2lzZSByZXR1cm4gdW5kZWZpbmVkCiAgICAgICAgcmV0dXJuIE9ic2VydmFibGUub2YobnVsbCk7CiAgICB9KQogICAgICAgIC5mbGF0TWFwKGZ1bmN0aW9uIChzdG9yYWdlRXN0aW1hdGUpIHsKICAgICAgICAvLyBBZGQgc3RvcmFnZSBlc3RpbWF0ZQogICAgICAgIGFsbFByb3BzLnN0b3JhZ2VFc3RpbWF0ZSA9IHN0b3JhZ2VFc3RpbWF0ZTsKICAgICAgICAvLyBMb2cKICAgICAgICByZWNvcmRMb2coTG9nTGV2ZWwuRGVidWcsICdVc2VyIERlYnVnIFN0b3JhZ2UgRXN0aW1hdGUnLCB7IHN0b3JhZ2VFc3RpbWF0ZTogc3RvcmFnZUVzdGltYXRlIH0pOwogICAgICAgIHJldHVybiBDYWNoZS5nZXRBbGwoU3RvcmVzLldvcmtlcnMpOwogICAgfSkKICAgICAgICAuZmxhdE1hcChmdW5jdGlvbiAod29ya2VySW5mbykgewogICAgICAgIC8vIEFkZCB3b3JrZXIgb2JqZWN0cwogICAgICAgIGFsbFByb3BzLndvcmtlckluZm8gPSB3b3JrZXJJbmZvOwogICAgICAgIC8vIExvZwogICAgICAgIGlmICh3b3JrZXJJbmZvKSB7CiAgICAgICAgICAgIHdvcmtlckluZm8uZm9yRWFjaChmdW5jdGlvbiAodykgewogICAgICAgICAgICAgICAgcmVjb3JkTG9nKExvZ0xldmVsLkRlYnVnLCAnVXNlciBEZWJ1ZyBXb3JrZXIgSW5mbycsIHsgd29ya2VyOiB3IH0pOwogICAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIGdldENsZWFyQ2FjaGVTdGF0dXMoKTsKICAgIH0pCiAgICAgICAgLmZsYXRNYXAoZnVuY3Rpb24gKGNsZWFyQ2FjaGUpIHsKICAgICAgICAvLyBBZGQgd29ya2VyIG9iamVjdHMKICAgICAgICBhbGxQcm9wcy5jbGVhckNhY2hlID0gY2xlYXJDYWNoZTsKICAgICAgICAvLyBMb2cKICAgICAgICBpZiAoY2xlYXJDYWNoZSkgewogICAgICAgICAgICByZWNvcmRMb2coTG9nTGV2ZWwuRGVidWcsICdVc2VyIERlYnVnIENsZWFyIENhY2hlIFN0YXR1cycsIGNsZWFyQ2FjaGUpOwogICAgICAgIH0KICAgICAgICByZXR1cm4gQ2FjaGUuZ2V0QWxsKFN0b3Jlcy5Db21taXRzKTsKICAgIH0pCiAgICAgICAgLmZsYXRNYXAoZnVuY3Rpb24gKGNvbW1pdHMpIHsKICAgICAgICB2YXIgZW5kQ29tbWl0cyA9IGNvbW1pdHMKICAgICAgICAgICAgLmZpbHRlcihmdW5jdGlvbiAoYykgeyByZXR1cm4gYy5zdGF0dXMgIT09IENvbW1pdFN0YXR1cy5Db21wbGV0ZTsgfSkKICAgICAgICAgICAgLm1hcChmdW5jdGlvbiAoYykgewogICAgICAgICAgICByZXR1cm4gKF9fYXNzaWduKF9fYXNzaWduKHt9LCBjKSwgeyBwYXlsb2FkOiBPYmplY3Qua2V5cyhjLnBheWxvYWQgfHwge30pLCB1bmRvUGF5bG9hZDogT2JqZWN0LmtleXMoYy51bmRvUGF5bG9hZCB8fCB7fSksIHJlaHlkcmF0ZU1ldGE6IE9iamVjdC5rZXlzKGMucmVoeWRyYXRlTWV0YSB8fCB7fSkgfSkpOwogICAgICAgIH0pOwogICAgICAgIC8vIExvZwogICAgICAgIGlmIChlbmRDb21taXRzKSB7CiAgICAgICAgICAgIGVuZENvbW1pdHMuZm9yRWFjaChmdW5jdGlvbiAoY29tbWl0LCBpKSB7CiAgICAgICAgICAgICAgICByZWNvcmRMb2coTG9nTGV2ZWwuRGVidWcsICdVc2VyIERlYnVnIENvbW1pdCAjJyArIGksIGNvbW1pdCk7CiAgICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgICAvLyBBZGQgd29ya2VyIG9iamVjdHMKICAgICAgICBhbGxQcm9wcy5jb21taXRzID0gZW5kQ29tbWl0czsKICAgICAgICByZXR1cm4gQ2FjaGUuZ2V0QWxsKFN0b3Jlcy5GaWxlVXBsb2Fkcyk7CiAgICB9KQogICAgICAgIC5mbGF0TWFwKGZ1bmN0aW9uICh1cGxvYWRzKSB7CiAgICAgICAgdmFyIGVuZFVwbG9hZHMgPSB1cGxvYWRzCiAgICAgICAgICAgIC5maWx0ZXIoZnVuY3Rpb24gKGMpIHsgcmV0dXJuIGMuc3RhdHVzICE9PSBDb21taXRTdGF0dXMuQ29tcGxldGU7IH0pCiAgICAgICAgICAgIC5tYXAoZnVuY3Rpb24gKGMpIHsKICAgICAgICAgICAgcmV0dXJuIChfX2Fzc2lnbihfX2Fzc2lnbih7fSwgYyksIHsgbWV0YTogX19hc3NpZ24oX19hc3NpZ24oe30sIGMubWV0YSksIHsgZmlsZTogdW5kZWZpbmVkLCBmaWxlbmFtZTogdW5kZWZpbmVkLCBjbG91ZFVybDogdW5kZWZpbmVkIH0pIH0pKTsKICAgICAgICB9KTsKICAgICAgICAvLyBMb2cKICAgICAgICBpZiAoZW5kVXBsb2FkcykgewogICAgICAgICAgICBlbmRVcGxvYWRzLmZvckVhY2goZnVuY3Rpb24gKHVwbG9hZCwgaSkgewogICAgICAgICAgICAgICAgcmVjb3JkTG9nKExvZ0xldmVsLkRlYnVnLCAnVXNlciBEZWJ1ZyBVcGxvYWQgIycgKyBpLCB1cGxvYWQpOwogICAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgICAgLy8gQWRkIHdvcmtlciBvYmplY3RzCiAgICAgICAgYWxsUHJvcHMuZmlsZVVwbG9hZHMgPSBlbmRVcGxvYWRzOwogICAgICAgIHJldHVybiBPYnNlcnZhYmxlLm9mKGFsbFByb3BzKTsKICAgIH0pCiAgICAgICAgLmNhdGNoKGZ1bmN0aW9uIChlKSB7CiAgICAgICAgY2FwdHVyZUV4Y2VwdGlvbihlKTsKICAgICAgICB2YXIgc3RyRXJyb3IgPSAoZSB8fCAndW5rbm93bicpLnRvU3RyaW5nKCk7CiAgICAgICAgYWxsUHJvcHMudXNlckRlYnVnRXJyb3IgPSAoZSB8fCAndW5rbm93bicpLnRvU3RyaW5nKCk7CiAgICAgICAgcmVjb3JkTG9nKExvZ0xldmVsLkVycm9yLCAnVXNlciBEZWJ1ZyBFcnJvcicsIHsgZXJyb3I6IHN0ckVycm9yIH0pOwogICAgICAgIHJldHVybiBPYnNlcnZhYmxlLm9mKGFsbFByb3BzKTsKICAgIH0pOwp9OwpleHBvcnQgZnVuY3Rpb24gZm9ybWF0Q3VycmVuY3kodmFsdWUpIHsKICAgIHZhciBmb3JtYXR0ZWQgPSBuZXcgSW50bC5OdW1iZXJGb3JtYXQoJ2VuLVVTJywgeyBzdHlsZTogJ2N1cnJlbmN5JywgY3VycmVuY3k6ICdVU0QnIH0pLmZvcm1hdCh2YWx1ZSk7CiAgICBpZiAoZm9ybWF0dGVkLmVuZHNXaXRoKCcuMDAnKSkgewogICAgICAgIHJldHVybiBmb3JtYXR0ZWQuc3Vic3RyKDAsIGZvcm1hdHRlZC5sZW5ndGggLSAzKTsKICAgIH0KICAgIHJldHVybiBmb3JtYXR0ZWQ7Cn0KZXhwb3J0IGZ1bmN0aW9uIGZvcm1hdEN1cnJlbmN5Q2VudHModmFsdWUpIHsKICAgIHJldHVybiBmb3JtYXRDdXJyZW5jeSgodmFsdWUgLyAxMDApKTsKfQovLyBhZGRlZCBhbiBhYnNvbHV0ZVBhdGggcGFyYW0gdG8gYWxsb3cgdGhlIHVzZSBvZiB0aGUgc3RhZ2luZyBzZXJ2ZXIKLy8gZm9yIHRoZSBPQXV0aCBmbG93IGluIGxvY2FsIGRldmVsb3BtZW50IG9yIGFueSBvdGhlciB0aW1lIHdlIG5lZWQgdG8KZXhwb3J0IGZ1bmN0aW9uIGdldFVybChyZWxhdGl2ZVBhdGgsIGFic29sdXRlUGF0aCkgewogICAgdmFyIHBvcnQgPSAhIXdpbmRvdy5sb2NhdGlvbi5wb3J0ID8gJzonICsgd2luZG93LmxvY2F0aW9uLnBvcnQgOiAnJzsKICAgIHZhciBwcmVmaXggPSBpc0VsZWN0cm9uID8gInBvbHltYWlsOi8vIiA6CiAgICAgICAgYWJzb2x1dGVQYXRoICYmIGlzRGV2KCkKICAgICAgICAgICAgPyAnaHR0cHM6Ly9kb2dlLnBvbHltYWlsLmlvJyAvLyBtYWtlIG9hdXRoIHJlZGlyZWN0cyB3b3JrIGluIGRldmVsb3BtZW50CiAgICAgICAgICAgIDogd2luZG93LmxvY2F0aW9uLnByb3RvY29sICsgJy8vJyArIHdpbmRvdy5sb2NhdGlvbi5ob3N0bmFtZSArIHBvcnQ7CiAgICByZXR1cm4gcHJlZml4ICsgcmVsYXRpdmVQYXRoOwp9CmV4cG9ydCB2YXIgaXNSaWdodFRvTGVmdENoYXIgPSBmdW5jdGlvbiAoY2hhckNvZGUpIHsKICAgIHZhciBoZWJyZXcgPSB7IGxvd2VyOiAnMDU5MCcsIHVwcGVyOiAnMDVGRicgfTsKICAgIHZhciBhcmFiaWMgPSB7IGxvd2VyOiAnMDYwMCcsIHVwcGVyOiAnMDZGRicgfTsKICAgIHZhciBydGwgPSBbCiAgICAgICAgaGVicmV3LAogICAgICAgIGFyYWJpYywKICAgIF07CiAgICBmb3IgKHZhciBfaSA9IDAsIHJ0bF8xID0gcnRsOyBfaSA8IHJ0bF8xLmxlbmd0aDsgX2krKykgewogICAgICAgIHZhciBsYW5nID0gcnRsXzFbX2ldOwogICAgICAgIGlmIChwYXJzZUludChsYW5nLmxvd2VyLCAxNikgPCBjaGFyQ29kZSAmJiBwYXJzZUludChsYW5nLnVwcGVyLCAxNikgPiBjaGFyQ29kZSkgewogICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICB9CiAgICB9CiAgICByZXR1cm4gZmFsc2U7Cn07CmV4cG9ydCBmdW5jdGlvbiBpc1ZhbGlkUGhvbmVOdW1iZXIocGhvbmUpIHsKICAgIHZhciBwaG9uZVRyaW1tZWQgPSBwaG9uZS50cmltKCkucmVwbGFjZSgvKFxzfFwofFwpfC0pL2csICcnKTsKICAgIHZhciByZWdleCA9IG5ldyBSZWdFeHAoL15bK10/W1xzLi8wLTldKlsoXT9bMC05XXsxLDR9WyldP1stXHMuLzAtOV0qJC9nKTsKICAgIHJldHVybiAhIXBob25lVHJpbW1lZC5tYXRjaChyZWdleCk7Cn0KZXhwb3J0IGZ1bmN0aW9uIGlzRGV2KCkgewogICAgcmV0dXJuIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbic7Cn0KZXhwb3J0IGZ1bmN0aW9uIGdldFVybFBhcmFtc0J5S2V5cyhrZXlzKSB7CiAgICB2YXIgcGFyYW1zID0ge307CiAgICB2YXIgc2VhcmNoID0gd2luZG93LmxvY2F0aW9uLnNlYXJjaDsKICAgIGlmIChzZWFyY2gpIHsKICAgICAgICB2YXIgcGFpcnMgPSBzZWFyY2guc3Vic3RyaW5nKDEpLnNwbGl0KCcmJyk7CiAgICAgICAgZm9yICh2YXIgX2kgPSAwLCBwYWlyc18xID0gcGFpcnM7IF9pIDwgcGFpcnNfMS5sZW5ndGg7IF9pKyspIHsKICAgICAgICAgICAgdmFyIHBhaXIgPSBwYWlyc18xW19pXTsKICAgICAgICAgICAgdmFyIF9hID0gcGFpci5zcGxpdCgnPScpLCBrZXkgPSBfYVswXSwgdmFsdWUgPSBfYVsxXTsKICAgICAgICAgICAgaWYgKGtleXMuaW5jbHVkZXMoa2V5KSkgewogICAgICAgICAgICAgICAgcGFyYW1zW2tleV0gPSB2YWx1ZTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KICAgIHJldHVybiBwYXJhbXM7Cn0KZXhwb3J0IGZ1bmN0aW9uIGlzTW9iaWxlU2NyZWVuKCkgewogICAgcmV0dXJuIHdpbmRvdy5pbm5lcldpZHRoIDwgNDQwOwp9CmV4cG9ydCB2YXIgZGVib3VuY2UgPSBmdW5jdGlvbiAoY2FsbGJhY2ssIGRlbGF5KSB7CiAgICB2YXIgdGltZW91dElkOwogICAgcmV0dXJuIGZ1bmN0aW9uICgpIHsKICAgICAgICB2YXIgYXJncyA9IFtdOwogICAgICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBhcmd1bWVudHMubGVuZ3RoOyBfaSsrKSB7CiAgICAgICAgICAgIGFyZ3NbX2ldID0gYXJndW1lbnRzW19pXTsKICAgICAgICB9CiAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVvdXRJZCk7CiAgICAgICAgdGltZW91dElkID0gc2V0VGltZW91dChmdW5jdGlvbiAoKSB7IHJldHVybiBjYWxsYmFjay5hcHBseSh2b2lkIDAsIGFyZ3MpOyB9LCBkZWxheSk7CiAgICB9Owp9OwpleHBvcnQgdmFyIHJlbW92ZUVuZGluZ1BlcmlvZCA9IGZ1bmN0aW9uIChzdHIpIHsKICAgIHJldHVybiBzdHIucmVwbGFjZSgvXC4kLywgJycpOwp9Owo="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/utils.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/utils.ts"],"names":[],"mappings":"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","sourcesContent":["import { isElectron } from '@src/lib/electron';\nimport { StoreState, Commit, CommitStatus, FileUploadMeta, Draft } from '@src/types';\nimport Cache, { Stores } from './db';\nimport { Observable } from 'rxjs';\nimport { captureException } from '@sentry/browser';\nimport { now } from './datetime';\nimport { getClearCacheStatus } from './cache';\nimport { size } from 'lodash';\nimport { selectDebugDrafts } from '@src/ducks/drafts';\nimport { getSearchDbConfig } from './device';\nimport { recordLog } from './log';\nimport { LogLevel } from '@src/api/log';\n\n// Identifies if active element is of contenteditable/input (not to be used in worker)\nexport const isFocusedOnEditableContent = (): boolean => {\n  if (document.activeElement) {\n    if (document.activeElement.getAttribute('contenteditable')) {\n      return true ;\n    }\n    if (document.activeElement.getAttribute('type') === 'search') {\n      return true ;\n    }\n\n    if (['INPUT', 'TEXTAREA'].indexOf(document.activeElement.tagName) > -1) {\n      return true;\n    }\n  }\n  return false;\n};\n\nconst startTime = now();\nexport const runDebug = (state: StoreState): Observable<{ [key: string]: any; }> => {\n  // Current timestamp\n  const currentTime = now();\n\n  // Time app was running for\n  const timeRunning = now().toDate().getTime() - startTime.toDate().getTime();\n\n  // Screen dimensions\n  const dimensions = {\n    width: window.screen.width,\n    height: window.screen.height,\n  };\n\n  // User id\n  const userId = state.me && state.me.data && state.me.data.id || undefined;\n\n  // Redux shape\n  const reduxShape: { [key: string]: number } = Object.keys(state).reduce(\n    (dict, key) => {\n      dict[key] = state[key] && size(state[key]) || 0;\n      return dict;\n    },\n    {},\n  );\n\n  // src version\n  const srcVersion = process.env.SOURCE_VERSION;\n\n  // user agent\n  const userAgent = navigator.userAgent;\n\n  // Get counts of each store\n  const allCounts = Object.values(Stores).map(s => Cache.countAll(s));\n\n  // Get all outbox drafts\n  const sendingDrafts: Draft[] = selectDebugDrafts(state).map((d: Draft) => ({\n    id: d.id,\n    status: d.status,\n    scheduled: d.scheduled,\n    version: d.version,\n  }));\n\n  // Default set of props\n  const allProps: { [key: string]: any } = {\n    startTime,\n    currentTime,\n    timeRunning,\n    dimensions,\n    userId,\n    reduxShape,\n    srcVersion,\n    userAgent,\n    sendingDrafts,\n    searchDbConfig: getSearchDbConfig(),\n  };\n\n  // Sentry capture of console\n  captureException(new Error('User debug activated'));\n\n  // Record to logs\n  recordLog(LogLevel.Debug, 'User Debug Started', allProps);\n\n  // Zip all indexed db count requests\n  return Observable.zip(...allCounts)\n    .flatMap((values) => {\n      const endDict = values.reduce(\n        (dict, next) => {\n          return {\n            ...dict,\n            ...next,\n          };\n        },\n        {},\n      );\n\n      // Add store counts\n      allProps.storeCounts = endDict;\n\n      // Log\n      recordLog(LogLevel.Debug, 'User Debug Store Counts', allProps.storeCounts);\n\n      // Fetch storage estimates\n      if (navigator.storage) {\n        return navigator.storage.estimate();\n      }\n\n      // Otherwise return undefined\n      return Observable.of(null);\n    })\n    .flatMap((storageEstimate) => { // Storage Estimate\n\n      // Add storage estimate\n      allProps.storageEstimate = storageEstimate;\n\n      // Log\n      recordLog(LogLevel.Debug, 'User Debug Storage Estimate', { storageEstimate });\n\n      return Cache.getAll(Stores.Workers);\n    })\n    .flatMap((workerInfo) => { // Worker Info\n      // Add worker objects\n      allProps.workerInfo = workerInfo;\n\n      // Log\n      if (workerInfo) {\n        workerInfo.forEach((w: any) => {\n          recordLog(LogLevel.Debug, 'User Debug Worker Info', { worker: w });\n        });\n      }\n\n      return getClearCacheStatus();\n    })\n    .flatMap((clearCache) => { // Key Value Info\n      // Add worker objects\n      allProps.clearCache = clearCache;\n\n      // Log\n      if (clearCache) {\n        recordLog(LogLevel.Debug, 'User Debug Clear Cache Status', clearCache);\n      }\n\n      return Cache.getAll(Stores.Commits);\n    })\n    .flatMap((commits: Commit[]) => { // Commits Info\n      const endCommits = commits\n        .filter(c => c.status !== CommitStatus.Complete)\n        .map(c =>\n          ({\n            ...c,\n            payload: Object.keys(c.payload || {}),\n            undoPayload: Object.keys(c.undoPayload || {}),\n            rehydrateMeta: Object.keys(c.rehydrateMeta || {}),\n          }),\n        );\n\n      // Log\n      if (endCommits) {\n        endCommits.forEach((commit, i) => {\n          recordLog(LogLevel.Debug, 'User Debug Commit #' + i, commit);\n        });\n      }\n\n      // Add worker objects\n      allProps.commits = endCommits;\n\n      return Cache.getAll(Stores.FileUploads);\n    })\n    .flatMap((uploads: FileUploadMeta[]) => { // File Uploads\n      const endUploads = uploads\n        .filter(c => c.status !== CommitStatus.Complete)\n        .map(c =>\n          ({\n            ...c,\n            meta: {\n              ...c.meta,\n              file: undefined,\n              filename: undefined,\n              cloudUrl: undefined,\n            },\n          }),\n        );\n\n      // Log\n      if (endUploads) {\n        endUploads.forEach((upload, i) => {\n          recordLog(LogLevel.Debug, 'User Debug Upload #' + i, upload);\n        });\n      }\n\n      // Add worker objects\n      allProps.fileUploads = endUploads;\n\n      return Observable.of(allProps);\n    })\n    .catch((e) => {\n      captureException(e);\n\n      const strError = (e || 'unknown').toString();\n      allProps.userDebugError = (e || 'unknown').toString();\n\n      recordLog(LogLevel.Error, 'User Debug Error', { error: strError });\n\n      return Observable.of(allProps);\n    });\n};\n\nexport function formatCurrency(value: number): string {\n  const formatted = new Intl.NumberFormat(\n    'en-US', { style: 'currency', currency: 'USD' }).format(value);\n\n  if (formatted.endsWith('.00')) {\n    return formatted.substr(0, formatted.length - 3);\n  }\n\n  return formatted;\n}\n\nexport function formatCurrencyCents(value: number): string {\n  return formatCurrency((value / 100));\n}\n\n// added an absolutePath param to allow the use of the staging server\n// for the OAuth flow in local development or any other time we need to\nexport function getUrl(relativePath: string, absolutePath?: boolean): string {\n  const port = !!window.location.port ? ':' + window.location.port : '';\n  const prefix = isElectron ? `polymail://` :\n    absolutePath && isDev()\n      ? 'https://doge.polymail.io' // make oauth redirects work in development\n      : window.location.protocol + '//' + window.location.hostname + port\n  ;\n\n  return prefix + relativePath;\n}\n\nexport const isRightToLeftChar = (charCode: number) => {\n  const hebrew = { lower: '0590', upper: '05FF' };\n  const arabic = { lower: '0600', upper: '06FF' };\n  const rtl = [\n    hebrew,\n    arabic,\n  ];\n\n  for (const lang of rtl) {\n    if (parseInt(lang.lower, 16) < charCode && parseInt(lang.upper, 16) > charCode) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nexport function isValidPhoneNumber(phone: string): boolean {\n  const phoneTrimmed = phone.trim().replace(/(\\s|\\(|\\)|-)/g, '');\n  const regex = new RegExp(/^[+]?[\\s./0-9]*[(]?[0-9]{1,4}[)]?[-\\s./0-9]*$/g);\n  return !!phoneTrimmed.match(regex);\n}\n\nexport function isDev() {\n  return process.env.NODE_ENV !== 'production';\n}\n\nexport function getUrlParamsByKeys(keys: Array<string>): { [key: string]: string } {\n  const params = {};\n  const search = window.location.search;\n  if (search) {\n    const pairs = search.substring(1).split('&');\n    for (const pair of pairs) {\n      const [key, value] = pair.split('=');\n      if (keys.includes(key)) {\n        params[key] = value;\n      }\n    }\n  }\n  return params;\n}\n\nexport function isMobileScreen() {\n  return  window.innerWidth < 440;\n}\n\nexport const debounce = (callback: any, delay: number) => {\n  let timeoutId: ReturnType<typeof setTimeout>;\n  return (...args: any) => {\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(() => callback(...args), delay);\n  };\n};\n\nexport const removeEndingPeriod = (str: string) => {\n  return str.replace(/\\.$/, '');\n};\n"]}]}