{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/template.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/template.ts","mtime":1675280254069},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkgewogICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHsKICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHsKICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTsKICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKQogICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07CiAgICAgICAgfQogICAgICAgIHJldHVybiB0OwogICAgfTsKICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9OwppbXBvcnQgeyBhcHBseUF0dGFjaG1lbnREZWZhdWx0cyB9IGZyb20gJy4vYXR0YWNobWVudCc7CmltcG9ydCB7IEZha2VET00gfSBmcm9tICdAc3JjL2xpYi9odG1sJzsKaW1wb3J0IHsgbW9uZ29JZCB9IGZyb20gJy4vY3J5cHQnOwpleHBvcnQgZnVuY3Rpb24gYXBwbHlUZW1wbGF0ZURlZmF1bHRzKHRlbXBsYXRlKSB7CiAgICB2YXIgbmV3VGVtcGxhdGUgPSBfX2Fzc2lnbih7IHVzZXI6ICcnLCBuYW1lOiAnJywgc3ViamVjdDogJycsIGJvZHk6ICcnLCBhdHRhY2htZW50czogW10gfSwgdGVtcGxhdGUpOwogICAgaWYgKCEobmV3VGVtcGxhdGUuY3JlYXRlZCBpbnN0YW5jZW9mIERhdGUpICYmICh0eXBlb2YgbmV3VGVtcGxhdGUuY3JlYXRlZCA9PT0gJ3N0cmluZycpKSB7CiAgICAgICAgbmV3VGVtcGxhdGUuY3JlYXRlZCA9IG5ldyBEYXRlKG5ld1RlbXBsYXRlLmNyZWF0ZWQpOwogICAgfQogICAgaWYgKCEobmV3VGVtcGxhdGUudXBkYXRlZCBpbnN0YW5jZW9mIERhdGUpICYmICh0eXBlb2YgbmV3VGVtcGxhdGUudXBkYXRlZCA9PT0gJ3N0cmluZycpKSB7CiAgICAgICAgbmV3VGVtcGxhdGUudXBkYXRlZCA9IG5ldyBEYXRlKG5ld1RlbXBsYXRlLnVwZGF0ZWQpOwogICAgfQogICAgbmV3VGVtcGxhdGUuYXR0YWNobWVudHMgPSBuZXdUZW1wbGF0ZS5hdHRhY2htZW50cwogICAgICAgIC5tYXAoZnVuY3Rpb24gKGF0dGFjaG1lbnQpIHsgcmV0dXJuIGFwcGx5QXR0YWNobWVudERlZmF1bHRzKGF0dGFjaG1lbnQpOyB9KTsKICAgIHJldHVybiBuZXdUZW1wbGF0ZTsKfQovLyBIYW5kbGVzIGNvbnZlcnNpb24gb2YgdGVtcGxhdGUgYnkgY2huYWdpbmcgYm9keSBhbmQgYXR0YWNobWVudHMKZXhwb3J0IHZhciBoYW5kbGVUZW1wbGF0ZUNvbnZlcnNpb25zID0gZnVuY3Rpb24gKHRlbXBsYXRlLCBhdHRhY2htZW50cykgewogICAgdmFyIGZha2VET00gPSBGYWtlRE9NKCkuY3JlYXRlRWxlbWVudCgnZGl2Jyk7CiAgICB2YXIgbmV3QXR0YWNobWVudHMgPSBbXTsKICAgIGZha2VET00uaW5uZXJIVE1MID0gdGVtcGxhdGUuYm9keTsKICAgIGF0dGFjaG1lbnRzLmZvckVhY2goZnVuY3Rpb24gKGEpIHsKICAgICAgICB2YXIgbmV3SWQgPSBtb25nb0lkKCk7CiAgICAgICAgdmFyIG5ld0F0dGFjaG1lbnQgPSBfX2Fzc2lnbihfX2Fzc2lnbih7fSwgYSksIHsgaWQ6IG5ld0lkIH0pOwogICAgICAgIHZhciBvbGRJZFZhbHVlID0gImRhdGEtcG0tYXR0YWNobWVudC1pZC0iICsgYS5pZDsKICAgICAgICB2YXIgbmV3SWRWYWx1ZSA9ICJkYXRhLXBtLWF0dGFjaG1lbnQtaWQtIiArIG5ld0lkOwogICAgICAgIHZhciBvbGRJbmxpbmVWYWx1ZSA9ICJwbS1pbmxpbmUtaWQtIiArIGEuaWQ7CiAgICAgICAgdmFyIG5ld0lubGluZVZhbHVlID0gInBtLWlubGluZS1pZC0iICsgbmV3SWQ7CiAgICAgICAgbmV3QXR0YWNobWVudHMgPSBuZXdBdHRhY2htZW50cy5jb25jYXQoW25ld0F0dGFjaG1lbnRdKTsKICAgICAgICAvLyBIYW5kbGUgcmVwbGFjaW5nIENsb3VkIGF0dGFjaG1lbnR3cwogICAgICAgIHZhciBjbG91ZEVsZW1lbnRzID0gZmFrZURPTS5xdWVyeVNlbGVjdG9yQWxsKCJbZGF0YS1wbS1hdHRhY2htZW50LWlkPVwiIiArIGEuaWQgKyAiXCJdIik7CiAgICAgICAgQXJyYXkuZnJvbShjbG91ZEVsZW1lbnRzKS5mb3JFYWNoKGZ1bmN0aW9uIChlKSB7CiAgICAgICAgICAgIC8vIEhhbmRsZSBzZXR0aW5nIG9mIG5ldyBkYXRhLXBtLWF0dGFoY21lbnQgaWRzCiAgICAgICAgICAgIGUuc2V0QXR0cmlidXRlKCdkYXRhLXBtLWF0dGFjaG1lbnQtaWQnLCBuZXdJZCk7CiAgICAgICAgICAgIGUucmVtb3ZlQXR0cmlidXRlKCdkYXRhLXBtLXRlbXBsYXRlLWlkJyk7CiAgICAgICAgICAgIC8vIFJlcGxhY2UgSUQgdmFsdWUgaWYgbmVjZXNzYXJ5CiAgICAgICAgICAgIGlmIChlLmlkID09PSBvbGRJZFZhbHVlKSB7CiAgICAgICAgICAgICAgICBlLmlkID0gbmV3SWRWYWx1ZTsKICAgICAgICAgICAgfQogICAgICAgICAgICAvLyBSZXBsYWNlIGlubGluZSB2YWx1ZSBpZiBuZWNlc3NhcnkKICAgICAgICAgICAgaWYgKGUuaWQgPT09IG9sZElubGluZVZhbHVlKSB7CiAgICAgICAgICAgICAgICBlLmlkID0gbmV3SW5saW5lVmFsdWU7CiAgICAgICAgICAgIH0KICAgICAgICB9KTsKICAgIH0pOwogICAgLy8gUmVtb3ZlIHBtLXNmcAogICAgdmFyIHNmcCA9IGZha2VET00ucXVlcnlTZWxlY3RvcignLnBtLXNmcCcpOwogICAgaWYgKHNmcCAmJiBzZnAucGFyZW50RWxlbWVudCkgewogICAgICAgIHNmcC5wYXJlbnRFbGVtZW50LnJlbW92ZUNoaWxkKHNmcCk7CiAgICB9CiAgICB2YXIgbmV3VGVtcGxhdGUgPSBfX2Fzc2lnbihfX2Fzc2lnbih7fSwgdGVtcGxhdGUpLCB7IG5hbWU6IHRlbXBsYXRlLm5hbWUgfHwgJ05ldyBUZW1wbGF0ZScsIGJvZHk6IGZha2VET00uaW5uZXJIVE1MLCBhdHRhY2htZW50czogW10gfSk7CiAgICByZXR1cm4gewogICAgICAgIHRlbXBsYXRlOiBuZXdUZW1wbGF0ZSwKICAgICAgICBhdHRhY2htZW50czogbmV3QXR0YWNobWVudHMsCiAgICB9Owp9OwpleHBvcnQgdmFyIHN0cmlwU2lnbmF0dXJlSWRzID0gZnVuY3Rpb24gKHRlbXBsYXRlKSB7CiAgICB2YXIgY29udGFpbmVyID0gRmFrZURPTSgpLmNyZWF0ZUVsZW1lbnQoJ2RpdicpOwogICAgY29udGFpbmVyLmlubmVySFRNTCA9IHRlbXBsYXRlLmJvZHk7CiAgICB2YXIgc2lnbmF0dXJlRWxlbWVudHMgPSBjb250YWluZXIucXVlcnlTZWxlY3RvckFsbCgnI3BzaWduYXR1cmUnKTsKICAgIGlmIChzaWduYXR1cmVFbGVtZW50cy5sZW5ndGgpIHsKICAgICAgICBBcnJheS5mcm9tKHNpZ25hdHVyZUVsZW1lbnRzKS5mb3JFYWNoKGZ1bmN0aW9uIChlbGVtZW50KSB7CiAgICAgICAgICAgIGVsZW1lbnQucmVtb3ZlQXR0cmlidXRlKCdpZCcpOwogICAgICAgIH0pOwogICAgfQogICAgcmV0dXJuIF9fYXNzaWduKF9fYXNzaWduKHt9LCB0ZW1wbGF0ZSksIHsgYm9keTogY29udGFpbmVyLmlubmVySFRNTCB9KTsKfTsKZXhwb3J0IGZ1bmN0aW9uIHJlcGxhY2VXaXRoUGxhY2Vob2xkZXJzKHRlbXBsYXRlKSB7CiAgICB2YXIgcmVnZXggPSBuZXcgUmVnRXhwKC9ce1x7KFtcd1xzX10rKVx9XH0vLCAnZycpOwogICAgdmFyIHN0eWxlID0gJ2NvbG9yOiAjNDQ0NDQ0OyBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjIzLCA1MCwgMC4yNSk7IGJvcmRlci1yYWRpdXM6IDJweDsnICsKICAgICAgICAncGFkZGluZzogMXB4IDRweDsgZm9udC13ZWlnaHQ6IDUwMDsgY3Vyc29yOiBwb2ludGVyOyc7CiAgICB2YXIgYm9keSA9IHRlbXBsYXRlLmJvZHkucmVwbGFjZShyZWdleCwgIjxzcGFuIGNsYXNzPVwiZGF0YS1wbS12YXJcIiBjb250ZW50ZWRpdGFibGU9XCJmYWxzZVwiIHN0eWxlPVwiIiArIHN0eWxlICsgIlwiPiQxPC9zcGFuPiIpOwogICAgcmV0dXJuIF9fYXNzaWduKF9fYXNzaWduKHt9LCB0ZW1wbGF0ZSksIHsgYm9keTogYm9keSB9KTsKfQo="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/template.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/template.ts"],"names":[],"mappings":"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","sourcesContent":["import { Template, Attachment } from '@src/types';\nimport { applyAttachmentDefaults } from './attachment';\nimport { FakeDOM } from '@src/lib/html';\nimport { mongoId } from './crypt';\n\nexport function applyTemplateDefaults(template: Template): Template {\n  const newTemplate = {\n    user: '',\n    name: '',\n    subject: '',\n    body: '',\n    attachments: [],\n    ...template,\n  };\n  if (!(newTemplate.created instanceof Date) && (typeof newTemplate.created === 'string')) {\n    newTemplate.created = new Date(newTemplate.created);\n  }\n  if (!(newTemplate.updated instanceof Date) && (typeof newTemplate.updated === 'string')) {\n    newTemplate.updated = new Date(newTemplate.updated);\n  }\n\n  newTemplate.attachments = newTemplate.attachments\n    .map(attachment => applyAttachmentDefaults(attachment));\n\n  return newTemplate;\n}\n\nexport interface ConvertedTemplate {\n  template: Template;\n  attachments: Attachment[];\n}\n\n// Handles conversion of template by chnaging body and attachments\nexport const handleTemplateConversions = (\n  template: Template, attachments: Attachment[],\n): ConvertedTemplate => {\n  const fakeDOM = FakeDOM().createElement('div');\n  let newAttachments: Attachment[] = [];\n  fakeDOM.innerHTML = template.body;\n  attachments.forEach((a) => {\n    const newId = mongoId();\n    const newAttachment = { ...a, id: newId };\n    const oldIdValue = `data-pm-attachment-id-${a.id}`;\n    const newIdValue = `data-pm-attachment-id-${newId}`;\n\n    const oldInlineValue = `pm-inline-id-${a.id}`;\n    const newInlineValue = `pm-inline-id-${newId}`;\n    newAttachments = newAttachments.concat([newAttachment]);\n\n    // Handle replacing Cloud attachmentws\n    const cloudElements = fakeDOM.querySelectorAll(`[data-pm-attachment-id=\"${a.id}\"]`);\n    Array.from(cloudElements).forEach((e) => {\n      // Handle setting of new data-pm-attahcment ids\n      e.setAttribute('data-pm-attachment-id', newId);\n      e.removeAttribute('data-pm-template-id');\n\n      // Replace ID value if necessary\n      if (e.id === oldIdValue) {\n        e.id = newIdValue;\n      }\n\n      // Replace inline value if necessary\n      if (e.id === oldInlineValue) {\n        e.id = newInlineValue;\n      }\n    });\n  });\n\n  // Remove pm-sfp\n  const sfp = fakeDOM.querySelector('.pm-sfp');\n  if (sfp && sfp.parentElement) {\n    sfp.parentElement.removeChild(sfp);\n  }\n\n  const newTemplate = {\n    ...template,\n    name: template.name || 'New Template',\n    body: fakeDOM.innerHTML,\n    attachments: [],\n  };\n\n  return {\n    template: newTemplate,\n    attachments: newAttachments,\n  };\n};\n\nexport const stripSignatureIds = (template: Template): Template => {\n  const container = FakeDOM().createElement('div');\n  container.innerHTML = template.body;\n  const signatureElements = container.querySelectorAll('#psignature');\n  if (signatureElements.length) {\n    Array.from(signatureElements).forEach((element: Element) => {\n      element.removeAttribute('id');\n    });\n  }\n\n  return {\n    ...template,\n    body: container.innerHTML,\n  };\n};\n\nexport function replaceWithPlaceholders(template: Template): Template {\n  const regex = new RegExp(\n    /\\{\\{([\\w\\s_]+)\\}\\}/,\n    'g',\n  );\n  const style = 'color: #444444; background-color: rgba(255, 223, 50, 0.25); border-radius: 2px;' +\n    'padding: 1px 4px; font-weight: 500; cursor: pointer;';\n  const body = template.body.replace(\n    regex,\n    `<span class=\"data-pm-var\" contenteditable=\"false\" style=\"${style}\">$1</span>`,\n  );\n  return { ...template, body };\n}\n"]}]}