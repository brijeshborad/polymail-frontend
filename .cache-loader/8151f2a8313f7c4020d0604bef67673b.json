{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/contactGroups.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/contactGroups.ts","mtime":1675280254047},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkgewogICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHsKICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHsKICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTsKICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKQogICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07CiAgICAgICAgfQogICAgICAgIHJldHVybiB0OwogICAgfTsKICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9Owp2YXIgX2E7CmltcG9ydCB7IGtleUJ5IH0gZnJvbSAnbG9kYXNoJzsKaW1wb3J0IHsgY3JlYXRlIH0gZnJvbSAnQHNyYy9saWIvcmVkdXgnOwpleHBvcnQgdmFyIENPTlRBQ1RfR1JPVVBTX0xJU1QgPSAoX2EgPSBjcmVhdGUoJ0NPTlRBQ1RfR1JPVVBTX0xJU1QnLCB7CiAgICBzdWNjZXNzOiBmdW5jdGlvbiAoc3RhdGUsIG1ldGEsIHBheWxvYWQpIHsKICAgICAgICByZXR1cm4gX19hc3NpZ24oX19hc3NpZ24oe30sIHN0YXRlKSwgeyBjb250YWN0R3JvdXBzOiBrZXlCeShwYXlsb2FkLCAnaWQnKSB9KTsKICAgIH0sCn0pLCBfYS50eXBlKSwgY29udGFjdEdyb3Vwc0xpc3QgPSBfYS5hY3Rpb24sIGNvbnRhY3RHcm91cHNSZWR1Y2VyID0gX2EucmVkdWNlcjsKZXhwb3J0IGZ1bmN0aW9uIHNlbGVjdENvbnRhY3RHcm91cHMoc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS5jb250YWN0R3JvdXBzOwp9CmV4cG9ydCBkZWZhdWx0IFtjb250YWN0R3JvdXBzUmVkdWNlcl07Cg=="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/contactGroups.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/contactGroups.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,QAAQ,CAAC;AAC/B,OAAO,EAAE,MAAM,EAAE,MAAM,gBAAgB,CAAC;AAGxC,MAAM,CACJ,IAAA;;;;YAAyB,EACzB,6BAAyB,EACzB,iCAA6B,CAQ5B;AAEH,MAAM,UAAU,mBAAmB,CAAC,KAAiB;IACnD,OAAO,KAAK,CAAC,aAAa,CAAC;AAC7B,CAAC;AAED,eAAe,CAAC,oBAAoB,CAAC,CAAC","sourcesContent":["import { keyBy } from 'lodash';\nimport { create } from '@src/lib/redux';\nimport { ContactGroup, StoreState } from '@src/types';\n\nexport const {\n  type: CONTACT_GROUPS_LIST,\n  action: contactGroupsList,\n  reducer: contactGroupsReducer,\n} = create<string, ContactGroup[]>('CONTACT_GROUPS_LIST', {\n  success: (state, meta, payload) => {\n    return {\n      ...state,\n      contactGroups: keyBy(payload, 'id'),\n    };\n  },\n});\n\nexport function selectContactGroups(state: StoreState): { [id: string]: ContactGroup } {\n  return state.contactGroups;\n}\n\nexport default [contactGroupsReducer];\n"]}]}