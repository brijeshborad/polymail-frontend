{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/ThreadDetail/components/ShareThreadPopover/components/NewAsanaTask/index.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/ThreadDetail/components/ShareThreadPopover/components/NewAsanaTask/index.tsx","mtime":1675280254043},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4JzsKaW1wb3J0IE5ld0FzYW5hVGFzayBmcm9tICcuL05ld0FzYW5hVGFzayc7CmltcG9ydCB7IHNlbGVjdEFzYW5hRW5hYmxlZCwgaW50ZWdyYXRpb25Bc2FuYUxvZ2luIH0gZnJvbSAnQHNyYy9kdWNrcy9pbnRlZ3JhdGlvbnMnOwppbXBvcnQgeyBzZWxlY3RUZWFtIH0gZnJvbSAnQHNyYy9kdWNrcy90ZWFtJzsKaW1wb3J0IHsgYXNhbmFVc2VyTGlzdCwgYXNhbmFQcm9qZWN0TGlzdCwgc2VsZWN0TWVBc2FuYVVzZXIgfSBmcm9tICdAc3JjL2R1Y2tzL2FzYW5hJzsKaW1wb3J0IHsgc2hhcmVkVGhyZWFkQXNhbmFUYXNrQ3JlYXRlIH0gZnJvbSAnQHNyYy9kdWNrcy9zaGFyZWRUaHJlYWRzJzsKaW1wb3J0IHsgdG9hc3RTZXQgfSBmcm9tICdAc3JjL2R1Y2tzL3RvYXN0cyc7CnZhciBtYXBTdGF0ZVRvUHJvcHMgPSBmdW5jdGlvbiAoc3RhdGUpIHsKICAgIHJldHVybiB7CiAgICAgICAgYXNhbmFFbmFibGVkOiBzZWxlY3RBc2FuYUVuYWJsZWQoc3RhdGUpLAogICAgICAgIHRlYW06IHNlbGVjdFRlYW0oc3RhdGUpLAogICAgICAgIGFzYW5hU3RhdGU6IHN0YXRlLmFzYW5hLAogICAgICAgIGFzYW5hVXNlcjogc2VsZWN0TWVBc2FuYVVzZXIoc3RhdGUpLAogICAgfTsKfTsKdmFyIG1hcERpc3BhdGNoVG9Qcm9wcyA9IGZ1bmN0aW9uIChkaXNwYXRjaCkgewogICAgcmV0dXJuIHsKICAgICAgICBsb2dpbkFzYW5hOiBmdW5jdGlvbiAodGVhbSkgeyByZXR1cm4gZGlzcGF0Y2goaW50ZWdyYXRpb25Bc2FuYUxvZ2luKHRlYW0pKTsgfSwKICAgICAgICBsaXN0VXNlcnM6IGZ1bmN0aW9uIChxdWVyeSkgeyByZXR1cm4gZGlzcGF0Y2goYXNhbmFVc2VyTGlzdChxdWVyeSkpOyB9LAogICAgICAgIGxpc3RQcm9qZWN0czogZnVuY3Rpb24gKHF1ZXJ5KSB7IHJldHVybiBkaXNwYXRjaChhc2FuYVByb2plY3RMaXN0KHF1ZXJ5KSk7IH0sCiAgICAgICAgY3JlYXRlVGFzazogZnVuY3Rpb24gKG1ldGEpIHsgcmV0dXJuIGRpc3BhdGNoKHNoYXJlZFRocmVhZEFzYW5hVGFza0NyZWF0ZShtZXRhKSk7IH0sCiAgICAgICAgc2V0VG9hc3Q6IGZ1bmN0aW9uIChlcnIpIHsgcmV0dXJuIGRpc3BhdGNoKHRvYXN0U2V0KGVycikpOyB9LAogICAgfTsKfTsKZXhwb3J0IGRlZmF1bHQgY29ubmVjdChtYXBTdGF0ZVRvUHJvcHMsIG1hcERpc3BhdGNoVG9Qcm9wcykoTmV3QXNhbmFUYXNrKTsK"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/ThreadDetail/components/ShareThreadPopover/components/NewAsanaTask/index.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/ThreadDetail/components/ShareThreadPopover/components/NewAsanaTask/index.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAY,MAAM,aAAa,CAAC;AAEhD,OAAO,YAA2C,MAAM,gBAAgB,CAAC;AACzE,OAAO,EAAE,kBAAkB,EAAE,qBAAqB,EAAE,MAAM,yBAAyB,CAAC;AACpF,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAC;AAC7C,OAAO,EAAE,aAAa,EAAE,gBAAgB,EAAE,iBAAiB,EAAE,MAAM,kBAAkB,CAAC;AACtF,OAAO,EAAE,2BAA2B,EAAE,MAAM,0BAA0B,CAAC;AACvE,OAAO,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAE7C,IAAM,eAAe,GAAG,UAAC,KAAiB;IACxC,OAAO;QACL,YAAY,EAAE,kBAAkB,CAAC,KAAK,CAAC;QACvC,IAAI,EAAE,UAAU,CAAC,KAAK,CAAC;QACvB,UAAU,EAAE,KAAK,CAAC,KAAK;QACvB,SAAS,EAAE,iBAAiB,CAAC,KAAK,CAAC;KACpC,CAAC;AACJ,CAAC,CAAC;AAEF,IAAM,kBAAkB,GAAG,UAAC,QAA8B;IACxD,OAAO;QACL,UAAU,EAAE,UAAA,IAAI,IAAI,OAAA,QAAQ,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC,EAArC,CAAqC;QACzD,SAAS,EAAE,UAAA,KAAK,IAAI,OAAA,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,EAA9B,CAA8B;QAClD,YAAY,EAAE,UAAA,KAAK,IAAI,OAAA,QAAQ,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,EAAjC,CAAiC;QACxD,UAAU,EAAE,UAAA,IAAI,IAAI,OAAA,QAAQ,CAAC,2BAA2B,CAAC,IAAI,CAAC,CAAC,EAA3C,CAA2C;QAC/D,QAAQ,EAAE,UAAA,GAAG,IAAI,OAAA,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAvB,CAAuB;KACzC,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,OAAO,CAAC,eAAe,EAAE,kBAAkB,CAAC,CAAC,YAAY,CAAC,CAAC","sourcesContent":["import { connect, Dispatch } from 'react-redux';\nimport { StoreState } from '@src/types';\nimport NewAsanaTask, { StateProps, DispatchProps } from './NewAsanaTask';\nimport { selectAsanaEnabled, integrationAsanaLogin } from '@src/ducks/integrations';\nimport { selectTeam } from '@src/ducks/team';\nimport { asanaUserList, asanaProjectList, selectMeAsanaUser } from '@src/ducks/asana';\nimport { sharedThreadAsanaTaskCreate } from '@src/ducks/sharedThreads';\nimport { toastSet } from '@src/ducks/toasts';\n\nconst mapStateToProps = (state: StoreState): StateProps => {\n  return {\n    asanaEnabled: selectAsanaEnabled(state),\n    team: selectTeam(state),\n    asanaState: state.asana,\n    asanaUser: selectMeAsanaUser(state),\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<StoreState>): DispatchProps => {\n  return {\n    loginAsana: team => dispatch(integrationAsanaLogin(team)),\n    listUsers: query => dispatch(asanaUserList(query)),\n    listProjects: query => dispatch(asanaProjectList(query)),\n    createTask: meta => dispatch(sharedThreadAsanaTaskCreate(meta)),\n    setToast: err => dispatch(toastSet(err)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewAsanaTask);\n"]}]}