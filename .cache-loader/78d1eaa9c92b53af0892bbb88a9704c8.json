{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/address.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/address.ts","mtime":1675280254061},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgdXBwZXJGaXJzdCB9IGZyb20gJ2xvZGFzaCc7CmV4cG9ydCBmdW5jdGlvbiBwYXJzZUFkZHJlc3MoYWRkcmVzcykgewogICAgLy8gTk9URTogcG9ydGVkIGZyb20gdGhlIG9yaWdpbmFsIGdvIHZlcnNpb24gaW4gcG9seW1haWwtYXBpL2xpYi9tYWlsL2FkZHJlc3MKICAgIC8vIHJlbW92ZSBibGFua3MsIGFuZCBxdW90ZXMKICAgIHZhciBjbGVhbmVkID0gYWRkcmVzcy5yZXBsYWNlKC8iL2csICcnKS5yZXBsYWNlKC8+L2csICcnKS5yZXBsYWNlKC88L2csICcnKTsKICAgIC8vIHNwbGl0IG9uIHNwYWNlIGFuZCBjbGVhbiBlYWNoIGVsZW1lbnQKICAgIHZhciBzcGxpdCA9IGNsZWFuZWQuc3BsaXQoJyAnKS5tYXAoZnVuY3Rpb24gKHMpIHsgcmV0dXJuIHMudHJpbSgpOyB9KS5maWx0ZXIoZnVuY3Rpb24gKHMpIHsgcmV0dXJuIHMgIT09ICcnOyB9KTsKICAgIC8vIHByb2Nlc3MgcGFydHMKICAgIHZhciBhZGRyID0gewogICAgICAgIGdpdmVuTmFtZTogJycsCiAgICAgICAgZmFtaWx5TmFtZTogJycsCiAgICAgICAgZnVsbE5hbWU6ICcnLAogICAgICAgIGVtYWlsOiAnJywKICAgIH07CiAgICBpZiAoc3BsaXQubGVuZ3RoID09PSAwKSB7CiAgICAgICAgcmV0dXJuIGFkZHI7CiAgICB9CiAgICAvLyBleHRyYWN0IGVtYWlsCiAgICBhZGRyLmVtYWlsID0gc3BsaXRbc3BsaXQubGVuZ3RoIC0gMV0udG9Mb3dlckNhc2UoKTsKICAgIC8vIGV4dHJhY3QgbmFtZQogICAgaWYgKHNwbGl0Lmxlbmd0aCA+IDEpIHsKICAgICAgICAvLyBnaXZlbk5hbWUKICAgICAgICBpZiAoc3BsaXQubGVuZ3RoID49IDIpIHsKICAgICAgICAgICAgYWRkci5naXZlbk5hbWUgPSBzcGxpdFswXTsKICAgICAgICB9CiAgICAgICAgLy8gZmFtaWx5TmFtZQogICAgICAgIGlmIChzcGxpdC5sZW5ndGggPj0gMykgewogICAgICAgICAgICBhZGRyLmZhbWlseU5hbWUgPSBzcGxpdFtzcGxpdC5sZW5ndGggLSAyXTsKICAgICAgICB9CiAgICAgICAgLy8gc2V0IEZ1bGxOYW1lCiAgICAgICAgYWRkci5mdWxsTmFtZSA9IHNwbGl0LnNsaWNlKDAsIHNwbGl0Lmxlbmd0aCAtIDEpLmpvaW4oJyAnKTsKICAgIH0KICAgIHJldHVybiBhZGRyOwp9Ci8vIENvbnZlcnRzIHBhcnRpY2lwYW50cyB0byBzdHJpbmcKZXhwb3J0IHZhciBwYXJ0aWNpcGFudHNUb1N0cmluZyA9IGZ1bmN0aW9uIChwYXJ0aWNpcGFudHMsIG1lKSB7CiAgICAvLyBOdW1iZXIgb2YgcGFydGljaXBhbnRzCiAgICB2YXIgY291bnQgPSBwYXJ0aWNpcGFudHMubGVuZ3RoOwogICAgdmFyIG90aGVyc0NvdW50ID0gY291bnQgLSAyOwogICAgdmFyIG90aGVyc1N0cmluZyA9IG90aGVyc0NvdW50ID4gMQogICAgICAgID8gIiwgYW5kICIgKyBvdGhlcnNDb3VudCArICIgb3RoZXJzIgogICAgICAgIDogJyc7CiAgICAvLyBOYW1lcyB0byBjb252ZXJ0IGZyb20gcGFydGljaXBhbnRzCiAgICB2YXIgbmFtZXNBcnJheSA9IG90aGVyc0NvdW50ID4gMQogICAgICAgID8gcGFydGljaXBhbnRzLnNsaWNlKDAsIDIpCiAgICAgICAgOiBwYXJ0aWNpcGFudHM7CiAgICAvLyBJbnRlcnBvbGF0ZWQgc3RyaW5nCiAgICB2YXIgbmFtZXMgPSBuYW1lc0FycmF5Lm1hcChmdW5jdGlvbiAocGFydGljaXBhbnQpIHsgcmV0dXJuIGdldERpc3BsYXlOYW1lKHBhcnRpY2lwYW50LCBtZSk7IH0pOwogICAgcmV0dXJuIG5hbWVzLmpvaW4oJywgJykgKyBvdGhlcnNTdHJpbmc7Cn07Ci8vIEV4dHJhY3RzIGVtYWlsIGZyb20gc3RyaW5nCmV4cG9ydCBmdW5jdGlvbiBhZGRyZXNzVG9FbWFpbChhZGRyZXNzKSB7CiAgICB2YXIgZW1haWxTdHJpbmcgPSBhZGRyZXNzLm1hdGNoKC88Lio+Lyk7CiAgICByZXR1cm4gZW1haWxTdHJpbmcgPyBlbWFpbFN0cmluZ1swXS5zbGljZSgxLCBlbWFpbFN0cmluZy5sZW5ndGggLSAyKSA6IGFkZHJlc3M7Cn0KZXhwb3J0IHZhciBnZXRGaXJzdE5hbWUgPSBmdW5jdGlvbiAoYSwgbWUpIHsKICAgIHZhciBhZGRyZXNzID0gdHlwZW9mIGEgPT09ICdzdHJpbmcnID8gcGFyc2VBZGRyZXNzKGEpIDogYTsKICAgIGlmIChtZSAmJiBtZS5lbWFpbCA9PT0gYWRkcmVzcy5lbWFpbCkgewogICAgICAgIHJldHVybiAnTWUnOwogICAgfQogICAgaWYgKGFkZHJlc3MuZ2l2ZW5OYW1lICYmIGFkZHJlc3MuZ2l2ZW5OYW1lICE9PSAnJykgewogICAgICAgIHJldHVybiBhZGRyZXNzLmdpdmVuTmFtZTsKICAgIH0KICAgIGlmIChhZGRyZXNzLmZ1bGxOYW1lICYmIGFkZHJlc3MuZnVsbE5hbWUgIT09ICcnKSB7CiAgICAgICAgcmV0dXJuIGFkZHJlc3MuZnVsbE5hbWUuc3BsaXQoJyAnKVswXTsKICAgIH0KICAgIHJldHVybiBhZGRyZXNzLmZ1bGxOYW1lIHx8IGFkZHJlc3MuZW1haWw7Cn07CmV4cG9ydCB2YXIgZ2V0RGlzcGxheU5hbWUgPSBmdW5jdGlvbiAoYSwgbWUpIHsKICAgIHZhciBhZGRyZXNzID0gdHlwZW9mIGEgPT09ICdzdHJpbmcnID8gcGFyc2VBZGRyZXNzKGEpIDogYTsKICAgIGlmIChtZSAmJiBtZS5lbWFpbCA9PT0gYWRkcmVzcy5lbWFpbCkgewogICAgICAgIHJldHVybiAnTWUnOwogICAgfQogICAgcmV0dXJuIGFkZHJlc3MuZnVsbE5hbWUgfHwgYWRkcmVzcy5lbWFpbDsKfTsKZXhwb3J0IHZhciBleHRyYWN0TGFzdE5hbWVGcm9tRW1haWwgPSBmdW5jdGlvbiAoZW1haWwpIHsKICAgIHZhciBuYW1lU3BsaXQgPSBlbWFpbC5zcGxpdCgnQCcpOwogICAgaWYgKG5hbWVTcGxpdC5sZW5ndGggPiAxKSB7CiAgICAgICAgdmFyIGxhc3ROYW1lID0gbmFtZVNwbGl0WzBdOwogICAgICAgIHJldHVybiB1cHBlckZpcnN0KGxhc3ROYW1lKTsKICAgIH0KICAgIHJldHVybiB1bmRlZmluZWQ7Cn07CmV4cG9ydCB2YXIgZXh0cmFjdENvbXBhbnlGcm9tRW1haWwgPSBmdW5jdGlvbiAoZW1haWwpIHsKICAgIHZhciBuYW1lU3BsaXQgPSBlbWFpbC5zcGxpdCgnQCcpOwogICAgaWYgKG5hbWVTcGxpdC5sZW5ndGggPiAxKSB7CiAgICAgICAgdmFyIGRvbWFpblNwbGl0ID0gbmFtZVNwbGl0WzFdLnNwbGl0KCcuJyk7CiAgICAgICAgdmFyIGNvbXBhbnkgPSBkb21haW5TcGxpdFswXTsKICAgICAgICBpZiAoY29tcGFueSkgewogICAgICAgICAgICByZXR1cm4gdXBwZXJGaXJzdChjb21wYW55KTsKICAgICAgICB9CiAgICB9CiAgICByZXR1cm4gdW5kZWZpbmVkOwp9OwpleHBvcnQgdmFyIGV4dHJhY3REb21haW5Gcm9tRW1haWwgPSBmdW5jdGlvbiAoZW1haWwpIHsKICAgIHZhciBzcGwgPSBlbWFpbC5zcGxpdCgnQCcpOwogICAgaWYgKHNwbC5sZW5ndGggPCAyKSB7CiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDsKICAgIH0KICAgIHJldHVybiBzcGxbMV07Cn07Cg=="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/address.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/address.ts"],"names":[],"mappings":"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","sourcesContent":["import { Address, Me, Contact } from '@src/types';\nimport { upperFirst } from 'lodash';\n\nexport function parseAddress(address: string): Address {\n  // NOTE: ported from the original go version in polymail-api/lib/mail/address\n\n  // remove blanks, and quotes\n  const cleaned = address.replace(/\"/g, '').replace(/>/g, '').replace(/</g, '');\n\n  // split on space and clean each element\n  const split = cleaned.split(' ').map(s => s.trim()).filter(s => s !== '');\n\n  // process parts\n  const addr = {\n    givenName: '',\n    familyName: '',\n    fullName: '',\n    email: '',\n  };\n\n  if (split.length === 0) {\n    return addr;\n  }\n\n  // extract email\n  addr.email = split[split.length - 1].toLowerCase();\n\n  // extract name\n  if (split.length > 1) {\n    // givenName\n    if (split.length >= 2) {\n      addr.givenName = split[0];\n    }\n\n    // familyName\n    if (split.length >= 3) {\n      addr.familyName = split[split.length - 2];\n    }\n\n    // set FullName\n    addr.fullName = split.slice(0, split.length - 1).join(' ');\n  }\n\n  return addr;\n}\n\n// Converts participants to string\nexport const participantsToString = (participants: Address[], me?: Me) => {\n  // Number of participants\n  const count = participants.length;\n  const othersCount = count - 2;\n  const othersString = othersCount > 1\n    ? `, and ${othersCount} others`\n    : '';\n\n  // Names to convert from participants\n  const namesArray = othersCount > 1\n    ? participants.slice(0, 2)\n    : participants;\n\n  // Interpolated string\n  const names = namesArray.map(participant => getDisplayName(participant, me));\n  return names.join(', ') + othersString;\n};\n\n// Extracts email from string\nexport function addressToEmail(address: string): string {\n  const emailString = address.match(/<.*>/);\n  return emailString ? emailString[0].slice(1, emailString.length - 2) : address;\n}\n\nexport const getFirstName = (a: Address | Contact | string, me?: Me): string => {\n  const address = typeof a === 'string' ? parseAddress(a) : a;\n\n  if (me && me.email === address.email) {\n    return 'Me';\n  }\n\n  if (address.givenName && address.givenName !== '') {\n    return address.givenName;\n  }\n\n  if (address.fullName && address.fullName !== '') {\n    return address.fullName.split(' ')[0];\n  }\n\n  return address.fullName || address.email;\n};\n\nexport const getDisplayName = (a: Address|Contact|string, me?: Me): string => {\n  const address = typeof a === 'string' ? parseAddress(a) : a;\n\n  if (me && me.email === address.email) {\n    return 'Me';\n  }\n\n  return address.fullName || address.email;\n};\n\nexport const extractLastNameFromEmail = (email: string): string|undefined => {\n  const nameSplit = email.split('@');\n  if (nameSplit.length > 1) {\n    const lastName = nameSplit[0];\n    return upperFirst(lastName);\n  }\n\n  return undefined;\n};\n\nexport const extractCompanyFromEmail = (email: string): string|undefined => {\n  const nameSplit = email.split('@');\n  if (nameSplit.length > 1) {\n    const domainSplit = nameSplit[1].split('.');\n    const company = domainSplit[0];\n    if (company) {\n      return upperFirst(company);\n    }\n  }\n\n  return undefined;\n};\n\nexport const extractDomainFromEmail = (email: string): string|undefined => {\n  const spl = email.split('@');\n  if (spl.length < 2) {\n    return undefined;\n  }\n\n  return spl[1];\n};\n"]}]}