{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/leftSidebar.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/leftSidebar.ts","mtime":1675280254049},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9hLCBfYiwgX2MsIF9kLCBfZSwgX2YsIF9nLCBfaCwgX2o7CmltcG9ydCB1cGRhdGUgZnJvbSAnaW1tdXRhYmlsaXR5LWhlbHBlcic7CmltcG9ydCB7IGNyZWF0ZSB9IGZyb20gJ0BzcmMvbGliL3JlZHV4JzsKaW1wb3J0IHsgTmF2YmFyVGFiIH0gZnJvbSAnQHNyYy90eXBlcy9sZWZ0U2lkZWJhcic7CmltcG9ydCB7IGNyZWF0ZVNlbGVjdG9yIH0gZnJvbSAnQHNyYy9saWIvc2VsZWN0b3InOwppbXBvcnQgeyBEcmFmdFN0YXR1cyB9IGZyb20gJ0BzcmMvdHlwZXMnOwppbXBvcnQgeyB2YWx1ZXMgfSBmcm9tICdsb2Rhc2gnOwpleHBvcnQgdmFyIExFRlRfU0lERUJBUl9UT0dHTEUgPSAoX2EgPSBjcmVhdGUoJ0xFRlRfU0lERUJBUl9UT0dHTEUnLCB7fSksIF9hLnR5cGUpLCBsZWZ0U2lkZWJhclRvZ2dsZSA9IF9hLmFjdGlvbiwgbGVmdFNpZGViYXJUb2dnbGVSZWR1Y2VyID0gX2EucmVkdWNlcjsKZXhwb3J0IHZhciBMRUZUX1NJREVCQVJfQ09MTEFQU0UgPSAoX2IgPSBjcmVhdGUoJ0xFRlRfU0lERUJBUl9DT0xMQVBTRScsIHsKICAgIHN0YXJ0OiBmdW5jdGlvbiAoc3RhdGUsIG1ldGEpIHsKICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnbGVmdFNpZGViYXJDb2xsYXBzZWQnLCBtZXRhLnRvU3RyaW5nKCkpOwogICAgICAgIHJldHVybiB1cGRhdGUoc3RhdGUsIHsKICAgICAgICAgICAgbGVmdFNpZGViYXI6IHsKICAgICAgICAgICAgICAgIGNvbGxhcHNlZDogeyAkc2V0OiBtZXRhIH0sCiAgICAgICAgICAgIH0sCiAgICAgICAgfSk7CiAgICB9LAp9KSwgX2IudHlwZSksIGxlZnRTaWRlYmFyQ29sbGFwc2UgPSBfYi5hY3Rpb24sIGxlZnRTaWRlYmFyQ29sbGFwc2VSZWR1Y2VyID0gX2IucmVkdWNlcjsKZXhwb3J0IHZhciBMRUZUX1NJREVCQVJfTElTVFNfQ09MTEFQU0UgPSAoX2MgPSBjcmVhdGUoJ0xFRlRfU0lERUJBUl9MSVNUU19DT0xMQVBTRScsIHsKICAgIHN0YXJ0OiBmdW5jdGlvbiAoc3RhdGUsIG1ldGEpIHsKICAgICAgICByZXR1cm4gdXBkYXRlKHN0YXRlLCB7CiAgICAgICAgICAgIGxlZnRTaWRlYmFyOiB7CiAgICAgICAgICAgICAgICBsaXN0c0NvbGxhcHNlZDogeyAkc2V0OiBtZXRhIH0sCiAgICAgICAgICAgIH0sCiAgICAgICAgfSk7CiAgICB9LAp9KSwgX2MudHlwZSksIGxlZnRTaWRlYmFyTGlzdHNDb2xsYXBzZSA9IF9jLmFjdGlvbiwgbGVmdFNpZGViYXJMaXN0c0NvbGxhcHNlUmVkdWNlciA9IF9jLnJlZHVjZXI7CmV4cG9ydCB2YXIgTEVGVF9TSURFQkFSX1RBQl9TRUxFQ1QgPSAoX2QgPSBjcmVhdGUoJ0xFRlRfU0lERUJBUl9UQUJfU0VMRUNUJywgewogICAgc3RhcnQ6IGZ1bmN0aW9uIChzdGF0ZSwgbWV0YSkgewogICAgICAgIHJldHVybiB1cGRhdGUoc3RhdGUsIHsKICAgICAgICAgICAgbGVmdFNpZGViYXI6IHsKICAgICAgICAgICAgICAgIHNlbGVjdGVkVGFiOiB7ICRzZXQ6IG1ldGEgfSwKICAgICAgICAgICAgfSwKICAgICAgICB9KTsKICAgIH0sCn0pLCBfZC50eXBlKSwgbGVmdFNpZGViYXJUYWJTZWxlY3QgPSBfZC5hY3Rpb24sIGxlZnRTaWRlYmFyVGFiU2VsZWN0UmVkdWNlciA9IF9kLnJlZHVjZXI7CmV4cG9ydCB2YXIgTEVGVF9TSURFQkFSX1RSQVNIX0NPTExBUFNFID0gKF9lID0gY3JlYXRlKCdMRUZUX1NJREVCQVJfVFJBU0hfQ09MTEFQU0UnLCB7CiAgICBzdGFydDogZnVuY3Rpb24gKHN0YXRlLCBtZXRhKSB7CiAgICAgICAgcmV0dXJuIHVwZGF0ZShzdGF0ZSwgewogICAgICAgICAgICBsZWZ0U2lkZWJhcjogewogICAgICAgICAgICAgICAgdHJhc2hDb2xsYXBzZWQ6IHsgJHNldDogbWV0YSB9LAogICAgICAgICAgICB9LAogICAgICAgIH0pOwogICAgfSwKfSksIF9lLnR5cGUpLCBsZWZ0U2lkZWJhclRyYXNoQ29sbGFwc2UgPSBfZS5hY3Rpb24sIGxlZnRTaWRlYmFyVHJhc2hDb2xsYXBzZVJlZHVjZXIgPSBfZS5yZWR1Y2VyOwpleHBvcnQgdmFyIExFRlRfU0lERUJBUl9BUFBTX0NPTExBUFNFID0gKF9mID0gY3JlYXRlKCdMRUZUX1NJREVCQVJfQVBQU19DT0xMQVBTRScsIHsKICAgIHN0YXJ0OiBmdW5jdGlvbiAoc3RhdGUsIG1ldGEpIHsKICAgICAgICByZXR1cm4gdXBkYXRlKHN0YXRlLCB7CiAgICAgICAgICAgIGxlZnRTaWRlYmFyOiB7CiAgICAgICAgICAgICAgICBhcHBzQ29sbGFwc2VkOiB7ICRzZXQ6IG1ldGEgfSwKICAgICAgICAgICAgfSwKICAgICAgICB9KTsKICAgIH0sCn0pLCBfZi50eXBlKSwgbGVmdFNpZGViYXJBcHBzQ29sbGFwc2UgPSBfZi5hY3Rpb24sIGxlZnRTaWRlYmFyQXBwc0NvbGxhcHNlUmVkdWNlciA9IF9mLnJlZHVjZXI7CmV4cG9ydCB2YXIgTEVGVF9TSURFQkFSX1RFQU1fQ09MTEFQU0UgPSAoX2cgPSBjcmVhdGUoJ0xFRlRfU0lERUJBUl9URUFNX0NPTExBUFNFJywgewogICAgc3RhcnQ6IGZ1bmN0aW9uIChzdGF0ZSwgbWV0YSkgewogICAgICAgIHJldHVybiB1cGRhdGUoc3RhdGUsIHsKICAgICAgICAgICAgbGVmdFNpZGViYXI6IHsKICAgICAgICAgICAgICAgIHRlYW1Db2xsYXBzZWQ6IHsgJHNldDogbWV0YSB9LAogICAgICAgICAgICB9LAogICAgICAgIH0pOwogICAgfSwKfSksIF9nLnR5cGUpLCBsZWZ0U2lkZWJhclRlYW1Db2xsYXBzZSA9IF9nLmFjdGlvbiwgbGVmdFNpZGViYXJUZWFtQ29sbGFwc2VSZWR1Y2VyID0gX2cucmVkdWNlcjsKZXhwb3J0IHZhciBMRUZUX1NJREVCQVJfQUNDT1VOVF9TRUxFQ1QgPSAoX2ggPSBjcmVhdGUoJ0xFRlRfU0lERUJBUl9BQ0NPVU5UX1NFTEVDVCcsIHsKICAgIHN0YXJ0OiBmdW5jdGlvbiAoc3RhdGUsIG1ldGEpIHsKICAgICAgICByZXR1cm4gdXBkYXRlKHN0YXRlLCB7CiAgICAgICAgICAgIGxlZnRTaWRlYmFyOiB7CiAgICAgICAgICAgICAgICBzZWxlY3RlZEFjY291bnQ6IHsgJHNldDogbWV0YSB9LAogICAgICAgICAgICB9LAogICAgICAgIH0pOwogICAgfSwKfSksIF9oLnR5cGUpLCBsZWZ0U2lkZWJhckFjY291bnRTZWxlY3QgPSBfaC5hY3Rpb24sIGxlZnRTaWRlYmFyQWNjb3VudFNlbGVjdFJlZHVjZXIgPSBfaC5yZWR1Y2VyOwpleHBvcnQgdmFyIExFRlRfU0lERUJBUl9XSURUSF9TRVQgPSAoX2ogPSBjcmVhdGUoJ0xFRlRfU0lERUJBUl9XSURUSF9TRVQnLCB7CiAgICBzdGFydDogZnVuY3Rpb24gKHN0YXRlLCBtZXRhKSB7CiAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2xlZnRTaWRlYmFyV2lkdGgnLCBtZXRhLnRvU3RyaW5nKCkpOwogICAgICAgIHJldHVybiB1cGRhdGUoc3RhdGUsIHsKICAgICAgICAgICAgbGVmdFNpZGViYXI6IHsKICAgICAgICAgICAgICAgIHdpZHRoOiB7ICRzZXQ6IG1ldGEgfSwKICAgICAgICAgICAgfSwKICAgICAgICB9KTsKICAgIH0sCn0pLCBfai50eXBlKSwgbGVmdFNpZGViYXJXaWR0aFNldCA9IF9qLmFjdGlvbiwgbGVmdFNpZGViYXJXaWR0aFNldFJlZHVjZXIgPSBfai5yZWR1Y2VyOwpleHBvcnQgdmFyIHNlbGVjdFNob3dDb2xsYXBzZWRMU0IgPSBjcmVhdGVTZWxlY3RvcihbZnVuY3Rpb24gKHN0YXRlKSB7IHJldHVybiBzdGF0ZS5sZWZ0U2lkZWJhcjsgfV0sIGZ1bmN0aW9uIChsc2JTdGF0ZSkgewogICAgcmV0dXJuICEhbHNiU3RhdGUuY29sbGFwc2VkICYmCiAgICAgICAgW05hdmJhclRhYi5NYWlsLCBOYXZiYXJUYWIuTWVudGlvbnNdLmluZGV4T2YobHNiU3RhdGUuc2VsZWN0ZWRUYWIpID4gLTE7Cn0sIGZ1bmN0aW9uIChsc2JTdGF0ZSkgeyByZXR1cm4gIiIgKyBsc2JTdGF0ZS5zZWxlY3RlZFRhYiArIGxzYlN0YXRlLmNvbGxhcHNlZDsgfSwgWydsZWZ0U2lkZWJhciddKTsKZXhwb3J0IHZhciBzZWxlY3RIYXNGYWlsaW5nRHJhZnQgPSBjcmVhdGVTZWxlY3RvcihbZnVuY3Rpb24gKHN0YXRlKSB7IHJldHVybiBzdGF0ZS5kcmFmdHM7IH1dLCBmdW5jdGlvbiAoZHJhZnRzKSB7CiAgICB2YXIgY291bnQgPSAwOwogICAgZm9yICh2YXIgX2kgPSAwLCBfYSA9IHZhbHVlcyhkcmFmdHMpOyBfaSA8IF9hLmxlbmd0aDsgX2krKykgewogICAgICAgIHZhciBkcmFmdCA9IF9hW19pXTsKICAgICAgICBpZiAoZHJhZnQuZGF0YSAmJiBkcmFmdC5kYXRhLnN0YXR1cyA9PT0gRHJhZnRTdGF0dXMuRmFpbGVkKSB7CiAgICAgICAgICAgIGNvdW50ICs9IDE7CiAgICAgICAgfQogICAgfQogICAgcmV0dXJuIGNvdW50Owp9LCB1bmRlZmluZWQsIFsnZHJhZnRzJ10pOwpleHBvcnQgZGVmYXVsdCBbCiAgICBsZWZ0U2lkZWJhckxpc3RzQ29sbGFwc2VSZWR1Y2VyLAogICAgbGVmdFNpZGViYXJUYWJTZWxlY3RSZWR1Y2VyLAogICAgbGVmdFNpZGViYXJUcmFzaENvbGxhcHNlUmVkdWNlciwKICAgIGxlZnRTaWRlYmFyQWNjb3VudFNlbGVjdFJlZHVjZXIsCiAgICBsZWZ0U2lkZWJhckFwcHNDb2xsYXBzZVJlZHVjZXIsCiAgICBsZWZ0U2lkZWJhclRlYW1Db2xsYXBzZVJlZHVjZXIsCiAgICBsZWZ0U2lkZWJhcldpZHRoU2V0UmVkdWNlciwKICAgIGxlZnRTaWRlYmFyQ29sbGFwc2VSZWR1Y2VyLAogICAgbGVmdFNpZGViYXJUb2dnbGVSZWR1Y2VyLApdOwo="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/leftSidebar.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/leftSidebar.ts"],"names":[],"mappings":";AAAA,OAAO,MAAM,MAAM,qBAAqB,CAAC;AACzC,OAAO,EAAE,MAAM,EAAE,MAAM,gBAAgB,CAAC;AACxC,OAAO,EAAE,SAAS,EAAoB,MAAM,wBAAwB,CAAC;AACrE,OAAO,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAC;AACnD,OAAO,EAAmB,WAAW,EAAE,MAAM,YAAY,CAAC;AAC1D,OAAO,EAAE,MAAM,EAAE,MAAM,QAAQ,CAAC;AAEhC,MAAM,CACJ,IAAA,uEAAyB,EACzB,6BAAyB,EACzB,qCAAiC,CACuB;AAE1D,MAAM,CACJ,IAAA;;;;;;;;;YAA2B,EAC3B,+BAA2B,EAC3B,uCAAmC,CAUlC;AAEH,MAAM,CACJ,IAAA;;;;;;;;YAAiC,EACjC,oCAAgC,EAChC,4CAAwC,CAQvC;AAEH,MAAM,CACJ,IAAA;;;;;;;;YAA6B,EAC7B,gCAA4B,EAC5B,wCAAoC,CAQnC;AAEH,MAAM,CACJ,IAAA;;;;;;;;YAAiC,EACjC,oCAAgC,EAChC,4CAAwC,CAQvC;AAEH,MAAM,CACJ,IAAA;;;;;;;;YAAgC,EAChC,mCAA+B,EAC/B,2CAAuC,CAQtC;AAEH,MAAM,CACJ,IAAA;;;;;;;;YAAgC,EAChC,mCAA+B,EAC/B,2CAAuC,CAQtC;AAEH,MAAM,CACJ,IAAA;;;;;;;;YAAiC,EACjC,oCAAgC,EAChC,4CAAwC,CAQvC;AAEH,MAAM,CACJ,IAAA;;;;;;;;;YAA4B,EAC5B,+BAA2B,EAC3B,uCAAmC,CAWlC;AAEH,MAAM,CAAC,IAAM,sBAAsB,GAAG,cAAc,CAKlD,CAAC,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,WAAW,EAAjB,CAAiB,CAAC,EAC5B,UAAC,QAA0B;IACzB,OAAO,CAAC,CAAC,QAAQ,CAAC,SAAS;QACzB,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;AAC5E,CAAC,EACD,UAAC,QAA0B,IAAK,OAAA,KAAG,QAAQ,CAAC,WAAW,GAAG,QAAQ,CAAC,SAAW,EAA9C,CAA8C,EAC9E,CAAC,aAAa,CAAC,CAChB,CAAC;AAEF,MAAM,CAAC,IAAM,qBAAqB,GAAG,cAAc,CAKjD,CAAC,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,MAAM,EAAZ,CAAY,CAAC,EACvB,UAAC,MAAyC;IACxC,IAAI,KAAK,GAAG,CAAC,CAAC;IACd,KAAoB,UAAc,EAAd,KAAA,MAAM,CAAC,MAAM,CAAC,EAAd,cAAc,EAAd,IAAc,EAAE;QAA/B,IAAM,KAAK,SAAA;QACd,IAAI,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,KAAK,WAAW,CAAC,MAAM,EAAE;YAC1D,KAAK,IAAI,CAAC,CAAC;SACZ;KACF;IAED,OAAO,KAAK,CAAC;AACf,CAAC,EACD,SAAS,EACT,CAAC,QAAQ,CAAC,CACX,CAAC;AAEF,eAAe;IACb,+BAA+B;IAC/B,2BAA2B;IAC3B,+BAA+B;IAC/B,+BAA+B;IAC/B,8BAA8B;IAC9B,8BAA8B;IAC9B,0BAA0B;IAC1B,0BAA0B;IAC1B,wBAAwB;CACzB,CAAC","sourcesContent":["import update from 'immutability-helper';\nimport { create } from '@src/lib/redux';\nimport { NavbarTab, LeftSidebarState } from '@src/types/leftSidebar';\nimport { createSelector } from '@src/lib/selector';\nimport { Resource, Draft, DraftStatus } from '@src/types';\nimport { values } from 'lodash';\n\nexport const {\n  type: LEFT_SIDEBAR_TOGGLE,\n  action: leftSidebarToggle,\n  reducer: leftSidebarToggleReducer,\n} = create<boolean, undefined>('LEFT_SIDEBAR_TOGGLE', {});\n\nexport const {\n  type: LEFT_SIDEBAR_COLLAPSE,\n  action: leftSidebarCollapse,\n  reducer: leftSidebarCollapseReducer,\n} = create<boolean, undefined>('LEFT_SIDEBAR_COLLAPSE', {\n  start: (state, meta) => {\n    localStorage.setItem('leftSidebarCollapsed', meta.toString());\n    return update(state, {\n      leftSidebar: {\n        collapsed: { $set: meta },\n      },\n    });\n  },\n});\n\nexport const {\n  type: LEFT_SIDEBAR_LISTS_COLLAPSE,\n  action: leftSidebarListsCollapse,\n  reducer: leftSidebarListsCollapseReducer,\n} = create<boolean, undefined>('LEFT_SIDEBAR_LISTS_COLLAPSE', {\n  start: (state, meta) =>\n    update(state, {\n      leftSidebar: {\n        listsCollapsed: { $set: meta },\n      },\n    }),\n});\n\nexport const {\n  type: LEFT_SIDEBAR_TAB_SELECT,\n  action: leftSidebarTabSelect,\n  reducer: leftSidebarTabSelectReducer,\n} = create<NavbarTab, undefined>('LEFT_SIDEBAR_TAB_SELECT', {\n  start: (state, meta) =>\n    update(state, {\n      leftSidebar: {\n        selectedTab: { $set: meta },\n      },\n    }),\n});\n\nexport const {\n  type: LEFT_SIDEBAR_TRASH_COLLAPSE,\n  action: leftSidebarTrashCollapse,\n  reducer: leftSidebarTrashCollapseReducer,\n} = create<boolean, undefined>('LEFT_SIDEBAR_TRASH_COLLAPSE', {\n  start: (state, meta) =>\n    update(state, {\n      leftSidebar: {\n        trashCollapsed: { $set: meta },\n      },\n    }),\n});\n\nexport const {\n  type: LEFT_SIDEBAR_APPS_COLLAPSE,\n  action: leftSidebarAppsCollapse,\n  reducer: leftSidebarAppsCollapseReducer,\n} = create<boolean, undefined>('LEFT_SIDEBAR_APPS_COLLAPSE', {\n  start: (state, meta) =>\n    update(state, {\n      leftSidebar: {\n        appsCollapsed: { $set: meta },\n      },\n    }),\n});\n\nexport const {\n  type: LEFT_SIDEBAR_TEAM_COLLAPSE,\n  action: leftSidebarTeamCollapse,\n  reducer: leftSidebarTeamCollapseReducer,\n} = create<boolean, undefined>('LEFT_SIDEBAR_TEAM_COLLAPSE', {\n  start: (state, meta) =>\n    update(state, {\n      leftSidebar: {\n        teamCollapsed: { $set: meta },\n      },\n    }),\n});\n\nexport const {\n  type: LEFT_SIDEBAR_ACCOUNT_SELECT,\n  action: leftSidebarAccountSelect,\n  reducer: leftSidebarAccountSelectReducer,\n} = create<string|undefined, undefined>('LEFT_SIDEBAR_ACCOUNT_SELECT', {\n  start: (state, meta) =>\n    update(state, {\n      leftSidebar: {\n        selectedAccount: { $set: meta },\n      },\n    }),\n});\n\nexport const {\n  type: LEFT_SIDEBAR_WIDTH_SET,\n  action: leftSidebarWidthSet,\n  reducer: leftSidebarWidthSetReducer,\n} = create<number, undefined>('LEFT_SIDEBAR_WIDTH_SET', {\n  start: (state, meta) => {\n    localStorage.setItem('leftSidebarWidth', meta.toString());\n\n    return update(state, {\n      leftSidebar: {\n        width: { $set: meta },\n      },\n    });\n  },\n});\n\nexport const selectShowCollapsedLSB = createSelector<\n  undefined,\n  LeftSidebarState,\n  boolean\n>(\n  [state => state.leftSidebar],\n  (lsbState: LeftSidebarState) => {\n    return !!lsbState.collapsed &&\n      [NavbarTab.Mail, NavbarTab.Mentions].indexOf(lsbState.selectedTab) > -1;\n  },\n  (lsbState: LeftSidebarState) => `${lsbState.selectedTab}${lsbState.collapsed}`,\n  ['leftSidebar'],\n);\n\nexport const selectHasFailingDraft = createSelector<\n  undefined,\n  { [id: string]: Resource<Draft> },\n  number\n>(\n  [state => state.drafts],\n  (drafts: { [id: string]: Resource<Draft> }) => {\n    let count = 0;\n    for (const draft of values(drafts)) {\n      if (draft.data && draft.data.status === DraftStatus.Failed) {\n        count += 1;\n      }\n    }\n\n    return count;\n  },\n  undefined,\n  ['drafts'],\n);\n\nexport default [\n  leftSidebarListsCollapseReducer,\n  leftSidebarTabSelectReducer,\n  leftSidebarTrashCollapseReducer,\n  leftSidebarAccountSelectReducer,\n  leftSidebarAppsCollapseReducer,\n  leftSidebarTeamCollapseReducer,\n  leftSidebarWidthSetReducer,\n  leftSidebarCollapseReducer,\n  leftSidebarToggleReducer,\n];\n"]}]}