{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/commandControl.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/commandControl.ts","mtime":1675280254047},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkgewogICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHsKICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHsKICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTsKICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKQogICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07CiAgICAgICAgfQogICAgICAgIHJldHVybiB0OwogICAgfTsKICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9Owp2YXIgX2EsIF9iOwppbXBvcnQgeyBjcmVhdGUsIGNyZWF0ZUFjdGlvbiB9IGZyb20gJ0BzcmMvbGliL3JlZHV4JzsKLy8gVXNlZCB0byBpbmZlciBjb21tYW5kIGNvbnRyb2wgdHlwZSBmcm9tIHN0YXRlCmV4cG9ydCB2YXIgQ09NTUFORF9DT05UUk9MX0lORkVSID0gJ0NPTU1BTkRfQ09OVFJPTF9JTkZFUic7CmV4cG9ydCB2YXIgY29tbWFuZENvbnRyb2xJbmZlciA9IGNyZWF0ZUFjdGlvbihDT01NQU5EX0NPTlRST0xfSU5GRVIpOwpleHBvcnQgdmFyIENPTU1BTkRfQ09OVFJPTF9TSE9XID0gKF9hID0gY3JlYXRlKCdDT01NQU5EX0NPTlRST0xfU0hPVycsIHsKICAgIHN0YXJ0OiBmdW5jdGlvbiAoc3RhdGUsIG1ldGEpIHsKICAgICAgICByZXR1cm4gX19hc3NpZ24oX19hc3NpZ24oe30sIHN0YXRlKSwgeyBjb21tYW5kQ29udHJvbFR5cGU6IG1ldGEgfSk7CiAgICB9LAp9KSwgX2EudHlwZSksIGNvbW1hbmRDb250cm9sU2hvdyA9IF9hLmFjdGlvbiwgY29tbWFuZENvbnRyb2xTaG93UmVkdWNlciA9IF9hLnJlZHVjZXI7CmV4cG9ydCB2YXIgQ09NTUFORF9DT05UUk9MX0hJREUgPSAoX2IgPSBjcmVhdGUoJ0NPTU1BTkRfQ09OVFJPTF9ISURFJywgewogICAgc3RhcnQ6IGZ1bmN0aW9uIChzdGF0ZSwgbWV0YSkgewogICAgICAgIHJldHVybiBfX2Fzc2lnbihfX2Fzc2lnbih7fSwgc3RhdGUpLCB7IGNvbW1hbmRDb250cm9sVHlwZTogdW5kZWZpbmVkLCB0aHJlYWRTd2lwZUlkOiB1bmRlZmluZWQgfSk7CiAgICB9LAp9KSwgX2IudHlwZSksIGNvbW1hbmRDb250cm9sSGlkZSA9IF9iLmFjdGlvbiwgY29tbWFuZENvbnRyb2xIaWRlUmVkdWNlciA9IF9iLnJlZHVjZXI7CmV4cG9ydCBkZWZhdWx0IFsKICAgIGNvbW1hbmRDb250cm9sU2hvd1JlZHVjZXIsCiAgICBjb21tYW5kQ29udHJvbEhpZGVSZWR1Y2VyLApdOwo="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/commandControl.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/commandControl.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,OAAO,EAAE,MAAM,EAAE,YAAY,EAAE,MAAM,gBAAgB,CAAC;AAItD,gDAAgD;AAChD,MAAM,CAAC,IAAM,qBAAqB,GAAG,uBAAuB,CAAC;AAC7D,MAAM,CAAC,IAAM,mBAAmB,GAC9B,YAAY,CAAa,qBAAqB,CAAC,CAAC;AAElD,MAAM,CACJ,IAAA;;;;YAA0B,EAC1B,8BAA0B,EAC1B,sCAAkC,CAQjC;AAEH,MAAM,CACJ,IAAA;;;;YAA0B,EAC1B,8BAA0B,EAC1B,sCAAkC,CASjC;AAEH,eAAe;IACb,yBAAyB;IACzB,yBAAyB;CAC1B,CAAC","sourcesContent":["import { create, createAction } from '@src/lib/redux';\n\nimport { CommandControlType } from '@src/types';\n\n// Used to infer command control type from state\nexport const COMMAND_CONTROL_INFER = 'COMMAND_CONTROL_INFER';\nexport const commandControlInfer =\n  createAction<null, null>(COMMAND_CONTROL_INFER);\n\nexport const {\n  type: COMMAND_CONTROL_SHOW,\n  action: commandControlShow,\n  reducer: commandControlShowReducer,\n} = create<CommandControlType, void>('COMMAND_CONTROL_SHOW', {\n  start: (state, meta) => {\n    return {\n      ...state,\n      commandControlType: meta,\n    };\n  },\n});\n\nexport const {\n  type: COMMAND_CONTROL_HIDE,\n  action: commandControlHide,\n  reducer: commandControlHideReducer,\n} = create<undefined, void>('COMMAND_CONTROL_HIDE', {\n  start: (state, meta) => {\n    return {\n      ...state,\n      commandControlType: undefined,\n      threadSwipeId: undefined,\n    };\n  },\n});\n\nexport default [\n  commandControlShowReducer,\n  commandControlHideReducer,\n];\n"]}]}