{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/worker/Realtime.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/worker/Realtime.ts","mtime":1675280254123},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkgewogICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBmdW5jdGlvbiAoZCwgYikgewogICAgICAgIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwKICAgICAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fAogICAgICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChiLmhhc093blByb3BlcnR5KHApKSBkW3BdID0gYltwXTsgfTsKICAgICAgICByZXR1cm4gZXh0ZW5kU3RhdGljcyhkLCBiKTsKICAgIH07CiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHsKICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpOwogICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfQogICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTsKICAgIH07Cn0pKCk7CmltcG9ydCB7IFN1YmplY3QgfSBmcm9tICdyeGpzJzsKaW1wb3J0IHsgQmFja29mZiB9IGZyb20gJy4vQmFja29mZic7CmltcG9ydCB7IEFVVEhfVE9LRU5fTk9ORSB9IGZyb20gJ0BzcmMvYXBpL2Jhc2UnOwp2YXIgUmVhbHRpbWVTdGF0dXM7CihmdW5jdGlvbiAoUmVhbHRpbWVTdGF0dXMpIHsKICAgIFJlYWx0aW1lU3RhdHVzWyJDb25uZWN0ZWQiXSA9ICJjb25uZWN0ZWQiOwogICAgUmVhbHRpbWVTdGF0dXNbIkRpc2Nvbm5lY3RlZCJdID0gImRpc2Nvbm5lY3QiOwogICAgUmVhbHRpbWVTdGF0dXNbIlJlY29ubmVjdGluZyJdID0gInJlY29ubmVjdGluZyI7Cn0pKFJlYWx0aW1lU3RhdHVzIHx8IChSZWFsdGltZVN0YXR1cyA9IHt9KSk7Ci8vIEVuYWJsZSBkZWJ1ZyAvIGxvZ2dpbmcgb2YgSW5kZXhEQiBjYWxsIHRpbWVzCnZhciBkZWJ1ZyA9IGZhbHNlOwpleHBvcnQgZnVuY3Rpb24gZW5hYmxlUmVhbHRpbWVEZWJ1ZygpIHsKICAgIGRlYnVnID0gdHJ1ZTsKICAgIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpuby1jb25zb2xlCiAgICBjb25zb2xlLmRlYnVnKCdFbmFibGVkIFJlYWx0aW1lIHRva2VuLicpOwp9CnZhciBSZWFsdGltZSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHsKICAgIF9fZXh0ZW5kcyhSZWFsdGltZSwgX3N1cGVyKTsKICAgIGZ1bmN0aW9uIFJlYWx0aW1lKCkgewogICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMpIHx8IHRoaXM7CiAgICAgICAgX3RoaXMuYXBpVG9rZW4gPSAnJzsKICAgICAgICBfdGhpcy5iYWNrb2ZmID0gbmV3IEJhY2tvZmYoJ1JlYWx0aW1lJyk7CiAgICAgICAgcmV0dXJuIF90aGlzOwogICAgfQogICAgUmVhbHRpbWUucHJvdG90eXBlLnNldFRva2VuID0gZnVuY3Rpb24gKGFwaVRva2VuKSB7CiAgICAgICAgLy8gSGFuZGxlIGxvZ291dCAvIG5vdCBsb2dnZWQgaW4gY2FzZSAvIG5vdCBzZXQgY2FzZXMKICAgICAgICBpZiAoYXBpVG9rZW4gPT09ICcnIHx8IGFwaVRva2VuID09PSBBVVRIX1RPS0VOX05PTkUpIHsKICAgICAgICAgICAgdGhpcy5hcGlUb2tlbiA9IGFwaVRva2VuOwogICAgICAgICAgICBpZiAodGhpcy5jb25uZWN0aW9uKSB7CiAgICAgICAgICAgICAgICB0aGlzLmNvbm5lY3Rpb24uY2xvc2UoKTsKICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm47CiAgICAgICAgfQogICAgICAgIC8vIENyZWF0ZSAvIFJlcGxhY2UgRXhpc3RpbmcgY29ubmVjdGlvbgogICAgICAgIGlmICh0aGlzLmFwaVRva2VuICE9PSBhcGlUb2tlbikgewogICAgICAgICAgICAvLyBEaXNjb25uZWN0IGFuZCByZWNvbm5lY3QgaWYgdGhpcyBpcyBhIG5ldyB0b2tlbi4KICAgICAgICAgICAgdGhpcy5hcGlUb2tlbiA9IGFwaVRva2VuOwogICAgICAgICAgICBpZiAodGhpcy5jb25uZWN0aW9uKSB7CiAgICAgICAgICAgICAgICB0aGlzLmNvbm5lY3Rpb24uY2xvc2UoKTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0aGlzLmNvbm5lY3QoKTsKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KICAgIH07CiAgICBSZWFsdGltZS5wcm90b3R5cGUucGVyc2lzdCA9IGZ1bmN0aW9uIChpbnRlcnZhbFNlY29uZHMpIHsKICAgICAgICB2YXIgX3RoaXMgPSB0aGlzOwogICAgICAgIGlmIChpbnRlcnZhbFNlY29uZHMgPT09IHZvaWQgMCkgeyBpbnRlcnZhbFNlY29uZHMgPSA1OyB9CiAgICAgICAgc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkgewogICAgICAgICAgICBpZiAoX3RoaXMuc3RhdHVzICE9PSBSZWFsdGltZVN0YXR1cy5EaXNjb25uZWN0ZWQpIHsKICAgICAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAoX3RoaXMuYXBpVG9rZW4gPT09ICcnIHx8IF90aGlzLmFwaVRva2VuID09PSBBVVRIX1RPS0VOX05PTkUpIHsKICAgICAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAoIV90aGlzLmJhY2tvZmYuaXNSZWFkeSgpKSB7CiAgICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgIH0KICAgICAgICAgICAgX3RoaXMuY29ubmVjdCgpOwogICAgICAgIH0sIGludGVydmFsU2Vjb25kcyAqIDEwMDApOwogICAgfTsKICAgIFJlYWx0aW1lLnByb3RvdHlwZS5jb25uZWN0ID0gZnVuY3Rpb24gKCkgewogICAgICAgIHRoaXMuc3RhdHVzID0gUmVhbHRpbWVTdGF0dXMuUmVjb25uZWN0aW5nOwogICAgICAgIHZhciB1cmwgPSBkZWJ1ZwogICAgICAgICAgICA/IHByb2Nlc3MuZW52LlJUX0FQSV9VUkwgKyAiL3YxL3JlYWx0aW1lL3dlYnNvY2tldD90b2tlbj0iICsgdGhpcy5hcGlUb2tlbgogICAgICAgICAgICA6IHByb2Nlc3MuZW52LlJUX0FQSV9VUkwgKyAiL3YxL3JlYWx0aW1lL3dlYnNvY2tldCI7CiAgICAgICAgdGhpcy5jb25uZWN0aW9uID0gbmV3IFdlYlNvY2tldCh1cmwpOwogICAgICAgIHRoaXMuY29ubmVjdGlvbi5vbmVycm9yID0gdGhpcy5oYW5kbGVFcnJvci5iaW5kKHRoaXMpOwogICAgICAgIHRoaXMuY29ubmVjdGlvbi5vbm1lc3NhZ2UgPSB0aGlzLmhhbmRsZU1lc3NhZ2UuYmluZCh0aGlzKTsKICAgICAgICB0aGlzLmNvbm5lY3Rpb24ub25jbG9zZSA9IHRoaXMuaGFuZGxlQ2xvc2UuYmluZCh0aGlzKTsKICAgICAgICB0aGlzLmNvbm5lY3Rpb24ub25vcGVuID0gdGhpcy5oYW5kbGVPcGVuLmJpbmQodGhpcyk7CiAgICB9OwogICAgUmVhbHRpbWUucHJvdG90eXBlLmhhbmRsZUVycm9yID0gZnVuY3Rpb24gKGV2ZW50KSB7CiAgICAgICAgdGhpcy5zdGF0dXMgPSBSZWFsdGltZVN0YXR1cy5EaXNjb25uZWN0ZWQ7CiAgICAgICAgdGhpcy5iYWNrb2ZmLnNldEVycm9yKGV2ZW50LmRhdGEpOwogICAgfTsKICAgIFJlYWx0aW1lLnByb3RvdHlwZS5oYW5kbGVNZXNzYWdlID0gZnVuY3Rpb24gKGV2ZW50KSB7CiAgICAgICAgdmFyIF90aGlzID0gdGhpczsKICAgICAgICBpZiAoZXZlbnQuZGF0YSkgewogICAgICAgICAgICB2YXIgcmVhZGVyXzEgPSBuZXcgRmlsZVJlYWRlcigpOwogICAgICAgICAgICByZWFkZXJfMS5hZGRFdmVudExpc3RlbmVyKCdsb2FkZW5kJywgZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgX3RoaXMubmV4dChKU09OLnBhcnNlKHJlYWRlcl8xLnJlc3VsdCkpOwogICAgICAgICAgICB9KTsKICAgICAgICAgICAgcmVhZGVyXzEucmVhZEFzVGV4dChldmVudC5kYXRhKTsKICAgICAgICB9CiAgICB9OwogICAgUmVhbHRpbWUucHJvdG90eXBlLmhhbmRsZU9wZW4gPSBmdW5jdGlvbiAoZXZlbnQpIHsKICAgICAgICB0aGlzLnN0YXR1cyA9IFJlYWx0aW1lU3RhdHVzLkNvbm5lY3RlZDsKICAgIH07CiAgICBSZWFsdGltZS5wcm90b3R5cGUuaGFuZGxlQ2xvc2UgPSBmdW5jdGlvbiAoZXZlbnQpIHsKICAgICAgICB0aGlzLnN0YXR1cyA9IFJlYWx0aW1lU3RhdHVzLkRpc2Nvbm5lY3RlZDsKICAgIH07CiAgICByZXR1cm4gUmVhbHRpbWU7Cn0oU3ViamVjdCkpOwpleHBvcnQgZGVmYXVsdCBSZWFsdGltZTsK"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/worker/Realtime.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/worker/Realtime.ts"],"names":[],"mappings":"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","sourcesContent":["import { Subject } from 'rxjs';\nimport { RealtimeEvent } from '@src/types';\nimport { Backoff } from './Backoff';\nimport { AUTH_TOKEN_NONE } from '@src/api/base';\n\nconst enum RealtimeStatus {\n  Connected = 'connected',\n  Disconnected = 'disconnect',\n  Reconnecting = 'reconnecting',\n}\n\n// Enable debug / logging of IndexDB call times\nlet debug = false;\n\nexport function enableRealtimeDebug() {\n  debug = true;\n\n  // tslint:disable-next-line:no-console\n  console.debug('Enabled Realtime token.');\n}\n\nclass Realtime extends Subject<RealtimeEvent> {\n  private status: RealtimeStatus;\n  private apiToken: string;\n  private connection?: WebSocket;\n  private backoff: Backoff;\n\n  constructor() {\n    super();\n    this.apiToken = '';\n    this.backoff = new Backoff('Realtime');\n  }\n\n  setToken(apiToken: string) {\n    // Handle logout / not logged in case / not set cases\n    if (apiToken === '' || apiToken === AUTH_TOKEN_NONE) {\n      this.apiToken = apiToken;\n      if (this.connection) {\n        this.connection.close();\n      }\n      return;\n    }\n\n    // Create / Replace Existing connection\n    if (this.apiToken !== apiToken) {\n      // Disconnect and reconnect if this is a new token.\n      this.apiToken = apiToken;\n      if (this.connection) {\n        this.connection.close();\n      }\n\n      this.connect();\n      return;\n    }\n  }\n\n  persist(intervalSeconds: number = 5) {\n    setInterval(\n      () => {\n        if (this.status !== RealtimeStatus.Disconnected) {\n          return;\n        }\n        if (this.apiToken === '' || this.apiToken === AUTH_TOKEN_NONE) {\n          return;\n        }\n        if (!this.backoff.isReady()) {\n          return;\n        }\n        this.connect();\n      },\n      intervalSeconds * 1000,\n    );\n  }\n\n  private connect() {\n    this.status = RealtimeStatus.Reconnecting;\n    const url = debug\n      ? `${process.env.RT_API_URL}/v1/realtime/websocket?token=` + this.apiToken\n      : `${process.env.RT_API_URL}/v1/realtime/websocket`;\n\n    this.connection = new WebSocket(url);\n    this.connection.onerror = this.handleError.bind(this);\n    this.connection.onmessage = this.handleMessage.bind(this);\n    this.connection.onclose = this.handleClose.bind(this);\n    this.connection.onopen = this.handleOpen.bind(this);\n  }\n\n  private handleError(event: MessageEvent): any {\n    this.status = RealtimeStatus.Disconnected;\n    this.backoff.setError(event.data);\n  }\n\n  private handleMessage(event: MessageEvent): any {\n    if (event.data as Blob) {\n      const reader = new FileReader();\n      reader.addEventListener('loadend', () => {\n        this.next(JSON.parse(reader.result as string));\n      });\n      reader.readAsText(event.data);\n    }\n  }\n\n  private handleOpen(event: Event): any {\n    this.status = RealtimeStatus.Connected;\n  }\n\n  private handleClose(event: CloseEvent): any {\n    this.status = RealtimeStatus.Disconnected;\n  }\n}\n\nexport default Realtime;\n"]}]}