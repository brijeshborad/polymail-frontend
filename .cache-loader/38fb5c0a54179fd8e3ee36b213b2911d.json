{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/mocks/filters.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/mocks/filters.ts","mtime":1675280254070},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkgewogICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHsKICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHsKICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTsKICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKQogICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07CiAgICAgICAgfQogICAgICAgIHJldHVybiB0OwogICAgfTsKICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9OwppbXBvcnQgeyBGaWx0ZXJTZWxlY3RvclR5cGUsIEZpbHRlckFjdGlvblR5cGUgfSBmcm9tICdAc3JjL3R5cGVzL2ZpbHRlcnMnOwpleHBvcnQgdmFyIGNyZWF0ZUZpbHRlciA9IGZ1bmN0aW9uIChmaWx0ZXIpIHsKICAgIHJldHVybiBfX2Fzc2lnbih7IGlkOiAnbW9jay1maWx0ZXInLCBzZWxlY3RvcnM6IFt7IHR5cGU6IEZpbHRlclNlbGVjdG9yVHlwZS5Gcm9tLCB2YWx1ZTogJ21vY2tAZmlsdGVyLmlvJyB9XSwgYWN0aW9uczogW3sgdHlwZTogRmlsdGVyQWN0aW9uVHlwZS5CbG9ja0NvbnRhY3QgfV0gfSwgZmlsdGVyKTsKfTsK"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/mocks/filters.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/mocks/filters.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,OAAO,EAAU,kBAAkB,EAAE,gBAAgB,EAAE,MAAM,oBAAoB,CAAC;AAElF,MAAM,CAAC,IAAM,YAAY,GAAG,UAAC,MAAwB;IACnD,kBACE,EAAE,EAAE,aAAa,EACjB,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,kBAAkB,CAAC,IAAI,EAAE,KAAK,EAAE,gBAAgB,EAAE,CAAC,EACvE,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,gBAAgB,CAAC,YAAY,EAAE,CAAC,IAC/C,MAAM,EACT;AACJ,CAAC,CAAC","sourcesContent":["import { Filter, FilterSelectorType, FilterActionType } from '@src/types/filters';\n\nexport const createFilter = (filter?: Partial<Filter>): Filter => {\n  return {\n    id: 'mock-filter',\n    selectors: [{ type: FilterSelectorType.From, value: 'mock@filter.io' }],\n    actions: [{ type: FilterActionType.BlockContact }],\n    ...filter,\n  };\n};\n"]}]}