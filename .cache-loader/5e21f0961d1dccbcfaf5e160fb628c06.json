{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Calendar/components/ManageSchedulingChooser/ManageSchedulingChooser.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Calendar/components/ManageSchedulingChooser/ManageSchedulingChooser.tsx","mtime":1675280254073},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JzsKaW1wb3J0IGNsYXNzbmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7CmltcG9ydCBQbHVzIGZyb20gJ0BzcmMvY29tcG9uZW50cy9JY29ucy9QbHVzLnN2Zyc7CmltcG9ydCAnLi9NYW5hZ2VTY2hlZHVsaW5nQ2hvb3Nlci5zY3NzJzsKaW1wb3J0IGJyb3dzZXJIaXN0b3J5IGZyb20gJ0BzcmMvbGliL2Jyb3dzZXJIaXN0b3J5JzsKaW1wb3J0IFNjaGVkdWxpbmdDaG9vc2VyQ2VsbCBmcm9tICcuL2NvbXBvbmVudHMvU2NoZWR1bGluZ0Nob29zZXJDZWxsJzsKdmFyIFNjaGVkdWxpbmdDaG9vc2VyID0gZnVuY3Rpb24gKHByb3BzKSB7CiAgICB2YXIgZmVhdHVyZXMgPSBwcm9wcy5mZWF0dXJlcywgc2NoZWR1bGluZ3MgPSBwcm9wcy5zY2hlZHVsaW5ncywgc2VsZWN0ZWRTY2hlZHVsaW5nID0gcHJvcHMuc2VsZWN0ZWRTY2hlZHVsaW5nOwogICAgdmFyIGhhbmRsZVNjaGVkdWxpbmdDcmVhdGUgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgYnJvd3Nlckhpc3RvcnkucHVzaCgnL2NhbGVuZGFycy9uZXcnKTsKICAgIH07CiAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIHsgY2xhc3NOYW1lOiBjbGFzc25hbWVzKCdzY2hlZHVsaW5nLWNob29zZXInLCB7CiAgICAgICAgICAgICdzaG91bGQtdXBncmFkZSc6ICFmZWF0dXJlcy5tZXNzYWdlVGVtcGxhdGVzLAogICAgICAgIH0pIH0sCiAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2IiwgeyBjbGFzc05hbWU6ICJuZXciIH0sCiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIHsgY2xhc3NOYW1lOiAiY29udGFpbmVyIiwgb25DbGljazogaGFuZGxlU2NoZWR1bGluZ0NyZWF0ZSB9LAogICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChQbHVzLCB7IGNsYXNzTmFtZTogImljb24iIH0pLAogICAgICAgICAgICAgICAgIkNyZWF0ZSBOZXcgQXZhaWxhYmlsaXR5IikpLAogICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIHsgY2xhc3NOYW1lOiAidGFibGUiIH0sIHNjaGVkdWxpbmdzCiAgICAgICAgICAgIC5tYXAoZnVuY3Rpb24gKHNjaGVkdWxpbmcsIGluZGV4KSB7IHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChTY2hlZHVsaW5nQ2hvb3NlckNlbGwsIHsga2V5OiBzY2hlZHVsaW5nLmlkLCBzY2hlZHVsaW5nOiBzY2hlZHVsaW5nLCBzZWxlY3RlZDogc2VsZWN0ZWRTY2hlZHVsaW5nID09PSBzY2hlZHVsaW5nLmlkIH0pKTsgfSkpKSk7Cn07CmV4cG9ydCBkZWZhdWx0IFNjaGVkdWxpbmdDaG9vc2VyOwo="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Calendar/components/ManageSchedulingChooser/ManageSchedulingChooser.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Calendar/components/ManageSchedulingChooser/ManageSchedulingChooser.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,UAAU,MAAM,YAAY,CAAC;AAGpC,OAAO,IAAI,MAAM,gCAAgC,CAAC;AAGlD,OAAO,gCAAgC,CAAC;AACxC,OAAO,cAAc,MAAM,yBAAyB,CAAC;AACrD,OAAO,qBAAqB,MAAM,oCAAoC,CAAC;AAavE,IAAM,iBAAiB,GAAG,UAAC,KAA4B;IAC7C,IAAA,yBAAQ,EAAE,+BAAW,EAAE,6CAAkB,CAAW;IAE5D,IAAM,sBAAsB,GAAG;QAC7B,cAAc,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;IACxC,CAAC,CAAC;IAEF,OAAO,CACL,6BACE,SAAS,EAAE,UAAU,CAAC,oBAAoB,EAAE;YAC1C,gBAAgB,EAAE,CAAC,QAAQ,CAAC,gBAAgB;SAC7C,CAAC;QAEF,6BAAK,SAAS,EAAC,KAAK;YAClB,6BACE,SAAS,EAAC,WAAW,EACrB,OAAO,EAAE,sBAAsB;gBAE/B,oBAAC,IAAI,IAAC,SAAS,EAAC,MAAM,GAAE;0CAEpB,CACF;QACN,6BAAK,SAAS,EAAC,OAAO,IACnB,WAAW;aACT,GAAG,CAAC,UAAC,UAAU,EAAE,KAAK,IAAK,OAAA,CAC1B,oBAAC,qBAAqB,IACpB,GAAG,EAAE,UAAU,CAAC,EAAE,EAClB,UAAU,EAAE,UAAU,EACtB,QAAQ,EAAE,kBAAkB,KAAK,UAAU,CAAC,EAAE,GAC9C,CACH,EAN2B,CAM3B,CAAC,CAEA,CACF,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,iBAAiB,CAAC","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\n\nimport {  Me, Features } from '@src/types';\nimport Plus from '@src/components/Icons/Plus.svg';\nimport { Scheduling } from '@src/types/scheduling';\nimport { SchedulingCreateMeta } from '@src/ducks/scheduling';\nimport './ManageSchedulingChooser.scss';\nimport browserHistory from '@src/lib/browserHistory';\nimport SchedulingChooserCell from './components/SchedulingChooserCell';\n\nexport interface Props {\n  schedulings: Scheduling[];\n  me?: Me;\n  features: Features;\n  selectedScheduling?: string;\n}\n\nexport interface DispatchProps {\n  createScheduling: (meta: SchedulingCreateMeta) => void;\n}\n\nconst SchedulingChooser = (props: Props & DispatchProps) => {\n  const { features, schedulings, selectedScheduling } = props;\n\n  const handleSchedulingCreate = () => {\n    browserHistory.push('/calendars/new');\n  };\n\n  return (\n    <div\n      className={classnames('scheduling-chooser', {\n        'should-upgrade': !features.messageTemplates,\n      })}\n    >\n      <div className=\"new\">\n        <div\n          className=\"container\"\n          onClick={handleSchedulingCreate}\n        >\n          <Plus className=\"icon\"/>\n          Create New Availability\n        </div>\n      </div>\n      <div className=\"table\">\n        {schedulings\n          .map((scheduling, index) => (\n            <SchedulingChooserCell\n              key={scheduling.id}\n              scheduling={scheduling}\n              selected={selectedScheduling === scheduling.id}\n            />\n          ))\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default SchedulingChooser;\n"]}]}