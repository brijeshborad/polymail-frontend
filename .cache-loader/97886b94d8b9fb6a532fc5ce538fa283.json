{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/Cells/CommentAttachmentCell/CommentAttachmentCell.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/Cells/CommentAttachmentCell/CommentAttachmentCell.tsx","mtime":1675280253991},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkgewogICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBmdW5jdGlvbiAoZCwgYikgewogICAgICAgIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwKICAgICAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fAogICAgICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChiLmhhc093blByb3BlcnR5KHApKSBkW3BdID0gYltwXTsgfTsKICAgICAgICByZXR1cm4gZXh0ZW5kU3RhdGljcyhkLCBiKTsKICAgIH07CiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHsKICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpOwogICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfQogICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTsKICAgIH07Cn0pKCk7CmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7CmltcG9ydCBjbGFzc25hbWVzIGZyb20gJ2NsYXNzbmFtZXMnOwppbXBvcnQgJy4vQ29tbWVudEF0dGFjaG1lbnRDZWxsLnNjc3MnOwppbXBvcnQgRG93bmxvYWQgZnJvbSAnQHNyYy9jb21wb25lbnRzL0ljb25zL0Rvd25sb2FkLnN2Zyc7CmltcG9ydCB7IHRydW5jYXRlLCBmaWxlbmFtZUljb25VcmwgfSBmcm9tICdAc3JjL2xpYi9hdHRhY2htZW50JzsKaW1wb3J0IHsgaXNFbGVjdHJvbiB9IGZyb20gJ0BzcmMvbGliL2VsZWN0cm9uJzsKaW1wb3J0IHsgSVNfQ0hST01FLCBJU19NQUMgfSBmcm9tICdAc3JjL2xpYi9kZXZpY2UnOwp2YXIgQ29tbWVudEF0dGFjaG1lbnRDZWxsID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikgewogICAgX19leHRlbmRzKENvbW1lbnRBdHRhY2htZW50Q2VsbCwgX3N1cGVyKTsKICAgIGZ1bmN0aW9uIENvbW1lbnRBdHRhY2htZW50Q2VsbCgpIHsKICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzKSB8fCB0aGlzOwogICAgICAgIF90aGlzLnByZXZpZXdCdXR0b25QcmVzc2VkID0gZnVuY3Rpb24gKGUpIHsKICAgICAgICAgICAgdmFyIGF0dGFjaG1lbnQgPSBfdGhpcy5wcm9wcy5hdHRhY2htZW50OwogICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7CiAgICAgICAgICAgIGlmICh3aW5kb3cuUE1FbGVjdHJvbkJyaWRnZSAmJiB3aW5kb3cuUE1FbGVjdHJvbkJyaWRnZS5kb3dubG9hZEF0dGFjaG1lbnQpIHsKICAgICAgICAgICAgICAgIHdpbmRvdy5QTUVsZWN0cm9uQnJpZGdlLmRvd25sb2FkQXR0YWNobWVudCh7CiAgICAgICAgICAgICAgICAgICAgdXJsOiBhdHRhY2htZW50LmNsb3VkVXJsLAogICAgICAgICAgICAgICAgICAgIGZpbGVuYW1lOiBhdHRhY2htZW50LmZpbGVuYW1lLAogICAgICAgICAgICAgICAgICAgIHRocmVhZDogJycsCiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJycsCiAgICAgICAgICAgICAgICAgICAgYXR0YWNobWVudDogYXR0YWNobWVudC5pZCwKICAgICAgICAgICAgICAgICAgICBzYXZlQXM6IGUuYWx0S2V5LAogICAgICAgICAgICAgICAgICAgIHByZXZpZXc6IHRydWUsCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgIC8vIERvd25sb2FkIHVybCBpbiBuZXcgd2luZG93CiAgICAgICAgICAgICAgICB3aW5kb3cub3BlbihhdHRhY2htZW50LmNsb3VkVXJsLCAnX2JsYW5rJyk7CiAgICAgICAgICAgIH0KICAgICAgICB9OwogICAgICAgIC8vIFRPRE8oU0hJTik6IEVuc3VyZSB0aGF0IGRvd25sb2FkIG9jY3VycyB3aXRob3V0IGhhdmluZyB0byBvcGVuIG5ldyB0YWI/CiAgICAgICAgX3RoaXMuZG93bmxvYWRCdXR0b25QcmVzc2VkID0gZnVuY3Rpb24gKGUpIHsKICAgICAgICAgICAgdmFyIF9hID0gX3RoaXMucHJvcHMsIGF0dGFjaG1lbnQgPSBfYS5hdHRhY2htZW50LCBwcm9ncmVzcyA9IF9hLnByb2dyZXNzOwogICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7CiAgICAgICAgICAgIGlmICh3aW5kb3cuUE1FbGVjdHJvbkJyaWRnZSAmJiB3aW5kb3cuUE1FbGVjdHJvbkJyaWRnZS5kb3dubG9hZEF0dGFjaG1lbnQpIHsKICAgICAgICAgICAgICAgIHdpbmRvdy5QTUVsZWN0cm9uQnJpZGdlLmRvd25sb2FkQXR0YWNobWVudCh7CiAgICAgICAgICAgICAgICAgICAgdXJsOiBhdHRhY2htZW50LmNsb3VkVXJsLAogICAgICAgICAgICAgICAgICAgIGZpbGVuYW1lOiBhdHRhY2htZW50LmZpbGVuYW1lLAogICAgICAgICAgICAgICAgICAgIGF0dGFjaG1lbnQ6IGF0dGFjaG1lbnQuaWQsCiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJycsCiAgICAgICAgICAgICAgICAgICAgdGhyZWFkOiAnJywKICAgICAgICAgICAgICAgICAgICBzYXZlQXM6IGUuYWx0S2V5LAogICAgICAgICAgICAgICAgICAgIG9wZW46IHByb2dyZXNzICYmIHByb2dyZXNzID09PSAxIHx8IGZhbHNlLAogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICAvLyBEb3dubG9hZCB1cmwgaW4gbmV3IHdpbmRvdwogICAgICAgICAgICAgICAgd2luZG93Lm9wZW4oYXR0YWNobWVudC5jbG91ZFVybCwgJ19ibGFuaycpOwogICAgICAgICAgICB9CiAgICAgICAgfTsKICAgICAgICBfdGhpcy5oYW5kbGVNb3VzZUVudGVyID0gZnVuY3Rpb24gKCkgewogICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IGRvd25sb2FkSG92ZXJlZDogdHJ1ZSB9KTsKICAgICAgICB9OwogICAgICAgIF90aGlzLmhhbmRsZU1vdXNlTGVhdmUgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHsgZG93bmxvYWRIb3ZlcmVkOiBmYWxzZSB9KTsKICAgICAgICB9OwogICAgICAgIF90aGlzLmhhbmRsZURyYWdTdGFydCA9IGZ1bmN0aW9uIChlKSB7CiAgICAgICAgICAgIGlmIChlLmRhdGFUcmFuc2ZlciAmJiBlLmRhdGFUcmFuc2Zlci5zZXREYXRhKSB7CiAgICAgICAgICAgICAgICB2YXIgX2EgPSBfdGhpcy5wcm9wcy5hdHRhY2htZW50LCBmaWxlbmFtZSA9IF9hLmZpbGVuYW1lLCBjbG91ZFVybCA9IF9hLmNsb3VkVXJsOwogICAgICAgICAgICAgICAgdmFyIGNsZWFuRmlsZW5hbWUgPSBmaWxlbmFtZS5yZXBsYWNlKCc6JywgJyAnKTsKICAgICAgICAgICAgICAgIHZhciBwcm94aWVkVXJsID0gd2luZG93LmxvY2F0aW9uLm9yaWdpbiArICcvei9kP3U9JyArIGVuY29kZVVSSUNvbXBvbmVudChjbG91ZFVybCk7CiAgICAgICAgICAgICAgICBlLmRhdGFUcmFuc2Zlci5zZXREYXRhKCdEb3dubG9hZFVSTCcsICdhcHBsaWNhdGlvbi9vY3RldC1zdHJlYW06JyArIGNsZWFuRmlsZW5hbWUgKyAnOicgKyBwcm94aWVkVXJsKTsKICAgICAgICAgICAgfQogICAgICAgIH07CiAgICAgICAgX3RoaXMucmVuZGVyUHJvZ3Jlc3MgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHZhciBwcm9ncmVzcyA9IF90aGlzLnByb3BzLnByb2dyZXNzOwogICAgICAgICAgICB2YXIgcHJvZ3Jlc3NTdHlsZSA9IHByb2dyZXNzICYmIHByb2dyZXNzICogMTAwICsgIiUiOwogICAgICAgICAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIHsgY2xhc3NOYW1lOiAicHJvZ3Jlc3MtaW5kaWNhdG9yIiwgc3R5bGU6IHsKICAgICAgICAgICAgICAgICAgICBtYXhXaWR0aDogcHJvZ3Jlc3NTdHlsZSwKICAgICAgICAgICAgICAgIH0gfSkpOwogICAgICAgIH07CiAgICAgICAgX3RoaXMuc3RhdGUgPSB7IGRvd25sb2FkSG92ZXJlZDogZmFsc2UgfTsKICAgICAgICByZXR1cm4gX3RoaXM7CiAgICB9CiAgICBDb21tZW50QXR0YWNobWVudENlbGwucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uICgpIHsKICAgICAgICB2YXIgX2EgPSB0aGlzLnByb3BzLCBhdHRhY2htZW50ID0gX2EuYXR0YWNobWVudCwgcHJvZ3Jlc3MgPSBfYS5wcm9ncmVzczsKICAgICAgICB2YXIgZG93bmxvYWRIb3ZlcmVkID0gdGhpcy5zdGF0ZS5kb3dubG9hZEhvdmVyZWQ7CiAgICAgICAgdmFyIGhvdmVyVGV4dCA9ICfigKIgQ2xpY2sgdG8gdmlldyc7CiAgICAgICAgaWYgKGlzRWxlY3Ryb24gJiYgcHJvZ3Jlc3MgPT09IDEpIHsKICAgICAgICAgICAgaG92ZXJUZXh0ID0gJ+KAoiBTYXZlZCEnOwogICAgICAgIH0KICAgICAgICBlbHNlIGlmIChpc0VsZWN0cm9uICYmIGRvd25sb2FkSG92ZXJlZCkgewogICAgICAgICAgICB2YXIga2V5Q29kZSA9IElTX01BQyA/ICfijKUnIDogJ2FsdCc7CiAgICAgICAgICAgIGhvdmVyVGV4dCA9ICfigKIgJyArIGtleUNvZGUgKyAnICsgQ2xpY2sgdG8gY2hvb3NlIGRvd25sb2FkIGxvY2F0aW9uJzsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLCB7IG9uQ2xpY2s6IHRoaXMucHJldmlld0J1dHRvblByZXNzZWQsIGNsYXNzTmFtZTogImNvbW1lbnQtYXR0YWNobWVudC1jZWxsIiwgb25EcmFnU3RhcnQ6IHRoaXMuaGFuZGxlRHJhZ1N0YXJ0LCBkcmFnZ2FibGU6IElTX0NIUk9NRSB8fCBpc0VsZWN0cm9uIH0sCiAgICAgICAgICAgIHRoaXMucmVuZGVyUHJvZ3Jlc3MoKSwKICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudCgiaW1nIiwgeyBjbGFzc05hbWU6ICJhdHRhY2htZW50LWltYWdlIiwgc3JjOiBmaWxlbmFtZUljb25VcmwoYXR0YWNobWVudC5maWxlbmFtZSkgfSksCiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIHsgY2xhc3NOYW1lOiAiYXR0YWNobWVudC1tZXRhIiB9LAogICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2IiwgeyBjbGFzc05hbWU6ICJ0b3AiIH0sIGF0dGFjaG1lbnQuZmlsZW5hbWUpLAogICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2IiwgeyBjbGFzc05hbWU6ICJib3R0b20iIH0sCiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2IiwgeyBjbGFzc05hbWU6ICJmaWxlc2l6ZSIgfSwgdHJ1bmNhdGUoYXR0YWNobWVudC5sZW5ndGgpKSwKICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLCB7IGNsYXNzTmFtZTogY2xhc3NuYW1lcygnaG92ZXItdGV4dCcsIHsgc2F2ZWQ6IHByb2dyZXNzID09PSAxIH0pIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoInNwYW4iLCBudWxsLCBob3ZlclRleHQpKSkpLAogICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KCJidXR0b24iLCB7IG9uQ2xpY2s6IHRoaXMuZG93bmxvYWRCdXR0b25QcmVzc2VkLCBjbGFzc05hbWU6IGNsYXNzbmFtZXMoJ2Rvd25sb2FkLWJ1dHRvbicsIHsKICAgICAgICAgICAgICAgICAgICBwcm9ncmVzczogISFwcm9ncmVzcywKICAgICAgICAgICAgICAgICAgICBjb21wbGV0ZWQ6IHByb2dyZXNzID09PSAxLAogICAgICAgICAgICAgICAgfSksIGRpc2FibGVkOiAhIXByb2dyZXNzICYmIHByb2dyZXNzICE9PSAxLCBvbk1vdXNlRW50ZXI6IHRoaXMuaGFuZGxlTW91c2VFbnRlciwgb25Nb3VzZUxlYXZlOiB0aGlzLmhhbmRsZU1vdXNlTGVhdmUgfSwKICAgICAgICAgICAgICAgICFwcm9ncmVzcyAmJiBSZWFjdC5jcmVhdGVFbGVtZW50KERvd25sb2FkLCB7IHdpZHRoOiAiMTRweCIsIGhlaWdodDogIjE2cHgiIH0pLAogICAgICAgICAgICAgICAgISFwcm9ncmVzcyAmJiBwcm9ncmVzcyA9PT0gMSAmJiAnT3BlbicpKSk7CiAgICB9OwogICAgcmV0dXJuIENvbW1lbnRBdHRhY2htZW50Q2VsbDsKfShSZWFjdC5QdXJlQ29tcG9uZW50KSk7CmV4cG9ydCBkZWZhdWx0IENvbW1lbnRBdHRhY2htZW50Q2VsbDsK"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/Cells/CommentAttachmentCell/CommentAttachmentCell.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/Cells/CommentAttachmentCell/CommentAttachmentCell.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport './CommentAttachmentCell.scss';\nimport Download from '@src/components/Icons/Download.svg';\nimport { Attachment } from '@src/types';\nimport { truncate, filenameIconUrl } from '@src/lib/attachment';\nimport { isElectron } from '@src/lib/electron';\nimport { IS_CHROME, IS_MAC } from '@src/lib/device';\n\nexport interface Props {\n  attachment: Attachment;\n}\n\nexport interface StateProps {\n  progress?: number;\n}\n\ninterface State {\n  downloadHovered: boolean;\n}\n\nclass CommentAttachmentCell extends React.PureComponent<Props & StateProps, State> {\n  constructor() {\n    super();\n\n    this.state = { downloadHovered: false };\n  }\n\n  previewButtonPressed = (e: React.MouseEvent<HTMLDivElement>) => {\n    const { attachment } = this.props;\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (window.PMElectronBridge && window.PMElectronBridge.downloadAttachment) {\n      window.PMElectronBridge.downloadAttachment({\n        url: attachment.cloudUrl,\n        filename: attachment.filename,\n        thread: '',\n        message: '',\n        attachment: attachment.id,\n        saveAs: e.altKey,\n        preview: true,\n      });\n    } else {\n      // Download url in new window\n      window.open(attachment.cloudUrl, '_blank');\n    }\n  }\n\n  // TODO(SHIN): Ensure that download occurs without having to open new tab?\n  downloadButtonPressed = (e: React.MouseEvent<HTMLButtonElement>) => {\n    const { attachment, progress } = this.props;\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (window.PMElectronBridge && window.PMElectronBridge.downloadAttachment) {\n      window.PMElectronBridge.downloadAttachment({\n        url: attachment.cloudUrl,\n        filename: attachment.filename,\n        attachment: attachment.id,\n        message: '',\n        thread: '',\n        saveAs: e.altKey,\n        open: progress && progress === 1 || false,\n      });\n    } else {\n      // Download url in new window\n      window.open(attachment.cloudUrl, '_blank');\n    }\n  }\n\n  handleMouseEnter = () => {\n    this.setState({ downloadHovered: true });\n  }\n\n  handleMouseLeave = () => {\n    this.setState({ downloadHovered: false });\n  }\n\n  handleDragStart = (e: any) => {\n    if (e.dataTransfer && e.dataTransfer.setData) {\n      const { filename, cloudUrl } = this.props.attachment;\n      const cleanFilename = filename.replace(':', ' ');\n      const proxiedUrl = window.location.origin + '/z/d?u=' + encodeURIComponent(cloudUrl);\n\n      e.dataTransfer.setData(\n        'DownloadURL',\n        'application/octet-stream:' + cleanFilename + ':' + proxiedUrl,\n      );\n    }\n  }\n\n  renderProgress = () => {\n    const { progress } = this.props;\n    const progressStyle = progress && `${progress * 100}%`;\n    return (\n      <div\n        className=\"progress-indicator\"\n        style={{\n          maxWidth: progressStyle,\n        }}\n      />\n    );\n  }\n\n  render() {\n    const { attachment, progress } = this.props;\n    const { downloadHovered } = this.state;\n\n    let hoverText = '• Click to view';\n    if (isElectron && progress === 1) {\n      hoverText = '• Saved!';\n    } else if (isElectron && downloadHovered) {\n      const keyCode = IS_MAC ? '⌥' : 'alt';\n      hoverText = '• ' + keyCode + ' + Click to choose download location';\n    }\n\n    return (\n      <div\n        onClick={this.previewButtonPressed}\n        className=\"comment-attachment-cell\"\n        onDragStart={this.handleDragStart}\n        draggable={IS_CHROME || isElectron}\n      >\n        {this.renderProgress()}\n        <img\n          className=\"attachment-image\"\n          src={filenameIconUrl(attachment.filename)}\n        />\n        <div className=\"attachment-meta\">\n          <div className=\"top\">\n            {attachment.filename}\n          </div>\n          <div className=\"bottom\">\n            <div className=\"filesize\">\n              {truncate(attachment.length)}\n            </div>\n            <div className={classnames('hover-text', { saved: progress === 1 })}>\n              <span>{hoverText}</span>\n            </div>\n          </div>\n        </div>\n        <button\n          onClick={this.downloadButtonPressed}\n          className={classnames('download-button', {\n            progress: !!progress,\n            completed: progress === 1,\n          })}\n          disabled={!!progress && progress !== 1}\n          onMouseEnter={this.handleMouseEnter}\n          onMouseLeave={this.handleMouseLeave}\n        >\n          {!progress && <Download width=\"14px\" height=\"16px\"/>}\n          {!!progress && progress === 1 && 'Open'}\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default CommentAttachmentCell;\n"]}]}