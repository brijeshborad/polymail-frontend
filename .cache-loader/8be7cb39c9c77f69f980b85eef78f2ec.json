{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/mocks/threads.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/mocks/threads.ts","mtime":1675280254072},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkgewogICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHsKICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHsKICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTsKICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKQogICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07CiAgICAgICAgfQogICAgICAgIHJldHVybiB0OwogICAgfTsKICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9OwppbXBvcnQgeyBUaHJlYWRCb3gsIFdhaXRpbmdUeXBlLCB9IGZyb20gJ0BzcmMvdHlwZXMnOwppbXBvcnQgeyBjcmVhdGVNZXNzYWdlIH0gZnJvbSAnLi9tZXNzYWdlcyc7CmltcG9ydCB7IGNvbXB1dGVUaHJlYWQgfSBmcm9tICdAc3JjL2xpYi90aHJlYWQnOwpleHBvcnQgdmFyIGNyZWF0ZVNlbGVjdGVkSWRzID0gZnVuY3Rpb24gKGlkcykgewogICAgaWYgKCFpZHMubGVuZ3RoKSB7CiAgICAgICAgcmV0dXJuIG5ldyBNYXAoKTsKICAgIH0KICAgIHJldHVybiBpZHMucmVkdWNlKGZ1bmN0aW9uIChhY2MsIGlkKSB7CiAgICAgICAgYWNjLnNldChpZCwgdHJ1ZSk7CiAgICAgICAgcmV0dXJuIGFjYzsKICAgIH0sIG5ldyBNYXAoKSk7Cn07CmV4cG9ydCB2YXIgY3JlYXRlQWRkcmVzcyA9IGZ1bmN0aW9uIChpbmRleCkgewogICAgdmFyIGFkZHJlc3NlcyA9IFsKICAgICAgICB7CiAgICAgICAgICAgIGdpdmVuTmFtZTogJ0JyYW5kb24nLAogICAgICAgICAgICBmYW1pbHlOYW1lOiAnRm9vJywKICAgICAgICAgICAgZnVsbE5hbWU6ICdCcmFuZG9uIEZvbycsCiAgICAgICAgICAgIGVtYWlsOiAnZm9vQHBvbHltYWlsLmlvJywKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgZ2l2ZW5OYW1lOiAnJywKICAgICAgICAgICAgZmFtaWx5TmFtZTogJycsCiAgICAgICAgICAgIGZ1bGxOYW1lOiAnJywKICAgICAgICAgICAgZW1haWw6ICdwb2x5bWRldjFAZ21haWwuY29tJywKICAgICAgICB9LAogICAgXTsKICAgIHJldHVybiBhZGRyZXNzZXNbaW5kZXhdOwp9OwpleHBvcnQgdmFyIGNyZWF0ZVdhaXRpbmcgPSBmdW5jdGlvbiAoKSB7CiAgICByZXR1cm4gewogICAgICAgIHR5cGU6IFdhaXRpbmdUeXBlLk5vUmVwbHksCiAgICAgICAgd2hlbjogbmV3IERhdGUoJzIwMTctMDktMjhUMDk6MTc6MTgtMDc6MDAnKSwKICAgIH07Cn07CmV4cG9ydCB2YXIgY3JlYXRlVGhyZWFkID0gZnVuY3Rpb24gKHRocmVhZCkgewogICAgdmFyIG1lc3NhZ2UgPSBjcmVhdGVNZXNzYWdlKCk7CiAgICByZXR1cm4gY29tcHV0ZVRocmVhZChfX2Fzc2lnbih7IGlkOiAnMTIzNDU2Nzg5MCcsIGludGVybmFsOiBuZXcgRGF0ZSgnMjAxNy0wOS0yOFQwOToxNzoxOC0wNzowMCcpLCB3aGVuOiBuZXcgRGF0ZSgnMjAxNy0wOS0yOFQwOToxNzoxOC0wNzowMCcpLCBzb3J0OiBuZXcgRGF0ZSgnMjAxNy0wOS0yOFQwOToxNzoxOC0wNzowMCcpLCBib3g6IFRocmVhZEJveC5JbmJveCwgYWNjb3VudDogJ2FjY291bnRJZCcsIG1lc3NhZ2VzOiBbCiAgICAgICAgICAgIG1lc3NhZ2UsCiAgICAgICAgICAgIF9fYXNzaWduKF9fYXNzaWduKHt9LCBtZXNzYWdlKSwgeyBpZDogJzIzNDU2JyB9KSwKICAgICAgICBdIH0sIHRocmVhZCkpOwp9Owo="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/mocks/threads.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/mocks/threads.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,OAAO,EACL,SAAS,EAIT,WAAW,GAEZ,MAAM,YAAY,CAAC;AACpB,OAAO,EAAE,aAAa,EAAE,MAAM,YAAY,CAAC;AAC3C,OAAO,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAC;AAEhD,MAAM,CAAC,IAAM,iBAAiB,GAAG,UAAC,GAAa;IAC7C,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE;QACf,OAAO,IAAI,GAAG,EAAE,CAAC;KAClB;IACD,OAAO,GAAG,CAAC,MAAM,CACf,UAAC,GAAG,EAAE,EAAE;QACN,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAClB,OAAO,GAAG,CAAC;IACb,CAAC,EACD,IAAI,GAAG,EAAE,CACV,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,IAAM,aAAa,GAAG,UAAC,KAAa;IACzC,IAAM,SAAS,GAAG;QAChB;YACE,SAAS,EAAE,SAAS;YACpB,UAAU,EAAE,KAAK;YACjB,QAAQ,EAAE,aAAa;YACvB,KAAK,EAAE,iBAAiB;SACzB;QACD;YACE,SAAS,EAAE,EAAE;YACb,UAAU,EAAE,EAAE;YACd,QAAQ,EAAE,EAAE;YACZ,KAAK,EAAE,qBAAqB;SAC7B;KACF,CAAC;IAEF,OAAO,SAAS,CAAC,KAAK,CAAC,CAAC;AAC1B,CAAC,CAAC;AAEF,MAAM,CAAC,IAAM,aAAa,GAAG;IAC3B,OAAO;QACL,IAAI,EAAE,WAAW,CAAC,OAAO;QACzB,IAAI,EAAE,IAAI,IAAI,CAAC,2BAA2B,CAAC;KAC5C,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,IAAM,YAAY,GAAG,UAAC,MAAwB;IACnD,IAAM,OAAO,GAAG,aAAa,EAAE,CAAC;IAChC,OAAO,aAAa,CAAC,WACnB,EAAE,EAAE,YAAY,EAChB,QAAQ,EAAE,IAAI,IAAI,CAAC,2BAA2B,CAAC,EAC/C,IAAI,EAAE,IAAI,IAAI,CAAC,2BAA2B,CAAC,EAC3C,IAAI,EAAE,IAAI,IAAI,CAAC,2BAA2B,CAAC,EAC3C,GAAG,EAAE,SAAS,CAAC,KAAK,EACpB,OAAO,EAAE,WAAW,EACpB,QAAQ,EAAE;YACR,OAAO;kCACF,OAAO,KAAE,EAAE,EAAE,OAAO;SAC1B,IACE,MAAM,CACH,CAAC,CAAC;AACZ,CAAC,CAAC","sourcesContent":["import {\n  ThreadBox,\n  Thread,\n  Address,\n  Waiting,\n  WaitingType,\n  Partial,\n} from '@src/types';\nimport { createMessage } from './messages';\nimport { computeThread } from '@src/lib/thread';\n\nexport const createSelectedIds = (ids: string[]) => {\n  if (!ids.length) {\n    return new Map();\n  }\n  return ids.reduce(\n    (acc, id) => {\n      acc.set(id, true);\n      return acc;\n    },\n    new Map(),\n  );\n};\n\nexport const createAddress = (index: number): Address => {\n  const addresses = [\n    {\n      givenName: 'Brandon',\n      familyName: 'Foo',\n      fullName: 'Brandon Foo',\n      email: 'foo@polymail.io',\n    },\n    {\n      givenName: '',\n      familyName: '',\n      fullName: '',\n      email: 'polymdev1@gmail.com',\n    },\n  ];\n\n  return addresses[index];\n};\n\nexport const createWaiting = (): Waiting => {\n  return {\n    type: WaitingType.NoReply,\n    when: new Date('2017-09-28T09:17:18-07:00'),\n  };\n};\n\nexport const createThread = (thread?: Partial<Thread>): Thread => {\n  const message = createMessage();\n  return computeThread({\n    id: '1234567890',\n    internal: new Date('2017-09-28T09:17:18-07:00'),\n    when: new Date('2017-09-28T09:17:18-07:00'),\n    sort: new Date('2017-09-28T09:17:18-07:00'),\n    box: ThreadBox.Inbox,\n    account: 'accountId',\n    messages: [\n      message,\n      { ...message, id: '23456' },\n    ],\n    ...thread,\n  } as any);\n};\n"]}]}