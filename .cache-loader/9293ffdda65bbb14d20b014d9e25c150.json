{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/models/sequenceRecipients.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/models/sequenceRecipients.ts","mtime":1675280254067},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkgewogICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHsKICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHsKICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTsKICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKQogICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07CiAgICAgICAgfQogICAgICAgIHJldHVybiB0OwogICAgfTsKICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9OwppbXBvcnQgeyBmb3JFYWNoIH0gZnJvbSAnbG9kYXNoJzsKZXhwb3J0IHZhciBhcHBseVNlcXVlbmNlUmVjaXBpZW50RGVmYXVsdHMgPSBmdW5jdGlvbiAoc2VxdWVuY2VSZWNpcGllbnQpIHsKICAgIHZhciBjcmVhdGVkID0gc2VxdWVuY2VSZWNpcGllbnQuY3JlYXRlZCA/IG5ldyBEYXRlKHNlcXVlbmNlUmVjaXBpZW50LmNyZWF0ZWQpIDogbmV3IERhdGUoKTsKICAgIHZhciB1cGRhdGVkID0gc2VxdWVuY2VSZWNpcGllbnQudXBkYXRlZCA/IG5ldyBEYXRlKHNlcXVlbmNlUmVjaXBpZW50LnVwZGF0ZWQpIDogbmV3IERhdGUoKTsKICAgIHZhciBzY2hlZHVsZWQgPSBzZXF1ZW5jZVJlY2lwaWVudC5zY2hlZHVsZWQgPwogICAgICAgIG5ldyBEYXRlKHNlcXVlbmNlUmVjaXBpZW50LnNjaGVkdWxlZCkgOiB1bmRlZmluZWQ7CiAgICB2YXIgbGFzdFNlbnQgPSBzZXF1ZW5jZVJlY2lwaWVudC5sYXN0U2VudCA/CiAgICAgICAgbmV3IERhdGUoc2VxdWVuY2VSZWNpcGllbnQubGFzdFNlbnQpIDogdW5kZWZpbmVkOwogICAgdmFyIHZhcmlhYmxlczsKICAgIGlmIChzZXF1ZW5jZVJlY2lwaWVudCkgewogICAgICAgIHZhcmlhYmxlcyA9IHt9OwogICAgICAgIGZvckVhY2goc2VxdWVuY2VSZWNpcGllbnQudmFyaWFibGVzLCBmdW5jdGlvbiAodiwgaykgewogICAgICAgICAgICB2YXJpYWJsZXNbay50b0xvd2VyQ2FzZSgpXSA9IHY7CiAgICAgICAgfSk7CiAgICB9CiAgICByZXR1cm4gX19hc3NpZ24oX19hc3NpZ24oe30sIHNlcXVlbmNlUmVjaXBpZW50KSwgeyBjcmVhdGVkOiBjcmVhdGVkLAogICAgICAgIHVwZGF0ZWQ6IHVwZGF0ZWQsCiAgICAgICAgc2NoZWR1bGVkOiBzY2hlZHVsZWQsCiAgICAgICAgbGFzdFNlbnQ6IGxhc3RTZW50LAogICAgICAgIHZhcmlhYmxlczogdmFyaWFibGVzIH0pOwp9Owo="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/models/sequenceRecipients.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/models/sequenceRecipients.ts"],"names":[],"mappings":";;;;;;;;;;;AACA,OAAO,EAAE,OAAO,EAAE,MAAM,QAAQ,CAAC;AAEjC,MAAM,CAAC,IAAM,8BAA8B,GACzC,UAAC,iBAAoC;IACnC,IAAM,OAAO,GAAG,iBAAiB,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC;IAC7F,IAAM,OAAO,GAAG,iBAAiB,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC;IAC7F,IAAM,SAAS,GAAG,iBAAiB,CAAC,SAAS,CAAC,CAAC;QAC7C,IAAI,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;IACpD,IAAM,QAAQ,GAAG,iBAAiB,CAAC,QAAQ,CAAC,CAAC;QAC3C,IAAI,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;IACnD,IAAI,SAA8C,CAAC;IAEnD,IAAI,iBAAiB,EAAE;QACrB,SAAS,GAAG,EAAE,CAAC;QACf,OAAO,CAAC,iBAAiB,CAAC,SAAS,EAAE,UAAC,CAAC,EAAE,CAAC;YACxC,SAAU,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;KACJ;IAED,6BACK,iBAAiB,KAEpB,OAAO,SAAA;QACP,OAAO,SAAA;QACP,SAAS,WAAA;QACT,QAAQ,UAAA;QACR,SAAS,WAAA,IACT;AACJ,CAAC,CAAC","sourcesContent":["import { SequenceRecipient } from '@src/types/sequences';\nimport { forEach } from 'lodash';\n\nexport const applySequenceRecipientDefaults =\n  (sequenceRecipient: SequenceRecipient): SequenceRecipient => {\n    const created = sequenceRecipient.created ? new Date(sequenceRecipient.created) : new Date();\n    const updated = sequenceRecipient.updated ? new Date(sequenceRecipient.updated) : new Date();\n    const scheduled = sequenceRecipient.scheduled ?\n      new Date(sequenceRecipient.scheduled) : undefined;\n    const lastSent = sequenceRecipient.lastSent ?\n      new Date(sequenceRecipient.lastSent) : undefined;\n    let variables: { [v: string]: string } | undefined;\n\n    if (sequenceRecipient) {\n      variables = {};\n      forEach(sequenceRecipient.variables, (v, k) => {\n        variables![k.toLowerCase()] = v;\n      });\n    }\n\n    return {\n      ...sequenceRecipient,\n\n      created,\n      updated,\n      scheduled,\n      lastSent,\n      variables,\n    };\n  };\n"]}]}