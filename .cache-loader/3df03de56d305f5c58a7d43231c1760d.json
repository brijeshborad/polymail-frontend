{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Sequences/routes/SequenceList/SequenceList.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Sequences/routes/SequenceList/SequenceList.tsx","mtime":1675280254090},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Sequences/routes/SequenceList/SequenceList.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Sequences/routes/SequenceList/SequenceList.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport Autosizer from 'react-virtualized-auto-sizer';\nimport { FixedSizeList as List } from 'react-window';\nimport { Resource } from '@src/types';\nimport { Sequence } from '@src/types/sequences';\nimport { map, filter, size, find, debounce, orderBy } from 'lodash';\n\nimport './SequenceList.scss';\nimport SequenceCell from './SequenceCell';\nimport SearchInput from '@src/components/Form/SearchInput/SearchInput';\nimport { createDefaultSequence } from '@src/lib/models/sequences';\nimport Loader from '@src/components/Loader/Loader';\nimport Confirm, { Props as ConfirmProps } from '@src/components/Base/Confirm';\nimport Dropdown from '@src/components/Form/Dropdown';\nimport browserHistory from '@src/lib/browserHistory';\nimport { RouteComponentProps } from 'react-router';\nimport SequenceListHeader, { SequenceListHeaderSortKey } from './SequenceCell/SequenceListHeader/SequenceListHeader';\nimport { AmplitudeEvents, logAmplitudeEvent } from '@src/lib/amplitude-analytics';\n\nexport interface StateProps {\n  sequences: { [id: string]: Resource<Sequence> };\n  account?: string;\n  user?: string;\n  isArchived: boolean;\n  isLoaded: boolean;\n}\n\nexport interface State {\n  checked: { [id: string]: boolean };\n  sequences: Sequence[];\n  confirmProps?: ConfirmProps;\n  sortValue: SequenceListHeaderSortKey;\n  sortDirection: SortDirection;\n  senderFilter: SequenceSender;\n}\n\nexport enum SortDirection {\n  Descending = 'desc',\n  Ascending = 'asc',\n}\n\nexport interface DispatchProps {\n  createSequence: (s: Sequence) => void;\n  deleteSequence: (s: Sequence) => void;\n  updateSequence: (s: Sequence) => void;\n  duplicateSequence: (s: string) => void;\n  exportSequence: (s: Sequence) => void;\n}\n\nexport const enum SequenceFilter {\n  Active = 'Active',\n  Archived = 'Archived',\n}\n\nexport const enum SequenceSender {\n  Personal = 'My Sequences',\n  Team = 'All Sequences',\n}\n\nclass SequenceList extends React.PureComponent<\n  StateProps & DispatchProps & RouteComponentProps<any>, State\n> {\n  private debouncedHandleSearch: any;\n\n  constructor(props: StateProps & DispatchProps & RouteComponentProps<any>) {\n    super(props);\n\n    this.debouncedHandleSearch = debounce(this.handleSearch, 500);\n\n    this.state = {\n      checked: {},\n      sequences: filter(\n        props.sequences, s => !!s.data && s.data.archived === props.isArchived,\n      ).map(s => s.data!),\n      sortValue: SequenceListHeaderSortKey.Date,\n      sortDirection: SortDirection.Descending,\n      senderFilter: SequenceSender.Team,\n    };\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: StateProps & DispatchProps) {\n    if (nextProps.sequences !== this.props.sequences) {\n      const diff = filter(\n        this.props.sequences,\n        s => !!s.data && !find(\n          nextProps.sequences,\n          seq => !!seq.data && seq.data.id === s.data!.id,\n        ),\n      ).map(s => s.data!.id);\n      const newChecked = this.state.checked;\n\n      if (diff.length) {\n        diff.forEach(d => delete newChecked[d]);\n      }\n      this.setState({\n        sequences: filter(\n          nextProps.sequences,\n          s => !!s.data && s.data.archived === nextProps.isArchived,\n        ).map(s => s.data!),\n        checked: newChecked,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.debouncedHandleSearch.cancel();\n  }\n\n  handleCheckAll = () => {\n    const { checked, sequences } = this.state;\n    const newChecked = {};\n\n    const allChecked = filter(checked, c => c).length === sequences.length;\n\n    if (allChecked) {\n      sequences.forEach(s => newChecked[s.id] = false);\n    } else {\n      sequences.forEach(s => newChecked[s.id] = true);\n    }\n\n    this.setState({\n      checked: newChecked,\n    });\n  }\n\n  handleCheckboxChange = (id: string) => {\n    const { checked } = this.state;\n\n    this.setState({\n      checked: {\n        ...checked,\n        [id]: !checked[id],\n      },\n    });\n  }\n\n  handleSearch = (query: string) => {\n    const queryLowerCase = query.toLowerCase();\n\n    this.setState({\n      checked: {},\n      sequences: filter(\n        this.props.sequences,\n        (s: Resource<Sequence>) => {\n          if (!s.data) {\n            return false;\n          }\n\n          if (s.data.name.toLowerCase().includes(queryLowerCase)) {\n            return true;\n          }\n\n          return false;\n        },\n      ).map(s => s.data!),\n    });\n  }\n\n  handleCreateSequence = () => {\n\n    const { createSequence, account, user } = this.props;\n\n    if (account && user) {\n      createSequence(createDefaultSequence(account, user));\n    }\n    logAmplitudeEvent(AmplitudeEvents.CreateNewSequence);\n  }\n\n  handleDelete = () => {\n    const { checked } = this.state;\n    const { deleteSequence, sequences } = this.props;\n\n    const deleteHandler = () => {\n      map(checked, (isChecked: boolean, id: string) => {\n        if (isChecked && sequences[id].data) {\n          deleteSequence(sequences[id].data!);\n        }\n      });\n\n      this.setState({ confirmProps: undefined });\n    };\n\n    const deleteDescriptor = Object.keys(checked).length > 1\n      ? 'these Sequences'\n      : 'this Sequence';\n    const confirmProps: ConfirmProps = {\n      title: `Delete ${deleteDescriptor}?`,\n      message: `Are you sure you want to delete ${deleteDescriptor}?`\n      + ' Any analytics and recipients data will be lost forever.',\n      confirmCopy: 'Delete',\n      cancelCopy: 'Cancel',\n      onConfirm: () => deleteHandler(),\n      onCancel: () => this.setState({ confirmProps: undefined }),\n    };\n\n    this.setState({\n      confirmProps,\n    });\n  }\n\n  handleArchive = () => {\n    const { checked } = this.state;\n    const { updateSequence, sequences } = this.props;\n\n    map(checked, (isChecked: boolean, id: string) => {\n      if (isChecked && sequences[id].data) {\n        updateSequence({\n          ...sequences[id].data!,\n          archived: !sequences[id].data!.archived,\n          paused: true,\n        });\n      }\n    });\n  }\n\n  handleDuplicate = () => {\n    const { checked } = this.state;\n    const { duplicateSequence } = this.props;\n    const numChecked = filter(checked, c => c).length;\n\n    if (numChecked === 1) {\n      duplicateSequence(Object.keys(checked)[0]);\n    }\n  }\n\n  handleExport = () => {\n    const { checked } = this.state;\n    const { exportSequence, sequences } = this.props;\n\n    map(checked, (isChecked: boolean, id: string) => {\n      if (isChecked && sequences[id].data) {\n        exportSequence(sequences[id].data!);\n      }\n    });\n  }\n\n  handleFilterSelect = (value: string, index: number, id?: string) => {\n    const { isArchived } = this.props;\n\n    if (value === SequenceFilter.Active && isArchived) {\n      browserHistory.push('/sequences');\n    } else if (value === SequenceFilter.Archived && !isArchived) {\n      browserHistory.push('/sequences/archive');\n    }\n  }\n\n  handleSenderSelect = (value: string, index: number, id?: string) => {\n    if (value === SequenceSender.Personal) {\n      this.setState({\n        senderFilter: SequenceSender.Personal,\n      });\n    } else if (value === SequenceSender.Team) {\n      this.setState({\n        senderFilter: SequenceSender.Team,\n      });\n    }\n  }\n\n  renderEmpty() {\n    const { isArchived } = this.props;\n    const emptyMessage = isArchived ? 'You don\\'t have any archived sequences.' :\n      'Send personalized messages and automated follow-ups. '\n      + 'Track your outreach and prospect engagement.';\n\n    return (\n      <div className=\"empty\">\n        <div className=\"emoji\">\n          🚀\n        </div>\n        {!isArchived &&\n          <div className=\"title\">\n            Start your first Sequence\n          </div>\n        }\n        <div className=\"description\">\n          {emptyMessage}\n        </div>\n        <button className=\"create-button\" onClick={this.handleCreateSequence}>\n          Create Sequence\n        </button>\n      </div>\n    );\n  }\n\n  handleSortClick = (sort: SequenceListHeaderSortKey) => {\n    const { sequences, sortValue, sortDirection } = this.state;\n\n    // If sort has changed, or if sort is already ascending, then set sort to descending\n    let newSortDirection = SortDirection.Descending;\n    if (sortDirection === SortDirection.Descending && sort === sortValue) {\n      newSortDirection = SortDirection.Ascending;\n    }\n\n    switch (sort) {\n      case SequenceListHeaderSortKey.Name: {\n        const sorted = orderBy(sequences, (s => s.name), newSortDirection);\n        this.setState({\n          sortValue: SequenceListHeaderSortKey.Name,\n          sequences: sorted,\n          sortDirection: newSortDirection,\n        });\n        return;\n      }\n      case SequenceListHeaderSortKey.Delivered: {\n        const sorted = orderBy(sequences, (s => s.analytics.delivered), newSortDirection);\n        this.setState({\n          sortValue: SequenceListHeaderSortKey.Delivered,\n          sequences: sorted,\n          sortDirection: newSortDirection,\n        });\n        return;\n      }\n      case SequenceListHeaderSortKey.Opened: {\n        const sorted = orderBy(sequences, (s => s.analytics.opened), newSortDirection);\n        this.setState({\n          sortValue: SequenceListHeaderSortKey.Opened,\n          sequences: sorted,\n          sortDirection: newSortDirection,\n        });\n        return;\n      }\n      case SequenceListHeaderSortKey.Clicked: {\n        const sorted = orderBy(sequences, (s => s.analytics.clicked), newSortDirection);\n        this.setState({\n          sortValue: SequenceListHeaderSortKey.Clicked,\n          sequences: sorted,\n          sortDirection: newSortDirection,\n        });\n        return;\n      }\n      case SequenceListHeaderSortKey.Replied: {\n        const sorted = orderBy(sequences, (s => s.analytics.replied), newSortDirection);\n        this.setState({\n          sortValue: SequenceListHeaderSortKey.Replied,\n          sequences: sorted,\n          sortDirection: newSortDirection,\n        });\n        return;\n      }\n      case SequenceListHeaderSortKey.Date: {\n        const sorted = orderBy(sequences, (s => s.created), newSortDirection);\n        this.setState({\n          sortValue: SequenceListHeaderSortKey.Date,\n          sequences: sorted,\n          sortDirection: newSortDirection,\n        });\n        return;\n      }\n      default:\n        return;\n    }\n  }\n\n  getFilteredSequences = () => {\n    const { user } = this.props;\n    const { sequences, senderFilter } = this.state;\n    if (senderFilter === SequenceSender.Personal) {\n      return sequences.filter(s => s.user === user);\n    }\n\n    return sequences;\n  }\n\n  render() {\n    const { isLoaded, isArchived } = this.props;\n    const { checked, confirmProps, sortDirection, senderFilter } = this.state;\n\n    const sequences = this.getFilteredSequences();\n    const numActives = filter(sequences, s => !s.paused).length;\n    const numArchived = filter(sequences, s => s.archived).length;\n    const numPaused = size(sequences) - numActives;\n    const numChecked = filter(checked, c => c).length;\n    const allChecked = !!sequences.length && numChecked === sequences.length;\n    let headerTitle = 'Sequences';\n\n    let headerCountDescription: string = `${numActives} active${numPaused ? ` · ${numPaused} paused` : ''}`;\n    const numSequences = size(sequences);\n\n    if (isArchived) {\n      headerTitle = 'Archived Sequences';\n      headerCountDescription = `${numArchived} archived`;\n    }\n\n    return (\n      <div className=\"sequence-list\">\n        {confirmProps &&\n          <Confirm {...confirmProps} />\n        }\n        <div className=\"draggable\">\n          <div className=\"heading\">\n            <div className=\"left\">\n              <h1>{headerTitle}</h1>\n              <h5>{headerCountDescription}</h5>\n            </div>\n            <button className=\"new-sequence\" onClick={this.handleCreateSequence}>\n              + New Sequence\n            </button>\n          </div>\n        </div>\n        <div\n          className=\"list\"\n        >\n          <div className=\"header\">\n            <div className=\"filter\">\n              <div className=\"filter-cell\">\n                <div className=\"title\">\n                  STATUS\n                </div>\n                <Dropdown\n                  values={[SequenceFilter.Active, SequenceFilter.Archived]}\n                  onSelect={this.handleFilterSelect}\n                  startIndex={isArchived ? 1 : 0}\n                />\n              </div>\n              <div className=\"filter-cell\">\n                <div className=\"title\">\n                  SENDER\n                </div>\n                <Dropdown\n                  values={[SequenceSender.Team, SequenceSender.Personal]}\n                  onSelect={this.handleSenderSelect}\n                  startIndex={senderFilter === SequenceSender.Personal ? 1 : 0}\n                />\n              </div>\n            </div>\n            {!!numChecked && <div className=\"action-bar\">\n              <span className=\"selected-num\">\n                {`${numChecked} selected`}\n              </span>\n              <button className=\"archive\" onClick={this.handleArchive}>\n                {!!numChecked && !!sequences.length && sequences[0].archived ?\n                  'Unarchive' : 'Archive'}\n              </button>\n              <button\n                onClick={this.handleDuplicate}\n                className={classnames('duplicate', {\n                  disabled: numChecked !== 1,\n                })}\n              >\n                Duplicate\n              </button>\n              <button onClick={this.handleExport}>Export</button>\n              <button className=\"delete\" onClick={this.handleDelete}>Delete</button>\n            </div>}\n            {!!numSequences && <div className=\"search\">\n              <SearchInput\n                onSearch={this.debouncedHandleSearch}\n                placeholder=\"Search sequences\"\n                defaultValue=\"\"\n              />\n            </div>}\n          </div>\n          {!numSequences && isLoaded && this.renderEmpty()}\n          {!!numSequences && (\n            <SequenceListHeader\n              sortValue={this.state.sortValue}\n              onSortClick={this.handleSortClick}\n              sortDirection={sortDirection}\n              onCheckToggle={this.handleCheckAll}\n              allChecked={allChecked}\n              padName={!isArchived}\n            />\n          )}\n          <Autosizer>\n            {s => (\n              <List\n                className=\"virtual-list\"\n                height={s.height - 130}\n                itemSize={67}\n                itemCount={sequences.length}\n                width={s.width}\n                key=\"infinite\"\n              >\n                {i => (\n                  <div className=\"container\" style={i.style}>\n                    <SequenceCell\n                      key={sequences[i.index].id}\n                      sequence={sequences[i.index]}\n                      checked={!!checked[sequences[i.index].id]}\n                      onCheckboxChange={this.handleCheckboxChange}\n                    />\n                  </div>\n                )}\n              </List>\n            )}\n          </Autosizer>\n          {!numSequences && !isLoaded && <Loader />}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SequenceList;\n"]}]}