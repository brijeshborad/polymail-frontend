{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Sequences/routes/SequenceDetail/UploadRecipient/index.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Sequences/routes/SequenceDetail/UploadRecipient/index.tsx","mtime":1675280254089},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4JzsKaW1wb3J0IHsgY29udGFjdFR5cGVhaGVhZCwgY29udGFjdFR5cGVhaGVhZENsZWFyLCBzZWxlY3RUeXBlYWhlYWRDb250YWN0cywgfSBmcm9tICdAc3JjL2R1Y2tzL2NvbnRhY3RzJzsKaW1wb3J0IFVwbG9hZFJlY2lwaWVudCBmcm9tICcuL1VwbG9hZFJlY2lwaWVudCc7CmltcG9ydCB7IHNlcXVlbmNlUmVjaXBpZW50VGVtcEFkZCwgc2VxdWVuY2VSZWNpcGllbnRUZW1wUmVtb3ZlLCBzZXF1ZW5jZVJlY2lwaWVudFRlbXBVcGRhdGUsIH0gZnJvbSAnQHNyYy9kdWNrcy9zZXF1ZW5jZVJlY2lwaWVudHMnOwp2YXIgbWFwU3RhdGVUb1Byb3BzID0gZnVuY3Rpb24gKHN0YXRlKSB7IHJldHVybiAoewogICAgdHlwZWFoZWFkQ29udGFjdHM6IHNlbGVjdFR5cGVhaGVhZENvbnRhY3RzKHN0YXRlKSwKICAgIHJlY2lwaWVudHM6IHN0YXRlLnNlcXVlbmNlUmVjaXBpZW50c0FkZFN0YXRlICYmIHN0YXRlLnNlcXVlbmNlUmVjaXBpZW50c0FkZFN0YXRlLnJlY2lwaWVudHMsCiAgICBoZWFkZXJzOiBzdGF0ZS5zZXF1ZW5jZVJlY2lwaWVudHNBZGRTdGF0ZSAmJiBzdGF0ZS5zZXF1ZW5jZVJlY2lwaWVudHNBZGRTdGF0ZS5oZWFkZXJzLAogICAgZXJyb3I6IHN0YXRlLnNlcXVlbmNlUmVjaXBpZW50c0FkZFN0YXRlICYmIHN0YXRlLnNlcXVlbmNlUmVjaXBpZW50c0FkZFN0YXRlLmVycm9yLAp9KTsgfTsKdmFyIG1hcERpc3BhdGNoVG9Qcm9wcyA9IGZ1bmN0aW9uIChkaXNwYXRjaCkgeyByZXR1cm4gKHsKICAgIHNlYXJjaENvbnRhY3RUeXBlYWhlYWQ6IGZ1bmN0aW9uIChxdWVyeSkgeyByZXR1cm4gZGlzcGF0Y2goY29udGFjdFR5cGVhaGVhZChxdWVyeSkpOyB9LAogICAgY2xlYXJDb250YWN0VHlwZWFoZWFkOiBmdW5jdGlvbiAoKSB7IHJldHVybiBkaXNwYXRjaChjb250YWN0VHlwZWFoZWFkQ2xlYXIoKSk7IH0sCiAgICBhZGRUZW1wU2VxdWVuY2VSZWNpcGllbnQ6IGZ1bmN0aW9uIChtZXRhKSB7IHJldHVybiBkaXNwYXRjaChzZXF1ZW5jZVJlY2lwaWVudFRlbXBBZGQobWV0YSkpOyB9LAogICAgcmVtb3ZlVGVtcFNlcXVlbmNlUmVjaXBpZW50OiBmdW5jdGlvbiAoaW5kZXgpIHsgcmV0dXJuIGRpc3BhdGNoKHNlcXVlbmNlUmVjaXBpZW50VGVtcFJlbW92ZShpbmRleCkpOyB9LAogICAgdXBkYXRlVGVtcFNlcXVlbmNlUmVjaXBpZW50OiBmdW5jdGlvbiAobWV0YSkgeyByZXR1cm4gZGlzcGF0Y2goc2VxdWVuY2VSZWNpcGllbnRUZW1wVXBkYXRlKG1ldGEpKTsgfSwKfSk7IH07CmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QobWFwU3RhdGVUb1Byb3BzLCBtYXBEaXNwYXRjaFRvUHJvcHMpKFVwbG9hZFJlY2lwaWVudCk7Cg=="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Sequences/routes/SequenceDetail/UploadRecipient/index.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Sequences/routes/SequenceDetail/UploadRecipient/index.tsx"],"names":[],"mappings":"AAEA,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AAGtC,OAAO,EACL,gBAAgB,EAAE,qBAAqB,EAAE,uBAAuB,GACjE,MAAM,qBAAqB,CAAC;AAE7B,OAAO,eAA8C,MAAM,mBAAmB,CAAC;AAC/E,OAAO,EACL,wBAAwB,EACxB,2BAA2B,EAC3B,2BAA2B,GAC5B,MAAM,+BAA+B,CAAC;AAEvC,IAAM,eAAe,GAAG,UAAC,KAAiB,IAAiB,OAAA,CAAC;IAC1D,iBAAiB,EAAE,uBAAuB,CAAC,KAAK,CAAC;IACjD,UAAU,EAAE,KAAK,CAAC,0BAA0B,IAAI,KAAK,CAAC,0BAA0B,CAAC,UAAU;IAC3F,OAAO,EAAE,KAAK,CAAC,0BAA0B,IAAI,KAAK,CAAC,0BAA0B,CAAC,OAAO;IACrF,KAAK,EAAE,KAAK,CAAC,0BAA0B,IAAI,KAAK,CAAC,0BAA0B,CAAC,KAAK;CAClF,CAAC,EALyD,CAKzD,CAAC;AAEH,IAAM,kBAAkB,GAAG,UAAC,QAA8B,IAAoB,OAAA,CAAC;IAC7E,sBAAsB,EAAE,UAAA,KAAK,IAAI,OAAA,QAAQ,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,EAAjC,CAAiC;IAClE,qBAAqB,EAAE,cAAM,OAAA,QAAQ,CAAC,qBAAqB,EAAE,CAAC,EAAjC,CAAiC;IAC9D,wBAAwB,EAAE,UAAA,IAAI,IAAI,OAAA,QAAQ,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC,EAAxC,CAAwC;IAC1E,2BAA2B,EAAE,UAAA,KAAK,IAAI,OAAA,QAAQ,CAAC,2BAA2B,CAAC,KAAK,CAAC,CAAC,EAA5C,CAA4C;IAClF,2BAA2B,EAAE,UAAA,IAAI,IAAI,OAAA,QAAQ,CAAC,2BAA2B,CAAC,IAAI,CAAC,CAAC,EAA3C,CAA2C;CACjF,CAAC,EAN4E,CAM5E,CAAC;AAEH,eAAe,OAAO,CACpB,eAAe,EAAE,kBAAkB,CACpC,CAAC,eAAe,CAAC,CAAC","sourcesContent":["import { Dispatch } from 'redux';\n\nimport { connect } from 'react-redux';\nimport { StoreState } from '@src/types';\n\nimport {\n  contactTypeahead, contactTypeaheadClear, selectTypeaheadContacts,\n} from '@src/ducks/contacts';\n\nimport UploadRecipient, { DispatchProps, StateProps } from './UploadRecipient';\nimport {\n  sequenceRecipientTempAdd,\n  sequenceRecipientTempRemove,\n  sequenceRecipientTempUpdate,\n} from '@src/ducks/sequenceRecipients';\n\nconst mapStateToProps = (state: StoreState): StateProps => ({\n  typeaheadContacts: selectTypeaheadContacts(state),\n  recipients: state.sequenceRecipientsAddState && state.sequenceRecipientsAddState.recipients,\n  headers: state.sequenceRecipientsAddState && state.sequenceRecipientsAddState.headers,\n  error: state.sequenceRecipientsAddState && state.sequenceRecipientsAddState.error,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<StoreState>): DispatchProps => ({\n  searchContactTypeahead: query => dispatch(contactTypeahead(query)),\n  clearContactTypeahead: () => dispatch(contactTypeaheadClear()),\n  addTempSequenceRecipient: meta => dispatch(sequenceRecipientTempAdd(meta)),\n  removeTempSequenceRecipient: index => dispatch(sequenceRecipientTempRemove(index)),\n  updateTempSequenceRecipient: meta => dispatch(sequenceRecipientTempUpdate(meta)),\n});\n\nexport default connect(\n  mapStateToProps, mapDispatchToProps,\n)(UploadRecipient);\n"]}]}