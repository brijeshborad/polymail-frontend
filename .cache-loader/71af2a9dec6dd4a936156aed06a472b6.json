{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/Cells/CommentCell/CommentCell.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/Cells/CommentCell/CommentCell.tsx","mtime":1675280253992},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkgewogICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBmdW5jdGlvbiAoZCwgYikgewogICAgICAgIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwKICAgICAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fAogICAgICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChiLmhhc093blByb3BlcnR5KHApKSBkW3BdID0gYltwXTsgfTsKICAgICAgICByZXR1cm4gZXh0ZW5kU3RhdGljcyhkLCBiKTsKICAgIH07CiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHsKICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpOwogICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfQogICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTsKICAgIH07Cn0pKCk7CmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7CmltcG9ydCB7IHNhbml0aXplIH0gZnJvbSAnQHNyYy9saWIvaHRtbCc7CmltcG9ydCAnLi9Db21tZW50Q2VsbC5zY3NzJzsKaW1wb3J0IHsgc2hvd01vc3RSZWNlbnQgfSBmcm9tICdAc3JjL2xpYi9kYXRldGltZSc7CmltcG9ydCBBdHRhY2htZW50c1BhbmUgZnJvbSAnQHNyYy9jb21wb25lbnRzL0NlbGxzL0NvbW1lbnRDZWxsL2NvbXBvbmVudHMvQXR0YWNobWVudHNQYW5lJzsKdmFyIENvbW1lbnRDZWxsID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikgewogICAgX19leHRlbmRzKENvbW1lbnRDZWxsLCBfc3VwZXIpOwogICAgZnVuY3Rpb24gQ29tbWVudENlbGwoKSB7CiAgICAgICAgcmV0dXJuIF9zdXBlciAhPT0gbnVsbCAmJiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzOwogICAgfQogICAgQ29tbWVudENlbGwucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gKCkgewogICAgICAgIHZhciBjb21tZW50ID0gdGhpcy5wcm9wcy5jb21tZW50OwogICAgICAgIC8vIFJlYWQgY29tbWVudCBpZiB1bnJlYWQKICAgICAgICBpZiAoIXRoaXMucHJvcHMuY29tbWVudC5yZWFkKSB7CiAgICAgICAgICAgIHRoaXMucHJvcHMucmVhZENvbW1lbnQoewogICAgICAgICAgICAgICAgc2hhcmVkVGhyZWFkOiBjb21tZW50LnNoYXJlZFRocmVhZCwKICAgICAgICAgICAgICAgIGNvbW1lbnQ6IGNvbW1lbnQuaWQsCiAgICAgICAgICAgICAgICByZWFkOiB0cnVlLAogICAgICAgICAgICB9KTsKICAgICAgICB9CiAgICB9OwogICAgQ29tbWVudENlbGwucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uICgpIHsKICAgICAgICB2YXIgX2EgPSB0aGlzLnByb3BzLCBjb21tZW50ID0gX2EuY29tbWVudCwgbWVtYmVyID0gX2EubWVtYmVyOwogICAgICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2IiwgeyBjbGFzc05hbWU6ICJjb21tZW50LWNlbGwiLCAiZGF0YS1jb21tZW50IjogY29tbWVudC5pZCB9LAogICAgICAgICAgICBtZW1iZXIgJiYgUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2IiwgeyBjbGFzc05hbWU6ICJwaG90byIgfSwKICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoImltZyIsIHsgc3JjOiBtZW1iZXIucGhvdG9VcmwgfSkpLAogICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLCB7IGNsYXNzTmFtZTogIm1haW4iIH0sCiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLCB7IGNsYXNzTmFtZTogImhlYWRpbmciIH0sCiAgICAgICAgICAgICAgICAgICAgbWVtYmVyICYmIFJlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIHsgY2xhc3NOYW1lOiAibmFtZSIgfSwgbWVtYmVyLmZpcnN0TmFtZSA/IG1lbWJlci5maXJzdE5hbWUgKyAiICIgKyBtZW1iZXIubGFzdE5hbWUgOiBtZW1iZXIuZW1haWwpLAogICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIHsgY2xhc3NOYW1lOiAiZGF0ZSIgfSwgc2hvd01vc3RSZWNlbnQoY29tbWVudC5jcmVhdGVkLCB0cnVlKSkpLAogICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2IiwgeyBjbGFzc05hbWU6ICJib2R5IiwgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw6IHsgX19odG1sOiBzYW5pdGl6ZShjb21tZW50LmJvZHkpIH0gfSksCiAgICAgICAgICAgICAgICBjb21tZW50LmF0dGFjaG1lbnRzICYmIGNvbW1lbnQuYXR0YWNobWVudHMubGVuZ3RoICYmCiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChBdHRhY2htZW50c1BhbmUsIHsgYXR0YWNobWVudHM6IGNvbW1lbnQuYXR0YWNobWVudHMsIHNoYXJlZFRocmVhZElkOiBjb21tZW50LnNoYXJlZFRocmVhZCwgY29tbWVudElkOiBjb21tZW50LmlkIH0pKSkpOwogICAgfTsKICAgIHJldHVybiBDb21tZW50Q2VsbDsKfShSZWFjdC5QdXJlQ29tcG9uZW50KSk7CmV4cG9ydCBkZWZhdWx0IENvbW1lbnRDZWxsOwo="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/Cells/CommentCell/CommentCell.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/Cells/CommentCell/CommentCell.tsx"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAG1B,OAAO,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AACzC,OAAO,oBAAoB,CAAC;AAE5B,OAAO,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAC;AACnD,OAAO,eAAe,MAAM,8DAA8D,CAAC;AAc3F;IAA0B,+BAAuD;IAAjF;;IA8CA,CAAC;IA7CC,uCAAiB,GAAjB;QACU,IAAA,4BAAO,CAAgB;QAE/B,yBAAyB;QACzB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE;YAC5B,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;gBACrB,YAAY,EAAE,OAAO,CAAC,YAAY;gBAClC,OAAO,EAAE,OAAO,CAAC,EAAE;gBACnB,IAAI,EAAE,IAAI;aACX,CAAC,CAAC;SACJ;IACH,CAAC;IAED,4BAAM,GAAN;QACQ,IAAA,eAAgC,EAA9B,oBAAO,EAAE,kBAAqB,CAAC;QAEvC,OAAO,CACL,6BAAK,SAAS,EAAC,cAAc,kBAAe,OAAO,CAAC,EAAE;YACnD,MAAM,IAAI,6BAAK,SAAS,EAAC,OAAO;gBAC/B,6BAAK,GAAG,EAAE,MAAM,CAAC,QAAQ,GAAI,CACzB;YACN,6BAAK,SAAS,EAAC,MAAM;gBACnB,6BAAK,SAAS,EAAC,SAAS;oBACrB,MAAM,IAAI,6BAAK,SAAS,EAAC,MAAM,IAC7B,MAAM,CAAC,SAAS,CAAC,CAAC,CAAI,MAAM,CAAC,SAAS,SAAI,MAAM,CAAC,QAAU,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CACvE;oBACN,6BAAK,SAAS,EAAC,MAAM,IAClB,cAAc,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,CAClC,CACF;gBACN,6BACE,SAAS,EAAC,MAAM,EAChB,uBAAuB,EAAE,EAAE,MAAM,EAAE,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,GAC3D;gBACD,OAAO,CAAC,WAAW,IAAI,OAAO,CAAC,WAAW,CAAC,MAAM;oBAChD,oBAAC,eAAe,IACd,WAAW,EAAE,OAAO,CAAC,WAAW,EAChC,cAAc,EAAE,OAAO,CAAC,YAAY,EACpC,SAAS,EAAE,OAAO,CAAC,EAAE,GACrB,CAEA,CACF,CACP,CAAC;IACJ,CAAC;IACH,kBAAC;AAAD,CAAC,AA9CD,CAA0B,KAAK,CAAC,aAAa,GA8C5C;AAED,eAAe,WAAW,CAAC","sourcesContent":["import React from 'react';\nimport { TeamMember } from '@src/types';\nimport { Comment } from '@src/types/sharedThreads';\nimport { sanitize } from '@src/lib/html';\nimport './CommentCell.scss';\nimport { CommentReadMeta } from '@src/ducks/comments';\nimport { showMostRecent } from '@src/lib/datetime';\nimport AttachmentsPane from '@src/components/Cells/CommentCell/components/AttachmentsPane';\n\nexport interface Props {\n  comment: Comment;\n}\n\nexport interface StateProps {\n  member?: TeamMember;\n}\n\nexport interface DispatchProps {\n  readComment: (meta: CommentReadMeta) => void;\n}\n\nclass CommentCell extends React.PureComponent<Props & StateProps & DispatchProps> {\n  componentDidMount() {\n    const { comment } = this.props;\n\n    // Read comment if unread\n    if (!this.props.comment.read) {\n      this.props.readComment({\n        sharedThread: comment.sharedThread,\n        comment: comment.id,\n        read: true,\n      });\n    }\n  }\n\n  render() {\n    const { comment, member } = this.props;\n\n    return (\n      <div className=\"comment-cell\" data-comment={comment.id}>\n        {member && <div className=\"photo\">\n          <img src={member.photoUrl} />\n        </div>}\n        <div className=\"main\">\n          <div className=\"heading\">\n            {member && <div className=\"name\">\n              {member.firstName ? `${member.firstName} ${member.lastName}` : member.email}\n            </div>}\n            <div className=\"date\">\n              {showMostRecent(comment.created, true)}\n            </div>\n          </div>\n          <div\n            className=\"body\"\n            dangerouslySetInnerHTML={{ __html: sanitize(comment.body) }}\n          />\n          {comment.attachments && comment.attachments.length &&\n            <AttachmentsPane\n              attachments={comment.attachments}\n              sharedThreadId={comment.sharedThread}\n              commentId={comment.id}\n            />\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CommentCell;\n"]}]}