{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/RightSidebar/components/ContactInfo/components/ContactInteractions/components/ConversationsPane/ConversationsPane.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/RightSidebar/components/ContactInfo/components/ContactInteractions/components/ConversationsPane/ConversationsPane.tsx","mtime":1675280254028},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JzsKaW1wb3J0IEluZmluaXRlIGZyb20gJ3JlYWN0LWluZmluaXRlJzsKaW1wb3J0IENvbnZlcnNhdGlvbiBmcm9tICcuL0NvbnZlcnNhdGlvbic7CmltcG9ydCAnLi9Db252ZXJzYXRpb25zUGFuZS5zY3NzJzsKdmFyIENFTExfSEVJR0hUID0gNzA7CnZhciBDb252ZXJzYXRpb25zUGFuZSA9IGZ1bmN0aW9uIChwcm9wcykgewogICAgdmFyIGlzRW1wdHkgPSAhcHJvcHMuY29udmVyc2F0aW9ucyB8fCAhcHJvcHMuY29udmVyc2F0aW9ucy5sZW5ndGg7CiAgICB2YXIgQ29udmVyc2F0aW9uQ29ubmVjdCA9IENvbnZlcnNhdGlvbjsKICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2IiwgeyBjbGFzc05hbWU6ICJjb252ZXJzYXRpb25zLXBhbmUiIH0sCiAgICAgICAgaXNFbXB0eSAmJiBSZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLCB7IGNsYXNzTmFtZTogImVtcHR5IiB9LAogICAgICAgICAgICAiTm90aGluZyB5ZXQhIENvbnZlcnNhdGlvbnMgYmV0d2VlbiAiLAogICAgICAgICAgICBwcm9wcy5jb250YWN0TmFtZSwKICAgICAgICAgICAgIiBhbmQgeW91ciB0ZWFtIHdpbGwgc2hvdyB1cCBoZXJlLiIpLAogICAgICAgICFpc0VtcHR5ICYmIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSW5maW5pdGUsIHsgY2xhc3NOYW1lOiAibWFpbiIsIGVsZW1lbnRIZWlnaHQ6IENFTExfSEVJR0hULCBjb250YWluZXJIZWlnaHQ6IHByb3BzLmxpc3RIZWlnaHQgfSwgcHJvcHMuY29udmVyc2F0aW9ucy5tYXAoZnVuY3Rpb24gKHRocmVhZCkgeyByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ29udmVyc2F0aW9uQ29ubmVjdCwgeyBrZXk6IHRocmVhZC5pZCwgY29udmVyc2F0aW9uOiB0aHJlYWQsIGNlbGxIZWlnaHQ6IENFTExfSEVJR0hUIH0pKTsgfSkpKSk7Cn07CmV4cG9ydCBkZWZhdWx0IENvbnZlcnNhdGlvbnNQYW5lOwo="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/RightSidebar/components/ContactInfo/components/ContactInteractions/components/ConversationsPane/ConversationsPane.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/RightSidebar/components/ContactInfo/components/ContactInteractions/components/ConversationsPane/ConversationsPane.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,QAAQ,MAAM,gBAAgB,CAAC;AACtC,OAAO,YAAY,MAAM,gBAAgB,CAAC;AAI1C,OAAO,0BAA0B,CAAC;AAQlC,IAAM,WAAW,GAAG,EAAE,CAAC;AAEvB,IAAM,iBAAiB,GAAG,UAAC,KAAY;IACrC,IAAM,OAAO,GAAG,CAAC,KAAK,CAAC,aAAa,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,MAAM,CAAC;IACpE,IAAM,mBAAmB,GAAG,YAAmB,CAAC;IAEhD,OAAO,CACL,6BAAK,SAAS,EAAC,oBAAoB;QAChC,OAAO,IAAI,6BAAK,SAAS,EAAC,OAAO;;YACI,KAAK,CAAC,WAAW;gDACjD;QACL,CAAC,OAAO,IAAI,oBAAC,QAAQ,IACpB,SAAS,EAAC,MAAM,EAChB,aAAa,EAAE,WAAW,EAC1B,eAAe,EAAE,KAAK,CAAC,UAAU,IAEhC,KAAK,CAAC,aAAc,CAAC,GAAG,CAAC,UAAC,MAAc,IAAK,OAAA,CAC5C,oBAAC,mBAAmB,IAClB,GAAG,EAAE,MAAM,CAAC,EAAE,EACd,YAAY,EAAE,MAAM,EACpB,UAAU,EAAE,WAAW,GACvB,CACH,EAN6C,CAM7C,CAAC,CACO,CACP,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,iBAAiB,CAAC","sourcesContent":["import React from 'react';\nimport Infinite from 'react-infinite';\nimport Conversation from './Conversation';\n\nimport { Thread } from '@src/types';\n\nimport './ConversationsPane.scss';\n\nexport interface Props {\n  conversations?: Thread[];\n  contactName: string;\n  listHeight: number;\n}\n\nconst CELL_HEIGHT = 70;\n\nconst ConversationsPane = (props: Props) => {\n  const isEmpty = !props.conversations || !props.conversations.length;\n  const ConversationConnect = Conversation as any;\n\n  return (\n    <div className=\"conversations-pane\">\n      {isEmpty && <div className=\"empty\">\n        Nothing yet! Conversations between {props.contactName} and your team will show up here.\n      </div>}\n      {!isEmpty && <Infinite\n        className=\"main\"\n        elementHeight={CELL_HEIGHT}\n        containerHeight={props.listHeight}\n      >\n        {props.conversations!.map((thread: Thread) => (\n          <ConversationConnect\n            key={thread.id}\n            conversation={thread}\n            cellHeight={CELL_HEIGHT}\n          />\n        ))}\n      </Infinite>}\n    </div>\n  );\n};\n\nexport default ConversationsPane;\n"]}]}