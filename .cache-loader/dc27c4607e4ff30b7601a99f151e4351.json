{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/worker/bridge/store.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/worker/bridge/store.ts","mtime":1675280254123},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/worker/bridge/store.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/worker/bridge/store.ts"],"names":[],"mappings":"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","sourcesContent":["import { Store } from 'redux';\nimport { meFetch } from '@src/ducks/me';\nimport { teamFetch } from '@src/ducks/team';\nimport {\n  draftDelete,\n  draftUpdate,\n  attachmentMetaUpdate,\n  draftAttachmentAdd,\n  selectOptimisticMessagesForThread,\n  draftSend,\n  draftList,\n} from '@src/ducks/drafts';\nimport {\n  threadDelete,\n  threadSingle,\n  threadList,\n  incrementalStatusToggle,\n  selectedIdsUpdate,\n  threadMoveUndo,\n} from '@src/ducks/threads';\nimport { mailCountUpdate } from '@src/ducks/mailCounts';\nimport { notificationShow } from '@src/ducks/notifications';\nimport { getToken, AUTH_TOKEN_NONE } from '@src/api/base';\nimport {\n  StoreState,\n  Thread,\n  Draft,\n  AttachmentMeta,\n  Attachment,\n  Message,\n  MailboxType,\n} from '@src/types';\nimport { WorkerEvent, WorkerEventName } from './workerEvents';\nimport {\n  sendAccountsUpdated, sendAuthUpdated,\n  sendMeUpdated, sendFeaturesUpdated, sendPreferencesUpdated,\n  sendSearchDbEnable, sendConfig, sendListsUpdated,\n} from './appEvents';\nimport { activityFeedList } from '@src/ducks/activityFeed';\nimport { templateList } from '@src/ducks/templates';\nimport history from '@src/lib/browserHistory';\nimport { teamMemberFetch, teamInviteList } from '@src/ducks/teamMembers';\nimport { calendarList, CalendarListTrigger } from '@src/ducks/calendars';\nimport { uniqBy } from 'lodash';\nimport {\n  sharedThreadDelete, sharedThreadUpdate, sharedThreadActivityCreate,\n} from '@src/ducks/sharedThreads';\nimport { mailboxSelect } from '@src/ducks/mailbox';\nimport { isElectron } from '@src/lib/electron';\nimport { enableSearchDb, IS_CHROME, SearchDbConfiguration, getSearchDbConfig } from '@src/lib/device';\nimport { filterDelete, filterSet } from '@src/ducks/filters';\nimport { unserializeError } from '@src/lib/errors';\nimport { getAllowReconnect } from '@src/lib/db';\nimport { toastSet, ConfirmationError, ConfirmationPositon } from '@src/ducks/toasts';\nimport { appStatusSet } from '@src/ducks/app';\nimport { isDisabledState } from '@src/lib/banner';\nimport moment from 'moment';\n\n// bridgeSyncStore is used to connect the redux store to the worker,\n//   and called on the main ui after initializing the worker and store\nexport function bridgeSyncStore(\n  worker: Worker|SharedWorker.SharedWorker,\n  store: Store<StoreState>,\n) {\n  (worker instanceof Worker ? worker : worker.port).onmessage = (event) => {\n    const we = event.data as WorkerEvent;\n\n    switch (we.name) {\n      case WorkerEventName.AppStatusUpdate:\n        store.dispatch(appStatusSet(we.data));\n        break;\n      case WorkerEventName.DraftAttachmentAddFailed:\n        store.dispatch(\n          draftAttachmentAdd(we.data.meta, unserializeError(we.data.error)),\n        );\n        break;\n\n      case WorkerEventName.DraftAttachmentAdded:\n        const draftAttachmentMeta = we.data.meta as AttachmentMeta;\n        const draftAttachment = we.data.attachment as Attachment;\n\n        // Revoke object url on draft attachment add success\n        const foundResourceMeta = store.getState().attachmentMetas[draftAttachmentMeta.resourceId];\n        const foundMeta = foundResourceMeta && foundResourceMeta[draftAttachment.id];\n        if (foundMeta && foundMeta.data && foundMeta.data.cloudUrl) {\n          URL.revokeObjectURL(foundMeta.data.cloudUrl);\n        }\n\n        // Draft Attachment Add success\n        store.dispatch(draftAttachmentAdd(draftAttachmentMeta, draftAttachment));\n        break;\n\n      case WorkerEventName.AttachmentMetaUpdated:\n        const meta = we.data.meta as AttachmentMeta;\n        // Do not send updates when not held in state to make sure deleted metas stay removed\n        const resourceMetas = store.getState().attachmentMetas[meta.resourceId];\n        if (resourceMetas && resourceMetas[meta.attachment]) {\n          store.dispatch(attachmentMetaUpdate(meta));\n        }\n        break;\n\n      case WorkerEventName.ActivityUpdated:\n        store.dispatch(activityFeedList(\n          store.getState().activityFeedSearchMeta || {},\n        ));\n        break;\n\n      case WorkerEventName.CalendarsSynced:\n        store.dispatch(calendarList({ type: CalendarListTrigger.Worker }));\n        break;\n\n      case WorkerEventName.IncrementalSyncFinished:\n        store.dispatch(incrementalStatusToggle(false));\n        break;\n\n      case WorkerEventName.IncrementalSyncStarted:\n        store.dispatch(incrementalStatusToggle(true));\n        break;\n\n      case WorkerEventName.MailCountUpdated:\n        store.dispatch(mailCountUpdate(we.data.accountId, we.data.count));\n        break;\n\n      case WorkerEventName.MeUpdated:\n        store.dispatch(meFetch(''));\n        break;\n\n      case WorkerEventName.Notification:\n        if (window.location.pathname.startsWith('/popout')) {\n          break;\n        }\n\n        store.dispatch(notificationShow({\n          data: we.data,\n          callback: () => {\n            if (we.data.thread) {\n              const newMap = new Map();\n              newMap.set(we.data.thread, true);\n\n              // Remove query and select inbox if clicking on notification\n              const mailbox = store.getState().mailbox;\n              if (!!mailbox.query) {\n                store.dispatch(mailboxSelect({\n                  ...mailbox,\n                  type: MailboxType.Inbox,\n                  query: '',\n                  providerSearch: undefined,\n                }));\n              }\n\n              store.dispatch(selectedIdsUpdate(newMap));\n              history.push(`/mail/all/inbox/${we.data.thread}`);\n            } else if (we.data.sharedThread) {\n              history.push(`/mentions/${we.data.sharedThread}`);\n            }\n          },\n        }));\n        break;\n\n      case WorkerEventName.SharedThreadDeleted:\n        store.dispatch(sharedThreadDelete(we.data.sharedThreadId, we.data.sharedThreadId));\n        break;\n\n      case WorkerEventName.SharedThreadUpdated:\n        store.dispatch(sharedThreadUpdate(we.data.sharedThread, we.data.sharedThread));\n        break;\n\n      case WorkerEventName.SharedThreadActivity:\n        store.dispatch(sharedThreadActivityCreate(\n          { type: we.data.type, sharedThread: we.data.sharedThread },\n          { ...we.data, timestamp: new Date(we.data.timestamp) },\n        ));\n        break;\n\n      case WorkerEventName.TeamUpdated:\n        store.dispatch(teamFetch(''));\n        break;\n\n      case WorkerEventName.TeamMemberUpdated:\n        store.dispatch(teamMemberFetch(null));\n        store.dispatch(teamInviteList(null));\n        break;\n\n      case WorkerEventName.TemplateUpdated:\n        store.dispatch(templateList(''));\n        break;\n\n      case WorkerEventName.ThreadDeleted:\n        store.dispatch(threadDelete(we.data.threadId));\n        break;\n\n      case WorkerEventName.ThreadMoveUndoCompleted:\n        store.dispatch(threadMoveUndo(we.data.box, we.data.thread));\n        break;\n\n      case WorkerEventName.ThreadUpdated:\n        const thread = we.data.thread as Thread;\n\n        // Handle updates with computed thread\n        const optimisticMessages: Message[] = selectOptimisticMessagesForThread(\n          store.getState(),\n          thread.id,\n        );\n\n        // Append any necessary optimistic messages\n        if (optimisticMessages.length) {\n          const allMessages = uniqBy(thread.messages.concat(optimisticMessages), 'rfcId');\n          thread.messages = allMessages;\n        }\n\n        store.dispatch(threadSingle(thread));\n        break;\n\n      case WorkerEventName.DraftUpdated:\n        const updatedDraft = we.data.draft as Draft;\n        store.dispatch(draftUpdate(updatedDraft, updatedDraft));\n        break;\n\n      case WorkerEventName.DraftDeleted:\n        const draftId = we.data.draftId;\n        store.dispatch(draftDelete(draftId , draftId));\n        break;\n\n      case WorkerEventName.DraftSent:\n        const sentDraft = we.data.draft;\n        const sendMeta = we.data;\n        store.dispatch(draftSend(sendMeta, sentDraft));\n        break;\n\n      case WorkerEventName.DraftBatchReceived:\n        const drafts = we.data.drafts;\n        if (drafts && drafts.length) {\n          store.dispatch(draftList('', drafts));\n        }\n        break;\n\n      case WorkerEventName.DraftSyncCompleted:\n        store.dispatch(draftList(''));\n        break;\n\n      case WorkerEventName.DraftSendFailed:\n        store.dispatch(draftSend(we.data.meta, unserializeError(we.data.error)));\n        break;\n\n      case WorkerEventName.FilterDeleted:\n        store.dispatch(filterDelete(we.data.filterId, null));\n        break;\n\n      case WorkerEventName.FilterUpdated:\n        if (we.data.filter) {\n          store.dispatch(filterSet(we.data.filter, we.data.filter));\n        }\n        break;\n\n      case WorkerEventName.ThreadsRefreshed:\n        store.dispatch(threadList(true));\n        break;\n\n      case WorkerEventName.WorkerReady:\n        // Handles turning on search db\n        const currentConfig = getSearchDbConfig();\n        if (isElectron || IS_CHROME || currentConfig.enabled) {\n          const config: SearchDbConfiguration = {\n            enabled: true,\n            language: window.navigator && window.navigator.language &&\n              window.navigator.language.toLowerCase() || undefined,\n            threadsEvictionDays: isElectron ? currentConfig.threadsEvictionDays : 14,\n          };\n          enableSearchDb(config);\n          sendSearchDbEnable(worker, config);\n        }\n\n        // Send back Auth Updated\n        // NOTE(SHAHAN): We want to send the AUTH_TOKEN_NONE case, even when\n        // not logged in, to trigger any potential resetting of the db if needed\n        // We want to send none for the tfaNeeded case too, in case there is a\n        //  clear cache to perform\n        const token = getToken();\n        const meData = store.getState().me.data;\n        // user have a 24hours grace period for sync after being disabled\n        // https://polymail.atlassian.net/browse/PM-254\n        const syncExpires = store.getState().team.data?.syncExpires;\n        const nowToUTC = moment(new Date().toUTCString());\n        const has24hDisabledGrace: boolean =\n          !!syncExpires && moment(syncExpires) > nowToUTC;\n\n        if (\n          meData\n          && meData.status\n          && meData.statusNew\n          && isDisabledState(meData.statusNew)\n          && token !== AUTH_TOKEN_NONE\n          && !has24hDisabledGrace\n          ) {\n          sendAuthUpdated(worker, token, true);\n          break;\n        }\n\n        if (token === AUTH_TOKEN_NONE || store.getState().tfaNeeded) {\n          sendAuthUpdated(worker, AUTH_TOKEN_NONE);\n          break;\n        }\n\n        // send back token if have a token and tfa is not needed\n        if (!store.getState().tfaNeeded) {\n          sendAuthUpdated(worker, token);\n          const accounts = store.getState().accounts;\n          if (accounts.length > 0) {\n            sendAccountsUpdated(worker, accounts);\n          }\n          const me = store.getState().me.data;\n          if (me) {\n            sendMeUpdated(worker, me);\n          }\n\n          const features = store.getState().features;\n          sendFeaturesUpdated(worker, features);\n\n          const lists = store.getState().lists;\n          sendListsUpdated(worker, lists);\n\n          const preferences = store.getState().preferences;\n          sendPreferencesUpdated(worker, preferences);\n        }\n        break;\n\n      case WorkerEventName.TriggerElectronClearCache:\n        if (window.PMElectronBridge?.clearCacheV2) {\n          window.PMElectronBridge.clearCacheV2();\n        }\n        break;\n\n      case WorkerEventName.RequestConfig:\n        sendConfig(worker, getToken(), isElectron, getAllowReconnect());\n        break;\n\n      case WorkerEventName.ServerClearCacheStarted:\n        const clearCacheCopy = 'One second while we reset our cache!';\n        store.dispatch(toastSet(new ConfirmationError(\n          clearCacheCopy,\n          true,\n          ConfirmationPositon.TopCenter,\n        )));\n        break;\n\n      default:\n        break;\n    }\n  };\n}\n"]}]}