{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Mentions/components/SharedThreadList/SharedThreadCell/SharedThreadCell.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Mentions/components/SharedThreadList/SharedThreadCell/SharedThreadCell.tsx","mtime":1675280254082},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Mentions/components/SharedThreadList/SharedThreadCell/SharedThreadCell.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Mentions/components/SharedThreadList/SharedThreadCell/SharedThreadCell.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport { Me, TeamMember } from '@src/types';\nimport { SharedThread } from '@src/types/sharedThreads';\nimport { getDisplayName } from '@src/lib/address';\nimport { showMostRecent } from '@src/lib/datetime';\nimport Unread from '@src/components/Icons/Unread.svg';\nimport Attachment from '@src/components/Icons/Attachment.svg';\nimport Close from '@src/components/Icons/Close.svg';\nimport Unarchive from '@src/components/Icons/Unarchive.svg';\nimport './SharedThreadCell.scss';\nimport { HotkeyAction, getHotkeyByName } from '@src/lib/hotkeys';\nimport HoverTip from '@src/components/Base/HoverTip';\n\nexport interface StateProps {\n  owner?: TeamMember;\n  sharedThread?: SharedThread;\n}\n\nexport interface Props {\n  sharedThreadId: string;\n  // thread: Thread;\n  me: Me;\n  onClick: (id: string) => void;\n  selected: boolean;\n  member?: TeamMember;\n}\n\nexport interface DispatchProps {\n  updateSharedThread: (meta: SharedThread) => void;\n}\n\ninterface TooltipCoords {\n  left: number;\n  top: number;\n}\n\ninterface State {\n  unmounting: boolean;\n  tooltipCoords?: TooltipCoords;\n}\n\nclass SharedThreadCell extends React.PureComponent<Props & StateProps & DispatchProps, State> {\n  timeout: NodeJS.Timer;\n\n  constructor() {\n    super();\n\n    this.state = {\n      unmounting: false,\n    };\n  }\n\n  componentWillUnmount() {\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n    }\n  }\n\n  handleClick = (e: React.SyntheticEvent<HTMLButtonElement>) => {\n    const { onClick, sharedThreadId } = this.props;\n\n    e.preventDefault();\n    e.stopPropagation();\n    onClick(sharedThreadId);\n  }\n\n  handleArchive = (e: React.MouseEvent<HTMLDivElement>) => {\n    const { updateSharedThread, sharedThread } = this.props;\n\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (sharedThread && !sharedThread.archived) {\n      this.setState({ unmounting: true }, () => {\n        this.timeout = global.setTimeout(\n          () => updateSharedThread({\n            ...sharedThread,\n            archived: true,\n          }),\n          600,\n        );\n      });\n    }\n  }\n\n  handleUnarchive = (e: React.MouseEvent<HTMLDivElement>) => {\n    const { updateSharedThread, sharedThread } = this.props;\n\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (sharedThread && sharedThread.archived) {\n      this.setState({ unmounting: true }, () => {\n        this.timeout = global.setTimeout(\n          () => updateSharedThread({\n            ...sharedThread,\n            archived: false,\n          }),\n          600,\n        );\n      });\n    }\n  }\n\n  showTooltip = (e: React.MouseEvent<HTMLDivElement>) => {\n    const target = e.currentTarget;\n    const { right, top } = target.getBoundingClientRect();\n\n    this.setState({\n      tooltipCoords: {\n        top,\n        left: right,\n      },\n    });\n  }\n\n  dismissTooltip = () => {\n    this.setState({ tooltipCoords: undefined });\n  }\n\n  render() {\n    const { sharedThread, me, selected, member, owner } = this.props;\n    const { unmounting, tooltipCoords } = this.state;\n\n    if (!sharedThread) {\n      return null;\n    }\n\n    // const { messages } = thread;\n    // const lastMessage: Message | undefined = last(messages);\n    const recipients = (sharedThread.participantAddresses || [])\n      .filter(recipient => owner && owner.email !== recipient.email);\n    const lastSent = sharedThread.sort;\n    const hotkey = getHotkeyByName(HotkeyAction.Archive);\n\n    // Recipients\n    let recipientString = '';\n    if (recipients.length === 1) {\n      recipientString = getDisplayName(recipients[0], me);\n    } else if (recipients.length === 2) {\n      recipientString = recipients.map(recipient => getDisplayName(recipient, me)).join(' & ');\n    } else if (recipients.length > 2) {\n      recipientString = `${recipients.length} others`;\n    }\n\n    // Set participants\n    let participantsString = ``;\n    if (owner) {\n      participantsString = `${owner.firstName} ${owner.lastName}`;\n      // participantsString = sharedThread.user;\n      if (recipients.length > 0) {\n        participantsString += ` with ${recipientString}`;\n      }\n    }\n\n    let hotkeyText = hotkey && hotkey.text;\n    if (hotkeyText && hotkeyText.toLowerCase().endsWith('(enter)')) {\n      hotkeyText = hotkeyText.slice(0, hotkeyText.indexOf('(')).trim();\n    }\n\n    let tooltipCopy = 'Mark as done' + (hotkeyText && ` (${hotkeyText})`);\n    if (sharedThread.archived) {\n      tooltipCopy = 'Mark as new' + (hotkeyText && ` (${hotkeyText})`);\n    }\n\n    // TODO(SHIN): Need message length or message + comment length\n    // TODO(SHIN): Need attachment existence on shared thread\n    return  (\n      <div\n        className={classnames('shared-thread-cell-wrapper', {\n          unmounting, archived: sharedThread.archived,\n        })}\n        id={`shared-thread-cell-${sharedThread.id}`}\n      >\n        <div className=\"background\" />\n        <button\n          className={classnames('shared-thread-cell', {\n            selected, unread: !sharedThread.read,\n          })}\n          onClick={this.handleClick}\n        >\n          <div className=\"desc\">\n            <div className=\"top-row\">\n              <small>{participantsString}</small>\n              <div className=\"desc\">\n                {sharedThread.messageCount > 1 && <small>{sharedThread.messageCount}</small>}\n                {sharedThread.messageCount > 1 && lastSent &&\n                  <small className=\"middot\">&#183;</small>}\n                {lastSent && <small>{showMostRecent(sharedThread.sort)}</small>}\n              </div>\n            </div>\n            <div className=\"subject\">\n              {!sharedThread.read && <Unread className=\"unread\"/>}\n              <h5>{sharedThread.subject}</h5>\n            </div>\n            <div className=\"snippet\">\n              {member && <div className=\"avatar\">\n                <img src={member.photoUrl} />\n              </div>}\n              <small className={member && 'comment'}>{sharedThread.snippet}</small>\n              {sharedThread.hasAttachment && <Attachment className=\"attachment\"/>}\n            </div>\n          </div>\n          <div\n            className=\"action\"\n          >\n            <HoverTip\n              top={tooltipCoords && `${tooltipCoords.top}px`}\n              left={tooltipCoords && `${tooltipCoords.left}px`}\n              copy={tooltipCopy}\n            >\n              {!sharedThread.archived ?\n                <div\n                  className=\"archive-button\"\n                  onClick={this.handleArchive}\n                  onMouseEnter={this.showTooltip}\n                  onMouseLeave={this.dismissTooltip}\n                >\n                  <Close width=\"10px\" height=\"10px\" />\n                </div> :\n                <div\n                  className=\"unarchive-button\"\n                  onClick={this.handleUnarchive}\n                  onMouseEnter={this.showTooltip}\n                  onMouseLeave={this.dismissTooltip}\n                >\n                  <Unarchive width=\"12px\" height=\"14px\" />\n                </div>\n              }\n            </HoverTip>\n          </div>\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default SharedThreadCell;\n"]}]}