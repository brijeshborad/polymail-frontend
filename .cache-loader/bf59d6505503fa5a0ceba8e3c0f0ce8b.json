{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/activityFeed.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/activityFeed.ts","mtime":1675280254046},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkgewogICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHsKICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHsKICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTsKICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKQogICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07CiAgICAgICAgfQogICAgICAgIHJldHVybiB0OwogICAgfTsKICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9Owp2YXIgX2EsIF9iOwppbXBvcnQgdXBkYXRlIGZyb20gJ2ltbXV0YWJpbGl0eS1oZWxwZXInOwppbXBvcnQgeyBjcmVhdGUgfSBmcm9tICdAc3JjL2xpYi9yZWR1eCc7CmltcG9ydCB7IFJlc291cmNlU3RhdHVzLCB9IGZyb20gJ0BzcmMvdHlwZXMnOwppbXBvcnQgeyByZXNvdXJjZU9rIH0gZnJvbSAnQHNyYy9saWIvcmVzb3VyY2UnOwpleHBvcnQgdmFyIEFDVElWSVRZX1NFTEVDVCA9IChfYSA9IGNyZWF0ZSgnQUNUSVZJVFlfU0VMRUNUJywgewogICAgc3RhcnQ6IGZ1bmN0aW9uIChzdGF0ZSwgbWV0YSkgewogICAgICAgIHJldHVybiB1cGRhdGUoc3RhdGUsIHsKICAgICAgICAgICAgc2VsZWN0ZWRBY3Rpdml0eTogeyAkc2V0OiBtZXRhIH0sCiAgICAgICAgfSk7CiAgICB9LAp9KSwgX2EudHlwZSksIGFjdGl2aXR5U2VsZWN0ID0gX2EuYWN0aW9uLCBhY3Rpdml0eVNlbGVjdFJlZHVjZXIgPSBfYS5yZWR1Y2VyOwpleHBvcnQgdmFyIEFDVElWSVRZX0ZFRURfTElTVCA9IChfYiA9IGNyZWF0ZSgnQUNUSVZJVFlfRkVFRF9MSVNUJywgewogICAgc3RhcnQ6IGZ1bmN0aW9uIChzdGF0ZSwgbWV0YSkgewogICAgICAgIHJldHVybiB1cGRhdGUoc3RhdGUsIHsKICAgICAgICAgICAgYWN0aXZpdHlGZWVkOiB7CiAgICAgICAgICAgICAgICBzdGF0dXM6IHsKICAgICAgICAgICAgICAgICAgICAkc2V0OiBSZXNvdXJjZVN0YXR1cy5SZWZyZXNoaW5nLAogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgfSwKICAgICAgICAgICAgYWN0aXZpdHlGZWVkU2VhcmNoTWV0YTogewogICAgICAgICAgICAgICAgJHNldDogbWV0YSwKICAgICAgICAgICAgfSwKICAgICAgICB9KTsKICAgIH0sCiAgICBzdWNjZXNzOiBmdW5jdGlvbiAoc3RhdGUsIG1ldGEsIHBheWxvYWQpIHsKICAgICAgICByZXR1cm4gX19hc3NpZ24oX19hc3NpZ24oe30sIHN0YXRlKSwgeyBhY3Rpdml0eUZlZWQ6IHJlc291cmNlT2socGF5bG9hZCkgfSk7CiAgICB9LAp9KSwgX2IudHlwZSksIGFjdGl2aXR5RmVlZExpc3QgPSBfYi5hY3Rpb24sIGFjdGl2aXR5RmVlZExpc3RSZWR1Y2VyID0gX2IucmVkdWNlcjsKZXhwb3J0IGRlZmF1bHQgWwogICAgYWN0aXZpdHlGZWVkTGlzdFJlZHVjZXIsCiAgICBhY3Rpdml0eVNlbGVjdFJlZHVjZXIsCl07Cg=="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/activityFeed.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/ducks/activityFeed.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,OAAO,MAAM,MAAM,qBAAqB,CAAC;AAEzC,OAAO,EAAE,MAAM,EAAE,MAAM,gBAAgB,CAAC;AAExC,OAAO,EAGL,cAAc,GACf,MAAM,YAAY,CAAC;AAEpB,OAAO,EAAE,UAAU,EAAE,MAAM,mBAAmB,CAAC;AAO/C,MAAM,CACJ,IAAA;;;;;;YAAqB,EACrB,0BAAsB,EACtB,kCAA8B,CAM7B;AAEH,MAAM,CACJ,IAAA;;;;;;;;;;;;;;;;YAAwB,EACxB,4BAAwB,EACxB,oCAAgC,CAoB/B;AAEH,eAAe;IACb,uBAAuB;IACvB,qBAAqB;CACtB,CAAC","sourcesContent":["import update from 'immutability-helper';\n\nimport { create } from '@src/lib/redux';\n\nimport {\n  Activity,\n  ActivityType,\n  ResourceStatus,\n} from '@src/types';\n\nimport { resourceOk } from '@src/lib/resource';\n\nexport interface ActivityFeedSearchMeta {\n  type?: ActivityType;\n  query?: string;\n}\n\nexport const {\n  type: ACTIVITY_SELECT,\n  action: activitySelect,\n  reducer: activitySelectReducer,\n} = create<Activity|undefined, Activity>('ACTIVITY_SELECT', {\n  start: (state, meta) =>\n    update(state, {\n      selectedActivity: { $set: meta },\n    }),\n});\n\nexport const {\n  type: ACTIVITY_FEED_LIST,\n  action: activityFeedList,\n  reducer: activityFeedListReducer,\n} = create<ActivityFeedSearchMeta, Activity[]>('ACTIVITY_FEED_LIST', {\n  start: (state, meta) => {\n    return update(state, {\n      activityFeed: {\n        status: {\n          $set: ResourceStatus.Refreshing,\n        },\n      },\n      activityFeedSearchMeta: {\n        $set: meta,\n      },\n    });\n  },\n  success: (state, meta, payload) => {\n    return {\n      ...state,\n      activityFeed: resourceOk(payload),\n    };\n  },\n});\n\nexport default [\n  activityFeedListReducer,\n  activitySelectReducer,\n];\n"]}]}