{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/CommandControl/components/Draft/index.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/CommandControl/components/Draft/index.ts","mtime":1675280253997},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4JzsKaW1wb3J0IERyYWZ0IGZyb20gJy4vRHJhZnQnOwppbXBvcnQgeyBjb21tYW5kQ29udHJvbFNob3cgfSBmcm9tICdAc3JjL2R1Y2tzL2NvbW1hbmRDb250cm9sJzsKaW1wb3J0IHsgaG90a2V5VXBkYXRlIH0gZnJvbSAnQHNyYy9kdWNrcy9ob3RrZXlzJzsKaW1wb3J0IHsgc2VsZWN0Q2FsZW5kYXJTY2hlZHVsaW5nVXJsIH0gZnJvbSAnQHNyYy9kdWNrcy9zY2hlZHVsaW5nJzsKaW1wb3J0IHsgc2VsZWN0RHJhZnQsIHNlbGVjdERyYWZ0Rm9yVGhyZWFkIH0gZnJvbSAnQHNyYy9kdWNrcy9kcmFmdHMnOwppbXBvcnQgeyBzZWxlY3RSc2JPbmJvYXJkaW5nLCBvbmJvYXJkaW5nUGF0Y2ggfSBmcm9tICdAc3JjL2R1Y2tzL21lJzsKdmFyIG1hcFN0YXRlVG9Qcm9wcyA9IGZ1bmN0aW9uIChzdGF0ZSkgewogICAgcmV0dXJuIHsKICAgICAgICBmZWF0dXJlczogc3RhdGUuZmVhdHVyZXMsCiAgICAgICAgc2NoZWR1bGluZ1VybDogc2VsZWN0Q2FsZW5kYXJTY2hlZHVsaW5nVXJsKHN0YXRlKSwKICAgICAgICBzZWxlY3RlZE1haWxib3g6IHN0YXRlLm1haWxib3gsCiAgICAgICAgZHJhZnQ6IHN0YXRlLnNlbGVjdGVkRHJhZnQKICAgICAgICAgICAgPyBzZWxlY3REcmFmdChzdGF0ZSwgc3RhdGUuc2VsZWN0ZWREcmFmdCkuZGF0YQogICAgICAgICAgICA6IHN0YXRlLnNlbGVjdGVkVGhyZWFkICYmIHNlbGVjdERyYWZ0Rm9yVGhyZWFkKHN0YXRlLCBzdGF0ZS5zZWxlY3RlZFRocmVhZC5pZCkuZGF0YSwKICAgICAgICByc2JPbmJvYXJkaW5nOiBzZWxlY3RSc2JPbmJvYXJkaW5nKHN0YXRlKSwKICAgICAgICBzZWxlY3RlZFRocmVhZDogc3RhdGUuc2VsZWN0ZWRUaHJlYWQsCiAgICB9Owp9Owp2YXIgbWFwRGlzcGF0Y2hUb1Byb3BzID0gZnVuY3Rpb24gKGRpc3BhdGNoKSB7IHJldHVybiAoewogICAgY29tbWFuZENvbnRyb2xTaG93OiBmdW5jdGlvbiAodHlwZSkgeyByZXR1cm4gZGlzcGF0Y2goY29tbWFuZENvbnRyb2xTaG93KHR5cGUpKTsgfSwKICAgIGRpc3BhdGNoQWN0aW9uOiBmdW5jdGlvbiAoYWN0aW9uKSB7IHJldHVybiBkaXNwYXRjaChhY3Rpb24pOyB9LAogICAgdXBkYXRlSG90a2V5OiBmdW5jdGlvbiAoYWN0aW9uKSB7IHJldHVybiBkaXNwYXRjaChob3RrZXlVcGRhdGUoYWN0aW9uKSk7IH0sCiAgICB1cGRhdGVPbmJvYXJkaW5nOiBmdW5jdGlvbiAobWV0YSkgeyByZXR1cm4gZGlzcGF0Y2gob25ib2FyZGluZ1BhdGNoKG1ldGEpKTsgfSwKfSk7IH07CmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QobWFwU3RhdGVUb1Byb3BzLCBtYXBEaXNwYXRjaFRvUHJvcHMpKERyYWZ0KTsK"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/CommandControl/components/Draft/index.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/CommandControl/components/Draft/index.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AAGtC,OAAO,KAA2C,MAAM,SAAS,CAAC;AAClE,OAAO,EAAE,kBAAkB,EAAE,MAAM,2BAA2B,CAAC;AAC/D,OAAO,EAAE,YAAY,EAAE,MAAM,oBAAoB,CAAC;AAClD,OAAO,EAAE,2BAA2B,EAAE,MAAM,uBAAuB,CAAC;AACpE,OAAO,EAAE,WAAW,EAAE,oBAAoB,EAAE,MAAM,mBAAmB,CAAC;AACtE,OAAO,EAAE,mBAAmB,EAAE,eAAe,EAAE,MAAM,eAAe,CAAC;AAErE,IAAM,eAAe,GAAG,UAAC,KAAiB;IACxC,OAAO;QACL,QAAQ,EAAE,KAAK,CAAC,QAAQ;QACxB,aAAa,EAAE,2BAA2B,CAAC,KAAK,CAAC;QACjD,eAAe,EAAE,KAAK,CAAC,OAAO;QAC9B,KAAK,EAAE,KAAK,CAAC,aAAa;YACxB,CAAC,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC,aAAa,CAAC,CAAC,IAAI;YAC9C,CAAC,CAAC,KAAK,CAAC,cAAc,IAAI,oBAAoB,CAAC,KAAK,EAAE,KAAK,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,IAAI;QACrF,aAAa,EAAE,mBAAmB,CAAC,KAAK,CAAC;QACzC,cAAc,EAAE,KAAK,CAAC,cAAc;KACrC,CAAC;AACJ,CAAC,CAAC;AAEF,IAAM,kBAAkB,GAAG,UAAC,QAA8B,IAAoB,OAAA,CAAC;IAC7E,kBAAkB,EAAE,UAAC,IAAwB,IAAK,OAAA,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,EAAlC,CAAkC;IACpF,cAAc,EAAE,UAAC,MAAwB,IAAK,OAAA,QAAQ,CAAC,MAAM,CAAC,EAAhB,CAAgB;IAC9D,YAAY,EAAE,UAAA,MAAM,IAAI,OAAA,QAAQ,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,EAA9B,CAA8B;IACtD,gBAAgB,EAAE,UAAA,IAAI,IAAI,OAAA,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,EAA/B,CAA+B;CAC1D,CAAC,EAL4E,CAK5E,CAAC;AAEH,eAAe,OAAO,CACpB,eAAe,EAAE,kBAAkB,CACpC,CAAC,KAAK,CAAC,CAAC","sourcesContent":["import { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { StoreState, CommandControlType, Action } from '@src/types';\nimport Draft, { DispatchProps, StateProps, Props } from './Draft';\nimport { commandControlShow } from '@src/ducks/commandControl';\nimport { hotkeyUpdate } from '@src/ducks/hotkeys';\nimport { selectCalendarSchedulingUrl } from '@src/ducks/scheduling';\nimport { selectDraft, selectDraftForThread } from '@src/ducks/drafts';\nimport { selectRsbOnboarding, onboardingPatch } from '@src/ducks/me';\n\nconst mapStateToProps = (state: StoreState): StateProps => {\n  return {\n    features: state.features,\n    schedulingUrl: selectCalendarSchedulingUrl(state),\n    selectedMailbox: state.mailbox,\n    draft: state.selectedDraft\n      ? selectDraft(state, state.selectedDraft).data\n      : state.selectedThread && selectDraftForThread(state, state.selectedThread.id).data,\n    rsbOnboarding: selectRsbOnboarding(state),\n    selectedThread: state.selectedThread,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<StoreState>): DispatchProps => ({\n  commandControlShow: (type: CommandControlType) => dispatch(commandControlShow(type)),\n  dispatchAction: (action: Action<any, any>) => dispatch(action),\n  updateHotkey: action => dispatch(hotkeyUpdate(action)),\n  updateOnboarding: meta => dispatch(onboardingPatch(meta)),\n});\n\nexport default connect<StateProps, DispatchProps, Props>(\n  mapStateToProps, mapDispatchToProps,\n)(Draft);\n"]}]}