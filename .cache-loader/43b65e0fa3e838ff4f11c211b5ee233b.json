{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/ThreadDetail/index.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/ThreadDetail/index.tsx","mtime":1675280254045},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4JzsKaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnOwppbXBvcnQgeyBjb21tYW5kQ29udHJvbFNob3cgfSBmcm9tICdAc3JjL2R1Y2tzL2NvbW1hbmRDb250cm9sJzsKaW1wb3J0IHsgdGhyZWFkQ29tbWl0c1N1Ym1pdCB9IGZyb20gJ0BzcmMvZHVja3MvdGhyZWFkcyc7CmltcG9ydCB7IHNlbGVjdERyYWZ0Rm9yVGhyZWFkLCBzZWxlY3REcmFmdCB9IGZyb20gJ0BzcmMvZHVja3MvZHJhZnRzJzsKaW1wb3J0IHsgc2VsZWN0TWVzc2FnZUJvZGllcywgc2VsZWN0VW5zdWJzY3JpYmVMaW5rLCB9IGZyb20gJ0BzcmMvZHVja3MvbWVzc2FnZUJvZGllcyc7CmltcG9ydCBUaHJlYWREZXRhaWwgZnJvbSAnLi9UaHJlYWREZXRhaWwnOwppbXBvcnQgeyBzZWxlY3RBbGxBY3RpdmVBY2NvdW50cyB9IGZyb20gJ0BzcmMvZHVja3MvYWNjb3VudHMnOwppbXBvcnQgeyBzZWxlY3RVc2VySW5pdGlhbFN5bmNGaW5pc2hlZCB9IGZyb20gJ0BzcmMvZHVja3MvbWUnOwppbXBvcnQgeyBzZWxlY3RDb21tZW50cyB9IGZyb20gJ0BzcmMvZHVja3MvY29tbWVudHMnOwppbXBvcnQgeyBzaGFyZWRUaHJlYWRBY3Rpdml0eUNyZWF0ZSwgVFRMIH0gZnJvbSAnQHNyYy9kdWNrcy9zaGFyZWRUaHJlYWRzJzsKaW1wb3J0IHsgdmFsdWVzIH0gZnJvbSAnbG9kYXNoJzsKaW1wb3J0IHsgc2VsZWN0QmxvY2tGaWx0ZXIgfSBmcm9tICdAc3JjL2R1Y2tzL2ZpbHRlcnMnOwp2YXIgbWFwU3RhdGVUb1Byb3BzID0gZnVuY3Rpb24gKHN0YXRlKSB7CiAgICB2YXIgX2E7CiAgICB2YXIgc2hhcmVkVGhyZWFkID0gc3RhdGUuc2VsZWN0ZWRTaGFyZWRUaHJlYWQgJiYKICAgICAgICBzdGF0ZS5zaGFyZWRUaHJlYWRzW3N0YXRlLnNlbGVjdGVkU2hhcmVkVGhyZWFkXTsKICAgIHZhciBzaGFyZWRUaHJlYWREYXRhID0gc2hhcmVkVGhyZWFkICYmIHNoYXJlZFRocmVhZC5kYXRhIHx8IHVuZGVmaW5lZDsKICAgIHZhciB0aHJlc2hvbGQgPSBtb21lbnQoKS5zdWJ0cmFjdChUVEwsICdzZWNvbmRzJyk7CiAgICAvLyBJZGVudGlmeSBpZiB3ZSBoYXZlIHNoYXJlZCBkcmFmdHMgZW5hYmxlZCBmb3IgdGhpcyBzaGFyZWQgdGhyZWFkCiAgICB2YXIgc2hhcmVkVGhyZWFkRHJhZnRzRW5hYmxlZCA9ICEhKChfYSA9IHNoYXJlZFRocmVhZERhdGEgPT09IG51bGwgfHwgc2hhcmVkVGhyZWFkRGF0YSA9PT0gdm9pZCAwID8gdm9pZCAwIDogc2hhcmVkVGhyZWFkRGF0YS5kcmFmdHMpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5sZW5ndGgpOwogICAgdmFyIG1lID0gc3RhdGUubWUuZGF0YTsKICAgIHJldHVybiB7CiAgICAgICAgZHJhZnQ6IHN0YXRlLnNlbGVjdGVkRHJhZnQKICAgICAgICAgICAgPyBzZWxlY3REcmFmdChzdGF0ZSwgc3RhdGUuc2VsZWN0ZWREcmFmdCkuZGF0YQogICAgICAgICAgICA6IHN0YXRlLnNlbGVjdGVkVGhyZWFkICYmIHNlbGVjdERyYWZ0Rm9yVGhyZWFkKHN0YXRlLCBzdGF0ZS5zZWxlY3RlZFRocmVhZC5pZCkuZGF0YSwKICAgICAgICBzZWxlY3RlZERyYWZ0OiBzdGF0ZS5zZWxlY3RlZERyYWZ0LAogICAgICAgIG1lOiBtZSwKICAgICAgICBhY2NvdW50czogc2VsZWN0QWxsQWN0aXZlQWNjb3VudHMoc3RhdGUpLAogICAgICAgIGJvZGllczogc2VsZWN0TWVzc2FnZUJvZGllcyhzdGF0ZSwgc3RhdGUuc2VsZWN0ZWRUaHJlYWQgJiYgc3RhdGUuc2VsZWN0ZWRUaHJlYWQuaWQgfHwgJycpLAogICAgICAgIHRocmVhZDogc3RhdGUuc2VsZWN0ZWRUaHJlYWQsCiAgICAgICAgcHJlZmVyZW5jZXM6IHN0YXRlLnByZWZlcmVuY2VzLAogICAgICAgIHVuc3Vic2NyaWJlTGluazogc3RhdGUuc2VsZWN0ZWRUaHJlYWQgJiYgc2VsZWN0VW5zdWJzY3JpYmVMaW5rKHN0YXRlLCBzdGF0ZS5zZWxlY3RlZFRocmVhZC5pZCksCiAgICAgICAgbm9CcmFuZGluZzogc3RhdGUuZmVhdHVyZXMubm9CcmFuZGluZywKICAgICAgICBlcnJvcjogc3RhdGUuc2VsZWN0ZWRUaHJlYWQgJiYgc3RhdGUubWVzc2FnZUJvZGllc1tzdGF0ZS5zZWxlY3RlZFRocmVhZC5pZF0KICAgICAgICAgICAgJiYgc3RhdGUubWVzc2FnZUJvZGllc1tzdGF0ZS5zZWxlY3RlZFRocmVhZC5pZF0uZXJyb3IsCiAgICAgICAgaW5pdGlhbFN5bmNpbmc6ICFzZWxlY3RVc2VySW5pdGlhbFN5bmNGaW5pc2hlZChzdGF0ZSksCiAgICAgICAgbGlzdHM6IHN0YXRlLmxpc3RzLAogICAgICAgIHNlbGVjdGVkQ2FsZW5kYXJFdmVudDogc3RhdGUuc2VsZWN0ZWRDYWxlbmRhckV2ZW50LAogICAgICAgIGNvbW1lbnRzOiBzaGFyZWRUaHJlYWQgJiYgc2hhcmVkVGhyZWFkLmRhdGEgJiYgc2VsZWN0Q29tbWVudHMoc3RhdGUsIHNoYXJlZFRocmVhZC5kYXRhLmlkKSwKICAgICAgICBzZWxlY3RlZFNoYXJlZFRocmVhZDogc2hhcmVkVGhyZWFkIHx8IHVuZGVmaW5lZCwKICAgICAgICB0YXNrczogc3RhdGUuc2VsZWN0ZWRTaGFyZWRUaHJlYWQgJiYgc3RhdGUuYXNhbmEgJiYgc3RhdGUuYXNhbmEudGFza3MgJiYKICAgICAgICAgICAgc3RhdGUuYXNhbmEudGFza3Nbc3RhdGUuc2VsZWN0ZWRTaGFyZWRUaHJlYWRdICYmCiAgICAgICAgICAgIHN0YXRlLmFzYW5hLnRhc2tzW3N0YXRlLnNlbGVjdGVkU2hhcmVkVGhyZWFkXS5kYXRhIHx8IHVuZGVmaW5lZCwKICAgICAgICAvLyBIaWRlIG9sZCwgYW5kIHNhbWUgdXNlcidzIGFjdGl2aXR5IGZvciByZXBsaWVzIHdoZW4gaW4gVGhyZWFkRGV0YWlsCiAgICAgICAgcmVwbHlpbmc6ICFzaGFyZWRUaHJlYWREcmFmdHNFbmFibGVkICYmIHZhbHVlcyhzdGF0ZS5zaGFyZWRUaHJlYWRBY3Rpdml0eS5yZXBseSkKICAgICAgICAgICAgLmZpbHRlcihmdW5jdGlvbiAoYWN0aXZpdHkpIHsgcmV0dXJuIG1vbWVudChhY3Rpdml0eS50aW1lc3RhbXApLmlzQWZ0ZXIodGhyZXNob2xkKSAmJgogICAgICAgICAgICBhY3Rpdml0eS51c2VySWQgIT09IChtZSA9PT0gbnVsbCB8fCBtZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogbWUuaWQpOyB9KSB8fCBbXSwKICAgICAgICBjb21tZW50aW5nOiB2YWx1ZXMoc3RhdGUuc2hhcmVkVGhyZWFkQWN0aXZpdHkuY29tbWVudCkKICAgICAgICAgICAgLmZpbHRlcihmdW5jdGlvbiAoYWN0aXZpdHkpIHsgcmV0dXJuIG1vbWVudChhY3Rpdml0eS50aW1lc3RhbXApLmlzQWZ0ZXIodGhyZXNob2xkKTsgfSksCiAgICAgICAgYmxvY2tGaWx0ZXI6IHN0YXRlLnNlbGVjdGVkVGhyZWFkICYmIHNlbGVjdEJsb2NrRmlsdGVyKHN0YXRlLCBzdGF0ZS5zZWxlY3RlZFRocmVhZC5pZCksCiAgICAgICAgc2hhcmVkVGhyZWFkRHJhZnQ6IHNoYXJlZFRocmVhZERhdGEgJiYgc2hhcmVkVGhyZWFkRHJhZnRzRW5hYmxlZCAmJgogICAgICAgICAgICBzdGF0ZS5zaGFyZWRUaHJlYWREcmFmdHNbc2hhcmVkVGhyZWFkRGF0YS5pZF0gfHwgdW5kZWZpbmVkLAogICAgICAgIGhvdGtleUFjdGlvbnM6IHN0YXRlLmhvdGtleUFjdGlvbnMsCiAgICB9Owp9Owp2YXIgbWFwRGlzcGF0Y2hUb1Byb3BzID0gZnVuY3Rpb24gKGRpc3BhdGNoKSB7IHJldHVybiAoewogICAgY29tbWFuZENvbnRyb2xTaG93OiBmdW5jdGlvbiAodHlwZSkgeyByZXR1cm4gZGlzcGF0Y2goY29tbWFuZENvbnRyb2xTaG93KHR5cGUpKTsgfSwKICAgIHN1Ym1pdENvbW1pdE1ldGE6IGZ1bmN0aW9uIChjb21taXRNZXRhKSB7IHJldHVybiBkaXNwYXRjaCh0aHJlYWRDb21taXRzU3VibWl0KGNvbW1pdE1ldGEpKTsgfSwKICAgIGNyZWF0ZVNoYXJlZFRocmVhZEFjdGl2aXR5OiBmdW5jdGlvbiAobWV0YSkgeyByZXR1cm4gZGlzcGF0Y2goc2hhcmVkVGhyZWFkQWN0aXZpdHlDcmVhdGUobWV0YSkpOyB9LAogICAgZGlzcGF0Y2hBY3Rpb246IGZ1bmN0aW9uIChhY3Rpb24pIHsgcmV0dXJuIGRpc3BhdGNoKGFjdGlvbik7IH0sCn0pOyB9OwpleHBvcnQgZGVmYXVsdCBjb25uZWN0KG1hcFN0YXRlVG9Qcm9wcywgbWFwRGlzcGF0Y2hUb1Byb3BzKShUaHJlYWREZXRhaWwpOwo="},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/ThreadDetail/index.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/components/ThreadDetail/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport { StoreState } from '@src/types';\n\nimport { commandControlShow } from '@src/ducks/commandControl';\nimport { threadCommitsSubmit } from '@src/ducks/threads';\nimport { selectDraftForThread, selectDraft } from '@src/ducks/drafts';\nimport {\n  selectMessageBodies,\n  selectUnsubscribeLink,\n} from '@src/ducks/messageBodies';\n\nimport ThreadDetail, { StateProps, DispatchProps, Props } from './ThreadDetail';\nimport { selectAllActiveAccounts } from '@src/ducks/accounts';\nimport { selectUserInitialSyncFinished } from '@src/ducks/me';\nimport { selectComments } from '@src/ducks/comments';\nimport { sharedThreadActivityCreate, TTL } from '@src/ducks/sharedThreads';\nimport { values } from 'lodash';\nimport { selectBlockFilter } from '@src/ducks/filters';\n\nconst mapStateToProps = (state: StoreState): StateProps => {\n  const sharedThread = state.selectedSharedThread &&\n    state.sharedThreads[state.selectedSharedThread];\n  const sharedThreadData = sharedThread && sharedThread.data || undefined;\n  const threshold = moment().subtract(TTL, 'seconds');\n\n  // Identify if we have shared drafts enabled for this shared thread\n  const sharedThreadDraftsEnabled = !!sharedThreadData?.drafts?.length;\n  const me = state.me.data;\n\n  return {\n    draft: state.selectedDraft\n      ? selectDraft(state, state.selectedDraft).data\n      : state.selectedThread && selectDraftForThread(state, state.selectedThread.id).data,\n    selectedDraft: state.selectedDraft,\n    me,\n    accounts: selectAllActiveAccounts(state),\n    bodies: selectMessageBodies(\n      state,\n      state.selectedThread && state.selectedThread.id || '',\n    ),\n    thread: state.selectedThread,\n    preferences: state.preferences,\n    unsubscribeLink: state.selectedThread && selectUnsubscribeLink(state, state.selectedThread.id),\n    noBranding: state.features.noBranding,\n    error: state.selectedThread && state.messageBodies[state.selectedThread.id]\n      && state.messageBodies[state.selectedThread.id].error,\n    initialSyncing: !selectUserInitialSyncFinished(state),\n    lists: state.lists,\n    selectedCalendarEvent: state.selectedCalendarEvent,\n    comments: sharedThread && sharedThread.data && selectComments(state, sharedThread.data.id),\n    selectedSharedThread: sharedThread || undefined,\n    tasks: state.selectedSharedThread && state.asana && state.asana.tasks &&\n      state.asana.tasks[state.selectedSharedThread] &&\n      state.asana.tasks[state.selectedSharedThread].data || undefined,\n    // Hide old, and same user's activity for replies when in ThreadDetail\n    replying: !sharedThreadDraftsEnabled && values(state.sharedThreadActivity.reply)\n      .filter(activity => moment(activity.timestamp).isAfter(threshold) &&\n        activity.userId !== me?.id,\n      ) || [],\n    commenting: values(state.sharedThreadActivity.comment)\n      .filter(activity => moment(activity.timestamp).isAfter(threshold)),\n    blockFilter: state.selectedThread && selectBlockFilter(state, state.selectedThread.id),\n    sharedThreadDraft: sharedThreadData && sharedThreadDraftsEnabled &&\n      state.sharedThreadDrafts[sharedThreadData.id] || undefined,\n    hotkeyActions: state.hotkeyActions,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<StoreState>): DispatchProps => ({\n  commandControlShow: type => dispatch(commandControlShow(type)),\n  submitCommitMeta: commitMeta => dispatch(threadCommitsSubmit(commitMeta)),\n  createSharedThreadActivity: meta => dispatch(sharedThreadActivityCreate(meta)),\n  dispatchAction: action => dispatch(action),\n});\n\nexport default connect<StateProps, DispatchProps, Props>(\n  mapStateToProps, mapDispatchToProps)(ThreadDetail);\n"]}]}