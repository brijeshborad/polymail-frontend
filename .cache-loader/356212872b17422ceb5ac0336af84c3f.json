{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/DataSource.tsx","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/DataSource.tsx","mtime":1675280254060},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/DataSource.tsx","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/lib/DataSource.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\n\ninterface Props {\n  children: (child: any[]) => any;\n  onUpdate: () => void;\n}\n\nexport interface DataSourceItem<T> {\n  identifier: string;\n  resource: T;\n  sortValue: number;\n}\n\ninterface State {\n  items: Array<DataSourceItem<any>>;\n  locations: { [id: string]: number };\n}\n\nexport default class DataSource<T, AdditionalProps = {}>\nextends React.PureComponent<Props & AdditionalProps, State> {\n  constructor() {\n    super();\n    this.state = {\n      items: [],\n      locations: {},\n    };\n  }\n\n  updateItems = (newItems: Array<DataSourceItem<T>>) => {\n    const newState = newItems.reduce(this.updateItemReducer, {\n      items: [...this.state.items],\n      locations: { ...this.state.locations },\n    });\n    this.setState(newState);\n    this.props.onUpdate();\n  }\n\n  updateItem = (item: DataSourceItem<T>) => {\n    this.setState(this.updateItemReducer(this.state, item));\n    this.props.onUpdate();\n  }\n\n  updateItemReducer = (state: State, item: DataSourceItem<T>): State => {\n    const items = state.items;\n    let locations = state.locations;\n    const index = locations[item.identifier];\n\n    // If exists in locations\n    if (index >= 0) {\n\n      const found = items[index];\n      // Replace if item is the same and locations are equal\n      if (found.sortValue === item.sortValue) {\n        items[index] = item;\n        return { items, locations };\n      }\n\n      // If sort has changed, recompute\n      items.splice(index, 1);\n      locations = {};\n      items.forEach((each, n) => {\n        locations[each.identifier] = n;\n      });\n    }\n\n    // Basic insert if already exists\n    if (items.length === 0) {\n      return { items: [item], locations: { [item.identifier]: 0 } };\n    }\n\n    // Sorted Insert when non-existent\n    let low = 0;\n    let high = items.length - 1;\n    let mid = 0;\n\n    while (low < high) {\n      mid = Math.floor((high - low) / 2) + low;\n\n      // TODO(SHIN): Check that id comparison is kosher\n      if (items[mid] && items[mid].sortValue < item.sortValue) {\n        low = mid + 1;\n      } else {\n        high = mid;\n      }\n    }\n\n    let endIndex = items.length;\n    if (items[low] && items[low].sortValue >= item.sortValue) {\n      endIndex = low;\n    }\n\n    if (endIndex === items.length) {\n      items.push(item);\n    } else {\n      items.splice(endIndex, 0, item);\n    }\n\n    const insertedLocations = {};\n    items.forEach((each, n) => {\n      insertedLocations[each.identifier] = n;\n    });\n    return { items, locations: insertedLocations };\n  }\n\n  // Only to be used if items are pre-sorted in correct order\n  appendSortedItems = (sortedItems: Array<DataSourceItem<T>>) => {\n    const items = [...this.state.items];\n    const locations = { ...this.state.locations };\n\n    sortedItems.forEach((item) => {\n      const foundIndex = locations[item.identifier];\n      if (foundIndex >= 0) {\n        items[foundIndex] = item;\n        return;\n      }\n\n      const index = items.length;\n      items.push(item);\n      locations[item.identifier] = index;\n    });\n\n    this.setState({ items, locations });\n    return;\n  }\n\n  // Removes identifier\n  remove = (id: string) => {\n    const { locations } = this.state;\n    const items = [...this.state.items];\n    const index = locations[id];\n\n    if (index >= 0) {\n      items.splice(index, 1);\n      const newLocations = {};\n      items.forEach((item, i) => {\n        newLocations[item.identifier] = i;\n      });\n\n      this.setState({\n        items,\n        locations: newLocations,\n      });\n      this.props.onUpdate();\n    }\n  }\n\n  // Get index of item identifier\n  getLocation = (identifier: string) => {\n    return this.state.locations[identifier];\n  }\n\n  // Get item at specific index.\n  getItem = (index: number) => {\n    return this.state.items[index];\n  }\n\n  getLength = () => {\n    return this.state.items.length;\n  }\n\n  clear = () => {\n    this.setState({\n      items: [],\n      locations: {},\n    });\n    this.props.onUpdate();\n  }\n\n  render() {\n    return (this.props.children as any)(this.state.items.map(each => each.resource));\n  }\n}\n"]}]}