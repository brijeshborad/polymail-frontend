{"remainingRequest":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js??ref--6-1!/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Billing/CancellationFeedback/index.ts","dependencies":[{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Billing/CancellationFeedback/index.ts","mtime":1675280254097},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1675365393858},{"path":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/node_modules/ts-loader/index.js","mtime":1675365391714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4JzsKaW1wb3J0IENhbmNlbGxhdGlvbkZlZWRiYWNrIGZyb20gJy4vQ2FuY2VsbGF0aW9uRmVlZGJhY2snOwppbXBvcnQgeyBiaWxsaW5nQ2FuY2VsbGF0aW9uRmVlZGJhY2ssIHNlbGVjdEJpbGxpbmdMb2FkaW5nLCBzZWxlY3RCaWxsaW5nTG9hZGluZ0Vycm9yLCBzZWxlY3RCaWxsaW5nSGF2ZUFjdGl2ZVN1YnNjcmlwdGlvbiwgc2VsZWN0QmlsbGluZ1RyaWFsRXhwaXJlcywgfSBmcm9tICdAc3JjL2R1Y2tzL2JpbGxpbmcnOwppbXBvcnQgeyBzZWxlY3RVc2VySXNBZG1pbiB9IGZyb20gJ0BzcmMvZHVja3MvbWUnOwp2YXIgbWFwU3RhdGVUb1Byb3BzID0gZnVuY3Rpb24gKHN0YXRlKSB7CiAgICByZXR1cm4gewogICAgICAgIGxvYWRpbmc6IHNlbGVjdEJpbGxpbmdMb2FkaW5nKHN0YXRlKSwKICAgICAgICBsb2FkaW5nRXJyb3I6IHNlbGVjdEJpbGxpbmdMb2FkaW5nRXJyb3Ioc3RhdGUpLAogICAgICAgIGlzQWRtaW46IHNlbGVjdFVzZXJJc0FkbWluKHN0YXRlKSwKICAgICAgICB1cGRhdGluZzogc3RhdGUuYmlsbGluZy51cGRhdGluZywKICAgICAgICBhY3RpdmVTdWJzY3JpcHRpb246IHNlbGVjdEJpbGxpbmdIYXZlQWN0aXZlU3Vic2NyaXB0aW9uKHN0YXRlKSwKICAgICAgICBzdWJzY3JpcHRpb246IHN0YXRlLmJpbGxpbmcucmVzb3VyY2UuZGF0YSAmJiBzdGF0ZS5iaWxsaW5nLnJlc291cmNlLmRhdGEuc3Vic2NyaXB0aW9uLAogICAgICAgIHRyaWFsRXhwaXJlczogc2VsZWN0QmlsbGluZ1RyaWFsRXhwaXJlcyhzdGF0ZSksCiAgICAgICAgdHJpYWxQbGFuOiBzdGF0ZS50ZWFtLmRhdGEgJiYgc3RhdGUudGVhbS5kYXRhLnRyaWFsUGxhbiwKICAgIH07Cn07CnZhciBtYXBEaXNwYXRjaFRvUHJvcHMgPSBmdW5jdGlvbiAoZGlzcGF0Y2gpIHsgcmV0dXJuICh7CiAgICBjYW5jZWxsYXRpb25GZWVkYmFja1N1Ym1pdDogZnVuY3Rpb24gKGZlZWRiYWNrKSB7IHJldHVybiBkaXNwYXRjaChiaWxsaW5nQ2FuY2VsbGF0aW9uRmVlZGJhY2soZmVlZGJhY2spKTsgfSwKfSk7IH07CmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QobWFwU3RhdGVUb1Byb3BzLCBtYXBEaXNwYXRjaFRvUHJvcHMpKENhbmNlbGxhdGlvbkZlZWRiYWNrKTsK"},{"version":3,"file":"/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Billing/CancellationFeedback/index.ts","sourceRoot":"","sources":["/Users/andrewsamboy/Desktop/Git/polymail/webapp/src/routes/Settings/routes/Billing/CancellationFeedback/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AAGtC,OAAO,oBAA8C,MAAM,wBAAwB,CAAC;AAGpF,OAAO,EACL,2BAA2B,EAAE,oBAAoB,EACjD,yBAAyB,EAAE,mCAAmC,EAAE,yBAAyB,GAC1F,MAAM,oBAAoB,CAAC;AAC5B,OAAO,EAAE,iBAAiB,EAAE,MAAM,eAAe,CAAC;AAElD,IAAM,eAAe,GAAG,UAAC,KAAiB;IACxC,OAAO;QACL,OAAO,EAAE,oBAAoB,CAAC,KAAK,CAAC;QACpC,YAAY,EAAE,yBAAyB,CAAC,KAAK,CAAC;QAC9C,OAAO,EAAE,iBAAiB,CAAC,KAAK,CAAC;QACjC,QAAQ,EAAE,KAAK,CAAC,OAAO,CAAC,QAAQ;QAChC,kBAAkB,EAAE,mCAAmC,CAAC,KAAK,CAAC;QAC9D,YAAY,EAAE,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY;QACrF,YAAY,EAAE,yBAAyB,CAAC,KAAK,CAAC;QAC9C,SAAS,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS;KACxD,CAAC;AACJ,CAAC,CAAC;AAEF,IAAM,kBAAkB,GAAG,UAAC,QAA8B,IAAoB,OAAA,CAAC;IAC7E,0BAA0B,EAAE,UAAA,QAAQ,IAAI,OAAA,QAAQ,CAAC,2BAA2B,CAAC,QAAQ,CAAC,CAAC,EAA/C,CAA+C;CACxF,CAAC,EAF4E,CAE5E,CAAC;AAEH,eAAe,OAAO,CAAC,eAAe,EAAE,kBAAkB,CAAC,CAAC,oBAAoB,CAAC,CAAC","sourcesContent":["import { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\n\nimport CancellationFeedback, { Props, DispatchProps } from './CancellationFeedback';\n\nimport { StoreState } from '@src/types';\nimport {\n  billingCancellationFeedback, selectBillingLoading,\n  selectBillingLoadingError, selectBillingHaveActiveSubscription, selectBillingTrialExpires,\n} from '@src/ducks/billing';\nimport { selectUserIsAdmin } from '@src/ducks/me';\n\nconst mapStateToProps = (state: StoreState): Props => {\n  return {\n    loading: selectBillingLoading(state),\n    loadingError: selectBillingLoadingError(state),\n    isAdmin: selectUserIsAdmin(state),\n    updating: state.billing.updating,\n    activeSubscription: selectBillingHaveActiveSubscription(state),\n    subscription: state.billing.resource.data && state.billing.resource.data.subscription,\n    trialExpires: selectBillingTrialExpires(state),\n    trialPlan: state.team.data && state.team.data.trialPlan,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<StoreState>): DispatchProps => ({\n  cancellationFeedbackSubmit: feedback => dispatch(billingCancellationFeedback(feedback)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CancellationFeedback);\n"]}]}